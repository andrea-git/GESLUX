      *{TOTEM}PRG-COMMENT
      * prodener.Cbl
      * prodener.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          prodener.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        lunedì 27 febbraio 2017 10:41:12.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:prodener, INIT:prodener, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "prodener.sl".
           COPY "prodener.sl"
                REPLACING ==prodener== BY ==prodener1==,
                          ==STATUS-prodener== BY ==STATUS-prodener1==
                .
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "prodener.fd".
           COPY "prodener.fd"
                REPLACING ==prodener== BY ==prodener1==,
                          ==STATUS-prodener== BY ==STATUS-prodener1==
                .
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Geslux - Tabella Prodotti Energetici". 
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 CountChar        PIC  9(3).
       77 opensave-status  PIC  s99.
       77 como-id          PIC  9(5).
       77 data-oggi        PIC  9(8).
       01 FlagErroreDes    PIC  9
                  VALUE IS 0.
           88 errore-des VALUE IS 1    WHEN SET TO FALSE  0. 
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-NUOVO          PIC  9
                  VALUE IS 1.
       77 E-CANCELLA       PIC  9
                  VALUE IS 1.
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       77 E-ANTEPRIMA      PIC  9
                  VALUE IS 0.
       77 E-MODIFICA       PIC  9
                  VALUE IS 1.
       77 E-STAMPA         PIC  9
                  VALUE IS 0.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 E-SELEZIONA      PIC  9
                  VALUE IS 1.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Screen1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 Form1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 mod-fis          PIC  9
                  VALUE IS 1.
       01 save-key.
           05 save-codice      PIC  x(10).
       01 save-key-1.
           05 save-descrizione PIC  X(30).
       77 codice-ed        PIC  Z9.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0.
       77 STATUS-prodener  PIC  X(2).
           88 Valid-STATUS-prodener VALUE IS "00" THRU "09". 
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 scr-stampa-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-tnomen    PIC  X(2).
           88 Valid-STATUS-tnomen VALUE IS "00" THRU "09". 
       77 STATUS-prodener1 PIC  X(2).
           88 VALID-STATUS-prodener1 VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
      * DATA CONTROL BUFFER
       01 Form1-BUF.
      * Data.Entry-Field
              05 ef-codice-BUF PIC X(10).
      * Data.Entry-Field
              05 ef-descrizione-BUF PIC X(50).
              05 ef-descrizione-VALUEBUF PIC X(50).
      * Data.Entry-Field
              05 ef-cpa-BUF PIC x(4).
              05 ef-cpa-VALUEBUF PIC X(4).
      * Data.Entry-Field
              05 ef-nc-BUF PIC z(8).
              05 ef-nc-VALUEBUF PIC 9(8).
      * Data.Entry-Field
              05 ef-taric-BUF PIC z(2).
              05 ef-taric-VALUEBUF PIC 9(2).
      * Data.Entry-Field
              05 ef-dac-BUF PIC x(4).
              05 ef-dac-VALUEBUF PIC X(4).
      * Data.Entry-Field
              05 ef-suf-reg-BUF PIC x(3).
      * Data.Check-Box
              05 Screen1-DaCb-1-BUF PIC 9 VALUE ZERO.
      * Data.Check-Box
              05 Screen1-DaCb-2-BUF PIC 9 VALUE ZERO.

       77 TMP-Form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form1-KEY2-ORDER  PIC X VALUE "A".
       77 TMP-Form1-prodener-RESTOREBUF  PIC X(686).
       77 TMP-Form1-KEYIS  PIC 9(3) VALUE 1.
       77 Form1-MULKEY-TMPBUF   PIC X(686).
       77 Form1-KEYISTMP2   PIC X(50).
      * Form1 : PKEY & AKEY'S TEMP BUFFER
       77 Form1-PKEYTMP   PIC X(10).
       77 TMP-DataSet1-prodener-BUF     PIC X(686).
       77 TMP-DataSet1-prodener1-BUF     PIC X(686).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-prodener-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-prodener-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-prodener-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-prodener-KEY1-Asc  VALUE "A".
          88 DataSet1-prodener-KEY1-Desc VALUE "D".
       77 DataSet1-prodener-KEY2-ORDER  PIC X VALUE "A".
          88 DataSet1-prodener-KEY2-Asc  VALUE "A".
          88 DataSet1-prodener-KEY2-Desc VALUE "D".
       77 DataSet1-prodener1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-prodener1-LOCK  VALUE "Y".
       77 DataSet1-prodener1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-prodener1-KEY-Asc  VALUE "A".
          88 DataSet1-prodener1-KEY-Desc VALUE "D".

       77 prodener-pen-k-nc-SPLITBUF  PIC X(19).
       77 prodener1-pen-k-nc-SPLITBUF  PIC X(19).

       01  old-pen-rec.
           05 old-pen-chiave.
              10 old-pen-codice       PIC  x(10).
           05 old-pen-dati.
              10 old-pen-descrizione  PIC  x(50).
              10 old-pen-cpa          PIC  x(4).
              10 old-pen-nc           PIC  9(8).
              10 old-pen-taric        PIC  9(2).
              10 old-pen-dac          PIC  x(4).
              10 old-pen-invio-edi    PIC  x.
                 88 old-pen-si-invio-edi VALUE "S" FALSE  "N". 
              10 old-pen-sdoppia-riga PIC  x.
                 88 old-pen-si-sdoppia-riga VALUE "S" FALSE  "N". 
              10 old-pen-dati-comuni.
                 15 old-pen-data-creazione           PIC  9(8).
                 15 old-pen-ora-creazione            PIC  9(8).
                 15 old-pen-utente-creazione         PIC  X(10).
                 15 old-pen-data-ultima-modifica     PIC  9(8).
                 15 old-pen-ora-ultima-modifica      PIC  9(8).
                 15 old-pen-utente-ultima-modifica   PIC  X(10).
              10 old-pen-vuoti.
                 15 old-pen-num-vuoto-1  PIC  9(18).
                 15 old-pen-num-vuoto-2  PIC  9(18).
                 15 old-pen-num-vuoto-3  PIC  9(18).
                 15 old-pen-suf-reg      pic  x(3).
                 15 old-pen-alfa-vuoto   PIC  X(497).

       01              pic 9.
           88 niente   value 1 false zero.
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-codice VALUE 5001.
       78  78-ID-ef-descrizione VALUE 5002.
       78  78-ID-ef-cpa VALUE 5003.
       78  78-ID-ef-nc VALUE 5004.
       78  78-ID-ef-taric VALUE 5005.
       78  78-ID-ef-dac VALUE 5006.
       78  78-ID-ef-suf-reg VALUE 5007.
       78  78-ID-Screen1-DaCb-1 VALUE 5008.
       78  78-ID-Screen1-DaCb-2 VALUE 5009.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           AFTER PROCEDURE Form1-AfterProcedure,
           BEFORE PROCEDURE Form1-BeforeProcedure,
           .

      * ENTRY FIELD
       05
           ef-codice, 
           Entry-Field, 
           COL 13,00, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED mod-k,
           FONT IS Small-Font,
           ID IS 78-ID-ef-codice,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 10,
           VALUE ef-codice-BUF,
           .

      * ENTRY FIELD
       05
           ef-descrizione, 
           Entry-Field, 
           COL 13,00, 
           LINE 5,00,
           LINES 1,31 ,
           SIZE 56,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED MOD,
           FONT IS Small-Font,
           ID IS 78-ID-ef-descrizione,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 50,
           VALUE ef-descrizione-BUF,
           .

      * ENTRY FIELD
       05
           ef-cpa, 
           Entry-Field, 
           COL 13,00, 
           LINE 7,00,
           LINES 1,31 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED MOD,
           FONT IS Small-Font,
           ID IS 78-ID-ef-cpa,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 4,
           VALUE ef-cpa-BUF,
           .

      * ENTRY FIELD
       05
           ef-nc, 
           Entry-Field, 
           COL 13,00, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED MOD,
           FONT IS Small-Font,
           ID IS 78-ID-ef-nc,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 8,
           NUMERIC,
           VALUE ef-nc-BUF,
           .

      * ENTRY FIELD
       05
           ef-taric, 
           Entry-Field, 
           COL 13,00, 
           LINE 11,00,
           LINES 1,31 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED MOD,
           FONT IS Small-Font,
           ID IS 78-ID-ef-taric,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 2,
           NUMERIC,
           VALUE ef-taric-BUF,
           .

      * ENTRY FIELD
       05
           ef-dac, 
           Entry-Field, 
           COL 13,00, 
           LINE 13,00,
           LINES 1,31 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED MOD,
           FONT IS Small-Font,
           ID IS 78-ID-ef-dac,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 4,
           VALUE ef-dac-BUF,
           .

      * ENTRY FIELD
       05
           ef-suf-reg, 
           Entry-Field, 
           COL 13,00, 
           LINE 15,00,
           LINES 1,31 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED MOD,
           FONT IS Small-Font,
           ID IS 78-ID-ef-suf-reg,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 3,
           VALUE ef-suf-reg-BUF,
           .

      * CHECK BOX
       05
           Screen1-DaCb-1, 
           Check-Box, 
           COL 13,00, 
           LINE 17,00,
           LINES 1,15 ,
           SIZE 2,50 ,
           ENABLED mod,
           FLAT,
           FONT IS Small-Font,
           ID IS 78-ID-Screen1-DaCb-1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           TITLE "pen-invio-edi",
           VALUE Screen1-DaCb-1-BUF,
            .

      * CHECK BOX
       05
           Screen1-DaCb-2, 
           Check-Box, 
           COL 38,00, 
           LINE 17,00,
           LINES 1,15 ,
           SIZE 2,50 ,
           ENABLED mod,
           FLAT,
           FONT IS Small-Font,
           ID IS 78-ID-Screen1-DaCb-2,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           TITLE "pen-sdoppia-riga",
           VALUE Screen1-DaCb-2-BUF,
            .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 2,00, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 100,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Codice",
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 33,86, 
           LINE 2,23,
           LINES 0,69 ,
           SIZE 15,00 ,
           FONT IS Default-Font,
           ID IS 18,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-blockpgm-2, 
           Label, 
           COL 50,00, 
           LINE 2,00,
           LINES 1,00 ,
           SIZE 8,14 ,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * BAR
       05
           Screen1-Br-1, 
           Bar,
           COL 1,00, 
           LINE 4,00,
           SIZE 69,57 ,
           ID IS 22,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           Screen1-La-2, 
           Label, 
           COL 2,00, 
           LINE 5,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 33,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Descrizione",
           .

      * LABEL
       05
           Screen1-La-4, 
           Label, 
           COL 2,00, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 35,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "NC",
           .

      * LABEL
       05
           Screen1-La-11, 
           Label, 
           COL 2,00, 
           LINE 7,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 42,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "CPA",
           .

      * LABEL
       05
           Screen1-La-4a, 
           Label, 
           COL 2,00, 
           LINE 11,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 43,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "TARIC",
           .

      * LABEL
       05
           Screen1-La-4aa, 
           Label, 
           COL 2,00, 
           LINE 13,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 44,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "DAC",
           .

      * LABEL
       05
           Screen1-La-4aaa, 
           Label, 
           COL 2,00, 
           LINE 17,00,
           LINES 2,00 ,
           SIZE 10,00 ,
           FONT IS Small-Font,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Invio Dati UTF",
           .

      * LABEL
       05
           Screen1-La-4aaaa, 
           Label, 
           COL 24,00, 
           LINE 17,00,
           LINES 2,00 ,
           SIZE 13,00 ,
           FONT IS Small-Font,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Invio UTF solo per fornitori esteri",
           .

      * LABEL
       05
           Screen1-La-4aab, 
           Label, 
           COL 2,00, 
           LINE 15,00,
           LINES 2,00 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Suffisso Registro",
           .

      * TOOLBAR
       01
           Form1-Tb-1,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 72,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "Esci (Esc)",
           .

      * PUSH BUTTON
       05
           TOOL-NUOVO, 
           Push-Button, 
           COL 6,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-NUOVO,
           EXCEPTION-VALUE 2,
           FLAT,
           ID IS 73,
           SELF-ACT,
           TITLE "Nuovo (F2)",
           BITMAP-NUMBER BitmapNumNew
           .

      * PUSH BUTTON
       05
           TOOL-CANCELLA, 
           Push-Button, 
           COL 16,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-CANCELLA,
           EXCEPTION-VALUE 4,
           FLAT,
           ID IS 74,
           SELF-ACT,
           TITLE "Cancella (F4)",
           BITMAP-NUMBER BitmapNumDelete
           .

      * PUSH BUTTON
       05
           TOOL-SALVA, 
           Push-Button, 
           COL 11,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-SALVA,
           EXCEPTION-VALUE 3,
           FLAT,
           ID IS 75,
           SELF-ACT,
           TITLE "Salva (F3)",
           BITMAP-NUMBER BitmapNumSave
           .

      * PUSH BUTTON
       05
           TOOL-ANTEPRIMA, 
           Push-Button, 
           COL 26,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-ANTEPRIMA,
           EXCEPTION-VALUE 6,
           FLAT,
           ID IS 76,
           SELF-ACT,
           TITLE "Anteprima (F6)",
           BITMAP-NUMBER BitmapNumPreview
           .

      * CHECK BOX
       05
           TOOL-MODIFICA, 
           Check-Box, 
           COL 21,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 5,
           FRAMED,
           SQUARE,
           ENABLED E-MODIFICA,
           EXCEPTION-VALUE 150
           FLAT,
           ID IS 77,
           SELF-ACT,
           TITLE "Modifica (F5)",
           VALUE MOD,
           BITMAP-NUMBER BitmapNumEdit
           AFTER PROCEDURE TOOL-MODIFICA-AfterProcedure,
           BEFORE PROCEDURE TOOL-MODIFICA-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           TOOL-STAMPA, 
           Push-Button, 
           COL 31,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-STAMPA,
           EXCEPTION-VALUE 7,
           FLAT,
           ID IS 110,
           SELF-ACT,
           TITLE "Stampa (F7)",
           BITMAP-NUMBER BitmapNumPrint
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 36,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 111,
           SELF-ACT,
           TITLE "Cerca (F8)",
           BITMAP-NUMBER BitmapNumZoom
           .

      * PUSH BUTTON
       05
           TOOL-SELEZIONA, 
           Push-Button, 
           COL 41,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 9,
           FRAMED,
           SQUARE,
           ENABLED E-SELEZIONA,
           EXCEPTION-VALUE 9,
           FLAT,
           ID IS 112,
           SELF-ACT,
           TITLE "Seleziona (F9)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1a, 
           Push-Button, 
           COL 46,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 10,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002,
           FLAT,
           ID IS 113,
           SELF-ACT,
           TITLE "&Primo",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1b, 
           Push-Button, 
           COL 51,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 11,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 67,
           FLAT,
           ID IS 114,
           SELF-ACT,
           TITLE "Precedente (PgDn)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1c, 
           Push-Button, 
           COL 56,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 12,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 68,
           FLAT,
           ID IS 115,
           SELF-ACT,
           TITLE "Successivo (PgUp)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1d, 
           Push-Button, 
           COL 61,00, 
           LINE 1,15,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 13,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1006,
           FLAT,
           ID IS 116,
           SELF-ACT,
           TITLE "&Ultimo",
           .

      * CHECK BOX
       05
           TOOL-ORD, 
           Check-Box, 
           COL 66,00, 
           LINE 1,23,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 14,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001
           FLAT,
           ID IS 122,
           SELF-ACT,
           TITLE "Ordinamento Alfabetico (F10)",
           VALUE OrderBy,
           AFTER PROCEDURE TOOL-ORD-AfterProcedure,
           BEFORE PROCEDURE TOOL-ORD-BeforeProcedure, 
           .
      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:prodener, INIT:prodener, BeforeDeclarative>
       prodener-ERR SECTION.
           use after error procedure on prodener.
           set RecLocked to false.
           evaluate status-prodener
           when "35"
                display message "File [prodener] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [prodener] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[prodener] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "99"
           when "93"
                set RecLocked to true
                set errori    to true
                move 1 to mod-k
                move 0 to mod
                modify tool-modifica, value = mod
                display form1
                set StatusVisua to true
                perform STATUS-BAR-MSG
                move "00" to status-prodener
                if ReadSecca
                   read prodener       no lock 
                        invalid      continue
                        not invalid  perform FORM1-IUD-DISPLAY
                   end-read
                end-if
                display message box MSG-Record-gia-in-uso
                        title = tit-err
                        icon is mb-error-icon
           when "23"
                move 1 to mod-k
                move 0 to mod
                modify tool-modifica, value = mod
                set StatusVisua to true
                perform STATUS-BAR-MSG 
                if nuovo              
                   initialize pen-dati of prodener
                                      replacing numeric data by zeroes
                                            alphanumeric data by spaces
                   perform FORM1-FLD-TO-BUF
                   display form1-tb-1
                   set vecchio to true
                end-if      
                perform ABILITAZIONI
                display form1
                |RISETTO IL VALORE A "23" PERCHE DENTRO AL PAR. CLEAR-SCREEN
                |CON L'OPERAZIONE UNLOCK VIENE RISETTATO A ZERO COSICCHÈ 
                |QUANDO TORNA DENTRO AI PAR. DI SCORRIMENTO DI TOTEM SI 
                |TROVA IN UNA SITUAZIONE CORRETTA E PROSEGUE CON LA READ
                |USCENDO CON UN MESSAGGIO DI ERRORE DI TIPO "46"
                move "23" to status-prodener
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ginqui-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:prodener, INIT:prodener, BeforeDestroyResource>
      * <TOTEM:END>
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           set environment "KEYSTROKE" to "DATA=46   46".
           set environment "KEYSTROKE" to "DATA=44   44".
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
           .

       INIT-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-prodener
           PERFORM OPEN-prodener1
      *    After Open
           .

       OPEN-prodener.
      * <TOTEM:EPT. INIT:prodener, FD:prodener, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O prodener
           IF STATUS-prodener = "35"
              OPEN OUTPUT prodener
                IF Valid-STATUS-prodener
                   CLOSE prodener
                   OPEN I-O prodener
                END-IF
           END-IF
           IF NOT Valid-STATUS-prodener
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:prodener, FD:prodener, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-prodener1.
      * <TOTEM:EPT. INIT:prodener, FD:prodener1, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT prodener1
           IF NOT VALID-STATUS-prodener1
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:prodener, FD:prodener1, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-prodener
           PERFORM CLOSE-prodener1
      *    After Close
           .

       CLOSE-prodener.
      * <TOTEM:EPT. INIT:prodener, FD:prodener, BeforeClose>
      * <TOTEM:END>
           CLOSE prodener
           .

       CLOSE-prodener1.
      * <TOTEM:EPT. INIT:prodener, FD:prodener1, BeforeClose>
      * <TOTEM:END>
           CLOSE prodener1
           .

       prodener-pen-k-nc-MERGE-SPLITBUF.
           INITIALIZE prodener-pen-k-nc-SPLITBUF
           MOVE pen-nc OF prodener(1:8) TO 
           prodener-pen-k-nc-SPLITBUF(1:8)
           MOVE pen-cpa OF prodener(1:4) TO 
           prodener-pen-k-nc-SPLITBUF(9:4)
           MOVE pen-taric OF prodener(1:2) TO 
           prodener-pen-k-nc-SPLITBUF(13:2)
           MOVE pen-dac OF prodener(1:4) TO 
           prodener-pen-k-nc-SPLITBUF(15:4)
           .

       DataSet1-prodener-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 MOVE Low-Value TO pen-chiave OF prodener
              ELSE
                 MOVE High-Value TO pen-chiave OF prodener
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 MOVE Low-Value TO pen-descrizione OF prodener
              ELSE
                 MOVE High-Value TO pen-descrizione OF prodener
              END-IF
           END-EVALUATE
           .

       DataSet1-prodener-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 MOVE High-Value TO pen-chiave OF prodener
              ELSE
                 MOVE Low-Value TO pen-chiave OF prodener
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 MOVE High-Value TO pen-descrizione OF prodener
              ELSE
                 MOVE Low-Value TO pen-descrizione OF prodener
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-CHANGETO-KEY2.
           MOVE 2 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-prodener-KEY1-ORDER
           WHEN 2
              MOVE "A" TO DataSet1-prodener-KEY2-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-prodener-KEY1-ORDER
           WHEN 2
              MOVE "D" TO DataSet1-prodener-KEY2-ORDER
           END-EVALUATE
           .

      * prodener
       DataSet1-prodener-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 START prodener KEY >= pen-chiave OF prodener
              ELSE
                 START prodener KEY <= pen-chiave OF prodener
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 START prodener KEY >= pen-descrizione OF prodener
              ELSE
                 START prodener KEY <= pen-descrizione OF prodener
              END-IF
           END-EVALUATE
           .

       DataSet1-prodener-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 START prodener KEY <= pen-chiave OF prodener
              ELSE
                 START prodener KEY >= pen-chiave OF prodener
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 START prodener KEY <= pen-descrizione OF prodener
              ELSE
                 START prodener KEY >= pen-descrizione OF prodener
              END-IF
           END-EVALUATE
           .

       DataSet1-prodener-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 START prodener KEY > pen-chiave OF prodener
              ELSE
                 START prodener KEY < pen-chiave OF prodener
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 START prodener KEY > pen-descrizione OF prodener
              ELSE
                 START prodener KEY < pen-descrizione OF prodener
              END-IF
           END-EVALUATE
           .

       DataSet1-prodener-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 START prodener KEY < pen-chiave OF prodener
              ELSE
                 START prodener KEY > pen-chiave OF prodener
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 START prodener KEY < pen-descrizione OF prodener
              ELSE
                 START prodener KEY > pen-descrizione OF prodener
              END-IF
           END-EVALUATE
           .

       DataSet1-prodener-START-EQUAL.
           EVALUATE DataSet1-KEYIS
           WHEN 2
              START prodener KEY = pen-descrizione OF prodener
           END-EVALUATE
           .

       DataSet1-prodener-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-LOCK
                 READ prodener WITH LOCK 
                 KEY pen-chiave OF prodener
              ELSE
                 READ prodener WITH NO LOCK 
                 KEY pen-chiave OF prodener
              END-IF
           WHEN 2
              IF DataSet1-prodener-LOCK
                 READ prodener WITH LOCK 
                 KEY pen-descrizione OF prodener
              ELSE
                 READ prodener WITH NO LOCK 
                 KEY pen-descrizione OF prodener
              END-IF
           END-EVALUATE
           PERFORM prodener-pen-k-nc-MERGE-SPLITBUF
           MOVE STATUS-prodener TO TOTEM-ERR-STAT 
           MOVE "prodener" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-prodener-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 IF DataSet1-prodener-LOCK
                    READ prodener NEXT WITH LOCK
                 ELSE
                    READ prodener NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-prodener-LOCK
                    READ prodener PREVIOUS WITH LOCK
                 ELSE
                    READ prodener PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 IF DataSet1-prodener-LOCK
                    READ prodener NEXT WITH LOCK
                 ELSE
                    READ prodener NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-prodener-LOCK
                    READ prodener PREVIOUS WITH LOCK
                 ELSE
                    READ prodener PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM prodener-pen-k-nc-MERGE-SPLITBUF
           MOVE STATUS-prodener TO TOTEM-ERR-STAT
           MOVE "prodener" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-prodener-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-prodener-KEY1-Asc
                 IF DataSet1-prodener-LOCK
                    READ prodener PREVIOUS WITH LOCK
                 ELSE
                    READ prodener PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-prodener-LOCK
                    READ prodener NEXT WITH LOCK
                 ELSE
                    READ prodener NEXT WITH NO LOCK
                 END-IF
              END-IF
           WHEN 2
              IF DataSet1-prodener-KEY2-Asc
                 IF DataSet1-prodener-LOCK
                    READ prodener PREVIOUS WITH LOCK
                 ELSE
                    READ prodener PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-prodener-LOCK
                    READ prodener NEXT WITH LOCK
                 ELSE
                    READ prodener NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM prodener-pen-k-nc-MERGE-SPLITBUF
           MOVE STATUS-prodener TO TOTEM-ERR-STAT
           MOVE "prodener" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-prodener-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeWrite>
      * <TOTEM:END>
           WRITE pen-rec OF prodener.
           MOVE STATUS-prodener TO TOTEM-ERR-STAT
           MOVE "prodener" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-prodener-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeRewrite>
      * <TOTEM:END>
           REWRITE pen-rec OF prodener.
           MOVE STATUS-prodener TO TOTEM-ERR-STAT
           MOVE "prodener" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-prodener-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, BeforeDelete>
      * <TOTEM:END>
           DELETE prodener.
           MOVE STATUS-prodener TO TOTEM-ERR-STAT
           MOVE "prodener" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener, AfterDelete>
      * <TOTEM:END>
           .

       prodener1-pen-k-nc-MERGE-SPLITBUF.
           INITIALIZE prodener1-pen-k-nc-SPLITBUF
           MOVE pen-nc OF prodener(1:8) TO 
           prodener1-pen-k-nc-SPLITBUF(1:8)
           MOVE pen-cpa OF prodener(1:4) TO 
           prodener1-pen-k-nc-SPLITBUF(9:4)
           MOVE pen-taric OF prodener(1:2) TO 
           prodener1-pen-k-nc-SPLITBUF(13:2)
           MOVE pen-dac OF prodener(1:4) TO 
           prodener1-pen-k-nc-SPLITBUF(15:4)
           .

       DataSet1-prodener1-INITSTART.
           IF DataSet1-prodener1-KEY-Asc
              MOVE Low-Value TO pen-chiave OF prodener1
           ELSE
              MOVE High-Value TO pen-chiave OF prodener1
           END-IF
           .

       DataSet1-prodener1-INITEND.
           IF DataSet1-prodener1-KEY-Asc
              MOVE High-Value TO pen-chiave OF prodener1
           ELSE
              MOVE Low-Value TO pen-chiave OF prodener1
           END-IF
           .

      * prodener1
       DataSet1-prodener1-START.
           IF DataSet1-prodener1-KEY-Asc
              START prodener1 KEY >= pen-chiave OF prodener1
           ELSE
              START prodener1 KEY <= pen-chiave OF prodener1
           END-IF
           .

       DataSet1-prodener1-START-NOTGREATER.
           IF DataSet1-prodener1-KEY-Asc
              START prodener1 KEY <= pen-chiave OF prodener1
           ELSE
              START prodener1 KEY >= pen-chiave OF prodener1
           END-IF
           .

       DataSet1-prodener1-START-GREATER.
           IF DataSet1-prodener1-KEY-Asc
              START prodener1 KEY > pen-chiave OF prodener1
           ELSE
              START prodener1 KEY < pen-chiave OF prodener1
           END-IF
           .

       DataSet1-prodener1-START-LESS.
           IF DataSet1-prodener1-KEY-Asc
              START prodener1 KEY < pen-chiave OF prodener1
           ELSE
              START prodener1 KEY > pen-chiave OF prodener1
           END-IF
           .

       DataSet1-prodener1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-prodener1-LOCK
              READ prodener1 WITH LOCK 
              KEY pen-chiave OF prodener1
           ELSE
              READ prodener1 WITH NO LOCK 
              KEY pen-chiave OF prodener1
           END-IF
           PERFORM prodener1-pen-k-nc-MERGE-SPLITBUF
           MOVE STATUS-prodener1 TO TOTEM-ERR-STAT 
           MOVE "prodener1" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-prodener1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-prodener1-KEY-Asc
              IF DataSet1-prodener1-LOCK
                 READ prodener1 NEXT WITH LOCK
              ELSE
                 READ prodener1 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-prodener1-LOCK
                 READ prodener1 PREVIOUS WITH LOCK
              ELSE
                 READ prodener1 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM prodener1-pen-k-nc-MERGE-SPLITBUF
           MOVE STATUS-prodener1 TO TOTEM-ERR-STAT
           MOVE "prodener1" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-prodener1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-prodener1-KEY-Asc
              IF DataSet1-prodener1-LOCK
                 READ prodener1 PREVIOUS WITH LOCK
              ELSE
                 READ prodener1 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-prodener1-LOCK
                 READ prodener1 NEXT WITH LOCK
              ELSE
                 READ prodener1 NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM prodener1-pen-k-nc-MERGE-SPLITBUF
           MOVE STATUS-prodener1 TO TOTEM-ERR-STAT
           MOVE "prodener1" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-prodener1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-prodener1 TO TOTEM-ERR-STAT
           MOVE "prodener1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-prodener1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-prodener1 TO TOTEM-ERR-STAT
           MOVE "prodener1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-prodener1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-prodener1 TO TOTEM-ERR-STAT
           MOVE "prodener1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:prodener1, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE pen-rec OF prodener
           INITIALIZE pen-rec OF prodener1
           .


      * FD's Initialize Paragraph
       DataSet1-prodener-INITREC.
           INITIALIZE pen-rec OF prodener
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-prodener1-INITREC.
           INITIALIZE pen-rec OF prodener1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form1-Buf-To-Fld
           END-EVALUATE
           .

       Form1-DISPLAY-STATUS-MSG.
            MODIFY Form1-St-1-Handle PANEL-INDEX = 1
                PANEL-TEXT = TOTEM-HINT-TEXT
           .

       Form1-CLEAR-STATUS-MSG.
           MOVE SPACES TO TOTEM-MSG-1, TOTEM-MSG-2, TOTEM-MSG-3, 
           TOTEM-MSG-TEXT
           PERFORM Form1-DISPLAY-STATUS-MSG
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 20,00,
              SIZE 69,57,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,69,   
              HANDLE IN Form1-Tb-1-Handle
           DISPLAY Form1-Tb-1 UPON Form1-Tb-1-Handle

      * Status-bar
           DISPLAY STATUS-BAR
              FONT IS Small-Font,
              GRIP,
              PANEL-WIDTHS (30, 23, 999),
              PANEL-STYLE  (1, 1, 1),
              PANEL-TEXT   (SPACE, SPACE, SPACE),
              HANDLE IS Form1-St-1-Handle
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           move 1 to e-stampa.
           perform INIT.
           perform ABILITA-TOOLBAR.
           perform ABILITAZIONI.
           perform STATUS-BAR-MSG.           
      *     perform PRIMO.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
           evaluate key-status
           when 5 |MODIFICA
                inquire tool-modifica, enabled in e-modifica
                if e-modifica = 1
                   if mod = zero 
                      move 1    to mod
                   else          
                      move zero to mod
                   end-if
                   modify tool-modifica, value = mod
                   perform MODIFICA
                end-if
           when 10 |ORDINAMENTO ALFABETICO 
                if OrderBy = zero 
                   move 1       to OrderBy
                else              
                   move zero    to OrderBy
                end-if
                modify TOOL-ORD, value OrderBy
                perform ORDINAMENTO
           end-evaluate.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 2
                 PERFORM NUOVO-LinkTo
              WHEN Key-Status = 4
                 PERFORM CANCELLA-LinkTo
              WHEN Key-Status = 3
                 PERFORM TOOL-SALVA-LinkTo
              WHEN Key-Status = 6
                 PERFORM ANTEPRIMA-LinkTo
              WHEN Key-Status = 150
                 PERFORM TOOL-MODIFICA-LinkTo
              WHEN Key-Status = 7
                 PERFORM STAMPA-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
              WHEN Key-Status = 9
                 PERFORM TOOL-SELEZIONA-LinkTo
              WHEN Key-Status = 1002
                 PERFORM TOOL-PRIMO
              WHEN Key-Status = 67
                 PERFORM TOOL-PRECEDENTE
              WHEN Key-Status = 68
                 PERFORM TOOL-SUCCESSIVO
              WHEN Key-Status = 1006
                 PERFORM TOOL-ULTIMO
              WHEN Key-Status = 1001
                 PERFORM TOOL-ORD-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
           perform SALV-MOD.

           if errori
              move 26 to key-status
              exit paragraph
           end-if.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-CHANGETO-KEY2.
           MOVE 2 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-prodener-KEY1-ORDER
           WHEN 2
              MOVE "A" TO DataSet1-prodener-KEY2-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-prodener-KEY1-ORDER
           WHEN 2
              MOVE "D" TO DataSet1-prodener-KEY2-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Update-Key.
           MOVE pen-rec OF prodener TO
                     Form1-MULKEY-TMPBUF
           PERFORM Form1-CLEAR
           PERFORM Form1-INIT-DATA
           MOVE Form1-MULKEY-TMPBUF TO
                     pen-rec OF prodener
           PERFORM DataSet1-prodener-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
           .

       Form1-DUPLICATE-PREV.
           EVALUATE DataSet1-KEYIS
           WHEN 2
              IF pen-descrizione OF prodener = Form1-KEYISTMP2
                 MOVE DataSet1-prodener-KEY2-ORDER TO 
           TMP-Form1-KEY2-ORDER
                 MOVE "A" TO DataSet1-prodener-KEY2-ORDER
                 PERFORM DataSet1-prodener-START-EQUAL
                 IF Valid-STATUS-prodener
                    PERFORM DataSet1-prodener-Read-Next
                    PERFORM UNTIL NOT Valid-STATUS-prodener OR 
                         pen-chiave OF prodener = Form1-PKEYTMP OR
                         pen-descrizione OF prodener NOT = 
           Form1-KEYISTMP2
                       PERFORM DataSet1-prodener-Read-Next
                    END-PERFORM
                 END-IF
                 MOVE TMP-Form1-KEY2-ORDER TO 
           DataSet1-prodener-KEY2-ORDER
              ELSE
                 PERFORM DataSet1-prodener-START-LESS
              END-IF
           WHEN OTHER
              PERFORM DataSet1-prodener-START-LESS
           END-EVALUATE
           .

       Form1-DUPLICATE-NEXT.
           EVALUATE DataSet1-KEYIS
           WHEN 2
              IF pen-descrizione OF prodener = Form1-KEYISTMP2
                 MOVE DataSet1-prodener-KEY2-ORDER TO 
           TMP-Form1-KEY2-ORDER
                 MOVE "A" TO DataSet1-prodener-KEY2-ORDER
                 PERFORM DataSet1-prodener-START
                 IF Valid-STATUS-prodener
                    PERFORM DataSet1-prodener-Read-Next
                    PERFORM UNTIL NOT Valid-STATUS-prodener OR 
                         pen-chiave OF prodener = Form1-PKEYTMP OR
                         pen-descrizione OF prodener NOT = 
           Form1-KEYISTMP2
                       PERFORM DataSet1-prodener-Read-Next
                    END-PERFORM
                 END-IF
                 MOVE TMP-Form1-KEY2-ORDER TO 
           DataSet1-prodener-KEY2-ORDER
              ELSE
                 PERFORM DataSet1-prodener-START-GREATER
              END-IF
           WHEN OTHER
              PERFORM DataSet1-prodener-START-GREATER
           END-EVALUATE
           .

       Form1-DUPLICATE-MOVEKEY.
           MOVE pen-chiave OF prodener TO Form1-PKEYTMP
           EVALUATE DataSet1-KEYIS
           WHEN 2
              MOVE pen-descrizione OF prodener TO 
                   Form1-KEYISTMP2
           END-EVALUATE
           .

       Form1-First.
           PERFORM Form1-DUMMY-FIRST
           PERFORM DataSet1-prodener-INITSTART
           PERFORM DataSet1-prodener-START
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-prodener-Read-Next
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFirst>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Previous.
              PERFORM Form1-Buf-To-Fld
              PERFORM Form1-DUPLICATE-PREV
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-prodener-Read-Prev
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-PREVIOUS
           PERFORM Form1-IUD-Display
           .

       Form1-Next.
              PERFORM Form1-Buf-To-Fld
              PERFORM Form1-DUPLICATE-NEXT
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-prodener-Read-Next
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterNext>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-NEXT
           PERFORM Form1-IUD-Display
           .
      
       Form1-Last.
           PERFORM Form1-DUMMY-LAST
           PERFORM DataSet1-prodener-INITEND
           PERFORM DataSet1-prodener-START-NOTGREATER
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-prodener-Read-Prev
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterLast>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Curr.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-prodener-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCurrent>
      * <TOTEM:END>
           .

       Form1-IUD-Display.
           IF Valid-STATUS-prodener
              PERFORM Form1-ALLGRID-RESET
              PERFORM Form1-Fld-To-Buf
              PERFORM Form1-NAVI-FOR-MASTERGRID
              PERFORM Form1-DISPLAY
           ELSE
              IF Form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form1-Extended-File-Status
              END-IF
           END-IF
           .

       Form1-Add.
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-ADD
           PERFORM DataSet1-prodener-INITREC
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-prodener-Rec-Write
           IF Valid-STATUS-prodener
              PERFORM Form1-RESUMMARY-INS
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAdd>
      * <TOTEM:END>
           .
     
       Form1-Update.
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-prodener-START              
           IF NOT Valid-STATUS-prodener
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-prodener-Read
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-UPDATE
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-prodener-Rec-Rewrite
           IF Valid-STATUS-prodener
              PERFORM Form1-RESUMMARY-DEL
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterUpdate>
      * <TOTEM:END>
           .

       Form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form1-DUMMY-DELETE
      * delete
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-prodener-Rec-Delete
           IF Valid-STATUS-prodener
              PERFORM Form1-CLEAR
              PERFORM Form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-prodener
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDelete>
      * <TOTEM:END>
           PERFORM Form1-ERR-CHECKING
           .

       Form1-NAVI-FOR-MASTERGRID.
           .

       Form1-ERR-CHECKING.
           IF Valid-STATUS-prodener
              PERFORM Form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form1-Extended-File-Status
           END-IF
           .

       Form1-RESUMMARY-INS.
           .

       Form1-RESUMMARY-DEL.
           .


       Form1-DUMMY-FIRST.
           .

       Form1-DUMMY-PREVIOUS.
           .

       Form1-DUMMY-NEXT.
           .

       Form1-DUMMY-LAST.
           .

       Form1-DUMMY-CURR.
           .

       Form1-DUMMY-ADD.
           .

       Form1-DUMMY-UPDATE.
           .

       Form1-DUMMY-UPDATE-INIT.
           .

       Form1-DUMMY-DELETE.
           .

       Form1-DUMMY-DELETE-INIT.
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
           INITIALIZE Form1-BUF
      * FORM : Form1
           PERFORM DataSet1-INIT-RECORD
      * DB_CHECK BOX
              MOVE "N" TO pen-invio-edi of prodener
      * DB_CHECK BOX
              MOVE "N" TO pen-sdoppia-riga of prodener
           MOVE ALL X'9' TO Form1-KEYISTMP2
           MOVE ALL X'9' TO Form1-PKEYTMP
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
      * ef-codice's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-codice-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5001 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-descrizione's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-descrizione-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5002 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-cpa's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-cpa-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5003 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-nc's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-nc-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5004 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-taric's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-taric-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5005 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-dac's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-dac-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5006 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-suf-reg's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-suf-reg-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5007 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
           .

       ef-codice-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-codice, BeforeValidation>
      * <TOTEM:END>
           .

       ef-codice-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-codice, AfterValidation>
      * <TOTEM:END>
           .

      * ef-codice's Validation
       ef-codice-VALIDATION.
           PERFORM ef-codice-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-codice-AFTER-VALIDATION
           .

       ef-descrizione-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-descrizione, BeforeValidation>
      * <TOTEM:END>
           .

       ef-descrizione-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-descrizione, AfterValidation>
      * <TOTEM:END>
           .

      * ef-descrizione's Validation
       ef-descrizione-VALIDATION.
           PERFORM ef-descrizione-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-descrizione-AFTER-VALIDATION
           .

       ef-cpa-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-cpa, BeforeValidation>
      * <TOTEM:END>
           .

       ef-cpa-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-cpa, AfterValidation>
      * <TOTEM:END>
           .

      * ef-cpa's Validation
       ef-cpa-VALIDATION.
           PERFORM ef-cpa-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-cpa-AFTER-VALIDATION
           .

       ef-nc-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-nc, BeforeValidation>
      * <TOTEM:END>
           .

       ef-nc-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-nc, AfterValidation>
      * <TOTEM:END>
           .

      * ef-nc's Validation
       ef-nc-VALIDATION.
           PERFORM ef-nc-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-nc-AFTER-VALIDATION
           .

       ef-taric-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-taric, BeforeValidation>
      * <TOTEM:END>
           .

       ef-taric-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-taric, AfterValidation>
      * <TOTEM:END>
           .

      * ef-taric's Validation
       ef-taric-VALIDATION.
           PERFORM ef-taric-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-taric-AFTER-VALIDATION
           .

       ef-dac-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-dac, BeforeValidation>
      * <TOTEM:END>
           .

       ef-dac-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-dac, AfterValidation>
      * <TOTEM:END>
           .

      * ef-dac's Validation
       ef-dac-VALIDATION.
           PERFORM ef-dac-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-dac-AFTER-VALIDATION
           .

       ef-suf-reg-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-suf-reg, BeforeValidation>
      * <TOTEM:END>
           .

       ef-suf-reg-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-suf-reg, AfterValidation>
      * <TOTEM:END>
           .

      * ef-suf-reg's Validation
       ef-suf-reg-VALIDATION.
           PERFORM ef-suf-reg-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-suf-reg-AFTER-VALIDATION
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * DB_Entry-Field : ef-codice
           MOVE ef-codice-BUF TO pen-codice of prodener
      * DB_Entry-Field : ef-descrizione
           MOVE ef-descrizione-BUF TO pen-descrizione of prodener
      * DB_Entry-Field : ef-cpa
           MOVE ef-cpa-BUF TO pen-cpa of prodener
      * DB_Entry-Field : ef-nc
           MOVE ef-nc-BUF TO pen-nc of prodener
      * DB_Entry-Field : ef-taric
           MOVE ef-taric-BUF TO pen-taric of prodener
      * DB_Entry-Field : ef-dac
           MOVE ef-dac-BUF TO pen-dac of prodener
      * DB_Entry-Field : ef-suf-reg
           MOVE ef-suf-reg-BUF TO pen-suf-reg of prodener
      * DB_CHECK BOX : Screen1-DaCb-1
              IF Screen1-DaCb-1-BUF = 1
                 MOVE "S" TO pen-invio-edi of prodener
              ELSE
                 MOVE "N" TO pen-invio-edi of prodener
              END-IF
      * DB_CHECK BOX : Screen1-DaCb-2
              IF Screen1-DaCb-2-BUF = 1
                 MOVE "S" TO pen-sdoppia-riga of prodener
              ELSE
                 MOVE "N" TO pen-sdoppia-riga of prodener
              END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * DB_Entry-Field : ef-codice
           MOVE pen-codice of prodener TO ef-codice-BUF
      * DB_Entry-Field : ef-descrizione
           MOVE pen-descrizione of prodener TO ef-descrizione-BUF
      * DB_Entry-Field : ef-cpa
           MOVE pen-cpa of prodener TO ef-cpa-BUF
      * DB_Entry-Field : ef-nc
           MOVE pen-nc of prodener TO ef-nc-BUF
      * DB_Entry-Field : ef-taric
           MOVE pen-taric of prodener TO ef-taric-BUF
      * DB_Entry-Field : ef-dac
           MOVE pen-dac of prodener TO ef-dac-BUF
      * DB_Entry-Field : ef-suf-reg
           MOVE pen-suf-reg of prodener TO ef-suf-reg-BUF
      * DB_CHECK BOX : Screen1-DaCb-1
              IF pen-invio-edi of prodener = "S"
                 MOVE 1 TO Screen1-DaCb-1-BUF
              ELSE
                 MOVE 0 TO Screen1-DaCb-1-BUF
              END-IF
      * DB_CHECK BOX : Screen1-DaCb-2
              IF pen-sdoppia-riga of prodener = "S"
                 MOVE 1 TO Screen1-DaCb-2-BUF
              ELSE
                 MOVE 0 TO Screen1-DaCb-2-BUF
              END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
           perform ABILITAZIONI.

           Perform VALORIZZA-OLD.

           .
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.

           if pen-descrizione of prodener not = old-pen-descrizione
              and SiSalvato
              set NoSalvato to true
              |78-ID-ef-descrizione è l'ID del campo ef-descrizione
              move 78-ID-ef-descrizione to store-id 
           end-if


           if pen-cpa of prodener not = old-pen-cpa
              and SiSalvato
              set NoSalvato to true
              |78-ID-ef-cpa è l'ID del campo ef-cpa
              move 78-ID-ef-cpa to store-id 
           end-if


           if pen-nc of prodener not = old-pen-nc
              and SiSalvato
              set NoSalvato to true
              |78-ID-ef-nc è l'ID del campo ef-nc
              move 78-ID-ef-nc to store-id 
           end-if


           if pen-taric of prodener not = old-pen-taric
              and SiSalvato
              set NoSalvato to true
              |78-ID-ef-taric è l'ID del campo ef-taric
              move 78-ID-ef-taric to store-id 
           end-if


           if pen-dac of prodener not = old-pen-dac
              and SiSalvato
              set NoSalvato to true
              |78-ID-ef-dac è l'ID del campo ef-dac
              move 78-ID-ef-dac to store-id 
           end-if


           if pen-suf-reg of prodener not = old-pen-suf-reg
              and SiSalvato
              set NoSalvato to true
              |78-ID-ef-suf-reg è l'ID del campo ef-suf-reg
              move 78-ID-ef-suf-reg to store-id 
           end-if


           if pen-invio-edi of prodener not = old-pen-invio-edi
              and SiSalvato
              set NoSalvato to true
              |78-ID-Screen1-DaCb-1 è l'ID del campo Screen1-DaCb-1
              move 78-ID-Screen1-DaCb-1 to store-id 
           end-if


           if pen-sdoppia-riga of prodener not = old-pen-sdoppia-riga
              and SiSalvato
              set NoSalvato to true
              |78-ID-Screen1-DaCb-2 è l'ID del campo Screen1-DaCb-2
              move 78-ID-Screen1-DaCb-2 to store-id 
           end-if

           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           MOVE DataSet1-prodener-KEY1-ORDER TO TMP-Form1-KEY1-ORDER
           MOVE DataSet1-prodener-KEY2-ORDER TO TMP-Form1-KEY2-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form1-KEYIS
           MOVE pen-rec OF prodener TO 
              TMP-Form1-prodener-RESTOREBUF
           .             

       Form1-Restore-Status.
           MOVE TMP-Form1-KEY1-ORDER TO DataSet1-prodener-KEY1-ORDER
           MOVE TMP-Form1-KEY2-ORDER TO DataSet1-prodener-KEY2-ORDER
           MOVE TMP-Form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form1-prodener-RESTOREBUF TO
              pen-rec OF prodener
           PERFORM DataSet1-prodener-START
           IF Valid-STATUS-prodener
              PERFORM DataSet1-prodener-Read-Next
           ELSE
              PERFORM DataSet1-prodener-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-prodener OR
              (Valid-STATUS-prodener AND
                 pen-rec OF prodener = 
                   TMP-Form1-prodener-RESTOREBUF)
              PERFORM DataSet1-prodener-Read-Next
           END-PERFORM
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen Form1
      ***---
       Form1-BEFORE-SCREEN.

      * Generazione settaggio keyboard "." ---> ","
           evaluate control-id
           |78-ID-ef-cpa è l'ID del campo ef-cpa
           when 78-ID-ef-cpa
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |78-ID-ef-nc è l'ID del campo ef-nc
           when 78-ID-ef-nc
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |78-ID-ef-taric è l'ID del campo ef-taric
           when 78-ID-ef-taric
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |78-ID-ef-dac è l'ID del campo ef-dac
           when 78-ID-ef-dac
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |78-ID-ef-suf-reg è l'ID del campo ef-suf-reg
           when 78-ID-ef-suf-reg
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Paragrafo per la struttura del codice in AFTER sulla screen Form1
      ***---
       Form1-AFTER-SCREEN.

      * Generazione risettaggio keyboard "." ---> "."
           evaluate control-id
           |78-ID-ef-cpa è l'ID del campo ef-cpa
           when 78-ID-ef-cpa
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |78-ID-ef-nc è l'ID del campo ef-nc
           when 78-ID-ef-nc
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |78-ID-ef-taric è l'ID del campo ef-taric
           when 78-ID-ef-taric
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |78-ID-ef-dac è l'ID del campo ef-dac
           when 78-ID-ef-dac
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |78-ID-ef-suf-reg è l'ID del campo ef-suf-reg
           when 78-ID-ef-suf-reg
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione stringa perform CONTROLLO
           evaluate control-id
           |78-ID-ef-codice è l'ID del campo ef-codice
           when 78-ID-ef-codice
                perform CONTROLLO
           |78-ID-ef-descrizione è l'ID del campo ef-descrizione
           when 78-ID-ef-descrizione
                perform CONTROLLO
           |78-ID-ef-cpa è l'ID del campo ef-cpa
           when 78-ID-ef-cpa
                perform CONTROLLO
           |78-ID-ef-nc è l'ID del campo ef-nc
           when 78-ID-ef-nc
                perform CONTROLLO
           |78-ID-ef-taric è l'ID del campo ef-taric
           when 78-ID-ef-taric
                perform CONTROLLO
           |78-ID-ef-dac è l'ID del campo ef-dac
           when 78-ID-ef-dac
                perform CONTROLLO
           |78-ID-ef-suf-reg è l'ID del campo ef-suf-reg
           when 78-ID-ef-suf-reg
                perform CONTROLLO
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER CONTROLLO della screen
           when 99999 continue
           when other continue
           end-evaluate.



       Form1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "Digitare il Codice" to TOTEM-HINT-TEXT
           WHEN 5002 MOVE "Digitare la Descrizione" to TOTEM-HINT-TEXT
           WHEN 5003 MOVE "Digitare il codice CPA" to TOTEM-HINT-TEXT
           WHEN 5004 MOVE "Digitare la nomenclatura" to TOTEM-HINT-TEXT
           WHEN 5005 MOVE "Digitare il codice TARIC" to TOTEM-HINT-TEXT
           WHEN 5006 MOVE "Digitare il codice DAC" to TOTEM-HINT-TEXT
           WHEN 5007 MOVE "Digitare il suffisso del registro" to 
           TOTEM-HINT-TEXT
           WHEN 5008 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5009 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM Screen1-DaEf-1-BeforeProcedure
           When 5002 PERFORM Screen1-DaEf-2-BeforeProcedure
           When 5003 PERFORM Screen1-DaEf-11-BeforeProcedure
           When 5004 PERFORM Screen1-DaEf-4-BeforeProcedure
           When 5005 PERFORM Screen1-DaEf-4-BeforeProcedure
           When 5006 PERFORM Screen1-DaEf-4-BeforeProcedure
           When 5007 PERFORM ef-suf-reg-BeforeProcedure
           When 5008 PERFORM Screen1-DaCb-1-BeforeProcedure
           When 5009 PERFORM Screen1-DaCb-2-BeforeProcedure
           END-EVALUATE
           PERFORM Form1-DISPLAY-STATUS-MSG
           perform Form1-BEFORE-SCREEN
           .

       Form1-AfterProcedure.
           EVALUATE Control-Id
           When 5001 PERFORM Screen1-DaEf-1-AfterProcedure
           When 5002 PERFORM Screen1-DaEf-2-AfterProcedure
           When 5003 PERFORM Screen1-DaEf-11-AfterProcedure
           When 5004 PERFORM Screen1-DaEf-4-AfterProcedure
           When 5005 PERFORM Screen1-DaEf-4-AfterProcedure
           When 5006 PERFORM Screen1-DaEf-4-AfterProcedure
           When 5007 PERFORM ef-suf-reg-AfterProcedure
           When 5008 PERFORM Screen1-DaCb-1-AfterProcedure
           When 5009 PERFORM Screen1-DaCb-2-AfterProcedure
           END-EVALUATE
           perform Form1-AFTER-SCREEN
           .

       Screen1-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       ABILITAZIONI.
      * <TOTEM:PARA. ABILITAZIONI>
           if mod = 1              
              move BitmapDeleteEnabled to BitmapNumDelete
              move BitmapSaveEnabled   to BitmapNumSave
              move 1 to e-salva e-cancella
           else           
              move BitmapDeleteDisabled to BitmapNumDelete
              move BitmapSaveDisabled   to BitmapNumSave
              move ZERO to e-salva e-cancella
           end-if.      

      * ISACCO (CORREZIONE SU LIVELLO ABILITAZIONE 2) - 10/11/2003
      * (CANCELLAZIONE NON PERMESSA)
           if livello-abil = 2 
              move ZERO to e-cancella
              move BitmapDeleteDisabled to BitmapNumDelete
           end-if.
      * FINE

           modify tool-cancella, enabled = e-cancella.
           modify tool-salva,    enabled = e-salva.
       
      * ISACCO (SERVE SEMPRE PER LA MODIFICA PRCEDENTE E PER RIPRISTINARE
      * LE BITMAP DISABILITATE. - 10/11/2003
      *     perform FORM1-DISPLAY.
           display tool-nuovo, tool-salva, tool-cancella, tool-modifica.
      * FINE 
           .
      * <TOTEM:END>

       ANTEPRIMA.
      * <TOTEM:PARA. ANTEPRIMA>
           continue 
           .
      * <TOTEM:END>

       CANCELLA.
      * <TOTEM:PARA. CANCELLA>
           if mod = ZERO
              exit paragraph 
           end-if.
      *
           display message box MSg-Cancellare-il-record-corrente
                   title   titolo
                   type    mb-yes-no 
                   default mb-no
                   giving  scelta

           if scelta = mb-yes
              perform RIEMPI-CHIAVE
              delete prodener record 
                 invalid 
                    continue 
              end-delete     
              move zero to mod
              move 1    to mod-k
              perform FORM1-CLEAR
              set vecchio to true
              perform CANCELLA-COLORE
              perform INIT-OLD-REC

              
              display message box 
           MSG-Cancellazione-avvenuta-con-successo
                      title titolo                         

              unlock prodener all records

              perform PRIMO 
              move 78-ID-ef-codice to  CONTROL-ID     
              move 4         to  ACCEPT-CONTROL 

              set Statusvisua to true
              perform STATUS-BAR-MSG
              modify TOOL-MODIFICA value = mod
           end-if 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
      *     evaluate control-id
      *     when 78-ID-ef-nc
      *          inquire ef-nc, value in nom-codice
      *          move  "tnomen"       to como-file
      *          call   "zoom-gt"   using como-file, nom-rec
      *          cancel "zoom-gt"
      *          if stato-zoom = 0
      *             move nom-codice to ef-nc-buf
      *             display ef-nc
      *             move nom-descrizione  to lbl-nc-buf
      *             modify lbl-nc, TITLE lbl-nc-buf
      *          end-if
      *     end-evaluate 
           .
      * <TOTEM:END>

       CLEAR-SCREEN.
      * <TOTEM:PARA. CLEAR-SCREEN>
           move pen-chiave of prodener to old-pen-chiave.

           initialize pen-dati of prodener
                                   replacing numeric data by zeroes
                                   alphanumeric data by spaces.
                         
           perform FORM1-FLD-TO-BUF. 

           perform INIT-OLD-REC.
                                          
           display form1. 
  
           unlock prodener all records 
           .
      * <TOTEM:END>

       CHECK-INSERIMENTO.
      * <TOTEM:PARA. CHECK-INSERIMENTO>
      * MODIFICA LA STATUS-BAR
      * CONTROLLO SE DA INSERIMENTO SCORRO. ALLORA DEVO SEGNALARE CHE
      * SONO TORNATO IN MODIFICA.
           inquire tool-modifica, value in mod.

           evaluate mod
           when 1
                set StatusModifica to true
           when ZERO
                set StatusVisua to true   
           end-evaluate.
      
           perform STATUS-BAR-MSG 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

           evaluate CONTROL-ID
           when 78-ID-ef-codice
                perform RIEMPI-CHIAVE

                perform SELEZIONA-NUMERICO

           when 78-ID-ef-descrizione
                inquire ef-descrizione value pen-descrizione of prodener
                if pen-descrizione of prodener = SPACES
                   set errori to true
                   display message box "Descrizione obbligatoria"
                           title tit-err
                           type  mb-ok
                           icon  mb-warning-icon
                end-if     
      *     when 78-id-ef-nc
      *          move space   to lbl-nc-buf
      *          inquire ef-nc value in pen-nc
      *          if pen-nc not =zero
      *             move pen-nc  to nom-codice
      *             read tnomen
      *                invalid
      *                   move space   to nom-descrizione
      *                   set errori to true
      *                   display message box "nomenclatura non valida"
      *                     title tit-err
      *                     type  mb-ok
      *                     icon  mb-warning-icon
      *             end-read
      *             move nom-descrizione  to lbl-nc-buf
      *          end-if     
      *          modify lbl-nc, TITLE lbl-nc-buf
           when 78-id-ef-suf-reg
                inquire ef-suf-reg value ef-suf-reg-buf
                if ef-suf-reg-buf = space
                   set errori to true
                   display message box "Suffisso obbligatorio"
                           title tit-err
                           type  mb-ok
                else
                   perform CERCA-SUF-DOPPI                 
                end-if     
              
           end-evaluate.
      
           if errori
              perform CANCELLA-COLORE
              move CONTROL-ID to store-id
              move 4          to ACCEPT-CONTROL
           end-if.

      ***---
      *    ciclo controllo per dobbioni sul suffisso
       CERCA-SUF-DOPPI.
           move low-value to pen-codice of prodener1
           start prodener1 key not < pen-chiave of prodener1
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read prodener1 next
                       at end
                          exit perform
                    end-read
                    if pen-suf-reg of prodener1 = ef-suf-reg-buf
      *    vado in errore solo se non sto testando me stesso
                       if pen-codice of prodener 
                                      not = pen-codice of prodener1
                          set errori to true
                          display message box "Suffisso già utilizzato"
                                  title tit-err
                                  type  mb-ok
                          exit perform
                       end-if
                    end-if
                 end-perform
           end-start 
       
           .
      * <TOTEM:END>

       CURRENT-RECORD.
      * <TOTEM:PARA. CURRENT-RECORD>
           perform RIEMPI-CHIAVE.
           set tutto-ok  to true.
           set ReadSecca to true.
           if mod = 1
              read prodener    lock invalid 
                 set errori to true 
              end-read
           else
              read prodener no lock invalid 
                 set errori to true 
              end-read
           end-if.                    
           set ReadSecca to false.

           if RecLocked
              set RecLocked to false
           else
              if tutto-ok    
                 if nuovo
                    move ZERO      to mod
                    move 1         to mod-k
                    move 78-ID-ef-codice to CONTROL-ID
                    move 4               to ACCEPT-CONTROL
                 end-if   
                 perform FORM1-IUD-DISPLAY
                 set vecchio to true
                 if mod = 1
                    set StatusModifica to true
                 else                         
                    set StatusVisua    to true
                 end-if
                 perform STATUS-BAR-MSG
                 perform VALORIZZA-OLD
              else
                 move ZERO to mod
                 move 1    to mod-k
                 if vecchio
                    perform CLEAR-SCREEN
                    if YesMessage
                       move 78-ID-ef-codice to CONTROL-ID
                       move 4               to ACCEPT-CONTROL
                       display message box MSG-Record-inesistente
                               title = tit-err
                               icon mb-warning-icon
                    end-if
                 end-if
              end-if
           end-if 
           .
      * <TOTEM:END>

       INIT.
      * <TOTEM:PARA. INIT>
           move ZERO to StatusHelp.
           move 1    to mod-k.
           set StatusVisua to true.     
           set errore-des  to false 
           .
      * <TOTEM:END>

       INIT-OLD-REC.
      * <TOTEM:PARA. INIT-OLD-REC>
           initialize old-pen-rec replacing numeric data by zeroes
                                       alphanumeric data by spaces. 


           set old-pen-si-invio-edi      to true
           set old-pen-si-sdoppia-riga   to false
           .
      * <TOTEM:END>

       MODIFICA.
      * <TOTEM:PARA. MODIFICA>
           move 5 to key-status.
           inquire tool-modifica, value in mod.
           set tutto-ok to true.

           if nuovo
              move 1 to mod                  
              modify tool-modifica, value mod
           else
      *  SE L'UTENTE E' ABILITATO PUO' MODIFICARE UN RECORD
              if mod = 1
                 set YesMessage to true
                 perform CURRENT-RECORD
                 if tutto-ok
                    if CONTROL-ID < 78-ID-ef-descrizione
                       move 78-ID-ef-descrizione to CONTROL-ID
                    end-if
                    move ZERO to mod-k
                    move 1    to mod
                    set StatusModifica to true
                    perform STATUS-BAR-MSG
                 end-if
              else
                 move 1    to mod
                 perform SALV-MOD            
                 move ZERO to mod
                 move 1    to mod-k
                 if errori
                    move 1    to mod
                    move ZERO to mod-k
                 else
                    move 78-ID-ef-codice to CONTROL-ID
                    set NoMessage to true
                    perform CURRENT-RECORD
                    set StatusVisua to true
                    perform STATUS-BAR-MSG 
                    unlock prodener all records
                    if KeyboardSaved
                       set KeyboardReleased to true
                       set environment "KEYSTROKE" to "DATA=44 44"
                       set environment "KEYSTROKE" to "DATA=46 46"
                    end-if
                 end-if
              end-if
                        
              display form1
              modify tool-modifica,  value mod
              perform CANCELLA-COLORE 

              move 4 to ACCEPT-CONTROL
           end-if 
           .
      * <TOTEM:END>

       NUOVO.
      * <TOTEM:PARA. NUOVO>
           perform SALV-MOD.

           if tutto-ok  
              move 78-ID-ef-codice to CONTROL-ID       
              move 4               to ACCEPT-CONTROL   
              move 1               to mod mod-k
              modify tool-modifica,  value = mod
              perform CANCELLA-COLORE                  
              perform VALORIZZA-NUOVO
              perform INIT-OLD-REC       
              set StatusIns to true
              perform STATUS-BAR-MSG  
              set nuovo to true       
              unlock prodener all records
           end-if 
           .
      * <TOTEM:END>

       ORDINAMENTO.
      * <TOTEM:PARA. ORDINAMENTO>
           inquire tool-ord, value in OrderBy.
      
           if OrderBy = zero
              perform DataSet1-CHANGETO-KEY1
           else
              perform DataSet1-CHANGETO-KEY2
           end-if.
      
           perform Form1-Curr 
           .
      * <TOTEM:END>

       RIEMPI-CHIAVE.
      * <TOTEM:PARA. RIEMPI-CHIAVE>
           inquire ef-codice, value in ef-codice-buf.
           move ef-codice-buf       to pen-codice of prodener 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "abilita-toolbar.cpy".
           copy "color-custom.cpy".
           copy "status.cpy".
      *     copy "calcola-colore-trasparente.cpy" 
           .
      * <TOTEM:END>

       PRECEDENTE.
      * <TOTEM:PARA. PRECEDENTE>
           perform SALV-MOD.           
           if tutto-ok

              perform CHECK-INSERIMENTO
              unlock prodener all records

              if mod = 1
                 move ZERO to mod-k
                 set dataset1-prodener-lock to true
              else              
                 move 1    to mod-k     
                 initialize dataset1-prodener-lock-flag
              end-if
                    
              perform CANCELLA-COLORE
              perform FORM1-PREVIOUS

              if RecLocked
                 set RecLocked to false             
                 initialize dataset1-prodener-lock-flag
                 move 1 to mod-k
                 perform FORM1-PREVIOUS
              end-if
           end-if 
           .
      * <TOTEM:END>

       PRIMO.
      * <TOTEM:PARA. PRIMO>
           perform SALV-MOD.           
           if tutto-ok    
 
              perform CHECK-INSERIMENTO
              unlock prodener all records

              if mod = 1
                 move ZERO to mod-k
                 set dataset1-prodener-lock to true
              else              
                 move 1    to mod-k     
                 initialize dataset1-prodener-lock-flag
              end-if
                                  
              perform CANCELLA-COLORE
              perform FORM1-FIRST

              if RecLocked
                 set RecLocked to false             
                 initialize dataset1-prodener-lock-flag
                 move 1 to mod-k
                 perform FORM1-FIRST
              end-if
           end-if 
           .
      * <TOTEM:END>

       SALVA.
      * <TOTEM:PARA. SALVA>
           if mod = ZERO 
              exit paragraph 
           end-if.

           set tutto-ok to true.

           perform varying CONTROL-ID from 78-ID-ef-descrizione by 1
                     until CONTROL-ID > 78-ID-ef-suf-reg
              perform CONTROLLO
              if errori 
                 exit perform 
              end-if
           end-perform.

      *    controllo che almeno 1 dei campi sia valorizzato
           inquire ef-cpa, VALUE pen-cpa of prodener
           inquire ef-nc, VALUE pen-nc of prodener
           inquire ef-taric, VALUE pen-taric of prodener
           inquire ef-dac, VALUE pen-dac of prodener
           set niente  to true
           if pen-cpa of prodener not = space
              set niente  to false
           end-if
           if pen-nc of prodener not = zero
              set niente  to false
           end-if
           if pen-taric of prodener not = zero
              set niente  to false
           end-if
           if pen-dac of prodener not = space
              set niente  to false
           end-if
           if niente
              set errori to true
              display message box "Bisogna valorizzare almeno un campo"
                      title tit-err
                      type  mb-ok
                      icon  mb-warning-icon
           end-if   


           if errori
              perform ABILITAZIONI
              move store-id to CONTROL-ID       
              move 4        to ACCEPT-CONTROL   
           else                       
              perform FORM1-BUF-TO-FLD
              perform VALORIZZA-DATI-COMUNI
              perform cancella-colore 

              write pen-rec of prodener 
                 invalid 
                    rewrite pen-rec of prodener
              end-write

              set vecchio to true       
              perform TORNA-IN-VISUA
           end-if.   
                 
           display form1 
           .
      * <TOTEM:END>

       SALV-MOD.
      * <TOTEM:PARA. SALV-MOD>
           set tutto-ok to true.
           perform Form1-CONTROLLO-OLD.

           if NoSalvato
              display message box MSG-Salvare-le-modifiche
                            title titolo
                            type mb-yes-no-cancel 
                            giving scelta       
       
              evaluate scelta
              when mb-yes 
                   perform SALVA
              when mb-no  
                   continue
              when other                
                   perform CANCELLA-COLORE
                   set errori to true
                   move store-id to CONTROL-ID       
                   move 4        to ACCEPT-CONTROL   
              end-evaluate
           end-if 
           .
      * <TOTEM:END>

       SELEZIONA.
      * <TOTEM:PARA. SELEZIONA>
           perform RIEMPI-CHIAVE.

           move "prodener" to    como-file.
           call "zoom-gt" using como-file, pen-rec of prodener
                          giving stato-zoom.
           cancel "zoom-gt".
           if stato-zoom = ZERO
              if old-pen-chiave not = pen-chiave of prodener
                 move pen-chiave of prodener to save-key
                 perform SALV-MOD
                 if tutto-ok
                    move save-key to pen-chiave of prodener
                    set ReadSecca to true
                    modify ef-codice, value pen-codice of prodener
                    perform CURRENT-RECORD
                    perform CANCELLA-COLORE
                    move 78-ID-ef-codice to CONTROL-ID       
                    move 4               to ACCEPT-CONTROL   
                 end-if                                  
              end-if
           end-if 
           .
      * <TOTEM:END>

       SELEZIONA-NUMERICO.
      * <TOTEM:PARA. SELEZIONA-NUMERICO>
           read prodener no lock
                invalid
                if vecchio
                   display message MSG-record-inesistente
                             title tit-err
                              icon mb-warning-icon
                   perform CLEAR-SCREEN
                   set errori to true
                end-if
            not invalid      
                if old-pen-chiave not = pen-chiave of prodener
                   perform CURRENT-RECORD 
                   set errori to true
                end-if
           end-read 
           .
      * <TOTEM:END>

       SUCCESSIVO.
      * <TOTEM:PARA. SUCCESSIVO>
           perform SALV-MOD.
           if tutto-ok

              perform CHECK-INSERIMENTO
              unlock prodener all records

              if mod = 1
                 move ZERO to mod-k
                 set dataset1-prodener-lock to true
              else              
                 move 1    to mod-k     
                 initialize dataset1-prodener-lock-flag
              end-if
                                     
              perform CANCELLA-COLORE
              perform FORM1-NEXT
 
              if RecLocked
                 set RecLocked to false             
                 initialize dataset1-prodener-lock-flag
                 move 1 to mod-k
                 perform FORM1-NEXT
              end-if
           end-if 
           .
      * <TOTEM:END>

       STAMPA.
      * <TOTEM:PARA. STAMPA>
           continue 
           .
      * <TOTEM:END>

       ULTIMO.
      * <TOTEM:PARA. ULTIMO>
           perform SALV-MOD.
           if tutto-ok

              perform CHECK-INSERIMENTO
              unlock prodener all records 

              if mod = 1
                 move ZERO to mod-k
                 set dataset1-prodener-lock to true
              else              
                 move 1    to mod-k     
                 initialize dataset1-prodener-lock-flag
              end-if
                               
              perform CANCELLA-COLORE
              perform FORM1-LAST 
 
              if RecLocked
                 set RecLocked to false             
                 initialize dataset1-prodener-lock-flag
                 move 1 to mod-k
                 perform FORM1-LAST
              end-if
           end-if 
           .
      * <TOTEM:END>

       VALORIZZA-OLD.
      * <TOTEM:PARA. VALORIZZA-OLD>
           move pen-rec of prodener to old-pen-rec.
           set vecchio to true.

           move ZERO to StatusHelp
           perform STATUS-HELP 
           .
      * <TOTEM:END>

       VALORIZZA-NUOVO.
      * <TOTEM:PARA. VALORIZZA-NUOVO>
           move high-value to pen-codice of prodener.

           move space  to pen-codice of prodener

           move "00"    to status-prodener.

           initialize pen-dati of prodener 
                                   replacing numeric data by zeroes
                                    alphanumeric data by spaces.
           set pen-si-invio-edi of prodener to true
           set pen-si-sdoppia-riga of prodener to false
                                       
           perform FORM1-IUD-DISPLAY 
           .
      * <TOTEM:END>

       VALORIZZA-DATI-COMUNI.
      * <TOTEM:PARA. VALORIZZA-DATI-COMUNI>
      * SE NON HO VALORIZZATO I CAMPI DI CREAZIONE LI VALORIZZO
           if pen-data-creazione of prodener   = zero
              accept pen-data-creazione of prodener from century-date
           end-if.
           if pen-ora-creazione of prodener    = zero
              accept pen-ora-creazione of prodener  from time
           end-if.
           if pen-utente-creazione of prodener = space
              move user-codi to pen-utente-creazione of prodener
           end-if.

           accept pen-data-ultima-modifica of prodener from 
           century-date.
           accept pen-ora-ultima-modifica of prodener  from time.
           move user-codi    to pen-utente-ultima-modifica of prodener 
           .
      * <TOTEM:END>

       TORNA-IN-VISUA.
      * <TOTEM:PARA. TORNA-IN-VISUA>
           move 0 to mod.
           move 1 to mod-k.
           move 78-ID-ef-codice to CONTROL-ID.
           set NoMessage to true.
           perform ABILITAZIONI.
           set StatusVisua to true.
           perform STATUS-BAR-MSG.
           unlock prodener all records.
                        
           modify tool-modifica,  value mod.
           perform CANCELLA-COLORE.
           move 4 to ACCEPT-CONTROL.

           if KeyboardSaved
              set KeyboardReleased to true
              set environment "KEYSTROKE" to "DATA=44 44"
              set environment "KEYSTROKE" to "DATA=46 46"
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       NUOVO-LinkTo.
      * <TOTEM:PARA. NUOVO-LinkTo>
           INQUIRE TOOL-NUOVO, ENABLED IN E-NUOVO.

           IF E-NUOVO = 1
              PERFORM NUOVO
           END-IF                    
           .
      * <TOTEM:END>
       CANCELLA-LinkTo.
      * <TOTEM:PARA. CANCELLA-LinkTo>
           INQUIRE TOOL-MODIFICA, VALUE IN MOD.
                              
           INQUIRE TOOL-CANCELLA, ENABLED IN E-CANCELLA
           IF E-CANCELLA = 1
              PERFORM CANCELLA
           END-IF                                                
           .
      * <TOTEM:END>
       TOOL-SALVA-LinkTo.
      * <TOTEM:PARA. TOOL-SALVA-LinkTo>
           INQUIRE TOOL-MODIFICA, VALUE IN MOD           

           INQUIRE TOOL-SALVA, ENABLED IN E-SALVA
           IF E-SALVA = 1
              PERFORM SALVA
           END-IF           
           .
      * <TOTEM:END>
       ANTEPRIMA-LinkTo.
      * <TOTEM:PARA. ANTEPRIMA-LinkTo>
           inquire tool-anteprima, enabled in e-anteprima.
           if e-anteprima = 1
              set anteprima to true
           end-if 
           .
      * <TOTEM:END>
       TOOL-MODIFICA-BeforeProcedure.
      * <TOTEM:PARA. TOOL-MODIFICA-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       TOOL-MODIFICA-AfterProcedure.
      * <TOTEM:PARA. TOOL-MODIFICA-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       TOOL-MODIFICA-LinkTo.
      * <TOTEM:PARA. TOOL-MODIFICA-LinkTo>
           INQUIRE TOOL-MODIFICA, ENABLED IN E-MODIFICA.

           IF E-MODIFICA = 1
              PERFORM MODIFICA
           END-IF 
           .
      * <TOTEM:END>
       STAMPA-LinkTo.
      * <TOTEM:PARA. STAMPA-LinkTo>
           inquire tool-stampa, enabled in e-stampa.
           if e-stampa = 1
              set stampa to true
           end-if 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       TOOL-SELEZIONA-LinkTo.
      * <TOTEM:PARA. TOOL-SELEZIONA-LinkTo>
           inquire tool-seleziona, enabled in e-seleziona
           if e-seleziona = 1
              perform SELEZIONA
           end-if 
           .
      * <TOTEM:END>
       TOOL-PRIMO.
      * <TOTEM:PARA. TOOL-PRIMO>
           PERFORM PRIMO 
           .
      * <TOTEM:END>
       TOOL-PRECEDENTE.
      * <TOTEM:PARA. TOOL-PRECEDENTE>
           if nuovo             
              perform PRIMO
           else
              perform PRECEDENTE
           end-if 
           .
      * <TOTEM:END>
       TOOL-SUCCESSIVO.
      * <TOTEM:PARA. TOOL-SUCCESSIVO>
           if nuovo             
              perform ULTIMO
           else
              perform SUCCESSIVO
           end-if 
           .
      * <TOTEM:END>
       TOOL-ULTIMO.
      * <TOTEM:PARA. TOOL-ULTIMO>
           PERFORM ULTIMO 
           .
      * <TOTEM:END>
       ginqui-Ev-Before-Program.
      * <TOTEM:PARA. ginqui-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
      *     perform CALCOLA-COLORE-TRASPARENTE 
           .
      * <TOTEM:END>
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       Screen1-DaEf-2-BeforeProcedure.
      * <TOTEM:PARA. Screen1-DaEf-2-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move ZERO to StatusHelp.
           perform STATUS-HELP 
           .
      * <TOTEM:END>
       Screen1-DaEf-2-AfterProcedure.
      * <TOTEM:PARA. Screen1-DaEf-2-AfterProcedure>
              INQUIRE ef-descrizione, VALUE IN pen-descrizione of 
           prodener
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-descrizione-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR


           .
      * <TOTEM:END>

       Screen1-DaEf-4-BeforeProcedure.
      * <TOTEM:PARA. Screen1-DaEf-4-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move ZERO to StatusHelp.
           perform STATUS-HELP 
           .
      * <TOTEM:END>
       Screen1-DaEf-4-AfterProcedure.
      * <TOTEM:PARA. Screen1-DaEf-4-AfterProcedure>
              INQUIRE ef-nc, VALUE IN pen-nc of prodener
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-nc-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
              INQUIRE ef-taric, VALUE IN pen-taric of prodener
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-taric-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
              INQUIRE ef-dac, VALUE IN pen-dac of prodener
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-dac-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR


           .
      * <TOTEM:END>

       Screen1-DaEf-11-BeforeProcedure.
      * <TOTEM:PARA. Screen1-DaEf-11-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move ZERO to StatusHelp.
           perform STATUS-HELP 

           .
      * <TOTEM:END>
       Screen1-DaEf-11-AfterProcedure.
      * <TOTEM:PARA. Screen1-DaEf-11-AfterProcedure>
              INQUIRE ef-cpa, VALUE IN pen-cpa of prodener
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-cpa-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR

           .
      * <TOTEM:END>

       TOOL-ORD-LinkTo.
      * <TOTEM:PARA. TOOL-ORD-LinkTo>
           perform ORDINAMENTO 
           .
      * <TOTEM:END>
       TOOL-ORD-BeforeProcedure.
      * <TOTEM:PARA. TOOL-ORD-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       TOOL-ORD-AfterProcedure.
      * <TOTEM:PARA. TOOL-ORD-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       Screen1-DaEf-1-BeforeProcedure.
      * <TOTEM:PARA. Screen1-DaEf-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move ZERO to StatusHelp.
           perform STATUS-HELP 
           .
      * <TOTEM:END>
       Screen1-DaEf-1-AfterProcedure.
      * <TOTEM:PARA. Screen1-DaEf-1-AfterProcedure>
              INQUIRE ef-codice, VALUE IN pen-codice of prodener
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-codice-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move ZERO to StatusHelp.
           perform STATUS-HELP.

           .
      * <TOTEM:END>

       Screen1-DaCb-1-BeforeProcedure.
      * <TOTEM:PARA. Screen1-DaCb-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen1-DaCb-1-AfterProcedure.
      * <TOTEM:PARA. Screen1-DaCb-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       Screen1-DaCb-2-BeforeProcedure.
      * <TOTEM:PARA. Screen1-DaCb-2-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen1-DaCb-2-AfterProcedure.
      * <TOTEM:PARA. Screen1-DaCb-2-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-suf-reg-BeforeProcedure.
      * <TOTEM:PARA. ef-suf-reg-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-suf-reg-AfterProcedure.
      * <TOTEM:PARA. ef-suf-reg-AfterProcedure>
              INQUIRE ef-suf-reg, VALUE IN pen-suf-reg of prodener
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-suf-reg-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR

           .
      * <TOTEM:END>


      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

