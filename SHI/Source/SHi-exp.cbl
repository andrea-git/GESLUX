      *{TOTEM}PRG-COMMENT
      * SHI-exp.Cbl
      * SHI-exp.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          SHI-exp.
       AUTHOR.              andre.
       DATE-WRITTEN.        martedì 29 settembre 2020 23:13:54.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:SHI-exp, INIT:SHI-exp, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "paramSHI.sl".
           COPY "lineseq.sl".
           COPY "log-macrobatch.sl".
           COPY "macrobatch.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "paramSHI.fd".
           COPY "lineseq.fd".
           COPY "log-macrobatch.fd".
           COPY "macrobatch.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Geslux - Esportazione dati SHI". 
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 5013.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 STATUS-paramshi  PIC  X(2).
           88 Valid-STATUS-paramshi VALUE IS "00" THRU "09". 
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 form3-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 formFTP-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 RichiamoBatch VALUE IS 1    WHEN SET TO FALSE  0. 
       77 anno-to          PIC  9(4).
       77 num-from         PIC  9(8).
       77 num-to           PIC  9(8).
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BLUE-FINO-28X24-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 BLUE-DA-28X24-BMP            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 como-messaggio   PIC  x(200).
           COPY  "EXP-SHI-WS.DEF".
           COPY  "LOG-MACROBATCH.DEF".
       77 video-on         PIC  9
                  VALUE IS 0.
       77 path-log-macrobatch          PIC  X(256).
       77 STATUS-log-macrobatch        PIC  X(2).
           88 Valid-STATUS-log-macrobatch VALUE IS "00" THRU "09". 
       77 STATUS-macrobatch            PIC  X(2).
           88 Valid-STATUS-macrobatch VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-form3-FLAG-REFRESH PIC  9.
          88 form3-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-paramSHI-BUF     PIC X(9574).
       77 TMP-DataSet1-lineseq-BUF     PIC X(1000).
       77 TMP-DataSet1-log-macrobatch-BUF     PIC X(1000).
       77 TMP-DataSet1-macrobatch-BUF     PIC X(9848).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-paramSHI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-paramSHI-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-paramSHI-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-paramSHI-KEY1-Asc  VALUE "A".
          88 DataSet1-paramSHI-KEY1-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-log-macrobatch-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-log-macrobatch-LOCK  VALUE "Y".
       77 DataSet1-log-macrobatch-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-log-macrobatch-KEY-Asc  VALUE "A".
          88 DataSet1-log-macrobatch-KEY-Desc VALUE "D".
       77 DataSet1-macrobatch-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-macrobatch-LOCK  VALUE "Y".
       77 DataSet1-macrobatch-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-macrobatch-KEY-Asc  VALUE "A".
          88 DataSet1-macrobatch-KEY-Desc VALUE "D".


      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
       77 lk-mb-id         PIC  9(18).
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * PUSH BUTTON
       05
           Screen4-Pb-1, 
           Push-Button, 
           COL 3,00, 
           LINE 2,00,
           LINES 3,00 ,
           SIZE 20,00 ,
           EXCEPTION-VALUE 1001,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "ORDINI",
           .

      * PUSH BUTTON
       05
           Screen4-Pb-1aa, 
           Push-Button, 
           COL 3,00, 
           LINE 6,00,
           LINES 3,00 ,
           SIZE 20,00 ,
           EXCEPTION-VALUE 1000,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "ARTICOLI",
           .

      * LABEL
       05
           Screen4-blockpgm-1, 
           Label, 
           COL 2,80, 
           LINE 1,00,
           LINES 1,33 ,
           SIZE 9,00 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen4-Custom1-1, 
           Label, 
           COL 13,50, 
           LINE 1,11,
           LINES 1,44 ,
           SIZE 9,60 ,
           ID IS 4,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * PUSH BUTTON
       05
           Screen4-Pb-1aaa, 
           Push-Button, 
           COL 3,00, 
           LINE 10,00,
           LINES 3,00 ,
           SIZE 20,00 ,
           EXCEPTION-VALUE 1002,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "ANAGRAFICHE",
           .

      * FORM
       01 
           form3, 
           .

      * LABEL
       05
           form3-La-1, 
           Label, 
           COL 1,57, 
           LINE 2,00,
           LINES 2,00 ,
           SIZE 51,86 ,
           FONT IS Verdana12BI-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Creazione Flussi in corso...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL, 
           lk-mb-id.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:SHI-exp, INIT:SHI-exp, BeforeDeclarative>
       PARAMSHI-ERR SECTION.
           use after error procedure on PARAMSHI.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-PARAMSHI 
           when "39"
                set errori to true
                display message "File [PARAMSHI] mismatch size!"
                          title titolo
                           icon 3
           when "98"
                set errori to true
                display message "[PARAMSHI] Indexed file corrupt!"
                          title titolo
                           icon 3
           when "35"
                display message box        "Impossibile procedere."
                  x"0d0a""File delle testate [PARAMSHI] inesistente"
                        title = titolo
                        icon 2
                set errori to true
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM exp-shi-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:SHI-exp, INIT:SHI-exp, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana12BI-Occidentale
      *    After-Program
           PERFORM exp-shi-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-paramSHI
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    log-macrobatch OPEN MODE IS FALSE
      *    PERFORM OPEN-log-macrobatch
      *    macrobatch OPEN MODE IS FALSE
      *    PERFORM OPEN-macrobatch
      *    After Open
           .

       OPEN-paramSHI.
      * <TOTEM:EPT. INIT:SHI-exp, FD:paramSHI, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT paramSHI
           IF NOT Valid-STATUS-paramshi
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:SHI-exp, FD:paramSHI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:SHI-exp, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:SHI-exp, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-log-macrobatch.
      * <TOTEM:EPT. INIT:SHI-exp, FD:log-macrobatch, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT log-macrobatch
           IF NOT Valid-STATUS-log-macrobatch
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:SHI-exp, FD:log-macrobatch, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-macrobatch.
      * <TOTEM:EPT. INIT:SHI-exp, FD:macrobatch, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O macrobatch
           IF STATUS-macrobatch = "35"
              OPEN OUTPUT macrobatch
                IF Valid-STATUS-macrobatch
                   CLOSE macrobatch
                   OPEN I-O macrobatch
                END-IF
           END-IF
           IF NOT Valid-STATUS-macrobatch
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:SHI-exp, FD:macrobatch, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-paramSHI
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    log-macrobatch CLOSE MODE IS FALSE
      *    PERFORM CLOSE-log-macrobatch
      *    macrobatch CLOSE MODE IS FALSE
      *    PERFORM CLOSE-macrobatch
      *    After Close
           .

       CLOSE-paramSHI.
      * <TOTEM:EPT. INIT:SHI-exp, FD:paramSHI, BeforeClose>
      * <TOTEM:END>
           CLOSE paramSHI
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:SHI-exp, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-log-macrobatch.
      * <TOTEM:EPT. INIT:SHI-exp, FD:log-macrobatch, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-macrobatch.
      * <TOTEM:EPT. INIT:SHI-exp, FD:macrobatch, BeforeClose>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 MOVE Low-Value TO shi-chiave OF PARAMSHI
              ELSE
                 MOVE High-Value TO shi-chiave OF PARAMSHI
              END-IF
           END-EVALUATE
           .

       DataSet1-paramSHI-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 MOVE High-Value TO shi-chiave OF PARAMSHI
              ELSE
                 MOVE Low-Value TO shi-chiave OF PARAMSHI
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-paramSHI-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-paramSHI-KEY1-ORDER
           END-EVALUATE
           .

      * paramSHI
       DataSet1-paramSHI-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 START paramSHI KEY >= shi-chiave OF PARAMSHI
              ELSE
                 START paramSHI KEY <= shi-chiave OF PARAMSHI
              END-IF
           END-EVALUATE
           .

       DataSet1-paramSHI-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 START paramSHI KEY <= shi-chiave OF PARAMSHI
              ELSE
                 START paramSHI KEY >= shi-chiave OF PARAMSHI
              END-IF
           END-EVALUATE
           .

       DataSet1-paramSHI-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 START paramSHI KEY > shi-chiave OF PARAMSHI
              ELSE
                 START paramSHI KEY < shi-chiave OF PARAMSHI
              END-IF
           END-EVALUATE
           .

       DataSet1-paramSHI-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 START paramSHI KEY < shi-chiave OF PARAMSHI
              ELSE
                 START paramSHI KEY > shi-chiave OF PARAMSHI
              END-IF
           END-EVALUATE
           .

       DataSet1-paramSHI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI WITH LOCK 
                 KEY shi-chiave OF PARAMSHI
              ELSE
                 READ paramSHI WITH NO LOCK 
                 KEY shi-chiave OF PARAMSHI
              END-IF
           END-EVALUATE
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT 
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 IF DataSet1-paramSHI-LOCK
                    READ paramSHI NEXT WITH LOCK
                 ELSE
                    READ paramSHI NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-paramSHI-LOCK
                    READ paramSHI PREVIOUS WITH LOCK
                 ELSE
                    READ paramSHI PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-paramSHI-KEY1-Asc
                 IF DataSet1-paramSHI-LOCK
                    READ paramSHI PREVIOUS WITH LOCK
                 ELSE
                    READ paramSHI PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-paramSHI-LOCK
                    READ paramSHI NEXT WITH LOCK
                 ELSE
                    READ paramSHI NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq.
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-INITSTART.
           .

       DataSet1-log-macrobatch-INITEND.
           .

       DataSet1-log-macrobatch-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-log-macrobatch-LOCK
              READ log-macrobatch WITH LOCK 
           ELSE
              READ log-macrobatch WITH NO LOCK 
           END-IF
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT 
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-log-macrobatch-KEY-Asc
              IF DataSet1-log-macrobatch-LOCK
                 READ log-macrobatch NEXT WITH LOCK
              ELSE
                 READ log-macrobatch NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-INITSTART.
           IF DataSet1-macrobatch-KEY-Asc
              MOVE Low-Value TO mb-chiave
           ELSE
              MOVE High-Value TO mb-chiave
           END-IF
           .

       DataSet1-macrobatch-INITEND.
           IF DataSet1-macrobatch-KEY-Asc
              MOVE High-Value TO mb-chiave
           ELSE
              MOVE Low-Value TO mb-chiave
           END-IF
           .

      * macrobatch
       DataSet1-macrobatch-START.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY >= mb-chiave
           ELSE
              START macrobatch KEY <= mb-chiave
           END-IF
           .

       DataSet1-macrobatch-START-NOTGREATER.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY <= mb-chiave
           ELSE
              START macrobatch KEY >= mb-chiave
           END-IF
           .

       DataSet1-macrobatch-START-GREATER.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY > mb-chiave
           ELSE
              START macrobatch KEY < mb-chiave
           END-IF
           .

       DataSet1-macrobatch-START-LESS.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY < mb-chiave
           ELSE
              START macrobatch KEY > mb-chiave
           END-IF
           .

       DataSet1-macrobatch-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-macrobatch-LOCK
              READ macrobatch WITH LOCK 
              KEY mb-chiave
           ELSE
              READ macrobatch WITH NO LOCK 
              KEY mb-chiave
           END-IF
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT 
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-macrobatch-KEY-Asc
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch NEXT WITH LOCK
              ELSE
                 READ macrobatch NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch PREVIOUS WITH LOCK
              ELSE
                 READ macrobatch PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-macrobatch-KEY-Asc
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch PREVIOUS WITH LOCK
              ELSE
                 READ macrobatch PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch NEXT WITH LOCK
              ELSE
                 READ macrobatch NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeWrite>
      * <TOTEM:END>
           WRITE mb-rec OF macrobatch.
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mb-rec OF macrobatch.
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeDelete>
      * <TOTEM:END>
           DELETE macrobatch.
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE shi-rec OF paramSHI
           INITIALIZE line-riga OF lineseq
           INITIALIZE lm-riga OF log-macrobatch
           INITIALIZE mb-rec OF macrobatch
           .


      * FD's Initialize Paragraph
       DataSet1-paramSHI-INITREC.
           INITIALIZE shi-rec OF paramSHI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-log-macrobatch-INITREC.
           INITIALIZE lm-riga OF log-macrobatch
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-macrobatch-INITREC.
           INITIALIZE mb-rec OF macrobatch
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 13,22,
              SIZE 24,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen4-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           move space  to shi-codice
           read paramSHI
              invalid
                 continue
           end-read.

           if RichiamoBatch
              perform SCREEN4-PB-1-LINKTO
              move 27 to key-status
           else
              move 1 to video-on
              modify form1-handle, visible video-on
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM Screen4-Pb-1-LinkTo
              WHEN Key-Status = 1000
                 PERFORM Screen4-Pb-1aa-LinkTo
              WHEN Key-Status = 1002
                 PERFORM Screen4-Pb-1aaa-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form1-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .

       form3-Open-Routine.
           PERFORM form3-Scrn
           PERFORM form3-Proc
           .

       form3-Scrn.
           PERFORM form3-Create-Win
           PERFORM form3-Init-Value
           PERFORM form3-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form3-DISPLAY
           .

       form3-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 3,00,
              SIZE 53,14,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE form3-Event-Proc,
              HANDLE IS form3-Handle,
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form3 UPON form3-Handle
      * DISPLAY-COLUMNS settings
           .

       form3-PROC.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeAccept>
           if not RichiamoBatch
              move 1 to video-on
              modify form3-handle visible video-on
           end-if.

           perform CREA-LOG

           if RichiamoBatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output            delimited size
                     "CHECK CARTELLE..." delimited size
                into lm-riga
              end-string
              write lm-riga
           end-if.

           set   tutto-ok to true.
           perform CHECK-CARTELLE.

           if tutto-ok
              if RichiamoBatch
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output   delimited size
                        "CHECK CARTELLE OK" 
                                   delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if

              move wstampa   to exp-path-log
              set tutto-ok   to true
              evaluate true
              when crea-ordini
                   perform EXP-ORDINI
              when crea-articoli
                   perform EXP-ARTICOLI
              when crea-anagrafiche
                   perform EXP-VETTORI
                   perform EXP-CLASSI
                   perform EXP-FORNITORI
              end-evaluate
           else                                        
              if RichiamoBatch
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output   delimited size
                        "ERRORI NELLE CARTELLE PARAMETRIZZATE." 
                                   delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if
           end-if
           perform FORM3-EXIT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM form3-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form3-Handle
           INITIALIZE Key-Status
           .

       form3-Evaluate-Func.
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form3-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form3-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form3-CLEAR.
           PERFORM form3-INIT-VALUE
           PERFORM form3-DISPLAY
           .

       form3-DISPLAY.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form3 UPON form3-Handle
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen4-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       form3-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form3-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       form3-Init-Value.
      * <TOTEM:EPT. FORM:form3, FORM:form3, SetDefault>
      * <TOTEM:END>
           PERFORM form3-FLD-TO-BUF
           .


       form3-ALLGRID-RESET.
           .

      * for Form's Validation
       form3-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form3-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterBufToFld>
      * <TOTEM:END>
           .

       form3-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterFldToBuf>
      * <TOTEM:END>
           .

       form3-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form3-BUF-TO-FLD.
           move 0 to scelta.
           .
       form3-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form3-SHOW-MSG-ROUTINE
           .

       form3-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form3-DISPLAY-MESSAGE
           .

       form3-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form3-Save-Status.
           .             

       form3-Restore-Status.
           .



       Screen4-Event-Proc.
           .

       form3-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "calcola-colore-trasparente.cpy".
           copy "color-custom.cpy".
           copy "exp-shi-procedure.cpy" 
           .
      * <TOTEM:END>

       MSG-DIR-ERR.
      * <TOTEM:PARA. MSG-DIR-ERR>
           inspect MSG-Folder-Name, 
                   replacing trailing SPACES by LOW-VALUES.

           initialize como-messaggio
           string "IMPOSSIBILE APRIRE DIRECTORY: "  delimited size,
                   MSG-Folder-Name                  delimited LOW-VALUE,
              into como-messaggio.
           perform SCRIVI-MESSAGGIO
           .
      * <TOTEM:END>

       GUARDA-FILE.
      * <TOTEM:PARA. GUARDA-FILE>
           if RichiamoBatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output                      delimited size
                     "DETTAGLI DI FUNZIONAMENTO: " delimited size
                     exp-path-log                  delimited size
                into lm-riga
              end-string
              write lm-riga
              if exp-ord-path-riepilogo-c not = spaces
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output                  delimited size
                        "RIEPILOGO COLLI: "       delimited size
                        exp-ord-path-riepilogo-c  delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if
           else
              set splcrt2graf-anteprima  to true
              set splcrt2graf-unix       to true
              set splcrt2graf-verticale  to true
              set splcrt2graf-forza-crt  to true
              set splcrt2graf-10pt    to true
              set splcrt2graf-si-grasssetto to false
           
              call   "splcrt2graf" using splcrt2graf-link
              cancel "splcrt2graf" 
              if exp-ord-path-riepilogo-c not = spaces
                 move exp-ord-path-riepilogo-c to 
           splcrt2graf-percorso-stampa
                 set splcrt2graf-stampa     to true
                 set splcrt2graf-unix       to true
                 set splcrt2graf-verticale  to true
                 set splcrt2graf-forza-crt  to true
                 set splcrt2graf-10pt    to true
                 set splcrt2graf-si-grasssetto to false
              
                 call   "splcrt2graf" using splcrt2graf-link
                 cancel "splcrt2graf"                  
              end-if
           end-if 
           .
      * <TOTEM:END>

       ESPORTA.
      * <TOTEM:PARA. ESPORTA>
           call "W$MOUSE" using set-mouse-shape, wait-pointer.

           perform FORM3-OPEN-ROUTINE.
           call "W$MOUSE" using set-mouse-shape, arrow-pointer.


           if errori    

              if RichiamoBatch                               
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output   delimited size
                        "CREAZIONE FILE TERMINATA CON ERRORI." 
                                   delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if    

              initialize como-messaggio
              move "Creazione file terminata con errori."  
                                         to como-messaggio
              perform SCRIVI-MESSAGGIO
           end-if.

           if tutto-ok
              if crea-ordini
                 perform AGGIORNA-ORDINI
              end-if
                              
              if exp-err-bloccante
                 set errori  to true
                 if RichiamoBatch             
                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    string r-output   delimited size
                           "ERRORE BLOCCANTE IN AGGIORNAMENTO (SHI-AGG-O
      -    "RD-EXP)!" 
                                      delimited size
                           " CONSULTARE LOG SPECIFICO" 
                                      delimited size
                      into lm-riga
                    end-string
                    write lm-riga

                    move lk-mb-id to mb-id
                    read macrobatch no lock
                    set mb-shi-exp-stato-err to true
                    rewrite mb-rec

                 end-if
              end-if            
              if RichiamoBatch
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output       delimited size
                        "COPIA FILES"  delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if
              perform COPIA-FILES
           end-if.

           perform GUARDA-FILE 
           .
      * <TOTEM:END>

       EXP-ARTICOLI.
      * <TOTEM:PARA. EXP-ARTICOLI>
           if shi-file-articoli = space or 
              shi-file-ean      = space or
              shi-file-prodener = space
              move    "Esportazione Articoli impossibile! Nome file non 
      -              "valorizzato"  to como-messaggio
              perform SCRIVI-MESSAGGIO
           else
              call   "SHI-exparticoli" using exp-linkage
              cancel "SHI-exparticoli" 
              if exp-err-bloccante
                 set errori  to true
              end-if
           end-if 
           .
      * <TOTEM:END>

       EXP-VETTORI.
      * <TOTEM:PARA. EXP-VETTORI>
           if shi-file-vettori = space 
              move     "Esportazione Vettori impossibile! Nome file non 
      -              "valorizzato"  to como-messaggio
              perform SCRIVI-MESSAGGIO
           else
              call   "SHI-expvettori" using exp-linkage
              cancel "SHI-expvettori" 
              if exp-err-bloccante
                 set errori  to true
              end-if
           end-if 
           .
      * <TOTEM:END>

       EXP-CLASSI.
      * <TOTEM:PARA. EXP-CLASSI>
           if shi-file-classi = space 
              move "Esportazione Classi Articoli impossibile! Nome file
      -             "non valorizzato"  to como-messaggio
              perform SCRIVI-MESSAGGIO
           else
              call   "SHI-expclassi" using exp-linkage
              cancel "SHI-expclassi" 
              if exp-err-bloccante
                 set errori  to true
              end-if
           end-if 
           .
      * <TOTEM:END>

       EXP-FORNITORI.
      * <TOTEM:PARA. EXP-FORNITORI>
           if shi-file-fornitori = space 
              move   "Esportazione Fornitori impossibile! Nome file non 
      -              "valorizzato"  to como-messaggio
              perform SCRIVI-MESSAGGIO
           else
              call   "SHI-expfornitori" using exp-linkage
              cancel "SHI-expfornitori" 
              if exp-err-bloccante
                 set errori  to true
              end-if
           end-if 
           .
      * <TOTEM:END>

       EXP-ORDINI.
      * <TOTEM:PARA. EXP-ORDINI>
           if shi-file-tordini     = space or 
              shi-file-rordini     = space or
              shi-file-note-ordini = space or
              shi-file-articoli    = space or 
              shi-file-ean         = space or
              shi-file-prodener    = space  
              if RichiamoBatch          
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output   delimited size
                        "ESPORTAZIONE ORDINI CLIENTI IMPOSSIBILE!" 
           delimited size
                        " NOME FILE NON VALORIZZATO" 
                                   delimited size
                   into lm-riga
                 end-string
                 write lm-riga 

                 move lk-mb-id to mb-id
                 read macrobatch no lock
                 set mb-shi-exp-stato-err to true
                 rewrite mb-rec

              end-if
              move  "Esportazione Ordini Clienti impossibile! Nome file 
      -              "non valorizzato"  to como-messaggio
              perform SCRIVI-MESSAGGIO
           else              
              if RichiamoBatch
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output   delimited size
                        "ESPORTAZIONE ORDINI..." 
                                   delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if
              call   "SHI-expordini" using exp-linkage,
                                           expordini-linkage
              cancel "SHI-expordini" 
              if exp-err-bloccante
                 set errori  to true
                 if RichiamoBatch             
                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    string r-output   delimited size
                           "ERRORE BLOCCANTE IN ESPORTAZIONE (SHI-EXPORD
      -    "INI)!" delimited size
                           " CONSULTARE LOG SPECIFICO" 
                                      delimited size
                      into lm-riga
                    end-string
                    write lm-riga

                    move lk-mb-id to mb-id
                    read macrobatch no lock
                    set mb-shi-exp-stato-err to true
                    rewrite mb-rec

                 end-if
              else
                 if RichiamoBatch
                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    if exp-ok
                       string r-output   delimited size
                              "ESPORTAZIONE ORDINI OK" 
                                         delimited size
                         into lm-riga
                       end-string
                    else         
                       string r-output   delimited size
                              "ESPORTAZIONE ORDINI ERR" 
                                         delimited size
                         into lm-riga
                       end-string
                    end-if
                    write lm-riga
                 end-if
              end-if
           end-if 
           .
      * <TOTEM:END>

       SCRIVI-MESSAGGIO.
      * <TOTEM:PARA. SCRIVI-MESSAGGIO>
           open extend lineseq
           write line-riga from como-messaggio after 2
           close lineseq 
           .
      * <TOTEM:END>

       AGGIORNA-ORDINI.
      * <TOTEM:PARA. AGGIORNA-ORDINI>
           if RichiamoBatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output               delimited size
                     "CREAZIONE ORDINI..."  delimited size
                into lm-riga
              end-string
              write lm-riga
           end-if.
           call   "SHI-agg-ord-exp" using exp-linkage,
                                      expordini-linkage
           cancel "SHI-agg-ord-exp".

           if RichiamoBatch
              evaluate true
              when exp-ok
                   call   "set-ini-log" using r-output
                   cancel "set-ini-log"
                   initialize lm-riga
                   string r-output               delimited size
                          "CREAZIONE ORDINI OK"  delimited size
                     into lm-riga
                   end-string
                   write lm-riga
              when exp-err
                   call   "set-ini-log" using r-output
                   cancel "set-ini-log"
                   initialize lm-riga
                   string r-output                delimited size
                          "CREAZIONE ORDINI ERR"  delimited size
                     into lm-riga
                   end-string
                   write lm-riga     
              end-evaluate
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       Screen4-Pb-1-LinkTo.
      * <TOTEM:PARA. Screen4-Pb-1-LinkTo>
           set crea-ordini   to true.
           perform ESPORTA 
           .
      * <TOTEM:END>
       exp-shi-Ev-Before-Program.
      * <TOTEM:PARA. exp-shi-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           if lk-bl-prog-id = "macrobatch"
              set RichiamoBatch  to true

              open i-o macrobatch

              move lk-mb-id to mb-id
              read macrobatch no lock
              move mb-path-log to path-log-macrobatch

              open extend log-macrobatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output               delimited size
                     "|=> INGRESSO SHI-EXP" delimited size
                into lm-riga
              end-string
              write lm-riga
           end-if.
           perform CALCOLA-COLORE-TRASPARENTE 


           .
      * <TOTEM:END>
       exp-shi-Ev-After-Program.
      * <TOTEM:PARA. exp-shi-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           if RichiamoBatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output             delimited size
                     "<=| USCITA SHI-EXP" delimited size
                into lm-riga
              end-string
              write lm-riga
              close log-macrobatch
              close macrobatch
           end-if 
           .
      * <TOTEM:END>
       Screen4-Pb-1aa-LinkTo.
      * <TOTEM:PARA. Screen4-Pb-1aa-LinkTo>
           set crea-articoli to true
           perform ESPORTA 
           .
      * <TOTEM:END>
       Screen4-Pb-1aaa-LinkTo.
      * <TOTEM:PARA. Screen4-Pb-1aaa-LinkTo>
           set crea-anagrafiche to true
           perform ESPORTA 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

