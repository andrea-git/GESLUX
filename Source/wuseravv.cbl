      *{TOTEM}PRG-COMMENT
      * wuseravv.Cbl
      * wuseravv.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          wuseravv.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        lunedì 2 dicembre 2013 19:41:34.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:wuseravv, INIT:wuseravv, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "useravv.sl".
           COPY "USER.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "useravv.fd".
           COPY "USER.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "comune.def".
               COPY "utydata.def".
               COPY "custom.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Gestione Avvisi utente". 
       77 STATUS-useravv   PIC  X(2).
           88 Valid-STATUS-useravv VALUE IS "00" THRU "09". 
       77 STATUS-USER      PIC  X(2).
           88 Valid-STATUS-USER VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 TMP-DataSet1-useravv-BUF     PIC X(178).
       77 TMP-DataSet1-USER-BUF     PIC X(351).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-useravv-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-useravv-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-useravv-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-useravv-KEY1-Asc  VALUE "A".
          88 DataSet1-useravv-KEY1-Desc VALUE "D".
       77 DataSet1-USER-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-USER-LOCK  VALUE "Y".
       77 DataSet1-USER-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-USER-KEY-Asc  VALUE "A".
          88 DataSet1-USER-KEY-Desc VALUE "D".

       77 useravv-uav-k-tipologia-SPLITBUF  PIC X(13).

           copy "link-geslock.def".
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-WUSERAVV.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING link-wuseravv.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:wuseravv, INIT:wuseravv, BeforeDeclarative>
      ***---
       USERAVV-ERR SECTION.
           use after error procedure on USERAVV.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-USERAVV
           when "35"
                if not link-chiamata-batch
                   display message "File [USERAVV] not found!"
                             title titolo
                              icon 3
                   set errori to true
                else
                   move "File [USERAVV] not found!" to 
           link-msg-err-ritorno
                   move -2 to link-wUSERAVV-status
                end-if
           when "39"
                if not link-chiamata-batch
                   display message "File [USERAVV] Mismatch size!"
                             title titolo
                              icon 3
                   set errori to true
                else
                   move "File [USERAVV] Mismatch size!" to 
           link-msg-err-ritorno
                   move -2 to link-wUSERAVV-status
                end-if
           when "98"
                if not link-chiamata-batch
                   display message "[USERAVV] Indexed file corrupt!"
                             title titolo
                              icon 3
                   set errori to true
                else
                   move "[USERAVV] Indexed file corrupt!" to 
           link-msg-err-ritorno
                   move -2 to link-wUSERAVV-status
                end-if
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM wprogmag-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:wuseravv, INIT:wuseravv, BeforeDestroyResource>
      * <TOTEM:END>
      *    After-Program
           PERFORM wprogmag-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
           .

       INIT-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
      *    useravv OPEN MODE IS FALSE
      *    PERFORM OPEN-useravv
           PERFORM OPEN-USER
      *    After Open
           .

       OPEN-useravv.
      * <TOTEM:EPT. INIT:wuseravv, FD:useravv, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O useravv
           IF STATUS-useravv = "35"
              OPEN OUTPUT useravv
                IF Valid-STATUS-useravv
                   CLOSE useravv
                   OPEN I-O useravv
                END-IF
           END-IF
           IF NOT Valid-STATUS-useravv
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wuseravv, FD:useravv, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-USER.
      * <TOTEM:EPT. INIT:wuseravv, FD:USER, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT USER
           IF NOT Valid-STATUS-USER
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wuseravv, FD:USER, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
      *    useravv CLOSE MODE IS FALSE
      *    PERFORM CLOSE-useravv
           PERFORM CLOSE-USER
      *    After Close
           .

       CLOSE-useravv.
      * <TOTEM:EPT. INIT:wuseravv, FD:useravv, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-USER.
      * <TOTEM:EPT. INIT:wuseravv, FD:USER, BeforeClose>
      * <TOTEM:END>
           CLOSE USER
           .

       useravv-uav-k-tipologia-MERGE-SPLITBUF.
           INITIALIZE useravv-uav-k-tipologia-SPLITBUF
           MOVE uav-tipologia OF useravv(1:2) TO 
           useravv-uav-k-tipologia-SPLITBUF(1:2)
           MOVE uav-utente OF useravv(1:10) TO 
           useravv-uav-k-tipologia-SPLITBUF(3:10)
           .

       DataSet1-useravv-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 MOVE Low-Value TO uav-chiave OF useravv
              ELSE
                 MOVE High-Value TO uav-chiave OF useravv
              END-IF
           END-EVALUATE
           .

       DataSet1-useravv-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 MOVE High-Value TO uav-chiave OF useravv
              ELSE
                 MOVE Low-Value TO uav-chiave OF useravv
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-useravv-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-useravv-KEY1-ORDER
           END-EVALUATE
           .

      * useravv
       DataSet1-useravv-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 START useravv KEY >= uav-chiave OF useravv
              ELSE
                 START useravv KEY <= uav-chiave OF useravv
              END-IF
           END-EVALUATE
           .

       DataSet1-useravv-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 START useravv KEY <= uav-chiave OF useravv
              ELSE
                 START useravv KEY >= uav-chiave OF useravv
              END-IF
           END-EVALUATE
           .

       DataSet1-useravv-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 START useravv KEY > uav-chiave OF useravv
              ELSE
                 START useravv KEY < uav-chiave OF useravv
              END-IF
           END-EVALUATE
           .

       DataSet1-useravv-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 START useravv KEY < uav-chiave OF useravv
              ELSE
                 START useravv KEY > uav-chiave OF useravv
              END-IF
           END-EVALUATE
           .

       DataSet1-useravv-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-LOCK
                 READ useravv WITH LOCK 
                 KEY uav-chiave OF useravv
              ELSE
                 READ useravv WITH NO LOCK 
                 KEY uav-chiave OF useravv
              END-IF
           END-EVALUATE
           PERFORM useravv-uav-k-tipologia-MERGE-SPLITBUF
           MOVE STATUS-useravv TO TOTEM-ERR-STAT 
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-useravv-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 IF DataSet1-useravv-LOCK
                    READ useravv NEXT WITH LOCK
                 ELSE
                    READ useravv NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-useravv-LOCK
                    READ useravv PREVIOUS WITH LOCK
                 ELSE
                    READ useravv PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM useravv-uav-k-tipologia-MERGE-SPLITBUF
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-useravv-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-useravv-KEY1-Asc
                 IF DataSet1-useravv-LOCK
                    READ useravv PREVIOUS WITH LOCK
                 ELSE
                    READ useravv PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-useravv-LOCK
                    READ useravv NEXT WITH LOCK
                 ELSE
                    READ useravv NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM useravv-uav-k-tipologia-MERGE-SPLITBUF
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-useravv-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeWrite>
      * <TOTEM:END>
           WRITE uav-rec OF useravv.
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-useravv-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRewrite>
      * <TOTEM:END>
           REWRITE uav-rec OF useravv.
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-useravv-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeDelete>
      * <TOTEM:END>
           DELETE useravv.
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-USER-INITSTART.
           IF DataSet1-USER-KEY-Asc
              MOVE Low-Value TO user-chiave
           ELSE
              MOVE High-Value TO user-chiave
           END-IF
           .

       DataSet1-USER-INITEND.
           IF DataSet1-USER-KEY-Asc
              MOVE High-Value TO user-chiave
           ELSE
              MOVE Low-Value TO user-chiave
           END-IF
           .

      * USER
       DataSet1-USER-START.
           IF DataSet1-USER-KEY-Asc
              START USER KEY >= user-chiave
           ELSE
              START USER KEY <= user-chiave
           END-IF
           .

       DataSet1-USER-START-NOTGREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY <= user-chiave
           ELSE
              START USER KEY >= user-chiave
           END-IF
           .

       DataSet1-USER-START-GREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY > user-chiave
           ELSE
              START USER KEY < user-chiave
           END-IF
           .

       DataSet1-USER-START-LESS.
           IF DataSet1-USER-KEY-Asc
              START USER KEY < user-chiave
           ELSE
              START USER KEY > user-chiave
           END-IF
           .

       DataSet1-USER-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-USER-LOCK
              READ USER WITH LOCK 
              KEY user-chiave
           ELSE
              READ USER WITH NO LOCK 
              KEY user-chiave
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT 
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE uav-rec OF useravv
           INITIALIZE user-rec OF USER
           .


      * FD's Initialize Paragraph
       DataSet1-useravv-INITREC.
           INITIALIZE uav-rec OF useravv
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-USER-INITREC.
           INITIALIZE user-rec OF USER
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .



      * USER DEFINE PARAGRAPH
       OPEN-IO-USERAVV.
      * <TOTEM:PARA. OPEN-IO-USERAVV>
           set tutto-ok  to true.
           set RecLocked to false.
           open i-o useravv allowing readers

           if RecLocked
              set errori to true
              if link-chiamata-batch
                 move -2 to link-wuseravv-status
                 move "File [USERAVV] già in uso!" to 
           link-msg-err-ritorno
              else
                 move "USERAVV" to geslock-nome-file
                 initialize geslock-messaggio
                 string   "Il file degli avvisi utenti" 
                   x"0d0a""risulta in uso su altro terminale."
                   x"0d0a""Impossibile procedere!" delimited size
                       into geslock-messaggio
                 end-string
                 move 1     to geslock-v-riprova
                 move 0     to geslock-v-termina
                 move 0     to geslock-v-ignora
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
       
                 evaluate true
                 when riprova 
                      perform OPEN-IO-USERAVV
                 when other   
                      move -1 to link-wuseravv-status
                 end-evaluate
              end-if
           end-if 
           .
      * <TOTEM:END>

       WUSERAVV-BATCH.
      * <TOTEM:PARA. WUSERAVV-BATCH>
           accept como-data  from century-date
           accept como-ora   from time

           move 0 to link-wuseravv-status.

           evaluate true
           when link-write-one
                move link-utente      to uav-utente
                perform SCRIVI-RECORD
           when link-write-all
                move low-value  to user-cod
                start USER key not < user-chiave
                   invalid
                      continue
                   not invalid
                      perform until 1 = 2
                         read user next
                            at end
                               exit perform
                         end-read
                         move user-cod   to uav-utente
                         perform SCRIVI-RECORD
                      end-perform
                end-start
           when link-delete-one
                move link-tipo-avviso to uav-tipologia
                move link-utente      to uav-utente
                delete useravv record
                   invalid
                      continue
                end-delete
           when link-delete-all
                move link-tipo-avviso to uav-tipologia
                move low-value  to uav-utente
                start useravv key not < uav-k-tipologia
                   invalid
                      continue
                   not invalid
                      perform until 1 = 2
                         read useravv next 
                            at end
                              exit perform
                         end-read
                         if link-tipo-avviso not = uav-tipologia
                            exit perform
                         end-if
                         delete useravv record
                            invalid
                               continue
                         end-delete
                      end-perform
                end-start
           end-evaluate.

      ***---
       SCRIVI-RECORD.
           move link-tipo-avviso to uav-tipologia
           move link-user        to uav-utente-creazione
                                    uav-utente-ultima-modifica
           move como-data        to uav-data-creazione
                                    uav-data-ultima-modifica
           move como-ora         to uav-ora-creazione
                                    uav-ora-ultima-modifica
           write uav-rec
              invalid 
                 rewrite uav-rec
           end-write 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       wprogmag-Ev-Before-Program.
      * <TOTEM:PARA. wprogmag-Ev-Before-Program>
           set tutto-ok to true.
           perform OPEN-IO-USERAVV.
           if errori 
              goback 
           end-if.

           perform WUSERAVV-BATCH
           perform EXIT-STOP-ROUTINE 
           .
      * <TOTEM:END>
       wprogmag-Ev-After-Program.
      * <TOTEM:PARA. wprogmag-Ev-After-Program>
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

