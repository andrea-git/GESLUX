      *{TOTEM}PRG-COMMENT
      * pordini.Cbl
      * pordini.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          pordini.
       AUTHOR.              andre.
       DATE-WRITTEN.        giovedì 18 marzo 2021 10:29:11.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:pordini, INIT:pordini, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "ordfor.sl".
           COPY "ordfor2.sl".
           COPY "tmarche.sl".
           COPY "articoli.sl".
           COPY "progmag.sl".
           COPY "rlistini.sl".
           COPY "timbalqta.sl".
           COPY "tparamge.sl".
           COPY "tscorte.sl".
           COPY "tmp-forn.sl".
           COPY "clienti.sl".
           COPY "timposte.sl".
           COPY "tpiombo.sl".
           COPY "tmagaz.sl".
           COPY "qta-vend.sl".
           COPY "coperfab.sl".
           COPY "destinif.sl".
           COPY "impforn.sl".
           COPY "tlistini.sl".
           COPY "lineseq.sl".
           COPY "tmp-ordf-art.sl".
           COPY "rordforn.sl".
           COPY "tordforn.sl".
           COPY "sordforn.sl".
           COPY "distinteb.sl".
           COPY "tparamge2.sl".
           COPY "catart.sl".
           COPY "tmp-ordfor.sl".
           COPY "multigest.sl".
           COPY "fileseq.sl".
           COPY "tsetinvio.sl".
           COPY "param.sl".
           COPY "lineseq.sl"
                REPLACING ==lineseq== BY ==lineseq1==,
                          ==STATUS-lineseq== BY ==STATUS-lineseq1==
                .
           COPY "qta-pordini.sl".
           COPY "genlog.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "ordfor.fd".
           COPY "ordfor2.fd".
           COPY "tmarche.fd".
           COPY "articoli.fd".
           COPY "progmag.fd".
           COPY "rlistini.fd".
           COPY "timbalqta.fd".
           COPY "tparamge.fd".
           COPY "tscorte.fd".
           COPY "tmp-forn.fd".
           COPY "clienti.fd".
           COPY "timposte.fd".
           COPY "tpiombo.fd".
           COPY "tmagaz.fd".
           COPY "qta-vend.fd".
           COPY "coperfab.fd".
           COPY "destinif.fd".
           COPY "impforn.fd".
           COPY "tlistini.fd".
           COPY "lineseq.fd".
           COPY "tmp-ordf-art.fd".
           COPY "rordforn.fd".
           COPY "tordforn.fd".
           COPY "sordforn.fd".
           COPY "distinteb.fd".
           COPY "tparamge2.fd".
           COPY "catart.fd".
           COPY "tmp-ordfor.fd".
           COPY "multigest.fd".
           COPY "fileseq.fd".
           COPY "tsetinvio.fd".
           COPY "param.fd".
           COPY "lineseq.fd"
                REPLACING ==lineseq== BY ==lineseq1==,
                          ==STATUS-lineseq== BY ==STATUS-lineseq1==
                .
           COPY "qta-pordini.fd".
           COPY "genlog.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 counter          PIC  9(10).
       77 counter2         PIC  9(10).
       77 counter-edit     PIC  z(10).
       77 como-x           PIC  x.
           COPY  "EXTERNALS.DEF".
           COPY  "IMPOSTE-FORNITORE.DEF".
           COPY  "PRZ-FINITO-FORN.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "COSTO-MEDIO.DEF".
           COPY  "ORDFOR2.DEF".
           COPY  "LINK-ST-ORDFORN.DEF".
           COPY  "MAIL.DEF".
           COPY  "TROVA-PARAMETRO.DEF".
       77 como-giorno      PIC  9.
       77 LinkAuto         PIC  9.
       77 como-mese        PIC  99.
       77 FILLER           PIC  9.
           88 solo-uscita VALUE IS 1    WHEN SET TO FALSE  0. 
       77 calcolo-piombo   PIC  x.
           88 nuovo-calcolo-piombo VALUE IS "N". 
       77 valore-old       PIC  s9(8).
       77 periodo-confronto            PIC  9(6).
       77 periodo-ini      PIC  9(6).
       01 data-ini.
           05 anno-ini         PIC  9(4).
           05 mese-ini         PIC  99.
           05 giorno-ini       PIC  99.
       77 diff PIC  9(8).
       77 mese-scelto      PIC  99.
       77 como-ordinato    PIC  9(8).
       77 giacenza         PIC  s9(8).
       77 giac-positiva    PIC  9(8).
       77 como-data-1      PIC  9(8).
       77 como-anno        PIC  9(4).
       77 como-costo-mp    PIC  s9(8)v99.
       77 ordinato-1       PIC  9(8).
       77 ordinato-2       PIC  9(8).
       77 ordinato-3       PIC  9(8).
       77 ordinato-4       PIC  9(8).
       77 ordinato-5       PIC  9(8).
       77 ordinato-6       PIC  9(8).
       77 primo-numero-A   PIC  9(8).
       77 ultimo-numero-A  PIC  9(8).
       77 primo-numero-L   PIC  9(8).
       77 ultimo-numero-L  PIC  9(8).
       77 primo-numero-M   PIC  9(8).
       77 ultimo-numero-M  PIC  9(8).
       77 ordinato-6       PIC  9(8).
       77 qta-ed           PIC  z.zzz.zz9.
       77 mese-1-ed        PIC  z.zzz.zz9.
       77 mese-2-ed        PIC  z.zzz.zz9.
       77 mese-3-ed        PIC  z.zzz.zz9.
       77 mese-4-ed        PIC  z.zzz.zz9.
       77 mese-5-ed        PIC  z.zzz.zz9.
       77 mese-6-ed        PIC  z.zzz.zz9.
       01 FILLER           PIC  9.
           88 trovato-listino VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 forza-conferma VALUE IS 1    WHEN SET TO FALSE  0. 
       01 data-sos.
           05 anno-sos         PIC  9(4).
           05 mese-sos         PIC  99.
           05 giorno-sos       PIC  99.
       01 FILLER           PIC  9.
           88 primo-ciclo VALUE IS 1. 
           88 secondo-ciclo VALUE IS 2. 
       77 como-data-2      PIC  9(8).
       77 como-qta         PIC  9(8).
       01 FILLER           PIC  9.
           88 FromCoperfab VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 CallAssociazioni VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 CallCollegato VALUE IS 1    WHEN SET TO FALSE  0. 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-rlistini  PIC  X(2).
           88 Valid-STATUS-rlistini VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       01 FILLER           PIC  9.
           88 RicaricaGrid VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 prima-volta VALUE IS 1    WHEN SET TO FALSE  0. 
       77 como-scorta      PIC  z9.
       01 FILLER           PIC  9.
           88 RiepilogoOrdini VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 aggiorna-copertura VALUE IS 1    WHEN SET TO FALSE  0. 
       77 sel-marca        PIC  9(4).
       77 sel-scorta       PIC  9(2).
       01 hid-sort         PIC  x.
           88 hid-none VALUE IS "N". 
           88 hid-ascending VALUE IS "A". 
           88 hid-descending VALUE IS "D". 
       01 FILLER           PIC  9.
           88 ricalcolo VALUE IS 1    WHEN SET TO FALSE  0. 
       77 tot-mag          PIC  s9(12)v99.
       01 gruppo-hidden.
           05 hid-mese-rif     PIC  99.
           05 hid-mese-scelto  PIC  99.
           05 hid-costo-mp     PIC  9(10)v99.
           05 hid-programmazione           PIC  9.
               88 hid-programmazione-si VALUE IS 1. 
               88 hid-programmazione-no VALUE IS 0. 
           05 hid-urgente      PIC  9.
               88 hid-si-urgente VALUE IS 1. 
               88 hid-no-urgente VALUE IS 0. 
           05 hid-chiave.
               10 hid-mag          PIC  x(3).
               10 hid-articolo     PIC  9(6).
           05 hid-sostituto    PIC  9(6).
       01 old-gruppo-hidden.
           05 old-hid-mese-rif PIC  99.
           05 old-hid-mese-scelto          PIC  99.
           05 old-hid-costo-mp PIC  9(10)v99.
           05 old-hid-programmazione       PIC  9.
               88 old-hid-programmazione-si VALUE IS 1. 
               88 old-hid-programmazione-no VALUE IS 0. 
           05 old-hid-urgente  PIC  9.
               88 old-hid-si-urgente VALUE IS 1. 
               88 old-hid-no-urgente VALUE IS 0. 
           05 old-hid-chiave.
               10 old-hid-mag      PIC  x(3).
               10 old-hid-articolo PIC  9(6).
           05 old-hid-sostituto            PIC  9(6).
       01 colonne          PIC  9.
           88 nascoste VALUE IS 0. 
           88 visibili VALUE IS 1. 
       77 SaveImballo      PIC  x(3).
       77 idx-marca-tot    PIC  9(3).
       77 idx-scorta-tot   PIC  9(3).
       01 occurs-scorta.
           05 el-scorta        PIC  s9(8)
                      OCCURS 150 TIMES
                      INDEXED  idx-scorta.
           05 el-selected      PIC  9
                      OCCURS 150 TIMES.
       01 occurs-marca.
           05 el-marca         PIC  9(4)
                      OCCURS 150 TIMES
                      INDEXED  idx-marca.
       01 FILLER           PIC  9.
           88 trovato-marca VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 trovato-scorta VALUE IS 1    WHEN SET TO FALSE  0. 
       77 STATUS-ordfor    PIC  X(2).
           88 Valid-STATUS-ordfor VALUE IS "00" THRU "09". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-ordfor2   PIC  X(2).
           88 Valid-STATUS-ordfor2 VALUE IS "00" THRU "09". 
       78 titolo VALUE IS "GESLUX - Programma Ordini Fornitori". 
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 rec-grid.
           05 col-codice       PIC  z(6).
           05 col-descr        PIC  x(50).
           05 col-imb          PIC  z.zz9.
           05 col-scorta       PIC  ---.---.--9.
           05 col-marca        PIC  z(4).
           05 col-scost        PIC  ---9,99.
           05 col-mese1        PIC  ----.---.--9.
           05 col-mese2        PIC  ----.---.--9.
           05 col-mese3        PIC  ----.---.--9.
           05 col-mese4        PIC  ----.---.--9.
           05 col-mese5        PIC  ----.---.--9.
           05 col-mese6        PIC  ----.---.--9.
           05 col-mese7        PIC  ----.---.--9.
           05 col-mese8        PIC  ----.---.--9.
           05 col-mese9        PIC  ----.---.--9.
           05 col-mese10       PIC  ----.---.--9.
           05 col-mese11       PIC  ----.---.--9.
           05 col-mese12       PIC  ----.---.--9.
           05 col-riordino     PIC  ----.---.--9.
           05 col-tot-anno     PIC  ----.---.--9.
           05 col-media        PIC  ----.---.--9.
           05 col-andamento    PIC  ----.---.--9.
           05 col-consegna     PIC  ----.---.--9.
           05 col-qta-b        PIC  ----.---.--9.
           05 col-giac-pz      PIC  ----.---.--9.
           05 col-giac-imb     PIC  ----.---.--9.
           05 col-ordinato     PIC  ----.---.--9.
           05 col-promo        PIC  ----.---.--9.
           05 col-F1           PIC  ----.---.--9.
           05 col-F1-imb       PIC  ----.---.--9.
           05 col-F2           PIC  ----.---.--9.
           05 col-F3           PIC  ----.---.--9.
           05 col-F4           PIC  ----.---.--9.
           05 col-F5           PIC  ----.---.--9.
           05 col-F6           PIC  ----.---.--9.
           05 col-ok           PIC  9.
           05 col-qta-ord      PIC  ----.---.--9.
       77 tot-anno         PIC  9(10).
       77 colore           PIC  9(3).
       77 scr-elab-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 spunta-ordfor-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Verdana14I-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 scr-data-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana14-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 ef-data-buf      PIC  99/99/9999.
       77 STATUS-tscorte   PIC  X(2).
           88 Valid-STATUS-tscorte VALUE IS "00" THRU "09". 
       77 screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 tot-mag-buf      PIC  ----.---.---.--9,99.
       77 Verdana14B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 mostra-nascondi-bmp          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 ricalcolo-bmp    PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 sort-bmp         PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 e-cod            PIC  9
                  VALUE IS 1.
       77 Cod  PIC  z(6).
       77 e-des            PIC  9
                  VALUE IS 1.
       77 des  PIC  x(30).
       77 ESEGUI-73X21-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 TOOLBAR-BMP      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Screen-search-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0,00.
       77 cerca-bmp        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 ordini-bmp       PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 scr-filtri-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 scr-filtri-MN-1-HANDLE
                  USAGE IS HANDLE OF MENU.
       77 scr-filtri-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 CANCEL-73X21-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 hidden-sel       PIC  9.
       77 hidden-idx       PIC  9(3).
       77 save-cbo-marca-buf           PIC  x(100).
       01 cbo-marca-buf.
           05 cbo-codice       PIC  z(4).
           05 FILLER           PIC  x(3)
                      VALUE IS " - ".
           05 cbo-descrizione  PIC  x(30).
       01 rec-scorte.
           10 col-sco-codice   PIC  zz.
           10 col-sco-descrizione          PIC  x(50).
       77 lab-marca-buf    PIC  X(100).
       77 filtri           PIC  9
                  VALUE IS 0.
       77 lab-scorta-buf   PIC  X(100).
       77 STATUS-coperfab  PIC  X(2).
           88 Valid-STATUS-coperfab VALUE IS "00" THRU "09". 
       77 path-tmp-forn    PIC  X(256)
                  VALUE IS spaces.
       77 STATUS-tmp-forn  PIC  X(2).
           88 Valid-STATUS-tmp-forn VALUE IS "00" THRU "09". 
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 scr-forn-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 como-trasp       PIC  9(8)v99.
       01 rec-grid-i.
           05 col-forn-i       PIC  z(6).
           05 col-dest-i       PIC  z(6).
           05 col-des-i        PIC  x(50).
           05 col-lt-i         PIC  zz9.
           05 col-qta-d-i      PIC  z.zzz.zz9.
           05 col-qta-o-i      PIC  z.zzz.zz9.
           05 col-prz-i        PIC  zz.zz9,99.
           05 col-premio-i     PIC  zz.zz9,99.
           05 col-tot-i        PIC  zz.zz9,99.
           05 col-reale-i      PIC  zz.zz9,99.
           05 col-listino-i    PIC  9(15).
           05 col-ini-i        PIC  99/99/9999.
           05 col-fine-i       PIC  99/99/9999.
       01 rec-grid-e.
           05 col-forn-e       PIC  z(6).
           05 col-dest-e       PIC  z(6).
           05 col-des-e        PIC  x(50).
           05 col-lt-e         PIC  zz9.
           05 col-qta-d-e      PIC  z.zzz.zz9.
           05 col-qta-o-e      PIC  z.zzz.zz9.
           05 col-prz-e        PIC  zz.zz9,99.
           05 col-reale-e      PIC  zz.zz9,99.
           05 col-premio-e     PIC  zz.zz9,99.
           05 col-tot-e        PIC  zz.zz9,99.
           05 col-listino-e    PIC  9(15).
           05 col-ini-e        PIC  99/99/9999.
           05 col-fine-e       PIC  99/99/9999.
       77 tit-mese-1       PIC  -----.--9.
       77 tit-mese-2       PIC  -----.--9.
       77 tit-mese-3       PIC  -----.--9.
       77 tit-mese-4       PIC  -----.--9.
       77 tit-mese-5       PIC  -----.--9.
       77 tit-mese-6       PIC  -----.--9.
       77 Verdana8B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 ef-mese-buf      PIC  --.---.--9.
       77 lab-mese-buf     PIC  X(15).
       77 bottone-exit-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-salva-bmp            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 lab-art-buf      PIC  X(70).
       77 ef-lt-buf        PIC  9(3).
       77 e-copie          PIC  9
                  VALUE IS 1.
       77 genera-bmp       PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 genera-ordfor-bmp            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 scr-ordfor-handle
                  USAGE IS HANDLE OF WINDOW.
       77 primo-numero     PIC  9(8).
       77 ultimo-numero    PIC  9(8).
       77 chk-singolo-buf  PIC  9
                  VALUE IS 1.
       77 chk-forn-buf     PIC  9
                  VALUE IS 1.
       77 chk-parziale-buf PIC  9
                  VALUE IS 1.
       77 chk-nessuna-buf  PIC  9
                  VALUE IS 1.
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 STATUS-qta-vend  PIC  X(2).
           88 Valid-STATUS-qta-vend VALUE IS "00" THRU "09". 
       77 STATUS-destinif  PIC  X(2).
           88 Valid-STATUS-destinif VALUE IS "00" THRU "09". 
       77 lab-data-r-buf   PIC  99/99/9999.
       77 STATUS-impforn   PIC  X(2).
           88 Valid-STATUS-impforn VALUE IS "00" THRU "09". 
       77 STATUS-tlistini  PIC  X(2).
           88 Valid-STATUS-tlistini VALUE IS "00" THRU "09". 
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 scr-fine-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 primo-numero-z   PIC  Z(8).
       77 ultimo-numero-z  PIC  Z(8).
       77 tot-ordini-z     PIC  ZZ.ZZZ.ZZ9.
       77 chk-scorta-buf   PIC  9
                  VALUE IS 1.
       77 wstampa          PIC  X(256).
       77 articolo-x       PIC  x(7).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 STATUS-lineseq1  PIC  X(2).
           88 VALID-STATUS-lineseq1 VALUE IS "00" THRU "09". 
       77 path-tmp-ordf-art            PIC  X(256).
       77 STATUS-tmp-ordf-art          PIC  X(2).
           88 Valid-STATUS-tmp-ordf-art VALUE IS "00" THRU "09". 
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 STATUS-sordforn  PIC  X(2).
           88 Valid-STATUS-sordforn VALUE IS "00" THRU "09". 
       77 STATUS-distinteb PIC  X(2).
           88 Valid-STATUS-distinteb VALUE IS "00" THRU "09". 
       77 STATUS-tparamge2 PIC  X(2).
           88 Valid-STATUS-tparamge2 VALUE IS "00" THRU "09". 
       77 status-catart    PIC  X(2).
           88 Valid-status-catart VALUE IS "00" THRU "09". 
       77 path-tmp-ordfor  PIC  X(256).
       77 STATUS-tmp-ordfor            PIC  X(2).
           88 Valid-STATUS-tmp-ordfor VALUE IS "00" THRU "09". 
       77 STATUS-multigest PIC  X(2).
           88 Valid-STATUS-multigest VALUE IS "00" THRU "09". 
       77 path-fileseq     PIC  X(256).
       77 STATUS-fileseq   PIC  X(2).
           88 Valid-STATUS-fileseq VALUE IS "00" THRU "09". 
       77 STATUS-tsetmerc  PIC  X(2).
           88 Valid-STATUS-tsetmerc VALUE IS "00" THRU "09". 
       77 STATUS-tsetinvio PIC  X(2).
           88 Valid-STATUS-tsetinvio VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-lineseq11 PIC  X(2).
           88 VALID-STATUS-lineseq11 VALUE IS "00" THRU "09". 
       77 STATUS-qta-pordini           PIC  X(2).
           88 Valid-STATUS-qta-pordini VALUE IS "00" THRU "09". 
       77 STATUS-logfile   PIC  X(2).
           88 Valid-STATUS-logfile VALUE IS "00" THRU "09". 
       77 path-genlog      PIC  X(256).
       77 STATUS-genlog    PIC  X(2).
           88 Valid-STATUS-genlog VALUE IS "00" THRU "09". 
       77 scr-elab2-Handle
                  USAGE IS HANDLE OF WINDOW.

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Screen1-FLAG-REFRESH PIC  9.
          88 Screen1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-elab-FLAG-REFRESH PIC  9.
          88 scr-elab-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-data-FLAG-REFRESH PIC  9.
          88 scr-data-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-SCREEN-SEARCH-FLAG-REFRESH PIC  9.
          88 SCREEN-SEARCH-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-filtri-FLAG-REFRESH PIC  9.
          88 scr-filtri-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-forn-FLAG-REFRESH PIC  9.
          88 scr-forn-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-ordfor-FLAG-REFRESH PIC  9.
          88 scr-ordfor-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-fine-FLAG-REFRESH PIC  9.
          88 scr-fine-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-elab2-FLAG-REFRESH PIC  9.
          88 scr-elab2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-ordfor-BUF     PIC X(584).
       77 TMP-DataSet1-ordfor2-BUF     PIC X(661).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-rlistini-BUF     PIC X(448).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-tscorte-BUF     PIC X(205).
       77 TMP-DataSet1-tmp-forn-BUF     PIC X(154).
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-timposte-BUF     PIC X(717).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(739).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-qta-vend-BUF     PIC X(342).
       77 TMP-DataSet1-coperfab-BUF     PIC X(249).
       77 TMP-DataSet1-destinif-BUF     PIC X(1322).
       77 TMP-DataSet1-impforn-BUF     PIC X(220).
       77 TMP-DataSet1-tlistini-BUF     PIC X(257).
       77 TMP-DataSet1-lineseq-BUF     PIC X(1000).
       77 TMP-DataSet1-tmp-ordf-art-BUF     PIC X(113).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-sordforn-BUF     PIC X(1139).
       77 TMP-DataSet1-distinteb-BUF     PIC X(672).
       77 TMP-DataSet1-tparamge2-BUF     PIC X(776).
       77 TMP-DataSet1-catart-BUF     PIC X(6622).
       77 TMP-DataSet1-tmp-ordfor-BUF     PIC X(117).
       77 TMP-DataSet1-multigest-BUF     PIC X(3).
       77 TMP-DataSet1-fileseq-BUF     PIC X(32000).
       77 TMP-DataSet1-tsetinvio-BUF     PIC X(1023).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-lineseq1-BUF     PIC X(1000).
       77 TMP-DataSet1-qta-pordini-BUF     PIC X(7051).
       77 TMP-DataSet1-genlog-BUF     PIC X(900).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-ordfor-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ordfor-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-ordfor-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-ordfor-KEY1-Asc  VALUE "A".
          88 DataSet1-ordfor-KEY1-Desc VALUE "D".
       77 DataSet1-ordfor2-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ordfor2-LOCK  VALUE "Y".
       77 DataSet1-ordfor2-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ordfor2-KEY-Asc  VALUE "A".
          88 DataSet1-ordfor2-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-rlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rlistini-LOCK  VALUE "Y".
       77 DataSet1-rlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rlistini-KEY-Asc  VALUE "A".
          88 DataSet1-rlistini-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-tscorte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tscorte-LOCK  VALUE "Y".
       77 DataSet1-tscorte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tscorte-KEY-Asc  VALUE "A".
          88 DataSet1-tscorte-KEY-Desc VALUE "D".
       77 DataSet1-tmp-forn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-forn-LOCK  VALUE "Y".
       77 DataSet1-tmp-forn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-forn-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-forn-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-qta-vend-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-qta-vend-LOCK  VALUE "Y".
       77 DataSet1-qta-vend-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-qta-vend-KEY-Asc  VALUE "A".
          88 DataSet1-qta-vend-KEY-Desc VALUE "D".
       77 DataSet1-coperfab-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-coperfab-LOCK  VALUE "Y".
       77 DataSet1-coperfab-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-coperfab-KEY-Asc  VALUE "A".
          88 DataSet1-coperfab-KEY-Desc VALUE "D".
       77 DataSet1-destinif-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destinif-LOCK  VALUE "Y".
       77 DataSet1-destinif-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destinif-KEY-Asc  VALUE "A".
          88 DataSet1-destinif-KEY-Desc VALUE "D".
       77 DataSet1-impforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-impforn-LOCK  VALUE "Y".
       77 DataSet1-impforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-impforn-KEY-Asc  VALUE "A".
          88 DataSet1-impforn-KEY-Desc VALUE "D".
       77 DataSet1-tlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tlistini-LOCK  VALUE "Y".
       77 DataSet1-tlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tlistini-KEY-Asc  VALUE "A".
          88 DataSet1-tlistini-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-tmp-ordf-art-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-ordf-art-LOCK  VALUE "Y".
       77 DataSet1-tmp-ordf-art-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-ordf-art-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-ordf-art-KEY-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-tordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY-Desc VALUE "D".
       77 DataSet1-sordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-sordforn-LOCK  VALUE "Y".
       77 DataSet1-sordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-sordforn-KEY-Asc  VALUE "A".
          88 DataSet1-sordforn-KEY-Desc VALUE "D".
       77 DataSet1-distinteb-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-distinteb-LOCK  VALUE "Y".
       77 DataSet1-distinteb-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-distinteb-KEY-Asc  VALUE "A".
          88 DataSet1-distinteb-KEY-Desc VALUE "D".
       77 DataSet1-tparamge2-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge2-LOCK  VALUE "Y".
       77 DataSet1-tparamge2-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge2-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge2-KEY-Desc VALUE "D".
       77 DataSet1-catart-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-catart-LOCK  VALUE "Y".
       77 DataSet1-catart-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-catart-KEY-Asc  VALUE "A".
          88 DataSet1-catart-KEY-Desc VALUE "D".
       77 DataSet1-tmp-ordfor-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-ordfor-LOCK  VALUE "Y".
       77 DataSet1-tmp-ordfor-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-ordfor-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-ordfor-KEY-Desc VALUE "D".
       77 DataSet1-multigest-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-multigest-LOCK  VALUE "Y".
       77 DataSet1-multigest-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-multigest-KEY-Asc  VALUE "A".
          88 DataSet1-multigest-KEY-Desc VALUE "D".
       77 DataSet1-fileseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-fileseq-LOCK  VALUE "Y".
       77 DataSet1-fileseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-fileseq-KEY-Asc  VALUE "A".
          88 DataSet1-fileseq-KEY-Desc VALUE "D".
       77 DataSet1-tsetinvio-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tsetinvio-LOCK  VALUE "Y".
       77 DataSet1-tsetinvio-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tsetinvio-KEY-Asc  VALUE "A".
          88 DataSet1-tsetinvio-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-lineseq1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq1-LOCK  VALUE "Y".
       77 DataSet1-lineseq1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq1-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq1-KEY-Desc VALUE "D".
       77 DataSet1-qta-pordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-qta-pordini-LOCK  VALUE "Y".
       77 DataSet1-qta-pordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-qta-pordini-KEY-Asc  VALUE "A".
          88 DataSet1-qta-pordini-KEY-Desc VALUE "D".
       77 DataSet1-genlog-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-genlog-LOCK  VALUE "Y".
       77 DataSet1-genlog-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-genlog-KEY-Asc  VALUE "A".
          88 DataSet1-genlog-KEY-Desc VALUE "D".

       77 ordfor-k-ord-SPLITBUF  PIC X(55).
       77 ordfor2-k-ord-SPLITBUF  PIC X(55).
       77 ordfor2-k-descr-SPLITBUF  PIC X(51).
       77 ordfor2-k-scorta-SPLITBUF  PIC X(59).
       77 ordfor2-k-ok-SPLITBUF  PIC X(52).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 rlistini-rlis-k-art-SPLITBUF  PIC X(33).
       77 rlistini-rlis-k-descr-SPLITBUF  PIC X(66).
       77 tmp-forn-tmf-k-articolo-SPLITBUF  PIC X(34).
       77 tmp-forn-tmf-k-data-SPLITBUF  PIC X(16).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 coperfab-k-listino-SPLITBUF  PIC X(12).
       77 coperfab-k-forn-SPLITBUF  PIC X(22).
       77 destinif-K1-SPLITBUF  PIC X(51).
       77 destinif-desf-k2-SPLITBUF  PIC X(51).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 distinteb-k-articolo-SPLITBUF  PIC X(12).
       77 distinteb-k-progmag-SPLITBUF  PIC X(21).
       77 catart-cat-art-princ-SPLITBUF  PIC X(13).

       01  r-inizio.
         05 filler                    pic x(2)  value " [".
         05 r-data.
            10 r-gg                   pic xx.
            10 filler                 pic x     value "/".
            10 r-mm                   pic xx.
            10 filler                 pic x     value "/".
            10 r-aa                   pic xx.
         05 filler                    pic x(5)  value "] - [".
         05 r-ora.
            10 r-hh                   pic xx.
            10 filler                 pic x     value X"22".
            10 r-min                  pic xx.
            10 filler                 pic x     value "'".
            10 r-sec                  pic xx.
         05 filler                    pic x(2)  value "] ".

       77  tentativi                  pic 9(2).
       77  como-riga                  pic x(100).

       77  data-odierna               pic 9(8).
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-form1-gd-1 VALUE 5001.
       78  78-ID-ef-mese VALUE 5001.
       78  78-ID-ef-lt VALUE 5002.
       78  78-ID-gd-form-i VALUE 5003.
       78  78-ID-gd-form-e VALUE 5004.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Screen1, 
           .

      * GRID
       05
           form1-gd-1, 
           Grid, 
           COL 1,38, 
           LINE 6,88,
           LINES 39,50 ,
           SIZE 159,38 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 7, 57, 62, 70, 74, 81, 93, 105, 117, 129, 
           141, 153, 165, 177, 189, 201, 213, 225, 237, 249, 261, 273, 
           285, 297, 309, 321, 333, 345, 357, 369, 381, 393, 405, 417, 
           429, 437),
           ALIGNMENT ("R", "U", "R", "R", "C", "R", "R", "R", "R", "R", 
           "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", 
           "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", "R", 
           "R", "C", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
           5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
           5),
           DATA-TYPES ("9(6)", "X(50)", "9(5)", "9(11)", "9(4)", "X", "9
      -    "(12)", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X", "X"
           , "X", "9(12)", "X", "X", "9(12)", "X", "9(11)", "9(11)", "9(
      -    "11)", "9(11)", "X", "9(9)", "9(9)", "9(9)", "9(9)", "9(9)", 
           "9(9)", "X", "X"),
           NUM-COL-HEADINGS 2,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS Verdana10B-Occidentale,
           HSCROLL,
           ID IS 78-ID-form1-gd-1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           USE-TAB,
           VIRTUAL-WIDTH 157,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-mostra, 
           Push-Button, 
           COL 74,75, 
           LINE 47,13,
           LINES 36,00 ,
           SIZE 83,00 ,
           BITMAP-HANDLE MOSTRA-NASCONDI-BMP,
           BITMAP-NUMBER 3,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 2,
           TITLE "&Mostra",
           AFTER PROCEDURE pb-mostra-AfterProcedure, 
           BEFORE PROCEDURE pb-mostra-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-ricalcolo, 
           Push-Button, 
           COL 136,63, 
           LINE 47,13,
           LINES 36,00 ,
           SIZE 83,00 ,
           BITMAP-HANDLE RICALCOLO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001,
           FLAT,
           FONT IS Small-Font,
           ID IS 3,
           TITLE "&Ricalcolo fabbisogno e relative coperture fornitori",
           AFTER PROCEDURE pb-ricalcolo-AfterProcedure, 
           BEFORE PROCEDURE pb-ricalcolo-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-genera, 
           Push-Button, 
           COL 148,00, 
           LINE 47,13,
           LINES 36,00 ,
           SIZE 83,00 ,
           BITMAP-HANDLE GENERA-ORDFOR-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002,
           FLAT,
           FONT IS Small-Font,
           ID IS 16,
           TITLE "&Genera Ordini a fornitori",
           AFTER PROCEDURE pb-genera-AfterProcedure, 
           BEFORE PROCEDURE pb-genera-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 67,63, 
           LINE 1,56,
           LINES 1,50 ,
           SIZE 27,00 ,
           COLOR IS 2,
           FONT IS Verdana14B-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "TOTALE MAGAZZINI",
           .

      * LABEL
       05
           lab-tot-mag, 
           Label, 
           COL 65,63, 
           LINE 3,31,
           LINES 1,38 ,
           SIZE 31,00 ,
           COLOR IS 2,
           FONT IS Verdana14B-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE tot-mag-buf,
           .

      * PUSH BUTTON
       05
           tool-CercaTesto, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 33,00 ,
           SIZE 33,00 ,
           BITMAP-HANDLE ORDINI-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1234,
           FLAT,
           FONT IS Small-Font,
           ID IS 6,
           NO-TAB,
           SELF-ACT,
           TITLE "&Ricerca testo (Ctrl + F)",
           .

      * CHECK BOX
       05
           chk-filtri, 
           Check-Box, 
           COL 5,75, 
           LINE 1,06,
           LINES 33,00 ,
           SIZE 33,00 ,
           BITMAP-HANDLE ORDINI-BMP,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1003
           FLAT,
           FONT IS Small-Font,
           ID IS 9,
           TITLE "Applica/rimuove filtri di visualizzazione",
           VALUE filtri,
           AFTER PROCEDURE Screen1-Cb-1-AfterProcedure,
           BEFORE PROCEDURE Screen1-Cb-1-BeforeProcedure, 
           .
      * FRAME
       05
           Screen1-Fr-2, 
           Frame, 
           COL 12,00, 
           LINE 1,19,
           LINES 3,75 ,
           SIZE 43,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           HEAVY,
           TITLE "Filtri di visualizzazione attuali",
           TITLE-POSITION 2,
           .

      * LABEL
       05
           lab-scorta, 
           Label, 
           COL 13,50, 
           LINE 3,50,
           LINES 1,00 ,
           SIZE 40,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-scorta-buf,
           .

      * LABEL
       05
           lab-marca, 
           Label, 
           COL 13,50, 
           LINE 2,25,
           LINES 1,00 ,
           SIZE 40,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-marca-buf,
           .

      * FRAME
       05
           Screen1-Fr-2a, 
           Frame, 
           COL 107,25, 
           LINE 1,19,
           LINES 5,19 ,
           SIZE 54,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           HEAVY,
           TITLE "Legenda copertura fabbisogno",
           TITLE-POSITION 2,
           .

      * CHECK BOX
       10
           chk-singolo, 
           Check-Box, 
           COL 108,00, 
           LINE 2,38,
           LINES 1,06 ,
           SIZE 1,63 ,
           EXCEPTION-VALUE 1004
           FLAT,
           ID IS 7004,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           VALUE 1,
           VISIBLE chk-singolo-buf,
           AFTER PROCEDURE chk-nessuna-AfterProcedure,
           BEFORE PROCEDURE chk-nessuna-BeforeProcedure, 
           .
      * CHECK BOX
       10
           chk-forn, 
           Check-Box, 
           COL 108,00, 
           LINE 3,63,
           LINES 1,06 ,
           SIZE 1,63 ,
           EXCEPTION-VALUE 8002
           FLAT,
           ID IS 7002,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           VALUE 1,
           VISIBLE chk-forn-buf,
           AFTER PROCEDURE chk-forn-AfterProcedure,
           BEFORE PROCEDURE chk-forn-BeforeProcedure, 
           .
      * CHECK BOX
       10
           chk-parziale, 
           Check-Box, 
           COL 134,25, 
           LINE 2,38,
           LINES 1,06 ,
           SIZE 1,63 ,
           EXCEPTION-VALUE 8003
           FLAT,
           ID IS 7003,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           VALUE 1,
           VISIBLE chk-parziale-buf,
           AFTER PROCEDURE chk-parziale-AfterProcedure,
           BEFORE PROCEDURE chk-parziale-BeforeProcedure, 
           .
      * CHECK BOX
       10
           chk-nessuna, 
           Check-Box, 
           COL 134,25, 
           LINE 3,63,
           LINES 1,06 ,
           SIZE 1,63 ,
           EXCEPTION-VALUE 8004
           FLAT,
           ID IS 7005,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           VALUE 1,
           VISIBLE chk-nessuna-buf,
           AFTER PROCEDURE chk-nessuna-AfterProcedure,
           BEFORE PROCEDURE chk-nessuna-BeforeProcedure, 
           .
      * CHECK BOX
       10
           chk-scorta, 
           Check-Box, 
           COL 108,00, 
           LINE 5,00,
           LINES 1,06 ,
           SIZE 1,63 ,
           EXCEPTION-VALUE 1005
           FLAT,
           ID IS 7006,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           VALUE 1,
           VISIBLE chk-scorta-buf,
           AFTER PROCEDURE chk-nessuna-AfterProcedure,
           BEFORE PROCEDURE chk-nessuna-BeforeProcedure, 
           .
      * LABEL
       10
           Screen1-La-2, 
           Label, 
           COL 110,00, 
           LINE 2,38,
           LINES 1,06 ,
           SIZE 23,50 ,
           COLOR IS 112,
           FONT IS Verdana10B-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "NON URGENTE",
           .

      * LABEL
       10
           Screen1-La-2a, 
           Label, 
           COL 110,00, 
           LINE 3,63,
           LINES 1,06 ,
           SIZE 23,50 ,
           COLOR IS 481,
           FONT IS Verdana10B-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "URGENTE MESE 3",
           .

      * LABEL
       10
           Screen1-La-2b, 
           Label, 
           COL 136,38, 
           LINE 2,38,
           LINES 1,06 ,
           SIZE 23,50 ,
           COLOR IS 449,
           FONT IS Verdana10B-Occidentale,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "URGENTE MESE 2",
           .

      * LABEL
       10
           Screen1-La-2ba, 
           Label, 
           COL 136,38, 
           LINE 3,63,
           LINES 1,06 ,
           SIZE 23,50 ,
           COLOR IS 176,
           FONT IS Verdana10B-Occidentale,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "URGENTE MESE 1",
           .

      * LABEL
       10
           Screen1-La-2baa, 
           Label, 
           COL 110,13, 
           LINE 5,00,
           LINES 1,06 ,
           SIZE 23,50 ,
           COLOR IS 48,
           FONT IS Verdana10B-Occidentale,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "SCORTA NON ATTIVO",
           .

      * LABEL
       05
           lab-data, 
           Label, 
           COL 2,50, 
           LINE 48,56,
           LINES 1,38 ,
           SIZE 18,00 ,
           COLOR IS 2,
           FONT IS Verdana14B-Occidentale,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE ef-data-buf,
           .

      * LABEL
       05
           lab-data-r, 
           Label, 
           COL 23,75, 
           LINE 48,56,
           LINES 1,38 ,
           SIZE 18,00 ,
           COLOR IS 2,
           FONT IS Verdana14B-Occidentale,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-data-r-buf,
           .

      * LABEL
       05
           lab-dataa, 
           Label, 
           COL 2,50, 
           LINE 47,06,
           LINES 1,38 ,
           SIZE 18,00 ,
           COLOR IS 2,
           FONT IS Verdana14B-Occidentale,
           ID IS 20,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "PROMO",
           .

      * LABEL
       05
           lab-dataaa, 
           Label, 
           COL 23,75, 
           LINE 47,06,
           LINES 1,38 ,
           SIZE 18,00 ,
           COLOR IS 2,
           FONT IS Verdana14B-Occidentale,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "RICALCOLO",
           .

      * FORM
       01 
           scr-elab, 
           .

      * LABEL
       05
           scr-elab-La-1, 
           Label, 
           COL 1,57, 
           LINE 1,23,
           LINES 4,46 ,
           SIZE 69,71 ,
           FONT IS Verdana14I-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Elaborazione Programma Ordini in corso. Attendere preg
      -    "o...",
           .

      * FORM
       01 
           scr-data, 
           .

      * ENTRY FIELD
       05
           ef-data, 
           Entry-Field, 
           COL 8,33, 
           LINE 4,30,
           LINES 1,17 ,
           SIZE 11,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           READ-ONLY,
           VALUE ef-data-buf,
           AFTER PROCEDURE scr-data-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE scr-data-Ef-1-BeforeProcedure, 
           .

      * FRAME
       05
           Screen4-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 6,00,
           LINES 2,26 ,
           SIZE 25,58 ,
           LOWERED,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-ok, 
           Push-Button, 
           COL 13,00, 
           LINE 6,61,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 200,
           AFTER PROCEDURE pb-ok-AfterProcedure, 
           BEFORE PROCEDURE pb-ok-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-annulla, 
           Push-Button, 
           COL 19,67, 
           LINE 6,61,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 201,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-annulla-AfterProcedure, 
           BEFORE PROCEDURE pb-annulla-BeforeProcedure, 
           .

      * LABEL
       05
           scr-data-La-1, 
           Label, 
           COL 3,58, 
           LINE 1,61,
           LINES 2,04 ,
           SIZE 20,42 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Digitare la data massima di ricerca promo",
           .

      * LABEL
       05
           scr-data-blockpgm-1, 
           Label, 
           COL 1,92, 
           LINE 5,00,
           LINES 0,69 ,
           SIZE 3,25 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           scr-data-Custom1-2, 
           Label, 
           COL 1,08, 
           LINE 3,78,
           LINES 0,52 ,
           SIZE 4,83 ,
           FONT IS Default-Font,
           ID IS 4,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * FORM
       01 
           SCREEN-SEARCH, 
           .

      * ENTRY FIELD
       05
           ef-cod, 
           Entry-Field, 
           COL 13,25, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-cod,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 6,
           NUMERIC,
           VALUE Cod,
           AFTER PROCEDURE ef-cod-AfterProcedure, 
           BEFORE PROCEDURE ef-cod-BeforeProcedure, 
           .

      * RADIO BUTTON
       05
           rb-cod, 
           Radio-Button, 
           COL 57,00, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 2,14 ,
           EXCEPTION-VALUE 1000
           FLAT,
           GROUP 1,
           GROUP-VALUE 1,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Radio Button",
           VALUE tipo-ricerca,
           AFTER PROCEDURE rb-cod-AfterProcedure, 
           BEFORE PROCEDURE rb-cod-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           rb-des, 
           Radio-Button, 
           COL 57,00, 
           LINE 4,00,
           LINES 1,31 ,
           SIZE 2,14 ,
           EXCEPTION-VALUE 1001
           FLAT,
           GROUP 1,
           GROUP-VALUE 2,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Radio Button",
           VALUE tipo-ricerca,
           AFTER PROCEDURE rb-des-AfterProcedure, 
           BEFORE PROCEDURE rb-des-BeforeProcedure, 
           .
      * ENTRY FIELD
       05
           ef-des, 
           Entry-Field, 
           COL 13,25, 
           LINE 4,00,
           LINES 1,31 ,
           SIZE 43,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-des,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 30,
           VALUE des,
           AFTER PROCEDURE ef-des-AfterProcedure, 
           BEFORE PROCEDURE ef-des-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-esegui, 
           Push-Button, 
           COL 46,13, 
           LINE 5,92,
           LINES 21,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE ESEGUI_73X21-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 13,
           FLAT,
           ID IS 8,
           OK-BUTTON,
           TITLE "E&segue la ricerca del testo imputato",
           .

      * LABEL
       05
           Form2-La-1, 
           Label, 
           COL 1,86, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 6,14 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Codice",
           .

      * LABEL
       05
           Form2-La-2, 
           Label, 
           COL 1,86, 
           LINE 4,00,
           LINES 1,31 ,
           SIZE 10,00 ,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Descrizione",
           .

      * CHECK BOX
       05
           cb-match, 
           Check-Box, 
           COL 13,25, 
           LINE 5,85,
           LINES 1,31 ,
           SIZE 2,13 ,
           FLAT,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "   &M   ",
           VALUE MatchCase,
           AFTER PROCEDURE cb-match-AfterProcedure,
           BEFORE PROCEDURE cb-match-BeforeProcedure, 
           .
      * LABEL
       05
           Form2-La-3, 
           Label, 
           COL 1,86, 
           LINE 5,92,
           LINES 1,08 ,
           SIZE 10,50 ,
           ID IS 78,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "&Match case",
           .

      * LABEL
       05
           Form2-Custom1-2, 
           Label, 
           COL 35,00, 
           LINE 1,56,
           LINES 0,75 ,
           SIZE 3,50 ,
           FONT IS Default-Font,
           ID IS 9,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * FORM
       01 
           scr-filtri, 
           .

      * FRAME
       05
           scr-filtri-Fr-1, 
           Frame, 
           COL 1,88, 
           LINE 1,63,
           LINES 13,63 ,
           SIZE 40,00 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Selezione filtri di visualizzazione",
           TITLE-POSITION 2,
           .

      * LABEL
       05
           scr-filtri-La-1, 
           Label, 
           COL 3,13, 
           LINE 3,57,
           LINES 1,19 ,
           SIZE 6,00 ,
           ID IS 502,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Marca",
           .

      * COMBO-BOX
       05
           cbo-marca, 
           Combo-Box, 
           COL 8,88, 
           LINE 3,38,
           LINES 7,63 ,
           SIZE 26,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 503,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           AFTER PROCEDURE scr-filtri-Cm-1-AfterProcedure, 
           BEFORE PROCEDURE scr-filtri-Cm-1-BeforeProcedure, 
           .
      * GRID
       05
           gd-scorte, 
           Grid, 
           COL 4,63, 
           LINE 5,63,
           LINES 8,88 ,
           SIZE 34,38 ,
           BOXED,
           DATA-COLUMNS (1, 3),
           ALIGNMENT ("R", "L"),
           SEPARATION (5, 5),
           DATA-TYPES ("9(2)", "X(50)"),
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           ID IS 504,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NO-TAB,
           TILED-HEADINGS,
           VPADDING 20,
           VSCROLL,
           EVENT PROCEDURE scr-filtri-Gd-1-Event-Proc,
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 15,31,
           LINES 3,00 ,
           SIZE 41,88 ,
           LOWERED,
           ID IS 505,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUIa, 
           Push-Button, 
           COL 22,63, 
           LINE 15,94,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE OK_73X21-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "Applica i filtri alla visualizzazione corrente",
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-cancel, 
           Push-Button, 
           COL 32,50, 
           LINE 15,94,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE CANCEL_73X21-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE Form1-Pb-2-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2-BeforeProcedure, 
           .

      * FORM
       01 
           scr-forn, 
           .

      * FRAME
       05
           scr-forn-Fr-1, 
           Frame, 
           COL 19,00, 
           LINE 1,69,
           LINES 4,94 ,
           SIZE 95,25 ,
           COLOR IS 2,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           HEAVY,
           TITLE "Fabbisogno",
           TITLE-POSITION 2,
           .

      * PUSH BUTTON
       05
           pb-1, 
           Push-Button, 
           COL 22,13, 
           LINE 4,25,
           LINES 1,69 ,
           SIZE 11,00 ,
           EXCEPTION-VALUE 1000,
           FONT IS Verdana10B-Occidentale,
           ID IS AUTO-ID,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE tit-mese-1,
           .

      * LABEL
       05
           scr-forn-La-2, 
           Label, 
           COL 22,13, 
           LINE 2,94,
           LINES 1,06 ,
           SIZE 11,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Mese 1",
           .

      * PUSH BUTTON
       05
           pb-2, 
           Push-Button, 
           COL 37,75, 
           LINE 4,25,
           LINES 1,69 ,
           SIZE 11,00 ,
           EXCEPTION-VALUE 1001,
           FONT IS Verdana10B-Occidentale,
           ID IS AUTO-ID,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE tit-mese-2,
           .

      * LABEL
       05
           scr-forn-La-2a, 
           Label, 
           COL 37,75, 
           LINE 2,94,
           LINES 1,06 ,
           SIZE 11,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Mese 2",
           .

      * PUSH BUTTON
       05
           pb-3, 
           Push-Button, 
           COL 53,38, 
           LINE 4,25,
           LINES 1,69 ,
           SIZE 11,00 ,
           EXCEPTION-VALUE 1002,
           FONT IS Verdana10B-Occidentale,
           ID IS AUTO-ID,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE tit-mese-3,
           .

      * LABEL
       05
           scr-forn-La-2b, 
           Label, 
           COL 53,38, 
           LINE 2,94,
           LINES 1,06 ,
           SIZE 11,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Mese 3",
           .

      * PUSH BUTTON
       05
           pb-4, 
           Push-Button, 
           COL 69,00, 
           LINE 4,25,
           LINES 1,69 ,
           SIZE 11,00 ,
           EXCEPTION-VALUE 1003,
           FONT IS Verdana10B-Occidentale,
           ID IS AUTO-ID,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE tit-mese-4,
           .

      * LABEL
       05
           scr-forn-La-2c, 
           Label, 
           COL 69,00, 
           LINE 2,94,
           LINES 1,06 ,
           SIZE 11,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Mese 4",
           .

      * PUSH BUTTON
       05
           pb-5, 
           Push-Button, 
           COL 84,63, 
           LINE 4,25,
           LINES 1,69 ,
           SIZE 11,00 ,
           EXCEPTION-VALUE 1004,
           FONT IS Verdana10B-Occidentale,
           ID IS AUTO-ID,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE tit-mese-5,
           .

      * LABEL
       05
           scr-forn-La-2d, 
           Label, 
           COL 84,63, 
           LINE 2,94,
           LINES 1,06 ,
           SIZE 11,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Mese 5",
           .

      * PUSH BUTTON
       05
           pb-6, 
           Push-Button, 
           COL 100,13, 
           LINE 4,25,
           LINES 1,69 ,
           SIZE 11,00 ,
           EXCEPTION-VALUE 1005,
           FONT IS Verdana10B-Occidentale,
           ID IS AUTO-ID,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE tit-mese-6,
           .

      * LABEL
       05
           scr-forn-La-2e, 
           Label, 
           COL 100,13, 
           LINE 2,94,
           LINES 1,06 ,
           SIZE 11,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Mese 6",
           .

      * ENTRY FIELD
       05
           ef-mese, 
           Entry-Field, 
           COL 61,88, 
           LINE 9,13,
           LINES 1,25 ,
           SIZE 9,38 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-mese,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-mese-buf,
           AFTER PROCEDURE scr-forn-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE scr-forn-Ef-1-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-lt, 
           Entry-Field, 
           COL 95,75, 
           LINE 9,13,
           LINES 1,25 ,
           SIZE 6,50 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-copie,
           ID IS 78-ID-ef-lt,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           READ-ONLY,
           SPINNER,
           VALUE ef-lt-buf,
           VISIBLE 0,
           AFTER PROCEDURE ef-copie-AfterProcedure, 
           BEFORE PROCEDURE ef-copie-BeforeProcedure, 
           EVENT PROCEDURE ef-lt-Event-Proc,
           .

      * GRID
       05
           gd-form-i, 
           Grid, 
           COL 1,88, 
           LINE 12,31,
           LINES 11,94 ,
           SIZE 129,38 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 7, 13, 63, 66, 75, 84, 94, 104, 114, 124, 
           139, 149),
           ALIGNMENT ("R", "R", "U", "R", "R", "R", "R", "R", "R", "R", 
           "R", "C", "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "9(6)", "X(50)", "9(3)", "X", "X", "9(10)
      -    "", "9(10)", "9(10)", "9(10)", "9(15)", "X(10)", "X(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-form-i,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 127,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE scr-forn-Gd-1-Event-Proc,
           .

      * GRID
       05
           gd-form-e, 
           Grid, 
           COL 1,88, 
           LINE 26,31,
           LINES 11,94 ,
           SIZE 129,38 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 7, 13, 63, 66, 75, 84, 93, 102, 111, 120, 
           135, 145),
           ALIGNMENT ("R", "R", "U", "R", "R", "R", "R", "R", "R", "R", 
           "R", "C", "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "9(6)", "X(50)", "9(3)", "X", "X", "9(10)
      -    "", "9(10)", "9(10)", "9(10)", "9(15)", "X(10)", "X(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-form-e,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 127,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE scr-forn-Gd-1-Event-Proc,
           .

      * FRAME
       05
           Screen1-Fr-1a, 
           Frame, 
           COL 1,00, 
           LINE 38,31,
           LINES 3,00 ,
           SIZE 131,25 ,
           LOWERED,
           ID IS 505,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUIaa, 
           Push-Button, 
           COL 112,00, 
           LINE 38,94,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE bottone_salva-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "&Salva",
           AFTER PROCEDURE PB-ESEGUIaa-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUIaa-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-cancela, 
           Push-Button, 
           COL 121,88, 
           LINE 38,94,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE bottone-exit-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-cancela-AfterProcedure, 
           BEFORE PROCEDURE pb-cancela-BeforeProcedure, 
           .

      * LABEL
       05
           scr-forn-La-1, 
           Label, 
           COL 6,50, 
           LINE 11,06,
           LINES 1,00 ,
           SIZE 120,25 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 502,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "INCLUSI",
           .

      * LABEL
       05
           scr-forn-La-1a, 
           Label, 
           COL 6,50, 
           LINE 25,13,
           LINES 1,00 ,
           SIZE 120,25 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "ESCLUSI",
           .

      * LABEL
       05
           lab-mese, 
           Label, 
           COL 45,25, 
           LINE 9,19,
           LINES 1,25 ,
           SIZE 15,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-mese-buf,
           .

      * LABEL
       05
           scr-forn-Custom1-1, 
           Label, 
           COL 3,88, 
           LINE 9,06,
           LINES 1,00 ,
           SIZE 1,00 ,
           FONT IS Default-Font,
           ID IS 14,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           lab-art, 
           Label, 
           COL 38,63, 
           LINE 7,13,
           LINES 1,25 ,
           SIZE 50,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-art-buf,
           .

      * LABEL
       05
           lab-art-codicea, 
           Label, 
           COL 73,50, 
           LINE 9,13,
           LINES 1,25 ,
           SIZE 20,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE "LEAD TIME STANDARD",
           VISIBLE 0,
           .

      * FORM
       01 
           scr-ordfor, 
           HELP-ID 1,
           .

      * LABEL
       05
           scr-elab-La-1a, 
           Label, 
           COL 11,29, 
           LINE 1,23,
           LINES 4,46 ,
           SIZE 50,43 ,
           FONT IS Verdana14I-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Creazione Ordini a fornitori in corso. Attendere prego
      -    "...",
           .

      * FORM
       01 
           scr-fine, 
           HELP-ID 1,
           .

      * FRAME
       05
           Screen1-Fr-1aa, 
           Frame, 
           COL 2,00, 
           LINE 1,30,
           LINES 15,40 CELLS,
           SIZE 27,90 CELLS,
           RAISED,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VERY-HEAVY,
           .

      * LABEL
       05
           scr-fine-La-4, 
           Label, 
           COL 5,10, 
           LINE 3,00,
           LINES 2,00 CELLS,
           SIZE 20,60 CELLS,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Ordini Fornitori Generati",
           .

      * BAR
       05
           scr-fine-Br-1a, 
           Bar,
           COL 2,50, 
           LINE 3,80,
           SIZE 2,20 CELLS,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           scr-fine-La-5, 
           Label, 
           COL 5,10, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 2,80 CELLS,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Da",
           .

      * LABEL
       05
           scr-fine-La-6, 
           Label, 
           COL 17,10, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 1,50 CELLS,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "a",
           .

      * LABEL
       05
           scr-fine-La-7, 
           Label, 
           COL 8,40, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 7,50 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE primo-numero-z,
           .

      * LABEL
       05
           scr-fine-La-8, 
           Label, 
           COL 19,30, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 7,50 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE ultimo-numero-z,
           .

      * LABEL
       05
           scr-fine-La-4a, 
           Label, 
           COL 8,40, 
           LINE 10,30,
           LINES 2,00 CELLS,
           SIZE 15,00 CELLS,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Totale Ordini",
           .

      * LABEL
       05
           lbl-tot-fat, 
           Label, 
           COL 10,90, 
           LINE 13,30,
           LINES 2,00 CELLS,
           SIZE 10,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE tot-ordini-z,
           .

      * BAR
       05
           scr-fine-Br-1aa, 
           Bar,
           COL 27,10, 
           LINE 3,80,
           SIZE 2,20 CELLS,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * PUSH BUTTON
       05
           pb-sia, 
           Push-Button, 
           COL 11,90, 
           LINE 17,20,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 10,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-sia-AfterProcedure, 
           BEFORE PROCEDURE pb-sia-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1, 
           Push-Button, 
           COL 30,10, 
           LINE 20,50,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1a, 
           Push-Button, 
           COL 30,10, 
           LINE 1,00,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1b, 
           Push-Button, 
           COL 1,00, 
           LINE 20,50,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1c, 
           Push-Button, 
           COL 1,00, 
           LINE 1,00,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * FORM
       01 
           scr-elab2, 
           .

      * LABEL
       05
           scr-elab-La-1b, 
           Label, 
           COL 1,57, 
           LINE 1,23,
           LINES 4,46 ,
           SIZE 69,71 ,
           FONT IS Verdana14I-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Elaborazione Programma Ordini in corso. Attendere preg
      -    "o...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:pordini, INIT:pordini, BeforeDeclarative>
      ***---
       TMP-ORDF-ART-ERR SECTION.
           use after error procedure on tmp-ordf-art.
           evaluate status-tmp-ordf-art
           when "42" 
                set errori to true
           end-evaluate.   

      ***---
       ORDFOR2-ERR SECTION.
           use after error procedure on ordfor2.
           evaluate status-ordfor2
           when "35"           
                if LK-BL-PROG-ID not = "desktop"
                   display message "File [ORDFOR2] not found!"
                             title titolo
                              icon 3
                else
                   move "File [ORDFOR2] not found!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "39"         
                if LK-BL-PROG-ID not = "desktop"
                   display message "File [ORDFOR2] Mismatch size!"
                           title titolo
                            icon 3        
                else
                   move "File [ORDFOR2] Mismatch size!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "98"          
                if LK-BL-PROG-ID not = "desktop"
                   display message "[ORDFOR2] Indexed file corrupt!"
                           title titolo
                            icon 3        
                else
                   move "[ORDFOR2] Indexed file corrupt!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "93"  
                move mb-no to scelta
                if LK-BL-PROG-ID not = "desktop"
                   display message "File ORDFOR2 già in uso." 
                         x"0d0a""Ritentare la connessione?"
                          title titolo
                           icon 2
                           type mb-yes-no
                         giving scelta
                end-if
                if scelta = mb-yes
                   open exclusive i-o ordfor2
                else
                   set errori to true                   
                   if LK-BL-PROG-ID not = "desktop"
                      display message "Operazione interrotta!"
                                title titolo
                                 icon 2   
                   else
                      move "File ORDFOR2 già in uso." to como-riga
                      perform SCRIVI-RIGA-LOG
                   end-if
                end-if

      *          move "File già in uso" to geslock-messaggio
      *          move 1 to geslock-v-riprova
      *          move 0 to geslock-v-ignora
      *          move 1 to geslock-v-termina   
      *          move   "ordfor2"    to geslock-nome-file
      *          call   "geslock" using geslock-linkage
      *          cancel "geslock"
      *                                        
      *          evaluate true
      *          when riprova open exclusive i-o ordfor2
      *          when other   set errori to true
      *                       display message "Operazione interrotta!"
      *                               title titolo
      *                               icon 2
      *          end-evaluate
           end-evaluate.           

      ***---
       TPARAMGE-ERR SECTION.
           use after error procedure on tparamge.
           evaluate status-tparamge
           when "35"                    
                if LK-BL-PROG-ID not = "desktop"
                   display message "File [TPARAMGE] not found!"
                           title titolo
                            icon 3  
                else
                   move "File [TPARAMGE] not found!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "39"         
                if LK-BL-PROG-ID not = "desktop"
                   display message "File [TPARAMGE] Mismatch size!"
                           title titolo
                            icon 3     
                else
                   move "File [TPARAMGE] Mismatch size!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "98"           
                if LK-BL-PROG-ID not = "desktop"
                   display message "[TPARAMGE] Indexed file corrupt!"
                           title titolo
                            icon 3     
                else
                   move "[TPARAMGE] Indexed file corrupt!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.              

      ***---
       MULTIGEST-ERR SECTION.
           use after error procedure on MULTIGEST.
           evaluate status-MULTIGEST
           when "35"         
                if LK-BL-PROG-ID not = "desktop"
                   display message "File [MULTIGEST] not found!"
                           title titolo
                            icon 3    
                else
                   move "File [MULTIGEST] not found!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "39"         
                if LK-BL-PROG-ID not = "desktop"
                   display message "File [MULTIGEST] Mismatch size!"
                           title titolo
                            icon 3     
                else
                   move "File [MULTIGEST] Mismatch size!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "98"           
                if LK-BL-PROG-ID not = "desktop"
                   display message "[MULTIGEST] Indexed file corrupt!"
                           title titolo
                            icon 3    
                else
                   move "[MULTIGEST] Indexed file corrupt!" to como-riga
                   perform SCRIVI-RIGA-LOG
                end-if
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.               

      ***---
       LINESEQ1-ERR SECTION.
           use after error procedure on lineseq1.
           continue.

      ***---
       QTA-PORDINI-ERR SECTION.
           use after error procedure on qta-pordini.
           continue.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ordini-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM scr-data-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:pordini, INIT:pordini, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana14B-Occidentale
           DESTROY Verdana10-Occidentale
           DESTROY Verdana14I-Occidentale
           DESTROY Verdana14-Occidentale
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, sort-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, MOSTRA-NASCONDI-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, RICALCOLO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, GENERA-ORDFOR-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, ORDINI-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, ESEGUI_73X21-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, OK_73X21-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, CANCEL_73X21-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, bottone_salva-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, bottone-exit-bmp
      *    After-Program
           PERFORM ordini-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana14B-Occidentale
           INITIALIZE WFONT-DATA Verdana14B-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana14B-Occidentale, WFONT-DATA
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
      * Verdana14I-Occidentale
           INITIALIZE WFONT-DATA Verdana14I-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana14I-Occidentale, WFONT-DATA
      * Verdana14-Occidentale
           INITIALIZE WFONT-DATA Verdana14-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana14-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * form1-gd-1
           COPY RESOURCE "SORT.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "SORT.BMP", 
                   GIVING sort-bmp.
      * pb-mostra
           COPY RESOURCE "MOSTRA-NASCONDI.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "MOSTRA-NASCONDI.BMP", 
                   GIVING MOSTRA-NASCONDI-BMP.
      * pb-ricalcolo
           COPY RESOURCE "RICALCOLO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "RICALCOLO.BMP", 
                   GIVING RICALCOLO-BMP.
      * pb-genera
           COPY RESOURCE "GENERA-ORDFOR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "GENERA-ORDFOR.BMP", 
                   GIVING GENERA-ORDFOR-BMP.
      * tool-CercaTesto
           COPY RESOURCE "ORDINI.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "ORDINI.BMP", 
                   GIVING ORDINI-BMP.
      * pb-ok
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-annulla
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * pb-esegui
           COPY RESOURCE "ESEGUI_73X21.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "ESEGUI_73X21.BMP", 
                   GIVING ESEGUI_73X21-BMP.
      * PB-ESEGUIa
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING OK_73X21-BMP.
      * pb-cancel
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING CANCEL_73X21-BMP.
      * PB-ESEGUIaa
           COPY RESOURCE "BOTTONE_SALVA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE_SALVA.BMP", 
                   GIVING bottone_salva-bmp.
      * pb-cancela
           COPY RESOURCE "BOTTONE-EXIT.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-EXIT.BMP", 
                   GIVING bottone-exit-bmp.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
      *    ordfor OPEN MODE IS FALSE
      *    PERFORM OPEN-ordfor
      *    ordfor2 OPEN MODE IS FALSE
      *    PERFORM OPEN-ordfor2
           PERFORM OPEN-tmarche
           PERFORM OPEN-articoli
           PERFORM OPEN-progmag
           PERFORM OPEN-rlistini
           PERFORM OPEN-timbalqta
           PERFORM OPEN-tparamge
           PERFORM OPEN-tscorte
      *    tmp-forn OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-forn
           PERFORM OPEN-clienti
           PERFORM OPEN-timposte
           PERFORM OPEN-tpiombo
           PERFORM OPEN-tmagaz
           PERFORM OPEN-qta-vend
           PERFORM OPEN-coperfab
           PERFORM OPEN-destinif
           PERFORM OPEN-impforn
           PERFORM OPEN-tlistini
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    tmp-ordf-art OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-ordf-art
           PERFORM OPEN-rordforn
           PERFORM OPEN-tordforn
           PERFORM OPEN-sordforn
           PERFORM OPEN-distinteb
           PERFORM OPEN-tparamge2
           PERFORM OPEN-catart
      *    tmp-ordfor OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-ordfor
      *    multigest OPEN MODE IS FALSE
      *    PERFORM OPEN-multigest
      *    fileseq OPEN MODE IS FALSE
      *    PERFORM OPEN-fileseq
      *    tsetinvio OPEN MODE IS FALSE
      *    PERFORM OPEN-tsetinvio
           PERFORM OPEN-param
      *    lineseq1 OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq1
           PERFORM OPEN-qta-pordini
      *    genlog OPEN MODE IS FALSE
      *    PERFORM OPEN-genlog
      *    After Open
           .

       OPEN-ordfor.
      * <TOTEM:EPT. INIT:pordini, FD:ordfor, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ordfor
           IF NOT Valid-STATUS-ordfor
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:ordfor, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ordfor2.
      * <TOTEM:EPT. INIT:pordini, FD:ordfor2, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O ordfor2
           IF STATUS-ordfor2 = "35"
              OPEN OUTPUT ordfor2
                IF Valid-STATUS-ordfor2
                   CLOSE ordfor2
                   OPEN I-O ordfor2
                END-IF
           END-IF
           IF NOT Valid-STATUS-ordfor2
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:ordfor2, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:pordini, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:pordini, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:pordini, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rlistini.
      * <TOTEM:EPT. INIT:pordini, FD:rlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rlistini
           IF NOT Valid-STATUS-rlistini
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:rlistini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:pordini, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:pordini, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tscorte.
      * <TOTEM:EPT. INIT:pordini, FD:tscorte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tscorte
           IF NOT Valid-STATUS-tscorte
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tscorte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-forn.
      * <TOTEM:EPT. INIT:pordini, FD:tmp-forn, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-forn
           IF NOT Valid-STATUS-tmp-forn
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tmp-forn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:pordini, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:pordini, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:pordini, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:pordini, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-qta-vend.
      * <TOTEM:EPT. INIT:pordini, FD:qta-vend, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT qta-vend
           IF NOT Valid-STATUS-qta-vend
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:qta-vend, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-coperfab.
      * <TOTEM:EPT. INIT:pordini, FD:coperfab, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O coperfab
           IF STATUS-coperfab = "35"
              OPEN OUTPUT coperfab
                IF Valid-STATUS-coperfab
                   CLOSE coperfab
                   OPEN I-O coperfab
                END-IF
           END-IF
           IF NOT Valid-STATUS-coperfab
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:coperfab, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destinif.
      * <TOTEM:EPT. INIT:pordini, FD:destinif, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destinif
           IF NOT Valid-STATUS-destinif
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:destinif, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-impforn.
      * <TOTEM:EPT. INIT:pordini, FD:impforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT impforn
           IF NOT Valid-STATUS-impforn
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:impforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tlistini.
      * <TOTEM:EPT. INIT:pordini, FD:tlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tlistini
           IF NOT Valid-STATUS-tlistini
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tlistini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:pordini, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-ordf-art.
      * <TOTEM:EPT. INIT:pordini, FD:tmp-ordf-art, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-ordf-art
           IF NOT Valid-STATUS-tmp-ordf-art
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tmp-ordf-art, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:pordini, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rordforn
           IF NOT Valid-STATUS-rordforn
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:pordini, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tordforn
           IF NOT Valid-STATUS-tordforn
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-sordforn.
      * <TOTEM:EPT. INIT:pordini, FD:sordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT sordforn
           IF NOT Valid-STATUS-sordforn
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:sordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-distinteb.
      * <TOTEM:EPT. INIT:pordini, FD:distinteb, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT distinteb
           IF NOT Valid-STATUS-distinteb
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:distinteb, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge2.
      * <TOTEM:EPT. INIT:pordini, FD:tparamge2, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge2
           IF NOT Valid-STATUS-tparamge2
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tparamge2, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-catart.
      * <TOTEM:EPT. INIT:pordini, FD:catart, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT catart
           IF NOT Valid-status-catart
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:catart, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-ordfor.
      * <TOTEM:EPT. INIT:pordini, FD:tmp-ordfor, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tmp-ordfor
           IF STATUS-tmp-ordfor = "35"
              OPEN OUTPUT tmp-ordfor
                IF Valid-STATUS-tmp-ordfor
                   CLOSE tmp-ordfor
                   OPEN I-O tmp-ordfor
                END-IF
           END-IF
           IF NOT Valid-STATUS-tmp-ordfor
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tmp-ordfor, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-multigest.
      * <TOTEM:EPT. INIT:pordini, FD:multigest, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O multigest
           IF STATUS-multigest = "35"
              OPEN OUTPUT multigest
                IF Valid-STATUS-multigest
                   CLOSE multigest
                   OPEN I-O multigest
                END-IF
           END-IF
           IF NOT Valid-STATUS-multigest
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:multigest, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-fileseq.
      * <TOTEM:EPT. INIT:pordini, FD:fileseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT fileseq
           IF NOT Valid-STATUS-fileseq
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:fileseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tsetinvio.
      * <TOTEM:EPT. INIT:pordini, FD:tsetinvio, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tsetinvio
           IF STATUS-tsetinvio = "35"
              OPEN OUTPUT tsetinvio
                IF Valid-STATUS-tsetinvio
                   CLOSE tsetinvio
                   OPEN I-O tsetinvio
                END-IF
           END-IF
           IF NOT Valid-STATUS-tsetinvio
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:tsetinvio, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:pordini, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq1.
      * <TOTEM:EPT. INIT:pordini, FD:lineseq1, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT lineseq1
           IF NOT VALID-STATUS-lineseq1
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:lineseq1, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-qta-pordini.
      * <TOTEM:EPT. INIT:pordini, FD:qta-pordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O qta-pordini
           IF STATUS-qta-pordini = "35"
              OPEN OUTPUT qta-pordini
                IF Valid-STATUS-qta-pordini
                   CLOSE qta-pordini
                   OPEN I-O qta-pordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-qta-pordini
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:qta-pordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-genlog.
      * <TOTEM:EPT. INIT:pordini, FD:genlog, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT genlog
           IF NOT Valid-STATUS-genlog
              PERFORM  scr-data-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:pordini, FD:genlog, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
      *    ordfor CLOSE MODE IS FALSE
      *    PERFORM CLOSE-ordfor
      *    ordfor2 CLOSE MODE IS FALSE
      *    PERFORM CLOSE-ordfor2
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-articoli
           PERFORM CLOSE-progmag
           PERFORM CLOSE-rlistini
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-tscorte
      *    tmp-forn CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-forn
           PERFORM CLOSE-clienti
           PERFORM CLOSE-timposte
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-qta-vend
           PERFORM CLOSE-coperfab
           PERFORM CLOSE-destinif
           PERFORM CLOSE-impforn
           PERFORM CLOSE-tlistini
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    tmp-ordf-art CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-ordf-art
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-sordforn
           PERFORM CLOSE-distinteb
           PERFORM CLOSE-tparamge2
           PERFORM CLOSE-catart
      *    tmp-ordfor CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-ordfor
      *    multigest CLOSE MODE IS FALSE
      *    PERFORM CLOSE-multigest
      *    fileseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-fileseq
      *    tsetinvio CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tsetinvio
           PERFORM CLOSE-param
      *    lineseq1 CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq1
           PERFORM CLOSE-qta-pordini
      *    genlog CLOSE MODE IS FALSE
      *    PERFORM CLOSE-genlog
      *    After Close
           .

       CLOSE-ordfor.
      * <TOTEM:EPT. INIT:pordini, FD:ordfor, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-ordfor2.
      * <TOTEM:EPT. INIT:pordini, FD:ordfor2, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:pordini, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:pordini, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:pordini, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-rlistini.
      * <TOTEM:EPT. INIT:pordini, FD:rlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE rlistini
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:pordini, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:pordini, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-tscorte.
      * <TOTEM:EPT. INIT:pordini, FD:tscorte, BeforeClose>
      * <TOTEM:END>
           CLOSE tscorte
           .

       CLOSE-tmp-forn.
      * <TOTEM:EPT. INIT:pordini, FD:tmp-forn, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:pordini, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:pordini, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:pordini, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:pordini, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-qta-vend.
      * <TOTEM:EPT. INIT:pordini, FD:qta-vend, BeforeClose>
      * <TOTEM:END>
           CLOSE qta-vend
           .

       CLOSE-coperfab.
      * <TOTEM:EPT. INIT:pordini, FD:coperfab, BeforeClose>
      * <TOTEM:END>
           CLOSE coperfab
           .

       CLOSE-destinif.
      * <TOTEM:EPT. INIT:pordini, FD:destinif, BeforeClose>
      * <TOTEM:END>
           CLOSE destinif
           .

       CLOSE-impforn.
      * <TOTEM:EPT. INIT:pordini, FD:impforn, BeforeClose>
      * <TOTEM:END>
           CLOSE impforn
           .

       CLOSE-tlistini.
      * <TOTEM:EPT. INIT:pordini, FD:tlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE tlistini
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:pordini, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-ordf-art.
      * <TOTEM:EPT. INIT:pordini, FD:tmp-ordf-art, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:pordini, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:pordini, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-sordforn.
      * <TOTEM:EPT. INIT:pordini, FD:sordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE sordforn
           .

       CLOSE-distinteb.
      * <TOTEM:EPT. INIT:pordini, FD:distinteb, BeforeClose>
      * <TOTEM:END>
           CLOSE distinteb
           .

       CLOSE-tparamge2.
      * <TOTEM:EPT. INIT:pordini, FD:tparamge2, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge2
           .

       CLOSE-catart.
      * <TOTEM:EPT. INIT:pordini, FD:catart, BeforeClose>
      * <TOTEM:END>
           CLOSE catart
           .

       CLOSE-tmp-ordfor.
      * <TOTEM:EPT. INIT:pordini, FD:tmp-ordfor, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-multigest.
      * <TOTEM:EPT. INIT:pordini, FD:multigest, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-fileseq.
      * <TOTEM:EPT. INIT:pordini, FD:fileseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tsetinvio.
      * <TOTEM:EPT. INIT:pordini, FD:tsetinvio, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:pordini, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-lineseq1.
      * <TOTEM:EPT. INIT:pordini, FD:lineseq1, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-qta-pordini.
      * <TOTEM:EPT. INIT:pordini, FD:qta-pordini, BeforeClose>
      * <TOTEM:END>
           CLOSE qta-pordini
           .

       CLOSE-genlog.
      * <TOTEM:EPT. INIT:pordini, FD:genlog, BeforeClose>
      * <TOTEM:END>
           .

       ordfor-k-ord-MERGE-SPLITBUF.
           INITIALIZE ordfor-k-ord-SPLITBUF
           MOVE ord-marca(1:4) TO ordfor-k-ord-SPLITBUF(1:4)
           MOVE ord-art-descrizione(1:50) TO ordfor-k-ord-SPLITBUF(5:50)
           .

       DataSet1-ordfor-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 MOVE Low-Value TO ord-chiave
              ELSE
                 MOVE High-Value TO ord-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-ordfor-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 MOVE High-Value TO ord-chiave
              ELSE
                 MOVE Low-Value TO ord-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-ordfor-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-ordfor-KEY1-ORDER
           END-EVALUATE
           .

      * ordfor
       DataSet1-ordfor-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 START ordfor KEY >= ord-chiave
              ELSE
                 START ordfor KEY <= ord-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-ordfor-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 START ordfor KEY <= ord-chiave
              ELSE
                 START ordfor KEY >= ord-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-ordfor-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 START ordfor KEY > ord-chiave
              ELSE
                 START ordfor KEY < ord-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-ordfor-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 START ordfor KEY < ord-chiave
              ELSE
                 START ordfor KEY > ord-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-ordfor-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-LOCK
                 READ ordfor WITH LOCK 
                 KEY ord-chiave
              ELSE
                 READ ordfor WITH NO LOCK 
                 KEY ord-chiave
              END-IF
           END-EVALUATE
           PERFORM ordfor-k-ord-MERGE-SPLITBUF
           MOVE STATUS-ordfor TO TOTEM-ERR-STAT 
           MOVE "ordfor" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ordfor-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 IF DataSet1-ordfor-LOCK
                    READ ordfor NEXT WITH LOCK
                 ELSE
                    READ ordfor NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-ordfor-LOCK
                    READ ordfor PREVIOUS WITH LOCK
                 ELSE
                    READ ordfor PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM ordfor-k-ord-MERGE-SPLITBUF
           MOVE STATUS-ordfor TO TOTEM-ERR-STAT
           MOVE "ordfor" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ordfor-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-ordfor-KEY1-Asc
                 IF DataSet1-ordfor-LOCK
                    READ ordfor PREVIOUS WITH LOCK
                 ELSE
                    READ ordfor PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-ordfor-LOCK
                    READ ordfor NEXT WITH LOCK
                 ELSE
                    READ ordfor NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM ordfor-k-ord-MERGE-SPLITBUF
           MOVE STATUS-ordfor TO TOTEM-ERR-STAT
           MOVE "ordfor" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ordfor-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ordfor TO TOTEM-ERR-STAT
           MOVE "ordfor" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ordfor-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ordfor TO TOTEM-ERR-STAT
           MOVE "ordfor" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ordfor-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ordfor TO TOTEM-ERR-STAT
           MOVE "ordfor" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor, AfterDelete>
      * <TOTEM:END>
           .

       ordfor2-k-ord-MERGE-SPLITBUF.
           INITIALIZE ordfor2-k-ord-SPLITBUF
           MOVE ord2-marca(1:4) TO ordfor2-k-ord-SPLITBUF(1:4)
           MOVE ord2-art-descrizione(1:50) TO 
           ordfor2-k-ord-SPLITBUF(5:50)
           .

       ordfor2-k-descr-MERGE-SPLITBUF.
           INITIALIZE ordfor2-k-descr-SPLITBUF
           MOVE ord2-art-descrizione(1:50) TO 
           ordfor2-k-descr-SPLITBUF(1:50)
           .

       ordfor2-k-scorta-MERGE-SPLITBUF.
           INITIALIZE ordfor2-k-scorta-SPLITBUF
           MOVE ord2-scorta(1:8) TO ordfor2-k-scorta-SPLITBUF(1:8)
           MOVE ord2-art-descrizione(1:50) TO 
           ordfor2-k-scorta-SPLITBUF(9:50)
           .

       ordfor2-k-ok-MERGE-SPLITBUF.
           INITIALIZE ordfor2-k-ok-SPLITBUF
           MOVE ord2-conferma(1:1) TO ordfor2-k-ok-SPLITBUF(1:1)
           MOVE ord2-art-descrizione(1:50) TO 
           ordfor2-k-ok-SPLITBUF(2:50)
           .

       DataSet1-ordfor2-INITSTART.
           IF DataSet1-ordfor2-KEY-Asc
              MOVE Low-Value TO ord2-chiave
           ELSE
              MOVE High-Value TO ord2-chiave
           END-IF
           .

       DataSet1-ordfor2-INITEND.
           IF DataSet1-ordfor2-KEY-Asc
              MOVE High-Value TO ord2-chiave
           ELSE
              MOVE Low-Value TO ord2-chiave
           END-IF
           .

      * ordfor2
       DataSet1-ordfor2-START.
           IF DataSet1-ordfor2-KEY-Asc
              START ordfor2 KEY >= ord2-chiave
           ELSE
              START ordfor2 KEY <= ord2-chiave
           END-IF
           .

       DataSet1-ordfor2-START-NOTGREATER.
           IF DataSet1-ordfor2-KEY-Asc
              START ordfor2 KEY <= ord2-chiave
           ELSE
              START ordfor2 KEY >= ord2-chiave
           END-IF
           .

       DataSet1-ordfor2-START-GREATER.
           IF DataSet1-ordfor2-KEY-Asc
              START ordfor2 KEY > ord2-chiave
           ELSE
              START ordfor2 KEY < ord2-chiave
           END-IF
           .

       DataSet1-ordfor2-START-LESS.
           IF DataSet1-ordfor2-KEY-Asc
              START ordfor2 KEY < ord2-chiave
           ELSE
              START ordfor2 KEY > ord2-chiave
           END-IF
           .

       DataSet1-ordfor2-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ordfor2-LOCK
              READ ordfor2 WITH LOCK 
              KEY ord2-chiave
           ELSE
              READ ordfor2 WITH NO LOCK 
              KEY ord2-chiave
           END-IF
           PERFORM ordfor2-k-ord-MERGE-SPLITBUF
           PERFORM ordfor2-k-descr-MERGE-SPLITBUF
           PERFORM ordfor2-k-scorta-MERGE-SPLITBUF
           PERFORM ordfor2-k-ok-MERGE-SPLITBUF
           MOVE STATUS-ordfor2 TO TOTEM-ERR-STAT 
           MOVE "ordfor2" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ordfor2-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ordfor2-KEY-Asc
              IF DataSet1-ordfor2-LOCK
                 READ ordfor2 NEXT WITH LOCK
              ELSE
                 READ ordfor2 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ordfor2-LOCK
                 READ ordfor2 PREVIOUS WITH LOCK
              ELSE
                 READ ordfor2 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM ordfor2-k-ord-MERGE-SPLITBUF
           PERFORM ordfor2-k-descr-MERGE-SPLITBUF
           PERFORM ordfor2-k-scorta-MERGE-SPLITBUF
           PERFORM ordfor2-k-ok-MERGE-SPLITBUF
           MOVE STATUS-ordfor2 TO TOTEM-ERR-STAT
           MOVE "ordfor2" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ordfor2-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ordfor2-KEY-Asc
              IF DataSet1-ordfor2-LOCK
                 READ ordfor2 PREVIOUS WITH LOCK
              ELSE
                 READ ordfor2 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ordfor2-LOCK
                 READ ordfor2 NEXT WITH LOCK
              ELSE
                 READ ordfor2 NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM ordfor2-k-ord-MERGE-SPLITBUF
           PERFORM ordfor2-k-descr-MERGE-SPLITBUF
           PERFORM ordfor2-k-scorta-MERGE-SPLITBUF
           PERFORM ordfor2-k-ok-MERGE-SPLITBUF
           MOVE STATUS-ordfor2 TO TOTEM-ERR-STAT
           MOVE "ordfor2" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ordfor2-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeWrite>
      * <TOTEM:END>
           WRITE ord2-rec OF ordfor2.
           MOVE STATUS-ordfor2 TO TOTEM-ERR-STAT
           MOVE "ordfor2" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ordfor2-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeRewrite>
      * <TOTEM:END>
           REWRITE ord2-rec OF ordfor2.
           MOVE STATUS-ordfor2 TO TOTEM-ERR-STAT
           MOVE "ordfor2" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ordfor2-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, BeforeDelete>
      * <TOTEM:END>
           DELETE ordfor2.
           MOVE STATUS-ordfor2 TO TOTEM-ERR-STAT
           MOVE "ordfor2" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ordfor2, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       rlistini-rlis-k-art-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-art-SPLITBUF
           MOVE rlis-articolo OF rlistini(1:6) TO 
           rlistini-rlis-k-art-SPLITBUF(1:6)
           MOVE rlis-chiave-ricerca OF rlistini(1:26) TO 
           rlistini-rlis-k-art-SPLITBUF(7:26)
           .

       rlistini-rlis-k-descr-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-descr-SPLITBUF
           MOVE rlis-codice OF rlistini(1:15) TO 
           rlistini-rlis-k-descr-SPLITBUF(1:15)
           MOVE rlis-des-libera OF rlistini(1:50) TO 
           rlistini-rlis-k-descr-SPLITBUF(16:50)
           .

       DataSet1-rlistini-INITSTART.
           IF DataSet1-rlistini-KEY-Asc
              MOVE Low-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE High-Value TO rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-INITEND.
           IF DataSet1-rlistini-KEY-Asc
              MOVE High-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE Low-Value TO rlis-chiave OF rlistini
           END-IF
           .

      * rlistini
       DataSet1-rlistini-START.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY >= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY <= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-NOTGREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY <= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY >= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-GREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY > rlis-chiave OF rlistini
           ELSE
              START rlistini KEY < rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-LESS.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY < rlis-chiave OF rlistini
           ELSE
              START rlistini KEY > rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rlistini-LOCK
              READ rlistini WITH LOCK 
              KEY rlis-chiave OF rlistini
           ELSE
              READ rlistini WITH NO LOCK 
              KEY rlis-chiave OF rlistini
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT 
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tscorte-INITSTART.
           IF DataSet1-tscorte-KEY-Asc
              MOVE Low-Value TO sco-chiave
           ELSE
              MOVE High-Value TO sco-chiave
           END-IF
           .

       DataSet1-tscorte-INITEND.
           IF DataSet1-tscorte-KEY-Asc
              MOVE High-Value TO sco-chiave
           ELSE
              MOVE Low-Value TO sco-chiave
           END-IF
           .

      * tscorte
       DataSet1-tscorte-START.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY >= sco-chiave
           ELSE
              START tscorte KEY <= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-NOTGREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY <= sco-chiave
           ELSE
              START tscorte KEY >= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-GREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY > sco-chiave
           ELSE
              START tscorte KEY < sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-LESS.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY < sco-chiave
           ELSE
              START tscorte KEY > sco-chiave
           END-IF
           .

       DataSet1-tscorte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tscorte-LOCK
              READ tscorte WITH LOCK 
              KEY sco-chiave
           ELSE
              READ tscorte WITH NO LOCK 
              KEY sco-chiave
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT 
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterDelete>
      * <TOTEM:END>
           .

       tmp-forn-tmf-k-articolo-MERGE-SPLITBUF.
           INITIALIZE tmp-forn-tmf-k-articolo-SPLITBUF
           MOVE tmf-articolo(1:6) TO 
           tmp-forn-tmf-k-articolo-SPLITBUF(1:6)
           MOVE tmf-tipo(1:1) TO tmp-forn-tmf-k-articolo-SPLITBUF(7:1)
           MOVE tmf-prz-confronto(1:11) TO 
           tmp-forn-tmf-k-articolo-SPLITBUF(8:11)
           MOVE tmf-listino(1:15) TO 
           tmp-forn-tmf-k-articolo-SPLITBUF(19:15)
           .

       tmp-forn-tmf-k-data-MERGE-SPLITBUF.
           INITIALIZE tmp-forn-tmf-k-data-SPLITBUF
           MOVE tmf-tipo(1:1) TO tmp-forn-tmf-k-data-SPLITBUF(1:1)
           MOVE tmf-articolo(1:6) TO tmp-forn-tmf-k-data-SPLITBUF(2:6)
           MOVE tmf-data-fine(1:8) TO tmp-forn-tmf-k-data-SPLITBUF(8:8)
           .

       DataSet1-tmp-forn-INITSTART.
           IF DataSet1-tmp-forn-KEY-Asc
              MOVE Low-Value TO tmf-chiave
           ELSE
              MOVE High-Value TO tmf-chiave
           END-IF
           .

       DataSet1-tmp-forn-INITEND.
           IF DataSet1-tmp-forn-KEY-Asc
              MOVE High-Value TO tmf-chiave
           ELSE
              MOVE Low-Value TO tmf-chiave
           END-IF
           .

      * tmp-forn
       DataSet1-tmp-forn-START.
           IF DataSet1-tmp-forn-KEY-Asc
              START tmp-forn KEY >= tmf-chiave
           ELSE
              START tmp-forn KEY <= tmf-chiave
           END-IF
           .

       DataSet1-tmp-forn-START-NOTGREATER.
           IF DataSet1-tmp-forn-KEY-Asc
              START tmp-forn KEY <= tmf-chiave
           ELSE
              START tmp-forn KEY >= tmf-chiave
           END-IF
           .

       DataSet1-tmp-forn-START-GREATER.
           IF DataSet1-tmp-forn-KEY-Asc
              START tmp-forn KEY > tmf-chiave
           ELSE
              START tmp-forn KEY < tmf-chiave
           END-IF
           .

       DataSet1-tmp-forn-START-LESS.
           IF DataSet1-tmp-forn-KEY-Asc
              START tmp-forn KEY < tmf-chiave
           ELSE
              START tmp-forn KEY > tmf-chiave
           END-IF
           .

       DataSet1-tmp-forn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-forn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-forn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-forn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeWrite>
      * <TOTEM:END>
           WRITE tmf-rec OF tmp-forn.
           MOVE STATUS-tmp-forn TO TOTEM-ERR-STAT
           MOVE "tmp-forn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-forn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-forn TO TOTEM-ERR-STAT
           MOVE "tmp-forn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-forn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-forn TO TOTEM-ERR-STAT
           MOVE "tmp-forn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-forn, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-qta-vend-INITSTART.
           IF DataSet1-qta-vend-KEY-Asc
              MOVE Low-Value TO qta-chiave
           ELSE
              MOVE High-Value TO qta-chiave
           END-IF
           .

       DataSet1-qta-vend-INITEND.
           IF DataSet1-qta-vend-KEY-Asc
              MOVE High-Value TO qta-chiave
           ELSE
              MOVE Low-Value TO qta-chiave
           END-IF
           .

      * qta-vend
       DataSet1-qta-vend-START.
           IF DataSet1-qta-vend-KEY-Asc
              START qta-vend KEY >= qta-chiave
           ELSE
              START qta-vend KEY <= qta-chiave
           END-IF
           .

       DataSet1-qta-vend-START-NOTGREATER.
           IF DataSet1-qta-vend-KEY-Asc
              START qta-vend KEY <= qta-chiave
           ELSE
              START qta-vend KEY >= qta-chiave
           END-IF
           .

       DataSet1-qta-vend-START-GREATER.
           IF DataSet1-qta-vend-KEY-Asc
              START qta-vend KEY > qta-chiave
           ELSE
              START qta-vend KEY < qta-chiave
           END-IF
           .

       DataSet1-qta-vend-START-LESS.
           IF DataSet1-qta-vend-KEY-Asc
              START qta-vend KEY < qta-chiave
           ELSE
              START qta-vend KEY > qta-chiave
           END-IF
           .

       DataSet1-qta-vend-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-qta-vend-LOCK
              READ qta-vend WITH LOCK 
              KEY qta-chiave
           ELSE
              READ qta-vend WITH NO LOCK 
              KEY qta-chiave
           END-IF
           MOVE STATUS-qta-vend TO TOTEM-ERR-STAT 
           MOVE "qta-vend" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-qta-vend-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-qta-vend-KEY-Asc
              IF DataSet1-qta-vend-LOCK
                 READ qta-vend NEXT WITH LOCK
              ELSE
                 READ qta-vend NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-qta-vend-LOCK
                 READ qta-vend PREVIOUS WITH LOCK
              ELSE
                 READ qta-vend PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-qta-vend TO TOTEM-ERR-STAT
           MOVE "qta-vend" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-qta-vend-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-qta-vend-KEY-Asc
              IF DataSet1-qta-vend-LOCK
                 READ qta-vend PREVIOUS WITH LOCK
              ELSE
                 READ qta-vend PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-qta-vend-LOCK
                 READ qta-vend NEXT WITH LOCK
              ELSE
                 READ qta-vend NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-qta-vend TO TOTEM-ERR-STAT
           MOVE "qta-vend" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-qta-vend-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-qta-vend TO TOTEM-ERR-STAT
           MOVE "qta-vend" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-qta-vend-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-qta-vend TO TOTEM-ERR-STAT
           MOVE "qta-vend" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-qta-vend-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-qta-vend TO TOTEM-ERR-STAT
           MOVE "qta-vend" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-vend, AfterDelete>
      * <TOTEM:END>
           .

       coperfab-k-listino-MERGE-SPLITBUF.
           INITIALIZE coperfab-k-listino-SPLITBUF
           MOVE cpf-listino(1:5) TO coperfab-k-listino-SPLITBUF(1:5)
           MOVE cpf-articolo(1:6) TO coperfab-k-listino-SPLITBUF(6:6)
           .

       coperfab-k-forn-MERGE-SPLITBUF.
           INITIALIZE coperfab-k-forn-SPLITBUF
           MOVE cpf-fornitore(1:5) TO coperfab-k-forn-SPLITBUF(1:5)
           MOVE cpf-destino(1:5) TO coperfab-k-forn-SPLITBUF(6:5)
           MOVE cpf-chiave(1:11) TO coperfab-k-forn-SPLITBUF(11:11)
           .

       DataSet1-coperfab-INITSTART.
           IF DataSet1-coperfab-KEY-Asc
              MOVE Low-Value TO cpf-chiave
           ELSE
              MOVE High-Value TO cpf-chiave
           END-IF
           .

       DataSet1-coperfab-INITEND.
           IF DataSet1-coperfab-KEY-Asc
              MOVE High-Value TO cpf-chiave
           ELSE
              MOVE Low-Value TO cpf-chiave
           END-IF
           .

      * coperfab
       DataSet1-coperfab-START.
           IF DataSet1-coperfab-KEY-Asc
              START coperfab KEY >= cpf-chiave
           ELSE
              START coperfab KEY <= cpf-chiave
           END-IF
           .

       DataSet1-coperfab-START-NOTGREATER.
           IF DataSet1-coperfab-KEY-Asc
              START coperfab KEY <= cpf-chiave
           ELSE
              START coperfab KEY >= cpf-chiave
           END-IF
           .

       DataSet1-coperfab-START-GREATER.
           IF DataSet1-coperfab-KEY-Asc
              START coperfab KEY > cpf-chiave
           ELSE
              START coperfab KEY < cpf-chiave
           END-IF
           .

       DataSet1-coperfab-START-LESS.
           IF DataSet1-coperfab-KEY-Asc
              START coperfab KEY < cpf-chiave
           ELSE
              START coperfab KEY > cpf-chiave
           END-IF
           .

       DataSet1-coperfab-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-coperfab-LOCK
              READ coperfab WITH LOCK 
              KEY cpf-chiave
           ELSE
              READ coperfab WITH NO LOCK 
              KEY cpf-chiave
           END-IF
           PERFORM coperfab-k-listino-MERGE-SPLITBUF
           PERFORM coperfab-k-forn-MERGE-SPLITBUF
           MOVE STATUS-coperfab TO TOTEM-ERR-STAT 
           MOVE "coperfab" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-coperfab-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-coperfab-KEY-Asc
              IF DataSet1-coperfab-LOCK
                 READ coperfab NEXT WITH LOCK
              ELSE
                 READ coperfab NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-coperfab-LOCK
                 READ coperfab PREVIOUS WITH LOCK
              ELSE
                 READ coperfab PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM coperfab-k-listino-MERGE-SPLITBUF
           PERFORM coperfab-k-forn-MERGE-SPLITBUF
           MOVE STATUS-coperfab TO TOTEM-ERR-STAT
           MOVE "coperfab" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-coperfab-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-coperfab-KEY-Asc
              IF DataSet1-coperfab-LOCK
                 READ coperfab PREVIOUS WITH LOCK
              ELSE
                 READ coperfab PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-coperfab-LOCK
                 READ coperfab NEXT WITH LOCK
              ELSE
                 READ coperfab NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM coperfab-k-listino-MERGE-SPLITBUF
           PERFORM coperfab-k-forn-MERGE-SPLITBUF
           MOVE STATUS-coperfab TO TOTEM-ERR-STAT
           MOVE "coperfab" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-coperfab-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeWrite>
      * <TOTEM:END>
           WRITE cpf-rec OF coperfab.
           MOVE STATUS-coperfab TO TOTEM-ERR-STAT
           MOVE "coperfab" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-coperfab-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeRewrite>
      * <TOTEM:END>
           REWRITE cpf-rec OF coperfab.
           MOVE STATUS-coperfab TO TOTEM-ERR-STAT
           MOVE "coperfab" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-coperfab-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, BeforeDelete>
      * <TOTEM:END>
           DELETE coperfab.
           MOVE STATUS-coperfab TO TOTEM-ERR-STAT
           MOVE "coperfab" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:coperfab, AfterDelete>
      * <TOTEM:END>
           .

       destinif-K1-MERGE-SPLITBUF.
           INITIALIZE destinif-K1-SPLITBUF
           MOVE desf-ragsoc-1(1:40) TO destinif-K1-SPLITBUF(1:40)
           MOVE desf-codice(1:5) TO destinif-K1-SPLITBUF(41:5)
           MOVE desf-prog(1:5) TO destinif-K1-SPLITBUF(46:5)
           .

       destinif-desf-k2-MERGE-SPLITBUF.
           INITIALIZE destinif-desf-k2-SPLITBUF
           MOVE desf-codice(1:5) TO destinif-desf-k2-SPLITBUF(1:5)
           MOVE desf-ragsoc-1(1:40) TO destinif-desf-k2-SPLITBUF(6:40)
           MOVE desf-prog(1:5) TO destinif-desf-k2-SPLITBUF(46:5)
           .

       DataSet1-destinif-INITSTART.
           IF DataSet1-destinif-KEY-Asc
              MOVE Low-Value TO desf-chiave
           ELSE
              MOVE High-Value TO desf-chiave
           END-IF
           .

       DataSet1-destinif-INITEND.
           IF DataSet1-destinif-KEY-Asc
              MOVE High-Value TO desf-chiave
           ELSE
              MOVE Low-Value TO desf-chiave
           END-IF
           .

      * destinif
       DataSet1-destinif-START.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY >= desf-chiave
           ELSE
              START destinif KEY <= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-NOTGREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY <= desf-chiave
           ELSE
              START destinif KEY >= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-GREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY > desf-chiave
           ELSE
              START destinif KEY < desf-chiave
           END-IF
           .

       DataSet1-destinif-START-LESS.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY < desf-chiave
           ELSE
              START destinif KEY > desf-chiave
           END-IF
           .

       DataSet1-destinif-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destinif-LOCK
              READ destinif WITH LOCK 
              KEY desf-chiave
           ELSE
              READ destinif WITH NO LOCK 
              KEY desf-chiave
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT 
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-impforn-INITSTART.
           IF DataSet1-impforn-KEY-Asc
              MOVE Low-Value TO imf-chiave OF impforn
           ELSE
              MOVE High-Value TO imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-INITEND.
           IF DataSet1-impforn-KEY-Asc
              MOVE High-Value TO imf-chiave OF impforn
           ELSE
              MOVE Low-Value TO imf-chiave OF impforn
           END-IF
           .

      * impforn
       DataSet1-impforn-START.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY >= imf-chiave OF impforn
           ELSE
              START impforn KEY <= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-NOTGREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY <= imf-chiave OF impforn
           ELSE
              START impforn KEY >= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-GREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY > imf-chiave OF impforn
           ELSE
              START impforn KEY < imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-LESS.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY < imf-chiave OF impforn
           ELSE
              START impforn KEY > imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-impforn-LOCK
              READ impforn WITH LOCK 
              KEY imf-chiave OF impforn
           ELSE
              READ impforn WITH NO LOCK 
              KEY imf-chiave OF impforn
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT 
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tlistini-INITSTART.
           IF DataSet1-tlistini-KEY-Asc
              MOVE Low-Value TO tlis-chiave OF tlistini
           ELSE
              MOVE High-Value TO tlis-chiave OF tlistini
           END-IF
           .

       DataSet1-tlistini-INITEND.
           IF DataSet1-tlistini-KEY-Asc
              MOVE High-Value TO tlis-chiave OF tlistini
           ELSE
              MOVE Low-Value TO tlis-chiave OF tlistini
           END-IF
           .

      * tlistini
       DataSet1-tlistini-START.
           IF DataSet1-tlistini-KEY-Asc
              START tlistini KEY >= tlis-chiave OF tlistini
           ELSE
              START tlistini KEY <= tlis-chiave OF tlistini
           END-IF
           .

       DataSet1-tlistini-START-NOTGREATER.
           IF DataSet1-tlistini-KEY-Asc
              START tlistini KEY <= tlis-chiave OF tlistini
           ELSE
              START tlistini KEY >= tlis-chiave OF tlistini
           END-IF
           .

       DataSet1-tlistini-START-GREATER.
           IF DataSet1-tlistini-KEY-Asc
              START tlistini KEY > tlis-chiave OF tlistini
           ELSE
              START tlistini KEY < tlis-chiave OF tlistini
           END-IF
           .

       DataSet1-tlistini-START-LESS.
           IF DataSet1-tlistini-KEY-Asc
              START tlistini KEY < tlis-chiave OF tlistini
           ELSE
              START tlistini KEY > tlis-chiave OF tlistini
           END-IF
           .

       DataSet1-tlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tlistini-LOCK
              READ tlistini WITH LOCK 
              KEY tlis-chiave OF tlistini
           ELSE
              READ tlistini WITH NO LOCK 
              KEY tlis-chiave OF tlistini
           END-IF
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT 
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tlistini-KEY-Asc
              IF DataSet1-tlistini-LOCK
                 READ tlistini NEXT WITH LOCK
              ELSE
                 READ tlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tlistini-LOCK
                 READ tlistini PREVIOUS WITH LOCK
              ELSE
                 READ tlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tlistini-KEY-Asc
              IF DataSet1-tlistini-LOCK
                 READ tlistini PREVIOUS WITH LOCK
              ELSE
                 READ tlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tlistini-LOCK
                 READ tlistini NEXT WITH LOCK
              ELSE
                 READ tlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lineseq-LOCK
              READ lineseq WITH LOCK 
           ELSE
              READ lineseq WITH NO LOCK 
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT 
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lineseq-KEY-Asc
              IF DataSet1-lineseq-LOCK
                 READ lineseq NEXT WITH LOCK
              ELSE
                 READ lineseq NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-INITSTART.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              MOVE Low-Value TO toa-chiave
           ELSE
              MOVE High-Value TO toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-INITEND.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              MOVE High-Value TO toa-chiave
           ELSE
              MOVE Low-Value TO toa-chiave
           END-IF
           .

      * tmp-ordf-art
       DataSet1-tmp-ordf-art-START.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY >= toa-chiave
           ELSE
              START tmp-ordf-art KEY <= toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-START-NOTGREATER.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY <= toa-chiave
           ELSE
              START tmp-ordf-art KEY >= toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-START-GREATER.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY > toa-chiave
           ELSE
              START tmp-ordf-art KEY < toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-START-LESS.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY < toa-chiave
           ELSE
              START tmp-ordf-art KEY > toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeWrite>
      * <TOTEM:END>
           WRITE toa-rec OF tmp-ordf-art.
           MOVE STATUS-tmp-ordf-art TO TOTEM-ERR-STAT
           MOVE "tmp-ordf-art" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-ordf-art TO TOTEM-ERR-STAT
           MOVE "tmp-ordf-art" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-ordf-art TO TOTEM-ERR-STAT
           MOVE "tmp-ordf-art" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           IF DataSet1-tordforn-KEY-Asc
              MOVE Low-Value TO tof-chiave
           ELSE
              MOVE High-Value TO tof-chiave
           END-IF
           .

       DataSet1-tordforn-INITEND.
           IF DataSet1-tordforn-KEY-Asc
              MOVE High-Value TO tof-chiave
           ELSE
              MOVE Low-Value TO tof-chiave
           END-IF
           .

      * tordforn
       DataSet1-tordforn-START.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY >= tof-chiave
           ELSE
              START tordforn KEY <= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-NOTGREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY <= tof-chiave
           ELSE
              START tordforn KEY >= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-GREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY > tof-chiave
           ELSE
              START tordforn KEY < tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-LESS.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY < tof-chiave
           ELSE
              START tordforn KEY > tof-chiave
           END-IF
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordforn-LOCK
              READ tordforn WITH LOCK 
              KEY tof-chiave
           ELSE
              READ tordforn WITH NO LOCK 
              KEY tof-chiave
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-sordforn-INITSTART.
           IF DataSet1-sordforn-KEY-Asc
              MOVE Low-Value TO sof-chiave OF sordforn
           ELSE
              MOVE High-Value TO sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-INITEND.
           IF DataSet1-sordforn-KEY-Asc
              MOVE High-Value TO sof-chiave OF sordforn
           ELSE
              MOVE Low-Value TO sof-chiave OF sordforn
           END-IF
           .

      * sordforn
       DataSet1-sordforn-START.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY >= sof-chiave OF sordforn
           ELSE
              START sordforn KEY <= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-NOTGREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY <= sof-chiave OF sordforn
           ELSE
              START sordforn KEY >= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-GREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY > sof-chiave OF sordforn
           ELSE
              START sordforn KEY < sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-LESS.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY < sof-chiave OF sordforn
           ELSE
              START sordforn KEY > sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-sordforn-LOCK
              READ sordforn WITH LOCK 
              KEY sof-chiave OF sordforn
           ELSE
              READ sordforn WITH NO LOCK 
              KEY sof-chiave OF sordforn
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT 
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterDelete>
      * <TOTEM:END>
           .

       distinteb-k-articolo-MERGE-SPLITBUF.
           INITIALIZE distinteb-k-articolo-SPLITBUF
           MOVE dis-articolo-finale(1:6) TO 
           distinteb-k-articolo-SPLITBUF(1:6)
           MOVE dis-chiave(1:5) TO distinteb-k-articolo-SPLITBUF(7:5)
           .

       distinteb-k-progmag-MERGE-SPLITBUF.
           INITIALIZE distinteb-k-progmag-SPLITBUF
           MOVE dis-chiave-progmag(1:20) TO 
           distinteb-k-progmag-SPLITBUF(1:20)
           .

       DataSet1-distinteb-INITSTART.
           IF DataSet1-distinteb-KEY-Asc
              MOVE Low-Value TO dis-chiave
           ELSE
              MOVE High-Value TO dis-chiave
           END-IF
           .

       DataSet1-distinteb-INITEND.
           IF DataSet1-distinteb-KEY-Asc
              MOVE High-Value TO dis-chiave
           ELSE
              MOVE Low-Value TO dis-chiave
           END-IF
           .

      * distinteb
       DataSet1-distinteb-START.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY >= dis-chiave
           ELSE
              START distinteb KEY <= dis-chiave
           END-IF
           .

       DataSet1-distinteb-START-NOTGREATER.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY <= dis-chiave
           ELSE
              START distinteb KEY >= dis-chiave
           END-IF
           .

       DataSet1-distinteb-START-GREATER.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY > dis-chiave
           ELSE
              START distinteb KEY < dis-chiave
           END-IF
           .

       DataSet1-distinteb-START-LESS.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY < dis-chiave
           ELSE
              START distinteb KEY > dis-chiave
           END-IF
           .

       DataSet1-distinteb-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-distinteb-LOCK
              READ distinteb WITH LOCK 
              KEY dis-chiave
           ELSE
              READ distinteb WITH NO LOCK 
              KEY dis-chiave
           END-IF
           PERFORM distinteb-k-articolo-MERGE-SPLITBUF
           PERFORM distinteb-k-progmag-MERGE-SPLITBUF
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT 
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-distinteb-KEY-Asc
              IF DataSet1-distinteb-LOCK
                 READ distinteb NEXT WITH LOCK
              ELSE
                 READ distinteb NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-distinteb-LOCK
                 READ distinteb PREVIOUS WITH LOCK
              ELSE
                 READ distinteb PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM distinteb-k-articolo-MERGE-SPLITBUF
           PERFORM distinteb-k-progmag-MERGE-SPLITBUF
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-distinteb-KEY-Asc
              IF DataSet1-distinteb-LOCK
                 READ distinteb PREVIOUS WITH LOCK
              ELSE
                 READ distinteb PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-distinteb-LOCK
                 READ distinteb NEXT WITH LOCK
              ELSE
                 READ distinteb NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM distinteb-k-articolo-MERGE-SPLITBUF
           PERFORM distinteb-k-progmag-MERGE-SPLITBUF
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge2-INITSTART.
           IF DataSet1-tparamge2-KEY-Asc
              MOVE Low-Value TO tge2-chiave
           ELSE
              MOVE High-Value TO tge2-chiave
           END-IF
           .

       DataSet1-tparamge2-INITEND.
           IF DataSet1-tparamge2-KEY-Asc
              MOVE High-Value TO tge2-chiave
           ELSE
              MOVE Low-Value TO tge2-chiave
           END-IF
           .

      * tparamge2
       DataSet1-tparamge2-START.
           IF DataSet1-tparamge2-KEY-Asc
              START tparamge2 KEY >= tge2-chiave
           ELSE
              START tparamge2 KEY <= tge2-chiave
           END-IF
           .

       DataSet1-tparamge2-START-NOTGREATER.
           IF DataSet1-tparamge2-KEY-Asc
              START tparamge2 KEY <= tge2-chiave
           ELSE
              START tparamge2 KEY >= tge2-chiave
           END-IF
           .

       DataSet1-tparamge2-START-GREATER.
           IF DataSet1-tparamge2-KEY-Asc
              START tparamge2 KEY > tge2-chiave
           ELSE
              START tparamge2 KEY < tge2-chiave
           END-IF
           .

       DataSet1-tparamge2-START-LESS.
           IF DataSet1-tparamge2-KEY-Asc
              START tparamge2 KEY < tge2-chiave
           ELSE
              START tparamge2 KEY > tge2-chiave
           END-IF
           .

       DataSet1-tparamge2-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge2-LOCK
              READ tparamge2 WITH LOCK 
              KEY tge2-chiave
           ELSE
              READ tparamge2 WITH NO LOCK 
              KEY tge2-chiave
           END-IF
           MOVE STATUS-tparamge2 TO TOTEM-ERR-STAT 
           MOVE "tparamge2" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge2-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge2-KEY-Asc
              IF DataSet1-tparamge2-LOCK
                 READ tparamge2 NEXT WITH LOCK
              ELSE
                 READ tparamge2 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge2-LOCK
                 READ tparamge2 PREVIOUS WITH LOCK
              ELSE
                 READ tparamge2 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge2 TO TOTEM-ERR-STAT
           MOVE "tparamge2" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge2-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge2-KEY-Asc
              IF DataSet1-tparamge2-LOCK
                 READ tparamge2 PREVIOUS WITH LOCK
              ELSE
                 READ tparamge2 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge2-LOCK
                 READ tparamge2 NEXT WITH LOCK
              ELSE
                 READ tparamge2 NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge2 TO TOTEM-ERR-STAT
           MOVE "tparamge2" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge2-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge2 TO TOTEM-ERR-STAT
           MOVE "tparamge2" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge2-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge2 TO TOTEM-ERR-STAT
           MOVE "tparamge2" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge2-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge2 TO TOTEM-ERR-STAT
           MOVE "tparamge2" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge2, AfterDelete>
      * <TOTEM:END>
           .

       catart-cat-art-princ-MERGE-SPLITBUF.
           INITIALIZE catart-cat-art-princ-SPLITBUF
           MOVE cat-princ OF catart(1:6) TO 
           catart-cat-art-princ-SPLITBUF(1:6)
           MOVE cat-codice OF catart(1:6) TO 
           catart-cat-art-princ-SPLITBUF(7:6)
           .

       DataSet1-catart-INITSTART.
           IF DataSet1-catart-KEY-Asc
              MOVE Low-Value TO cat-chiave OF catart
           ELSE
              MOVE High-Value TO cat-chiave OF catart
           END-IF
           .

       DataSet1-catart-INITEND.
           IF DataSet1-catart-KEY-Asc
              MOVE High-Value TO cat-chiave OF catart
           ELSE
              MOVE Low-Value TO cat-chiave OF catart
           END-IF
           .

      * catart
       DataSet1-catart-START.
           IF DataSet1-catart-KEY-Asc
              START catart KEY >= cat-chiave OF catart
           ELSE
              START catart KEY <= cat-chiave OF catart
           END-IF
           .

       DataSet1-catart-START-NOTGREATER.
           IF DataSet1-catart-KEY-Asc
              START catart KEY <= cat-chiave OF catart
           ELSE
              START catart KEY >= cat-chiave OF catart
           END-IF
           .

       DataSet1-catart-START-GREATER.
           IF DataSet1-catart-KEY-Asc
              START catart KEY > cat-chiave OF catart
           ELSE
              START catart KEY < cat-chiave OF catart
           END-IF
           .

       DataSet1-catart-START-LESS.
           IF DataSet1-catart-KEY-Asc
              START catart KEY < cat-chiave OF catart
           ELSE
              START catart KEY > cat-chiave OF catart
           END-IF
           .

       DataSet1-catart-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-catart-LOCK
              READ catart WITH LOCK 
              KEY cat-chiave OF catart
           ELSE
              READ catart WITH NO LOCK 
              KEY cat-chiave OF catart
           END-IF
           PERFORM catart-cat-art-princ-MERGE-SPLITBUF
           MOVE status-catart TO TOTEM-ERR-STAT 
           MOVE "catart" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-catart-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-catart-KEY-Asc
              IF DataSet1-catart-LOCK
                 READ catart NEXT WITH LOCK
              ELSE
                 READ catart NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-catart-LOCK
                 READ catart PREVIOUS WITH LOCK
              ELSE
                 READ catart PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM catart-cat-art-princ-MERGE-SPLITBUF
           MOVE status-catart TO TOTEM-ERR-STAT
           MOVE "catart" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-catart-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-catart-KEY-Asc
              IF DataSet1-catart-LOCK
                 READ catart PREVIOUS WITH LOCK
              ELSE
                 READ catart PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-catart-LOCK
                 READ catart NEXT WITH LOCK
              ELSE
                 READ catart NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM catart-cat-art-princ-MERGE-SPLITBUF
           MOVE status-catart TO TOTEM-ERR-STAT
           MOVE "catart" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-catart-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeWrite>
      * <TOTEM:END>
           MOVE status-catart TO TOTEM-ERR-STAT
           MOVE "catart" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-catart-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeRewrite>
      * <TOTEM:END>
           MOVE status-catart TO TOTEM-ERR-STAT
           MOVE "catart" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-catart-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:catart, BeforeDelete>
      * <TOTEM:END>
           MOVE status-catart TO TOTEM-ERR-STAT
           MOVE "catart" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:catart, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordfor-INITSTART.
           IF DataSet1-tmp-ordfor-KEY-Asc
              MOVE Low-Value TO tmp-ord-chiave
           ELSE
              MOVE High-Value TO tmp-ord-chiave
           END-IF
           .

       DataSet1-tmp-ordfor-INITEND.
           IF DataSet1-tmp-ordfor-KEY-Asc
              MOVE High-Value TO tmp-ord-chiave
           ELSE
              MOVE Low-Value TO tmp-ord-chiave
           END-IF
           .

      * tmp-ordfor
       DataSet1-tmp-ordfor-START.
           IF DataSet1-tmp-ordfor-KEY-Asc
              START tmp-ordfor KEY >= tmp-ord-chiave
           ELSE
              START tmp-ordfor KEY <= tmp-ord-chiave
           END-IF
           .

       DataSet1-tmp-ordfor-START-NOTGREATER.
           IF DataSet1-tmp-ordfor-KEY-Asc
              START tmp-ordfor KEY <= tmp-ord-chiave
           ELSE
              START tmp-ordfor KEY >= tmp-ord-chiave
           END-IF
           .

       DataSet1-tmp-ordfor-START-GREATER.
           IF DataSet1-tmp-ordfor-KEY-Asc
              START tmp-ordfor KEY > tmp-ord-chiave
           ELSE
              START tmp-ordfor KEY < tmp-ord-chiave
           END-IF
           .

       DataSet1-tmp-ordfor-START-LESS.
           IF DataSet1-tmp-ordfor-KEY-Asc
              START tmp-ordfor KEY < tmp-ord-chiave
           ELSE
              START tmp-ordfor KEY > tmp-ord-chiave
           END-IF
           .

       DataSet1-tmp-ordfor-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmp-ordfor-LOCK
              READ tmp-ordfor WITH LOCK 
              KEY tmp-ord-chiave
           ELSE
              READ tmp-ordfor WITH NO LOCK 
              KEY tmp-ord-chiave
           END-IF
           MOVE STATUS-tmp-ordfor TO TOTEM-ERR-STAT 
           MOVE "tmp-ordfor" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordfor-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmp-ordfor-KEY-Asc
              IF DataSet1-tmp-ordfor-LOCK
                 READ tmp-ordfor NEXT WITH LOCK
              ELSE
                 READ tmp-ordfor NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-ordfor-LOCK
                 READ tmp-ordfor PREVIOUS WITH LOCK
              ELSE
                 READ tmp-ordfor PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmp-ordfor TO TOTEM-ERR-STAT
           MOVE "tmp-ordfor" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordfor-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmp-ordfor-KEY-Asc
              IF DataSet1-tmp-ordfor-LOCK
                 READ tmp-ordfor PREVIOUS WITH LOCK
              ELSE
                 READ tmp-ordfor PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-ordfor-LOCK
                 READ tmp-ordfor NEXT WITH LOCK
              ELSE
                 READ tmp-ordfor NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmp-ordfor TO TOTEM-ERR-STAT
           MOVE "tmp-ordfor" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordfor-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeWrite>
      * <TOTEM:END>
           WRITE tmp-ord-rec OF tmp-ordfor.
           MOVE STATUS-tmp-ordfor TO TOTEM-ERR-STAT
           MOVE "tmp-ordfor" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordfor-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tmp-ord-rec OF tmp-ordfor.
           MOVE STATUS-tmp-ordfor TO TOTEM-ERR-STAT
           MOVE "tmp-ordfor" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordfor-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, BeforeDelete>
      * <TOTEM:END>
           DELETE tmp-ordfor.
           MOVE STATUS-tmp-ordfor TO TOTEM-ERR-STAT
           MOVE "tmp-ordfor" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordfor, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-multigest-INITSTART.
           IF DataSet1-multigest-KEY-Asc
              MOVE Low-Value TO mul-chiave
           ELSE
              MOVE High-Value TO mul-chiave
           END-IF
           .

       DataSet1-multigest-INITEND.
           IF DataSet1-multigest-KEY-Asc
              MOVE High-Value TO mul-chiave
           ELSE
              MOVE Low-Value TO mul-chiave
           END-IF
           .

      * multigest
       DataSet1-multigest-START.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY >= mul-chiave
           ELSE
              START multigest KEY <= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-NOTGREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY <= mul-chiave
           ELSE
              START multigest KEY >= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-GREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY > mul-chiave
           ELSE
              START multigest KEY < mul-chiave
           END-IF
           .

       DataSet1-multigest-START-LESS.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY < mul-chiave
           ELSE
              START multigest KEY > mul-chiave
           END-IF
           .

       DataSet1-multigest-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-multigest-LOCK
              READ multigest WITH LOCK 
              KEY mul-chiave
           ELSE
              READ multigest WITH NO LOCK 
              KEY mul-chiave
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT 
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeWrite>
      * <TOTEM:END>
           WRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeDelete>
      * <TOTEM:END>
           DELETE multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-fileseq-INITSTART.
           .

       DataSet1-fileseq-INITEND.
           .

       DataSet1-fileseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-fileseq-LOCK
              READ fileseq WITH LOCK 
           ELSE
              READ fileseq WITH NO LOCK 
           END-IF
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT 
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-fileseq-KEY-Asc
              IF DataSet1-fileseq-LOCK
                 READ fileseq NEXT WITH LOCK
              ELSE
                 READ fileseq NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-INITSTART.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE Low-Value TO tsi-chiave
           ELSE
              MOVE High-Value TO tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-INITEND.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE High-Value TO tsi-chiave
           ELSE
              MOVE Low-Value TO tsi-chiave
           END-IF
           .

      * tsetinvio
       DataSet1-tsetinvio-START.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY >= tsi-chiave
           ELSE
              START tsetinvio KEY <= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-NOTGREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY <= tsi-chiave
           ELSE
              START tsetinvio KEY >= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-GREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY > tsi-chiave
           ELSE
              START tsetinvio KEY < tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-LESS.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY < tsi-chiave
           ELSE
              START tsetinvio KEY > tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-LOCK
              READ tsetinvio WITH LOCK 
              KEY tsi-chiave
           ELSE
              READ tsetinvio WITH NO LOCK 
              KEY tsi-chiave
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT 
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeWrite>
      * <TOTEM:END>
           WRITE tsi-rec OF tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tsi-rec OF tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeDelete>
      * <TOTEM:END>
           DELETE tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-INITSTART.
           .

       DataSet1-lineseq1-INITEND.
           .

       DataSet1-lineseq1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lineseq1-LOCK
              READ lineseq1 WITH LOCK 
           ELSE
              READ lineseq1 WITH NO LOCK 
           END-IF
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT 
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lineseq1-KEY-Asc
              IF DataSet1-lineseq1-LOCK
                 READ lineseq1 NEXT WITH LOCK
              ELSE
                 READ lineseq1 NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-qta-pordini-INITSTART.
           IF DataSet1-qta-pordini-KEY-Asc
              MOVE Low-Value TO qp-chiave
           ELSE
              MOVE High-Value TO qp-chiave
           END-IF
           .

       DataSet1-qta-pordini-INITEND.
           IF DataSet1-qta-pordini-KEY-Asc
              MOVE High-Value TO qp-chiave
           ELSE
              MOVE Low-Value TO qp-chiave
           END-IF
           .

      * qta-pordini
       DataSet1-qta-pordini-START.
           IF DataSet1-qta-pordini-KEY-Asc
              START qta-pordini KEY >= qp-chiave
           ELSE
              START qta-pordini KEY <= qp-chiave
           END-IF
           .

       DataSet1-qta-pordini-START-NOTGREATER.
           IF DataSet1-qta-pordini-KEY-Asc
              START qta-pordini KEY <= qp-chiave
           ELSE
              START qta-pordini KEY >= qp-chiave
           END-IF
           .

       DataSet1-qta-pordini-START-GREATER.
           IF DataSet1-qta-pordini-KEY-Asc
              START qta-pordini KEY > qp-chiave
           ELSE
              START qta-pordini KEY < qp-chiave
           END-IF
           .

       DataSet1-qta-pordini-START-LESS.
           IF DataSet1-qta-pordini-KEY-Asc
              START qta-pordini KEY < qp-chiave
           ELSE
              START qta-pordini KEY > qp-chiave
           END-IF
           .

       DataSet1-qta-pordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-qta-pordini-LOCK
              READ qta-pordini WITH LOCK 
              KEY qp-chiave
           ELSE
              READ qta-pordini WITH NO LOCK 
              KEY qp-chiave
           END-IF
           MOVE STATUS-qta-pordini TO TOTEM-ERR-STAT 
           MOVE "qta-pordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-qta-pordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-qta-pordini-KEY-Asc
              IF DataSet1-qta-pordini-LOCK
                 READ qta-pordini NEXT WITH LOCK
              ELSE
                 READ qta-pordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-qta-pordini-LOCK
                 READ qta-pordini PREVIOUS WITH LOCK
              ELSE
                 READ qta-pordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-qta-pordini TO TOTEM-ERR-STAT
           MOVE "qta-pordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-qta-pordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-qta-pordini-KEY-Asc
              IF DataSet1-qta-pordini-LOCK
                 READ qta-pordini PREVIOUS WITH LOCK
              ELSE
                 READ qta-pordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-qta-pordini-LOCK
                 READ qta-pordini NEXT WITH LOCK
              ELSE
                 READ qta-pordini NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-qta-pordini TO TOTEM-ERR-STAT
           MOVE "qta-pordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-qta-pordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeWrite>
      * <TOTEM:END>
           WRITE qp-rec OF qta-pordini.
           MOVE STATUS-qta-pordini TO TOTEM-ERR-STAT
           MOVE "qta-pordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-qta-pordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE qp-rec OF qta-pordini.
           MOVE STATUS-qta-pordini TO TOTEM-ERR-STAT
           MOVE "qta-pordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-qta-pordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, BeforeDelete>
      * <TOTEM:END>
           DELETE qta-pordini.
           MOVE STATUS-qta-pordini TO TOTEM-ERR-STAT
           MOVE "qta-pordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:qta-pordini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-genlog-INITSTART.
           .

       DataSet1-genlog-INITEND.
           .

       DataSet1-genlog-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-genlog-LOCK
              READ genlog WITH LOCK 
           ELSE
              READ genlog WITH NO LOCK 
           END-IF
           MOVE STATUS-genlog TO TOTEM-ERR-STAT 
           MOVE "genlog" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-genlog-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-genlog-KEY-Asc
              IF DataSet1-genlog-LOCK
                 READ genlog NEXT WITH LOCK
              ELSE
                 READ genlog NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-genlog TO TOTEM-ERR-STAT
           MOVE "genlog" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-genlog-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-genlog-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-genlog TO TOTEM-ERR-STAT
           MOVE "genlog" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-genlog-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-genlog TO TOTEM-ERR-STAT
           MOVE "genlog" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-genlog-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-genlog TO TOTEM-ERR-STAT
           MOVE "genlog" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:genlog, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE ord-rec OF ordfor
           INITIALIZE ord2-rec OF ordfor2
           INITIALIZE mar-rec OF tmarche
           INITIALIZE art-rec OF articoli
           INITIALIZE prg-rec OF progmag
           INITIALIZE rlis-rec OF rlistini
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE tge-rec OF tparamge
           INITIALIZE sco-rec OF tscorte
           INITIALIZE tmf-rec OF tmp-forn
           INITIALIZE cli-rec OF clienti
           INITIALIZE imp-rec OF timposte
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE qta-rec OF qta-vend
           INITIALIZE cpf-rec OF coperfab
           INITIALIZE desf-rec OF destinif
           INITIALIZE imf-rec OF impforn
           INITIALIZE tlis-rec OF tlistini
           INITIALIZE line-riga OF lineseq
           INITIALIZE toa-rec OF tmp-ordf-art
           INITIALIZE rof-rec OF rordforn
           INITIALIZE tof-rec OF tordforn
           INITIALIZE sof-rec OF sordforn
           INITIALIZE dis-rec OF distinteb
           INITIALIZE tge2-rec OF tparamge2
           INITIALIZE cat-rec OF catart
           INITIALIZE tmp-ord-rec OF tmp-ordfor
           INITIALIZE mul-rec OF multigest
           INITIALIZE rec-stampa OF fileseq
           INITIALIZE tsi-rec OF tsetinvio
           INITIALIZE prm-rec OF param
           INITIALIZE line-riga OF lineseq1
           INITIALIZE qp-rec OF qta-pordini
           INITIALIZE gl-riga OF genlog
           .


      * GRID
       form1-gd-1-Content.
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 1, Y = 1,
                CELL-DATA = "Cod",
                BITMAP = sort-bmp,
                BITMAP-NUMBER = 1,
                BITMAP-WIDTH = 16,
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 3, Y = 1,
                CELL-DATA = "Imballo",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 4, Y = 1,
                CELL-DATA = "Marca",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 5, Y = 1,
                CELL-DATA = "Sc",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 6, Y = 1,
                CELL-DATA = "Scostamento",
      * COLUMNS' SETTING
              MODIFY form1-gd-1, X = 25  
                COLUMN-COLOR = 481,
                COLUMN-FONT = Verdana10B-Occidentale,
      * COLUMNS' SETTING
              MODIFY form1-gd-1, X = 26  
                COLUMN-COLOR = 481,
                COLUMN-FONT = Verdana10B-Occidentale,
      * COLUMNS' SETTING
              MODIFY form1-gd-1, X = 36  
                COLUMN-COLOR = 231,
      * COLUMNS' SETTING
              MODIFY form1-gd-1, X = 37  
                COLUMN-COLOR = 481,
           .

      * COMBO-BOX
       cbo-marca-Content.
           .

      * GRID
       gd-scorte-Content.
           .

      * GRID
       gd-form-i-Content.
      * CELLS' SETTING
              MODIFY gd-form-i, X = 1, Y = 1,
                CELL-DATA = "Fornitore",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 2, Y = 1,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 3, Y = 1,
                CELL-DATA = "Ragione Sociale",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 4, Y = 1,
                CELL-DATA = "LT",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 5, Y = 1,
                CELL-DATA = "Qta Disp",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 6, Y = 1,
                CELL-DATA = "Qta Ord",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 7, Y = 1,
                CELL-DATA = "Confr.",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 8, Y = 1,
                CELL-DATA = "Premio",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 9, Y = 1,
                CELL-DATA = "Netto Pr",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 10, Y = 1,
                CELL-DATA = "Reale",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 11, Y = 1,
                CELL-DATA = "Listino",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 12, Y = 1,
                CELL-DATA = "Inizio",
      * CELLS' SETTING
              MODIFY gd-form-i, X = 13, Y = 1,
                CELL-DATA = "Fine",
      * COLUMNS' SETTING
              MODIFY gd-form-i, X = 6  
                COLUMN-COLOR = 176,
           .

      * GRID
       gd-form-e-Content.
      * CELLS' SETTING
              MODIFY gd-form-e, X = 1, Y = 1,
                CELL-DATA = "Fornitore",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 2, Y = 1,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 3, Y = 1,
                CELL-DATA = "Ragione Sociale",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 4, Y = 1,
                CELL-DATA = "LT",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 5, Y = 1,
                CELL-DATA = "Qta Disp",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 6, Y = 1,
                CELL-DATA = "Qta Ord",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 7, Y = 1,
                CELL-DATA = "Confr.",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 8, Y = 1,
                CELL-DATA = "Premio",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 9, Y = 1,
                CELL-DATA = "Netto Pr",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 10, Y = 1,
                CELL-DATA = "Reale",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 11, Y = 1,
                CELL-DATA = "Listino",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 12, Y = 1,
                CELL-DATA = "Inizio",
      * CELLS' SETTING
              MODIFY gd-form-e, X = 13, Y = 1,
                CELL-DATA = "Fine",
      * COLUMNS' SETTING
              MODIFY gd-form-e, X = 6  
                COLUMN-COLOR = 176,
           .

      * FD's Initialize Paragraph
       DataSet1-ordfor-INITREC.
           INITIALIZE ord-rec OF ordfor
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ordfor2-INITREC.
           INITIALIZE ord2-rec OF ordfor2
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rlistini-INITREC.
           INITIALIZE rlis-rec OF rlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tscorte-INITREC.
           INITIALIZE sco-rec OF tscorte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-forn-INITREC.
           INITIALIZE tmf-rec OF tmp-forn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-qta-vend-INITREC.
           INITIALIZE qta-rec OF qta-vend
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-coperfab-INITREC.
           INITIALIZE cpf-rec OF coperfab
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destinif-INITREC.
           INITIALIZE desf-rec OF destinif
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-impforn-INITREC.
           INITIALIZE imf-rec OF impforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tlistini-INITREC.
           INITIALIZE tlis-rec OF tlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-ordf-art-INITREC.
           INITIALIZE toa-rec OF tmp-ordf-art
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-sordforn-INITREC.
           INITIALIZE sof-rec OF sordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-distinteb-INITREC.
           INITIALIZE dis-rec OF distinteb
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge2-INITREC.
           INITIALIZE tge2-rec OF tparamge2
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-catart-INITREC.
           INITIALIZE cat-rec OF catart
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-ordfor-INITREC.
           INITIALIZE tmp-ord-rec OF tmp-ordfor
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-multigest-INITREC.
           INITIALIZE mul-rec OF multigest
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-fileseq-INITREC.
           INITIALIZE rec-stampa OF fileseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tsetinvio-INITREC.
           INITIALIZE tsi-rec OF tsetinvio
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq1-INITREC.
           INITIALIZE line-riga OF lineseq1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-qta-pordini-INITREC.
           INITIALIZE qp-rec OF qta-pordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-genlog-INITREC.
           INITIALIZE gl-riga OF genlog
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Screen1-Open-Routine.
           PERFORM Screen1-Scrn
           PERFORM Screen1-Proc
           .

       Screen1-Scrn.
           PERFORM Screen1-Create-Win
           PERFORM Screen1-Init-Value
           PERFORM Screen1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen1-DISPLAY
           .

       Screen1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 49,50,
              SIZE 160,25,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS screen1-Handle,
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen1 UPON screen1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY form1-gd-1, DISPLAY-COLUMNS (1, 7, 40, 45, 48, 48, 
           48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 
           48, 53, 58, 65, 72, 79, 85, 91, 99, 107, 115, 123, 131, 139, 
           147, 151)
           .

       Screen1-PROC.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeAccept>
           accept imp-data from century-date.
           start timposte key <= imp-chiave
                 invalid continue
             not invalid
                 read timposte previous
           end-start.
           move 0 to sel-marca.
           move 0 to sel-scorta.
           set prima-volta      to true.
           set CallAssociazioni to false.
           perform SCR-ELAB-OPEN-ROUTINE.
           set prima-volta to false.
           move tge2-data-ricalcolo to como-data.
           perform DATE-TO-SCREEN.
           move como-data to lab-data-r-buf.
           display lab-data-r.
           if LK-BL-PROG-ID not = "desktop"
              modify screen1-handle, visible true
           else                               
              perform ELABORAZIONE-AUTOMATICA
              move 27 to key-status
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen1
                 ON EXCEPTION
                    PERFORM Screen1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY screen1-Handle
           INITIALIZE Key-Status
           .

       Screen1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterAccept>
           if CallAssociazioni
              set CallAssociazioni to false
              inquire form1-gd-1(store-riga, 1), 
                      hidden-data in gruppo-hidden
              move hid-chiave to ord2-chiave
      *    vado a prendere l'ultimo articolo della catena
              if hid-sostituto not = zero
                 perform PUNTA-COLLEGATO
              else
                 read ordfor2 no lock 
                      invalid                 
                      if LK-BL-PROG-ID not = "desktop"
                         display message "Chiave non trovata" 
           ord2-chiave
                                  x"0d0a""Contattare assistenza"
                                   title tit-err
                                    icon 3
                      end-if
                  not invalid
                      set aggiorna-copertura to false
                      perform SCR-FORN-OPEN-ROUTINE
                      if aggiorna-copertura
      *                   inquire form1-gd-1(event-data-2, 1), hidden-data in gruppo-hidden
                         inquire form1-gd-1(store-riga, 1), 
                                 hidden-data in gruppo-hidden
                         move mese-scelto to hid-mese-scelto 
                         modify form1-gd-1(store-riga, 1), 
                                hidden-data gruppo-hidden
                         move hid-chiave to ord2-chiave
                         read ordfor2 no lock 
                              invalid         
                              if LK-BL-PROG-ID not = "desktop"
                                 display message "Chiave non trovata" 
           ord2-chiave
                                          x"0d0a""Contattare assistenza"
                                           title tit-err
                                            icon 3
                              end-if
                          not invalid
                              move mese-scelto to ord2-mese-scelto 
           ord2-mese-rif
                              move ef-lt-buf   to ord2-lead-time-f 
                              rewrite ord2-rec
                              if qta-disp > 0
                                 modify form1-gd-1(store-riga, 36), 
                                        bitmap-number = 2
                                        bitmap spunta-ordfor-bmp
                                        bitmap-width 30
                              end-if
                              move store-riga to riga
                              perform VALUTA-COPERTURA
                              set ord2-si-conferma to true
                              move qta-disp to ord2-qta-ord col-qta-ord
                              modify form1-gd-1(store-riga, 37), 
                                     cell-data col-qta-ord
                              rewrite ord2-rec
                         end-read
                         move store-riga    to event-data-2
                         perform SPOSTAMENTO
                      end-if
                 end-read
              end-if
           end-if.

           if RiepilogoOrdini
              move ord2-articolo to articolo-x
              inspect articolo-x replacing leading x"30" by x"20"
              call "C$JUSTIFY" using articolo-x, "L"
              inspect articolo-x replacing trailing spaces by low-value
              accept como-data from century-date
              accept como-ora  from time
              initialize path-tmp-ordf-art
              accept  path-tmp-ordf-art from environment "PATH_ST"
              inspect path-tmp-ordf-art replacing trailing spaces by 
           low-value
              string  path-tmp-ordf-art delimited low-value
                      "__"              delimited size
                      "ART_"            delimited size
                      articolo-x        delimited low-value
                      "___MESE__"       delimited size
                      ord2-mese-rif     delimited size
                      "______"          delimited size
                      como-data         delimited size
                      como-ora          delimited size
                      into path-tmp-ordf-art
              end-string
              move spaces to ext-file
              open output tmp-ordf-art
              if status-tmp-ordf-art = "00"
                 move low-value    to rof-rec
                 move hid-articolo to rof-cod-articolo
                 start rordforn key >= rof-k-articolo
                       invalid continue
                   not invalid
                       perform until 1 = 2
                          read rordforn next at end exit perform 
           end-read
                          if rof-cod-articolo not = hid-articolo
                             exit perform
                          end-if
                          move rof-chiave to tof-chiave
                          read tordforn no lock
                          if tof-chiuso
                             continue
                          else
                             move path-tmp-ordf-art to ext-file
                             set cli-tipo-F to true
                             move tof-cod-forn to cli-codice
                             read clienti no lock
                             move rof-chiave         to toa-chiave
                             move tof-data-ordine    to toa-data-ordine
                             move cli-ragsoc-1       to toa-forn
                             move cli-tel-1          to toa-tel
                             move rof-qta-ord        to toa-ord
                             move rof-qta-evasa      to toa-eva

                             move rof-chiave to sof-chiave
                             read sordforn no lock 
                                  invalid 
                                  move 0 to toa-qta-soll
                                  move 0 to sof-prog
                                  read sordforn
                                       invalid 
                                       move 0            to 
           toa-data-arrivo
                                       move spaces       to 
           toa-dati-salvati
                                   not invalid 
                                       move sof-data-arr     to 
           toa-data-arrivo
                                       move sof-dati-salvati to 
           toa-dati-salvati
                                  end-read
                              not invalid 
                                  move sof-data-arr     to 
           toa-data-arrivo
                                  move sof-qta          to toa-qta-soll
                                  move sof-dati-salvati to 
           toa-dati-salvati
                             end-read
                       
                             write toa-rec
                          end-if
                       end-perform
                 end-start
                 close       tmp-ordf-art
                 if tutto-ok
                    if ext-file not = spaces
                       move "tmp-ordf-art" to como-file
                       call   "zoom-gt" using como-file, toa-rec
                                       giving stato-zoom
                       cancel "zoom-gt"
                    end-if
                 end-if
                 delete file tmp-ordf-art
                 set RiepilogoOrdini to false
              end-if
           end-if.


           if CallCollegato
              set CallCollegato to false
              set CallAssociazioni to false
              inquire form1-gd-1(store-riga, 1), 
                      hidden-data in gruppo-hidden
      *    vado a prendere l'ultimo articolo della catena
              if hid-sostituto not = 0
                 perform PUNTA-COLLEGATO
              end-if
           end-if.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-mostra-LinkTo
              WHEN Key-Status = 1001
                 PERFORM pb-ricalcolo-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-genera-LinkTo
              WHEN Key-Status = 1234
                 PERFORM tool-CercaTesto-LinkTo
              WHEN Key-Status = 1003
                 PERFORM chk-filtri-LinkTo
              WHEN Key-Status = 1004
                 PERFORM chk-singolo-LinkTo
              WHEN Key-Status = 8002
                 PERFORM chk-forn-LinkTo
              WHEN Key-Status = 8003
                 PERFORM chk-parziale-LinkTo
              WHEN Key-Status = 8004
                 PERFORM chk-nessuna-LinkTo
              WHEN Key-Status = 1005
                 PERFORM chk-scorta-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen1-CLEAR.
           PERFORM Screen1-INIT-VALUE
           PERFORM Screen1-DISPLAY
           .

       Screen1-DISPLAY.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen1 UPON screen1-Handle
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Screen1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM form1-gd-1-Content
           .

       Screen1-Init-Value.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, SetDefault>
      * <TOTEM:END>
           PERFORM Screen1-FLD-TO-BUF
           .


       Screen1-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen1-SHOW-MSG-ROUTINE
           .

       Screen1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen1-DISPLAY-MESSAGE
           .

       Screen1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen1-Save-Status.
           .             

       Screen1-Restore-Status.
           .

       scr-elab-Open-Routine.
           PERFORM scr-elab-Scrn
           PERFORM scr-elab-Proc
           .

       scr-elab-Scrn.
           PERFORM scr-elab-Create-Win
           PERFORM scr-elab-Init-Value
           PERFORM scr-elab-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 5,00,
              SIZE 71,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-elab-Event-Proc,
              HANDLE IS scr-elab-Handle,
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab UPON scr-elab-Handle
      * DISPLAY-COLUMNS settings
           .

       scr-elab-PROC.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeAccept>
           move "OPEN OUTPUT TMP-FORN" to como-riga.
           perform SCRIVI-RIGA-LOG.            
           display "                          "
              upon scr-elab-handle at column 53
                                        line 04            
           display "OPEN OUTPUT TMP-FORN"
              upon scr-elab-handle at column 53
                                        line 04
           perform OPEN-OUTPUT-TMP-FORN.
                                               
                                               
           move "OPEN OUTPUT TMP-ORDFOR" to como-riga.
           perform SCRIVI-RIGA-LOG.            
           display "                          "
              upon scr-elab-handle at column 53
                                        line 04            
           display "OPEN OUTPUT TMP-ORDFOR"
              upon scr-elab-handle at column 53
                                        line 04
           perform OPEN-OUTPUT-TMP-ORDFOR.     


           move "QTA-PROMO" to como-riga.
           perform SCRIVI-RIGA-LOG.       
           display "                          "
              upon scr-elab-handle at column 53
                                        line 04
           display "QTA-PROMO"
              upon scr-elab-handle at column 53
                                        line 04
           perform QTA-PROMO.        


           move "VALORIZZA CAMPI" to como-riga.
           perform SCRIVI-RIGA-LOG.            
           display "                          "
              upon scr-elab-handle at column 53
                                        line 04
           perform VALORIZZA-CAMPI. 

           move 0 to sel-marca.
           |Lo DEVO fare qua per avere la grid scorta ordinata.
           perform varying idx-scorta from 1 by 1 
                     until idx-scorta > 150
              move 0 to el-scorta(idx-scorta)
              move 0 to el-selected(idx-scorta) 
           end-perform.
           move 0 to idx-scorta-tot.
           move low-value to ord2-rec.
           start ordfor2 key >= k-scorta
                 invalid continue
           end-start.
           perform until 1 = 2
              read ordfor2 next at end exit perform end-read
              if idx-scorta-tot = 0
                 add  1 to idx-scorta-tot
                 move 0 to el-scorta(idx-scorta-tot)
                 move 1 to el-selected(idx-scorta-tot)
              end-if

              set trovato-scorta to false
              set idx-scorta to 1
              search el-scorta
              when el-scorta(idx-scorta) = ord2-scorta
                   set trovato-scorta to true
              end-search
              if not trovato-scorta
                 add 1 to idx-scorta-tot
                 move ord2-scorta to el-scorta(idx-scorta-tot)
                 move 1           to el-selected(idx-scorta-tot)
              end-if
           end-perform.
           
           set hid-ascending to true.
           move low-value to ord2-rec.
           start ordfor2 key >= k-descr
                 invalid continue
           end-start.
           move 2 to store-colonna.
                               
           move "RIEMPI GRID" to como-riga.
           perform SCRIVI-RIGA-LOG.
           perform RIEMPI-GRID.       
           move "RIEMPI GRID OK" to como-riga.
           perform SCRIVI-RIGA-LOG.

           move 2 to colonna.
           perform BMP-SORT.

           modify form1-gd-1(1,  1), hidden-data = "N".
           modify form1-gd-1(1,  2), hidden-data = "A".
           modify form1-gd-1(1,  4), hidden-data = "N".
           modify form1-gd-1(1,  5), hidden-data = "N".
           modify form1-gd-1(1, 36), hidden-data = "N".

           move 2 to store-colonna.
           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab-Handle
           INITIALIZE Key-Status
           .

       scr-elab-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab-CLEAR.
           PERFORM scr-elab-INIT-VALUE
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab UPON scr-elab-Handle
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterDisplay>


      *<<** Customized_Default, SP-G, scr-data-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-elab-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab-FLD-TO-BUF
           .


       scr-elab-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab-SHOW-MSG-ROUTINE
           .

       scr-elab-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab-DISPLAY-MESSAGE
           .

       scr-elab-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab-Save-Status.
           .             

       scr-elab-Restore-Status.
           .

       scr-data-Open-Routine.
           PERFORM scr-data-Scrn
           PERFORM scr-data-Proc
           .

       scr-data-Scrn.
           PERFORM scr-data-Create-Win
           PERFORM scr-data-Init-Value
           PERFORM scr-data-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-data-DISPLAY
           .

       scr-data-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 7,26,
              SIZE 25,58,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana14-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-data-Event-Proc,
              HANDLE IS form1-handle,
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-data UPON form1-handle
      * DISPLAY-COLUMNS settings
           .

       scr-data-PROC.
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, BeforeAccept>
           accept como-data from century-date.
           move como-data to data-sos.
           if como-data(7:2) < 15
              add 5 to mese-sos
           else
              add 6 to mese-sos
           end-if.
           if mese-sos > 12
              subtract 12 from mese-sos
              add 1 to anno-sos
           end-if.
           evaluate mese-sos
           when  1
           when  3
           when  5
           when  7
           when  8
           when 10
           when 12
                move 31 to giorno-sos
           when  2
                divide    anno-sos by 4 giving como-anno
                multiply como-anno by 4 giving como-anno
                if como-anno = anno-sos
                   move 29 to giorno-sos
                else
                   move 28 to giorno-sos
                end-if
           when  4
           when  6
           when  9
           when 11
                move 30 to giorno-sos
           end-evaluate.

           move data-sos to como-data.
           perform DATE-TO-SCREEN.
           move como-data to ef-data-buf.
      ****     display ef-data.

           open input ordfor2.
           move low-value to ord2-rec.
           start ordfor2 key >= ord2-chiave
                 invalid 
                 set ricalcolo to true
                 close ordfor2
                 perform RIGENERA-QTA-VENDUTI
                 if tutto-ok
                    perform CREA-ORDFOR2
                 end-if
             not invalid
                 set ricalcolo to false
                 close ordfor2
                 open exclusive i-o ordfor2
           end-start.
           if errori
              move 27 to key-status
              exit paragraph
           end-if.
           modify form1-handle visible 0.
           perform SCREEN1-OPEN-ROUTINE.

           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-data
                 ON EXCEPTION
                    PERFORM scr-data-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-handle
           INITIALIZE Key-Status
           .

       scr-data-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-data-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-data-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-ok-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-data-CLEAR.
           PERFORM scr-data-INIT-VALUE
           PERFORM scr-data-DISPLAY
           .

       scr-data-DISPLAY.
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-data UPON form1-handle
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, AfterDisplay>


      *<<** Customized_Default, SP-G, scr-data-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-data-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-data-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-data-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, SetDefault>
      * <TOTEM:END>
           PERFORM scr-data-FLD-TO-BUF
           .


       scr-data-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-data-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-data-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-data-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-data, FORM:scr-data, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-data-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-data-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-data-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-data-SHOW-MSG-ROUTINE
           .

       scr-data-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-data-DISPLAY-MESSAGE
           .

       scr-data-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-data-Save-Status.
           .             

       scr-data-Restore-Status.
           .

       SCREEN-SEARCH-Open-Routine.
           PERFORM SCREEN-SEARCH-Scrn
           PERFORM SCREEN-SEARCH-Proc
           .

       SCREEN-SEARCH-Scrn.
           PERFORM SCREEN-SEARCH-Create-Win
           PERFORM SCREEN-SEARCH-Init-Value
           PERFORM SCREEN-SEARCH-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM SCREEN-SEARCH-DISPLAY
           .

       SCREEN-SEARCH-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 7,31,
              SIZE 59,38,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Ricerca del testo selezionato",
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS Screen-search-Handle,
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY SCREEN-SEARCH UPON Screen-search-Handle
      * DISPLAY-COLUMNS settings
           .

       SCREEN-SEARCH-PROC.
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, BeforeAccept>
           set Ricerca to false. 
           move 1 to control-id.
           move 4 to accept-control.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT SCREEN-SEARCH
                 ON EXCEPTION
                    PERFORM SCREEN-SEARCH-Evaluate-Func
                 MOVE 4 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen-search-Handle
           INITIALIZE Key-Status
           .

       SCREEN-SEARCH-Evaluate-Func.
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM SCREEN-SEARCH-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM SCREEN-SEARCH-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM rb-cod-LinkTo
              WHEN Key-Status = 1001
                 PERFORM rb-des-LinkTo
              WHEN Key-Status = 13
                 PERFORM pb-esegui-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       SCREEN-SEARCH-CLEAR.
           PERFORM SCREEN-SEARCH-INIT-VALUE
           PERFORM SCREEN-SEARCH-DISPLAY
           .

       SCREEN-SEARCH-DISPLAY.
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY SCREEN-SEARCH UPON Screen-search-Handle
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       SCREEN-SEARCH-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       SCREEN-SEARCH-Init-Data.
           MOVE 4 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       SCREEN-SEARCH-Init-Value.
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, SetDefault>
      * <TOTEM:END>
           PERFORM SCREEN-SEARCH-FLD-TO-BUF
           .


       SCREEN-SEARCH-ALLGRID-RESET.
           .

      * for Form's Validation
       SCREEN-SEARCH-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       SCREEN-SEARCH-Buf-To-Fld.
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, AfterBufToFld>
      * <TOTEM:END>
           .

       SCREEN-SEARCH-Fld-To-Buf.
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:SCREEN-SEARCH, FORM:SCREEN-SEARCH, AfterFldToBuf>
      * <TOTEM:END>
           .

       SCREEN-SEARCH-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform SCREEN-SEARCH-BUF-TO-FLD.
           move 0 to scelta.
           .
       SCREEN-SEARCH-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM SCREEN-SEARCH-SHOW-MSG-ROUTINE
           .

       SCREEN-SEARCH-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM SCREEN-SEARCH-DISPLAY-MESSAGE
           .

       SCREEN-SEARCH-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       SCREEN-SEARCH-Save-Status.
           .             

       SCREEN-SEARCH-Restore-Status.
           .

       scr-filtri-Open-Routine.
           PERFORM scr-filtri-Scrn
           PERFORM scr-filtri-Proc
           .

       scr-filtri-Scrn.
           PERFORM scr-filtri-Create-Win
           PERFORM scr-filtri-Init-Value
           PERFORM scr-filtri-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-filtri-DISPLAY
           .

       scr-filtri-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 17,31,
              SIZE 41,88,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-filtri-Event-Proc,
              HANDLE IS scr-filtri-Handle,
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-filtri UPON scr-filtri-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-scorte, DISPLAY-COLUMNS (1, 7)
           .

       scr-filtri-PROC.
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, BeforeAccept>
           set RicaricaGrid to false.
           move 0                 to cbo-codice.
           move "Tutte le marche" to cbo-descrizione.
           modify cbo-marca, item-to-add cbo-marca-buf.
           if sel-marca = 0
              move cbo-marca-buf to save-cbo-marca-buf
           end-if.

           perform varying idx-marca from 1 by 1 
                     until idx-marca > idx-marca-tot
              move el-marca(idx-marca) to mar-codice cbo-codice
              read tmarche no lock invalid continue end-read
              move mar-descrizione to cbo-descrizione
              modify cbo-marca, item-to-add cbo-marca-buf
              if sel-marca = mar-codice
                 move cbo-marca-buf to save-cbo-marca-buf
              end-if
           end-perform.

           move save-cbo-marca-buf to cbo-marca-buf.
           modify cbo-marca, value cbo-marca-buf.

           modify gd-scorte, reset-grid  = 1.
           modify gd-scorte, mass-update = 1.
           move 1 to riga.
           perform varying idx-scorta from 1 by 1 
                     until idx-scorta > idx-scorta-tot
              move el-scorta(idx-scorta) to sco-codice col-sco-codice
              read tscorte no lock 
                   invalid move "Nessuna scorta" to sco-descrizione
              end-read
              move sco-descrizione to col-sco-descrizione
           
              modify gd-scorte, insert-rows 1
              modify gd-scorte(riga, 1), cell-data col-sco-codice 
              modify gd-scorte(riga, 2), cell-data col-sco-descrizione

              move el-selected(idx-scorta)       to hidden-sel
              modify gd-scorte(riga, 1) hidden-data hidden-sel
              if hidden-sel = 1
                 modify gd-scorte, row-color 481
              end-if

              move idx-scorta                    to hidden-idx
              modify gd-scorte(riga, 2) hidden-data hidden-idx

              add 1 to riga
           end-perform.
           modify gd-scorte, mass-update = 0.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-filtri
                 ON EXCEPTION
                    PERFORM scr-filtri-Evaluate-Func
                 MOVE 5 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-filtri-Handle
           INITIALIZE Key-Status
           .

       scr-filtri-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-filtri-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-filtri-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM PB-ESEGUIa-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-filtri-CLEAR.
           PERFORM scr-filtri-INIT-VALUE
           PERFORM scr-filtri-DISPLAY
           .

       scr-filtri-DISPLAY.
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-filtri UPON scr-filtri-Handle
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-filtri-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-filtri-Init-Data.
           MOVE 5 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * COMBO-BOX
           PERFORM cbo-marca-Content
      * GRID
           PERFORM gd-scorte-Content
           .

       scr-filtri-Init-Value.
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, SetDefault>
      * <TOTEM:END>
           PERFORM scr-filtri-FLD-TO-BUF
           .


       scr-filtri-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-filtri-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-filtri-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-filtri-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-filtri, FORM:scr-filtri, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-filtri-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-filtri-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-filtri-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-filtri-SHOW-MSG-ROUTINE
           .

       scr-filtri-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-filtri-DISPLAY-MESSAGE
           .

       scr-filtri-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-filtri-Save-Status.
           .             

       scr-filtri-Restore-Status.
           .

       scr-forn-Open-Routine.
           PERFORM scr-forn-Scrn
           PERFORM scr-forn-Proc
           .

       scr-forn-Scrn.
           PERFORM scr-forn-Create-Win
           PERFORM scr-forn-Init-Value
           PERFORM scr-forn-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-forn-DISPLAY
           .

       scr-forn-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 40,31,
              SIZE 131,25,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE "GESLUX- Tabellone Ordini fornitori - Associazioni f
      -    "ornitori",
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-forn-Event-Proc,
              HANDLE IS scr-forn-Handle,
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-forn UPON scr-forn-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-form-i, DISPLAY-COLUMNS (1, 9, 16, 44, 49, 58, 
           67, 75, 83, 91, 99, 106, 117)
              MODIFY gd-form-e, DISPLAY-COLUMNS (1, 9, 16, 44, 49, 58, 
           67, 75, 83, 91, 99, 106, 117)
           .

       scr-forn-PROC.
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, BeforeAccept>
           inquire form1-gd-1(store-riga, 30), cell-data in tit-mese-1.
           inquire form1-gd-1(store-riga, 31), cell-data in tit-mese-2.
           inquire form1-gd-1(store-riga, 32), cell-data in tit-mese-3.
           inquire form1-gd-1(store-riga, 33), cell-data in tit-mese-4.
           inquire form1-gd-1(store-riga, 34), cell-data in tit-mese-5.
           inquire form1-gd-1(store-riga, 35), cell-data in tit-mese-6.
           inquire form1-gd-1(store-riga, 1),  hidden-data in 
           gruppo-hidden.
           display pb-1.
           display pb-2.
           display pb-3.
           display pb-4.
           display pb-5.
           display pb-6.

           evaluate hid-mese-scelto
           when 1 move tit-mese-1        to ef-mese-buf
                  move "Mese scelto (1)" to lab-mese-buf
           when 2 move tit-mese-2        to ef-mese-buf
                  move "Mese scelto (2)" to lab-mese-buf
           when 3 move tit-mese-3        to ef-mese-buf
                  move "Mese scelto (3)" to lab-mese-buf
           when 4 move tit-mese-4        to ef-mese-buf
                  move "Mese scelto (4)" to lab-mese-buf
           when 5 move tit-mese-5        to ef-mese-buf
                  move "Mese scelto (5)" to lab-mese-buf
           when 6 move tit-mese-6        to ef-mese-buf
                  move "Mese scelto (6)" to lab-mese-buf
           end-evaluate.

           display ef-mese lab-mese.

           move hid-mese-scelto to mese-scelto.

           move ord2-articolo to art-codice.
           read articoli no lock invalid continue end-read.
           initialize lab-art-buf.
           move art-codice to lab-art-buf.
           inspect lab-art-buf replacing leading x"30" by x"20".
           call "C$JUSTIFY" using lab-art-buf, "L".
           inspect lab-art-buf replacing trailing spaces by low-value.
           string  lab-art-buf     delimited low-value 
                   " - "           delimited size
                   art-descrizione delimited size
                   into lab-art-buf
           end-string.
           display lab-art.

      *****     move ord2-lead-time-f to ef-lt-buf.
           move 120 to ef-lt-buf.
           display ef-lt.

           |Appena rientro non devo ricalcolare nulla,
           |ma prelevare le associaioni già presenti
           set FromCoperfab to true.
           perform RIEMPI-FORNITORI.
           perform RECOUNT-QTA.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-forn
                 ON EXCEPTION
                    PERFORM scr-forn-Evaluate-Func
                 MOVE 6 TO TOTEM-Form-Index
              END-ACCEPT
              EVALUATE TRUE
                 WHEN Key-Status = 13
                    PERFORM PB-ESEGUIaa-LinkTo
              END-EVALUATE
              MOVE 6 TO TOTEM-Form-Index
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-forn-Handle
           INITIALIZE Key-Status
           .

       scr-forn-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-forn-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-forn-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-1-LinkTo
              WHEN Key-Status = 1001
                 PERFORM pb-2-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-3-LinkTo
              WHEN Key-Status = 1003
                 PERFORM pb-4-LinkTo
              WHEN Key-Status = 1004
                 PERFORM pb-5-LinkTo
              WHEN Key-Status = 1005
                 PERFORM pb-6-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-forn-CLEAR.
           PERFORM scr-forn-INIT-VALUE
           PERFORM scr-forn-DISPLAY
           .

       scr-forn-DISPLAY.
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-forn UPON scr-forn-Handle
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, AfterDisplay>
      *<<** Customized_Default, SP-G, scr-data-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-forn-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-forn-Init-Data.
           MOVE 6 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-form-i-Content
      * GRID
           PERFORM gd-form-e-Content
           .

       scr-forn-Init-Value.
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, SetDefault>
      * <TOTEM:END>
           PERFORM scr-forn-FLD-TO-BUF
           .


       scr-forn-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-forn-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-forn-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-forn-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-forn, FORM:scr-forn, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-forn-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-forn-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-forn-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-forn-SHOW-MSG-ROUTINE
           .

       scr-forn-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-forn-DISPLAY-MESSAGE
           .

       scr-forn-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-forn-Save-Status.
           .             

       scr-forn-Restore-Status.
           .

       scr-ordfor-Open-Routine.
           PERFORM scr-ordfor-Scrn
           PERFORM scr-ordfor-Proc
           .

       scr-ordfor-Scrn.
           PERFORM scr-ordfor-Create-Win
           PERFORM scr-ordfor-Init-Value
           PERFORM scr-ordfor-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-ordfor-DISPLAY
           .

       scr-ordfor-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 5,00,
              SIZE 71,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-ordfor-handle,
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-ordfor UPON scr-ordfor-handle
      * DISPLAY-COLUMNS settings
           .

       scr-ordfor-PROC.
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, BeforeAccept>
           close coperfab ordfor2.

           move 0 to primo-numero ultimo-numero.    

           move "RICHIAMO PROGRAMMA CREA-ORDFOR" to como-riga.
           perform SCRIVI-RIGA-LOG.
                                        
           if LK-BL-PROG-ID = "desktop"
              move 1 to LinkAuto
           else
              move 0 to LinkAuto
           end-if.
              
           call   "crea-ordfor" using scr-ordfor-handle, 
                                      primo-numero, 
                                      ultimo-numero,
                                      user-codi
                                      LinkAuto.
           cancel "crea-ordfor".          

           move "FINE RICHIAMO PROGRAMMA CREA-ORDFOR" to como-riga.
           perform SCRIVI-RIGA-LOG.

           if primo-numero = 0
              if LK-BL-PROG-ID not = "desktop"
                 display message "Nessun movimento generato!"
                           title titolo
                            icon 2
              else
                 move "NESSUN MOVIMENTO GENERATO" to como-riga
                 perform SCRIVI-RIGA-LOG
              end-if
           else
              compute diff = ultimo-numero - primo-numero + 1
              move primo-numero  to primo-numero-z
              move ultimo-numero to ultimo-numero-z
              move diff to tot-ordini-z

              move tge-anno      to stof-tof-anno stof-tof-anno-a
              move primo-numero  to stof-tof-numero
              move ultimo-numero to stof-tof-numero-a
              set stof-no-stampa-art-no-listforn to true

              if lk-bl-prog-id not = "desktop"
                 set stof-scegli-stampante to true
                 call   "st-ordforn" using st-ordforn-linkage
                 cancel "st-ordforn"
              else                  
                 move "STAMPE ORDINI" to como-riga
                 perform SCRIVI-RIGA-LOG

                 move 0 to primo-numero-A
                 move 0 to primo-numero-L
                 move 0 to primo-numero-M
                 close    tordforn 
                 open i-o tordforn
                 move tge-anno     to tof-anno
                 move primo-numero to tof-numero
                 start tordforn key >= tof-chiave end-start
                 perform until 1 = 2
                    read tordforn next at end exit perform end-read
                    if tof-numero > ultimo-numero or
                       tof-anno not = tge-anno
                       exit perform
                    end-if
                    move tof-cod-forn to desf-codice
                    move tof-destino  to desf-prog
                    read destinif no lock
                    move desf-ufficio to tof-stampante
                    rewrite tof-rec
                    evaluate true
                    when desf-ufficio-non-gestito
                         if primo-numero-A = 0
                            move tof-numero to primo-numero-A
                         end-if
                         move tof-numero to ultimo-numero-A
                    when desf-ufficio-LUCA
                         if primo-numero-L = 0
                            move tof-numero to primo-numero-L
                         end-if
                         move tof-numero to ultimo-numero-L
                    when desf-ufficio-MASSIMO
                         if primo-numero-M = 0
                            move tof-numero to primo-numero-M
                         end-if
                         move tof-numero to ultimo-numero-M
                    end-evaluate
                 end-perform
                 close tordforn
                 open input tordforn  
                                
                 move tge-anno to stof-tof-anno stof-tof-anno-a
                 if primo-numero-A not = 0
                    set stof-ufficio-A     to true
                    move primo-numero-A    to stof-tof-numero
                    move ultimo-numero-A   to stof-tof-numero-a
      *    Luciano
                    if path-fileseq not = spaces
                       set stof-si-stampa-art-no-listforn  to true
                       move path-fileseq to stof-path-art-no-listforn
                    end-if
      *    Luciano
                    call   "st-ordforn" using st-ordforn-linkage
                    cancel "st-ordforn"
                 end-if
                 if primo-numero-L not = 0
                    set stof-ufficio-L     to true
                    move primo-numero-L    to stof-tof-numero
                    move ultimo-numero-L   to stof-tof-numero-a
      *    Luciano
                    if path-fileseq not = spaces
                       set stof-si-stampa-art-no-listforn  to true
                       move path-fileseq to stof-path-art-no-listforn
                    end-if
      *    Luciano
                    call   "st-ordforn" using st-ordforn-linkage
                    cancel "st-ordforn"
                 end-if
                 if primo-numero-M not = 0
                    set stof-ufficio-M     to true
                    move primo-numero-M    to stof-tof-numero
                    move ultimo-numero-M   to stof-tof-numero-a
      *    Luciano
                    if path-fileseq not = spaces
                       set stof-si-stampa-art-no-listforn  to true
                       move path-fileseq to stof-path-art-no-listforn
                    end-if
      *    Luciano
                    call   "st-ordforn" using st-ordforn-linkage
                    cancel "st-ordforn"
                 end-if      
                 move "FINE STAMPE ORDINI" to como-riga
                 perform SCRIVI-RIGA-LOG
              end-if

              if path-fileseq not = spaces
                 call "C$DELETE" using path-fileseq, "S"
              end-if
                    
              if LK-BL-PROG-ID not = "desktop"
                 perform SCR-FINE-OPEN-ROUTINE
              end-if
           end-if.
           if LK-BL-PROG-ID = "desktop"
              move "RIEPILOGO VIA MAIL" to como-riga
              perform SCRIVI-RIGA-LOG
              perform RIEPILOGO-VIA-MAIL
           end-if.
           open i-o coperfab.
           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-ordfor-Evaluate-Func
                 MOVE 7 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-ordfor-handle
           INITIALIZE Key-Status
           .

       scr-ordfor-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-ordfor-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-ordfor-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-ordfor-CLEAR.
           PERFORM scr-ordfor-INIT-VALUE
           PERFORM scr-ordfor-DISPLAY
           .

       scr-ordfor-DISPLAY.
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-ordfor UPON scr-ordfor-handle
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-ordfor-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-ordfor-Init-Data.
           MOVE 7 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-ordfor-Init-Value.
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, SetDefault>
      * <TOTEM:END>
           PERFORM scr-ordfor-FLD-TO-BUF
           .


       scr-ordfor-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-ordfor-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-ordfor-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-ordfor-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-ordfor, FORM:scr-ordfor, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-ordfor-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-ordfor-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-ordfor-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-ordfor-SHOW-MSG-ROUTINE
           .

       scr-ordfor-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-ordfor-DISPLAY-MESSAGE
           .

       scr-ordfor-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-ordfor-Save-Status.
           .             

       scr-ordfor-Restore-Status.
           .

       scr-fine-Open-Routine.
           PERFORM scr-fine-Scrn
           PERFORM scr-fine-Proc
           .

       scr-fine-Scrn.
           PERFORM scr-fine-Create-Win
           PERFORM scr-fine-Init-Value
           PERFORM scr-fine-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 20,30,
              SIZE 30,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              RESIZABLE,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Operazione conclusa - Riepilogo",
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-fine-SF-HANDLE,
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-fine UPON scr-fine-SF-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-fine-PROC.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeAccept>
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-fine
                 ON EXCEPTION
                    PERFORM scr-fine-Evaluate-Func
                 MOVE 8 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-fine-SF-HANDLE
           INITIALIZE Key-Status
           .

       scr-fine-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-fine-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-fine-Exit
                 END-IF
              WHEN Key-Status = 27
                 PERFORM pb-si-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-fine-CLEAR.
           PERFORM scr-fine-INIT-VALUE
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-DISPLAY.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-fine UPON scr-fine-SF-HANDLE
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-fine-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-fine-Init-Data.
           MOVE 8 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-fine-Init-Value.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, SetDefault>
      * <TOTEM:END>
           PERFORM scr-fine-FLD-TO-BUF
           .


       scr-fine-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-fine-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-fine-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-fine-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-fine-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-fine-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-fine-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-fine-SHOW-MSG-ROUTINE
           .

       scr-fine-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-fine-DISPLAY-MESSAGE
           .

       scr-fine-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-fine-Save-Status.
           .             

       scr-fine-Restore-Status.
           .

       scr-elab2-Open-Routine.
           PERFORM scr-elab2-Scrn
           PERFORM scr-elab2-Proc
           .

       scr-elab2-Scrn.
           PERFORM scr-elab2-Create-Win
           PERFORM scr-elab2-Init-Value
           PERFORM scr-elab2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab2-DISPLAY
           .

       scr-elab2-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 5,00,
              SIZE 71,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-elab-Event-Proc,
              HANDLE IS scr-elab2-Handle,
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab2 UPON scr-elab2-Handle
      * DISPLAY-COLUMNS settings
           .

       scr-elab2-PROC.
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, BeforeAccept>
           move "INIZIO SOMMA VENDUTI" to como-riga
           perform SCRIVI-RIGA-LOG

           move 0 to counter counter2.

           open input ordfor qta-pordini tparamge
           move low-value to ord2-rec
           start ordfor2 key >= ord2-chiave
                 invalid set errori to true
           end-start
           perform until 1 = 2 or errori
           
              read ordfor2 next at end exit perform end-read

              add 1 to counter
              add 1 to counter2
              if counter2 = 50
                 move counter to counter-edit
                 display counter-edit
                    upon scr-elab-handle at column 53
                                              line 04
                 move 0 to counter2
              end-if

              move ord2-chiave to ord-chiave        
              read ordfor 
                   invalid                                  
                   initialize ord-qta-vendita-anno-corrente 
                              replacing numeric data by zeroes
                                   alphanumeric data by spaces
                   initialize ord-qta-vendita-anno-passsato
                              replacing numeric data by zeroes
                                   alphanumeric data by spaces
               not invalid continue
              end-read
              move ord-qta-vendita-anno-corrente 
                to ord2-qta-vendita-anno-corrente
              move ord-qta-vendita-anno-passsato 
                to ord2-qta-vendita-anno-passsato
                                    
              perform AGGIUNGI-QTA-VENDUTI
              rewrite ord2-rec invalid continue end-rewrite
           end-perform
           close ordfor2 
           close ordfor qta-pordini tparamge

           move "FINE SOMMA VENDUTI" to como-riga
           perform SCRIVI-RIGA-LOG

           move 27 to key-status

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab2-Evaluate-Func
                 MOVE 9 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab2-Handle
           INITIALIZE Key-Status
           .

       scr-elab2-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab2-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab2-CLEAR.
           PERFORM scr-elab2-INIT-VALUE
           PERFORM scr-elab2-DISPLAY
           .

       scr-elab2-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab2 UPON scr-elab2-Handle
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-elab2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab2-Init-Data.
           MOVE 9 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab2-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab2-FLD-TO-BUF
           .


       scr-elab2-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab2, FORM:scr-elab2, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab2-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab2-SHOW-MSG-ROUTINE
           .

       scr-elab2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab2-DISPLAY-MESSAGE
           .

       scr-elab2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab2-Save-Status.
           .             

       scr-elab2-Restore-Status.
           .



       Screen1-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Heading-Clicked ALSO 5001 ALSO
                    screen1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Heading-Clicked
           END-EVALUATE
           .

       scr-elab-Event-Proc.
           .

       scr-data-Event-Proc.
           .

       scr-filtri-Event-Proc.
           .

       scr-filtri-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 504 ALSO
                    scr-filtri-Handle 
              PERFORM gd-scorte-Ev-Msg-Begin-Entry
           WHEN Msg-Goto-Cell-Mouse ALSO 504 ALSO
                    scr-filtri-Handle 
              PERFORM gd-scorte-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       scr-forn-Event-Proc.
           .

       ef-lt-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Spin-Down ALSO 5002 ALSO
                    scr-forn-Handle 
              PERFORM ef-lt-Ev-Msg-Spin-Down
           WHEN Msg-Spin-Up ALSO 5002 ALSO
                    scr-forn-Handle 
              PERFORM ef-lt-Ev-Msg-Spin-Up
           END-EVALUATE
           .

       scr-forn-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5003 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-i-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5003 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-i-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5003 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-i-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5003 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-i-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5003 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-i-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5003 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-i-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5003 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-i-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Begin-Drag ALSO 5004 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-e-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5004 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-e-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5004 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-e-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5004 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-e-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5004 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-e-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5004 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-e-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5004 ALSO
                    scr-forn-Handle 
              PERFORM gd-form-e-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       AGGIORNA-DATA-RICALCOLO-TPARAMGE.
      * <TOTEM:PARA. AGGIORNA-DATA-RICALCOLO-TPARAMGE>
           close    tparamge2.
           open i-o tparamge2.
           move spaces to tge2-chiave.
           perform until 1 = 2
              set RecLocked to false
              initialize geslock-linkage
              move "tparamge2" to geslock-nome-file

              set tutto-ok  to true
              read tparamge2 lock 
                 invalid 
                    continue 
              end-read

              if RecLocked
                 string "OPERAZIONE CONCLUSA CON SUCCESSO!"
                 x"0d0a""Impossibile aggiornare data ricalcolo."
                       delimited size
                       into geslock-messaggio
                 end-string
                 move 1 to geslock-v-riprova
                 move 1 to geslock-v-ignora
                 move 0 to geslock-v-termina
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova 
                      continue
                 when ignora  
                      set errori to true
                      exit perform
                 end-evaluate
              else
                 exit perform
              end-if
           end-perform.

           if tutto-ok
              accept tge2-data-ricalcolo       from century-date
              accept tge2-data-ultima-modifica from century-date
              accept tge2-ora-ultima-modifica  from time
              move user-codi to tge2-utente-ultima-modifica
              rewrite tge2-rec
              unlock tparamge2 all records
              move tge2-data-ricalcolo to como-data
              perform DATE-TO-SCREEN
              move como-data to lab-data-r-buf
              display lab-data-r
           end-if.
           close      tparamge2.
           open input tparamge2 
           .
      * <TOTEM:END>

       BMP-SORT.
      * <TOTEM:PARA. BMP-SORT>
           if hid-ascending
              modify form1-gd-1, x = colonna, y = 1,
                     bitmap = sort-bmp,
                     bitmap-number = 1,
                     bitmap-width = 11
           else
              modify form1-gd-1, x = colonna, y = 1,
                     bitmap = sort-bmp,
                     bitmap-number = 2,
                     bitmap-width = 11
           end-if 
           .
      * <TOTEM:END>

       COLORA-FABBISOGNO.
      * <TOTEM:PARA. COLORA-FABBISOGNO>
           if prima-volta or ricalcolo or RicaricaGrid
              evaluate true
              when ord2-fabbisogno-mese1     move 176 to colore
              when ord2-fabbisogno-mese2     move 449 to colore
              when ord2-fabbisogno-mese3     move 481 to colore
              when ord2-fabbisogno-other     move 112 to colore
              when ord2-fabbisogno-no-attivo move  48 to colore
              end-evaluate

              modify form1-gd-1(riga, 29), cell-color = colore
              modify form1-gd-1(riga, 30), cell-color = colore
              modify form1-gd-1(riga, 31), cell-color = colore
              modify form1-gd-1(riga, 32), cell-color = colore
              modify form1-gd-1(riga, 33), cell-color = colore
              modify form1-gd-1(riga, 34), cell-color = colore
              modify form1-gd-1(riga, 35), cell-color = colore
           end-if.
           evaluate ord2-mese-scelto
           when 1 move 112 to colore
           when 2 move 449 to colore
           when 3 move 80  to colore
           when 4 move 385 to colore
           when 5 move 193 to colore
           when 6 move 513 to colore
           end-evaluate.
           modify form1-gd-1(riga, 37), cell-color = colore 
           .
      * <TOTEM:END>

       ELABORAZIONE-AUTOMATICA.
      * <TOTEM:PARA. ELABORAZIONE-AUTOMATICA>
           move "INIZIO ELABORAZIONE AUTOMATICA" to como-riga.
           perform SCRIVI-RIGA-LOG.

           perform PB-RICALCOLO-LINKTO.
                                  
           move "INIZIO SCANSIONE RIGHE GRIGLIA" to como-riga.
           perform SCRIVI-RIGA-LOG.

           set errori to true.
           accept data-odierna from century-date.
           inquire form1-gd-1, last-row in tot-righe.
           perform varying riga from 2 by 1
                     until riga > tot-righe
              inquire form1-gd-1(riga, 37), cell-data in col-qta-ord
              move col-qta-ord to como-qta
              set forza-conferma to false

              if como-qta = 0
                 inquire form1-gd-1(riga, 1),
                         hidden-data in gruppo-hidden
                 move hid-chiave to ord2-chiave
                 read ordfor2 no lock
                      invalid continue
                  not invalid
                      set trovato-listino to false
                      if ord2-fabb-qta(ord2-mese-rif) > 0
                         move ord2-articolo   to rlis-articolo
                         move low-value       to rlis-chiave-ricerca
                         start rlistini key >= rlis-k-art
                               invalid continue
                           not invalid
                               perform until 1 = 2
                                  read rlistini next no lock
                                       at end exit perform
                                  end-read
                                  if ord2-articolo not = rlis-articolo  
            
                                     exit perform
                                  end-if
                                  if data-odierna >= rlis-ini-val and
                                     data-odierna <= rlis-fine-val
                                     set trovato-listino to true
                                     exit perform
                                  end-if
                               end-perform
                         end-start
                         if not trovato-listino
                            move ord2-fabb-qta(ord2-mese-rif) to 
           como-qta
                            set forza-conferma to true
                         end-if
                      end-if
                 end-read
              end-if

              if como-qta not = 0
                 inquire form1-gd-1(riga, 1),
                         hidden-data in gruppo-hidden
                 move hid-chiave to ord2-chiave
                 read ordfor2 no lock
                      invalid
                      exit perform
                  not invalid
                      |09/11: Richiesta di Walter. In automatico ordino
                      |solamente gli articoli la cui giacenza non
                      |copre l'impegnato e scorta "Ordine Auto"

                      |28/08: Richiesta di Walter. In automatico ordino
                      |solamente gli articoli a scorta "Ordine Auto"
                      move ord2-articolo   to prg-cod-articolo
                      move 0               to prg-peso
                      move spaces          to prg-tipo-imballo
                      move spaces          to prg-cod-magazzino
                      read progmag no lock invalid continue end-read
                      perform TROVA-GIACENZA-IMPEGNATO              
                      |RIPOSIZIONAMENTO
                      move ord2-articolo   to prg-cod-articolo
                      move 0               to prg-peso
                      move spaces          to prg-tipo-imballo
                      move spaces          to prg-cod-magazzino
                      read progmag no lock invalid continue end-read
      *****                if prg-giacenza < prg-impegnato
                         move ord2-articolo to art-codice
                         read articoli no lock invalid continue end-read
                         move art-scorta    to sco-codice
                         read tscorte no lock
                         if sco-ordine-auto-si
                            |Gli articoli "su richiesta" dovranno andare
                            |a copertura dell'impegnato soltanto quand'esso
                            |è superiore alle zero
                            if sco-immediato-si
                               if como-impegnato > 0
                                  if forza-conferma
                                     set ord2-listino-no to true
                                  else
                                     set ord2-listino-no to false
                                  end-if                 
                                  perform VERIFICA-GIORNO-MESE
                                  rewrite ord2-rec
                                  set tutto-ok to true
                               end-if
                            else
                               move 0 to como-ordinato
                               if prg-ordinato-6 not = 0
                                  move prg-ordinato-6 to como-ordinato
                               else
                                  if prg-ordinato-5 not = 0
                                     move prg-ordinato-5 to 
           como-ordinato
                                  else
                                     if prg-ordinato-4 not = 0
                                        move prg-ordinato-4 to 
           como-ordinato
                                     else
                                        if prg-ordinato-3 not = 0
                                           move prg-ordinato-3 to 
           como-ordinato
                                        else
                                           if prg-ordinato-2 not = 0
                                              move prg-ordinato-2 to 
           como-ordinato
                                           else
                                              if prg-ordinato-1 not = 0
                                                 move prg-ordinato-1 to 
           como-ordinato
                                              end-if
                                           end-if
                                        end-if
                                     end-if
                                  end-if
                               end-if

                               if ( ord2-giac + como-ordinato - 
           ord2-promo ) <
                                  ( ( ord2-riordino - ord2-consegna ) * 
           sco-molt-pordini )
                                  if forza-conferma
                                     set ord2-listino-no to true
                                  else
                                     set ord2-listino-no to false
                                  end-if
                                  perform VERIFICA-GIORNO-MESE
                                  rewrite ord2-rec
                                  set tutto-ok to true
                               end-if

                            end-if
                         end-if
      *****                end-if
                 end-read
              end-if
           end-perform.     
  
           move "FINE SCANSIONE RIGHE GRIGLIA" to como-riga.
           perform SCRIVI-RIGA-LOG.

      ******************************************************************
           perform PREPARA-STAMPA-ARTICOLI.
      ******************************************************************

           if tutto-ok
              perform PB-GENERA-LINKTO
           else                    
              move "NESSUN ARTICOLO DA GENERARE" to como-riga
              perform SCRIVI-RIGA-LOG
           end-if.             
           
           move "FINE ELABORAZIONE AUTOMATICA" to como-riga.
           perform SCRIVI-RIGA-LOG.

           move 27 to key-status.

           
      ***---
       VERIFICA-GIORNO-MESE.
           accept como-giorno from DAY-OF-WEEK.
           evaluate como-giorno
           when 1
                if sco-lun-si
                   set ord2-si-conferma to true
                end-if
           when 2
                if sco-mar-si
                   set ord2-si-conferma to true
                end-if
           when 3
                if sco-mer-si
                   set ord2-si-conferma to true
                end-if
           when 4
                if sco-gio-si
                   set ord2-si-conferma to true
                end-if
           when 5
                if sco-ven-si
                   set ord2-si-conferma to true
                end-if
           when 6
                if sco-sab-si
                   set ord2-si-conferma to true
                end-if
           when 7
                if sco-dom-si
                   set ord2-si-conferma to true
                end-if
           end-evaluate.

           if ord2-si-conferma
              set ord2-no-conferma to true
              accept como-data from century-date
              move como-data(5:2) to como-mese
              evaluate como-mese
              when 1
                   if sco-gen-si
                      set ord2-si-conferma to true
                   end-if
              when 2          
                   if sco-feb-si
                      set ord2-si-conferma to true
                   end-if
              when 3         
                   if sco-marz-si
                      set ord2-si-conferma to true
                   end-if
              when 4         
                   if sco-apr-si
                      set ord2-si-conferma to true
                   end-if
              when 5         
                   if sco-mag-si
                      set ord2-si-conferma to true
                   end-if
              when 6         
                   if sco-giu-si
                      set ord2-si-conferma to true
                   end-if
              when 7         
                   if sco-lug-si
                      set ord2-si-conferma to true
                   end-if
              when 8         
                   if sco-ago-si
                      set ord2-si-conferma to true
                   end-if
              when 9         
                   if sco-set-si
                      set ord2-si-conferma to true
                   end-if
              when 10        
                   if sco-ott-si
                      set ord2-si-conferma to true
                   end-if
              when 11        
                   if sco-nov-si
                      set ord2-si-conferma to true
                   end-if
              when 12    
                   if sco-dic-si
                      set ord2-si-conferma to true
                   end-if
              end-evaluate
           end-if 
           .
      * <TOTEM:END>

       INTESTAZIONE.
      * <TOTEM:PARA. INTESTAZIONE>
           modify form1-gd-1(1,  1), cell-data = "Cod".
           modify form1-gd-1(1,  2), cell-data = "Descrizione".
           modify form1-gd-1(1,  3), cell-data = "Imb".
           modify form1-gd-1(1,  4), cell-data = "Sc"
           modify form1-gd-1(1,  5), cell-data = "Marca".
           modify form1-gd-1(1,  6), cell-data = "Scost".
           modify form1-gd-1(1,  7), cell-data = tit-mese(1).
           modify form1-gd-1(1,  8), cell-data = tit-mese(2).
           modify form1-gd-1(1,  9), cell-data = tit-mese(3).
           modify form1-gd-1(1, 10), cell-data = tit-mese(4).
           modify form1-gd-1(1, 11), cell-data = tit-mese(5).
           modify form1-gd-1(1, 12), cell-data = tit-mese(6).
           modify form1-gd-1(1, 13), cell-data = tit-mese(7).
           modify form1-gd-1(1, 14), cell-data = tit-mese(8).
           modify form1-gd-1(1, 15), cell-data = tit-mese(9).
           modify form1-gd-1(1, 16), cell-data = tit-mese(10).
           modify form1-gd-1(1, 17), cell-data = tit-mese(11).
           modify form1-gd-1(1, 18), cell-data = tit-mese(12).
           modify form1-gd-1(1, 19), cell-data = "Riord.".
           modify form1-gd-1(1, 20), cell-data = "T. Anno".
           modify form1-gd-1(1, 21), cell-data = "Media".
           modify form1-gd-1(1, 22), cell-data = "And".
           modify form1-gd-1(2, 22), cell-data = "%".
           modify form1-gd-1(1, 23), cell-data = "Cons.".  
           modify form1-gd-1(1, 24), cell-data = "Qta B". 
           modify form1-gd-1(2, 24), cell-data = "EP|STD". 
           modify form1-gd-1(1, 25), cell-data = "Giac.".
           modify form1-gd-1(2, 25), cell-data = "Imb.".
           modify form1-gd-1(1, 26), cell-data = "Giac.".
           modify form1-gd-1(2, 26), cell-data = "Pezzi".
           modify form1-gd-1(1, 27), cell-data = "Ord.".
           modify form1-gd-1(1, 28), cell-data = "SOS".
           modify form1-gd-1(1, 29), cell-data = "1° Mese".
           modify form1-gd-1(2, 29), cell-data = "Imballi".
           modify form1-gd-1(1, 30), cell-data = "1° Mese".
           modify form1-gd-1(2, 30), cell-data = "Pezzi".
           modify form1-gd-1(1, 31), cell-data = "2° Mese".
           modify form1-gd-1(2, 31), cell-data = "ESTERO".
           modify form1-gd-1(1, 32), cell-data = "3° Mese".
           modify form1-gd-1(2, 32), cell-data = "TENDER".
           modify form1-gd-1(1, 33), cell-data = "4° Mese".
           modify form1-gd-1(2, 33), cell-data = "PROGR".
           modify form1-gd-1(1, 34), cell-data = "5° Mese".
           modify form1-gd-1(2, 34), cell-data = "Pezzi".
           modify form1-gd-1(1, 35), cell-data = "6° Mese".
           modify form1-gd-1(2, 35), cell-data = "Pezzi".
           modify form1-gd-1(2, 36), cell-data = "OK".
           modify form1-gd-1(1, 37), cell-data = "Qta O".

      *****     modify form1-gd-1(1, 26), cell-color 481.
      *****     modify form1-gd-1(2, 26), cell-color 481.
                                                              
           modify form1-gd-1(2, 29), cell-color 353. |"1° Mese Imb"
           modify form1-gd-1(2, 30), cell-color 112. |"1° Mese Pz"
           modify form1-gd-1(2, 31), cell-color 449. |"ESTERO"
           modify form1-gd-1(2, 32), cell-color 80.  |"TENDER"
           modify form1-gd-1(2, 33), cell-color 385. |"PROG"  
           modify form1-gd-1(2, 34), cell-color 193. |"MESE 5"
           modify form1-gd-1(2, 35), cell-color 513. |"MESE 6"  
           .
      * <TOTEM:END>

       OPEN-OUTPUT-TMP-FORN.
      * <TOTEM:PARA. OPEN-OUTPUT-TMP-FORN>
           accept como-ora  from time.
           accept como-data from century-date.
           initialize path-tmp-forn.
           accept  path-tmp-forn  from environment "PATH_ST".
           inspect path-tmp-forn  replacing trailing spaces 
                                         by low-value.
           string  path-tmp-forn  delimited low-value
                   "TMP-F-DISP"   delimited size
                   "_"            delimited size
                   como-data      delimited size
                   "_"            delimited size
                   como-ora       delimited size
                   ".tmp"         delimited size
                   into path-tmp-forn
           end-string.
           open output tmp-forn.
           close       tmp-forn.
           open i-o    tmp-forn 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "costo-medio.cpy".
           copy "ordfor2.cpy".
           copy "cerca-testo.cpy".
           copy "prz-finito-forn.cpy".
           copy "imposte-fornitore.cpy".
           copy "addizionale-piombo-fornitore.cpy".
           copy "mail.cpy".
           copy "multigest.cpy".
           copy "trova-parametro.cpy".

      ***--- DUMMY NON TOCCARE.
       RECUPERO-ANAGRAFICA 
           .
      * <TOTEM:END>

       PREPARA-STAMPA-ARTICOLI.
      * <TOTEM:PARA. PREPARA-STAMPA-ARTICOLI>
      *     perform STAMPA-che devo fare
      *     start su ordforn2 per quelli con 
      *     prendere quelli con ord2-si-conferma
      *     verificare se l'articolo è presente in un listino fornitore
      *     (controllo anche valida a partire da data odierna)

           move spaces to path-fileseq.

           set ord2-si-conferma to true
           move low-value to ord2-art-descrizione
           start ordfor2 key >= k-ok
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read ordfor2 next no lock
                       at end
                          exit perform
                    end-read
                    if ord2-listino-no
                       perform SCRIVI-ELENCO-ARTICOLI
                    end-if
                 end-perform
           end-start.

           if path-fileseq not = spaces
              close fileseq
           end-if.

      ***---
       SCRIVI-ELENCO-ARTICOLI.
           if path-fileseq = spaces
              accept  path-fileseq from environment "PATH_ST"
              inspect path-fileseq replacing trailing space by low-value
              accept como-data from century-date
              accept como-ora from time
              string path-fileseq              delimited by low-value
                     "articolo_non_ordinati_"  delimited by size
                     como-data                 delimited by size
                     "_"                       delimited by size
                     como-ora                  delimited by size
                     into path-fileseq
              inspect path-fileseq replacing trailing low-value by space

              open output fileseq
           end-if.
           move ord2-articolo to art-codice.
           read articoli no lock 
                invalid  move 0 to art-scorta
           end-read.

           if art-scorta not = 6
              initialize rec-stampa
              move ord2-articolo         to rec-stampa
              move ord2-art-descrizione  to rec-stampa(8:)
              write rec-stampa
           end-if 
           .
      * <TOTEM:END>

       PUNTA-COLLEGATO.
      * <TOTEM:PARA. PUNTA-COLLEGATO>
           move hid-sostituto   to old-hid-sostituto
           move hid-mag         to old-hid-mag

           perform varying store-riga from 3 by 1 
                                      until store-riga > tot-righe
           
              inquire form1-gd-1(store-riga, 1), 
                      hidden-data in gruppo-hidden

      *    ho trovato l'articolo su cui operare
              if hid-articolo = old-hid-sostituto and 
                 hid-mag      = old-hid-mag
                 exit perform
              end-if
           end-perform.   

           modify form1-gd-1, cursor-y store-riga.
      *     inquire form1-gd-1, cursor-y in riga, cursor-x in colonna.
           move store-riga   to event-data-2
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>

       QTA-PROMO.
      * <TOTEM:PARA. QTA-PROMO>
           close ordfor2.
           call   "sos-ordini" using data-sos,
                                     scr-elab-handle.
           cancel "sos-ordini".
           open i-o ordfor2 allowing readers.      
           if LK-BL-PROG-ID = "desktop"
              modify scr-elab-handle, visible true
           end-if 
           .
      * <TOTEM:END>

       RECOUNT-QTA.
      * <TOTEM:PARA. RECOUNT-QTA>
           move 0 to qta-disp.
           inquire gd-form-i, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              inquire gd-form-i(riga, 6), cell-data in col-qta-o-i
              move col-qta-o-i to como-qta
              add como-qta to qta-disp
           end-perform.
           inquire gd-form-e, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              inquire gd-form-e(riga, 6), cell-data in col-qta-o-e
              move col-qta-o-e to como-qta
              add como-qta to qta-disp
           end-perform.

           move qta-disp to ef-mese-buf.
           display ef-mese 
           .
      * <TOTEM:END>

       RICARICA-GRID.
      * <TOTEM:PARA. RICARICA-GRID>
           set tutto-ok to true.
           evaluate store-colonna
           when 1
                if hid-ascending
                   move low-value to ord2-rec
                   start ordfor2 key >= ord2-chiave
                         invalid set errori to true
                   end-start
                else
                   move high-value to ord2-rec
                   start ordfor2 key <= ord2-chiave
                         invalid set errori to true
                   end-start
                end-if
           when 2
                if hid-ascending
                   move low-value to ord2-rec
                   start ordfor2 key >= k-descr
                         invalid set errori to true
                   end-start
                else
                   move high-value to ord2-rec
                   start ordfor2 key <= k-descr
                         invalid set errori to true
                   end-start
                end-if
           when 4
                if hid-ascending
                   move low-value to ord2-rec
                   start ordfor2 key >= k-scorta
                         invalid set errori to true
                   end-start
                else
                   move high-value to ord2-rec
                   start ordfor2 key <= k-scorta
                         invalid continue
                   end-start
                end-if
           when 5
                if hid-ascending
                   move low-value to ord2-rec
                   start ordfor2 key >= k-ord
                         invalid set errori to true
                   end-start
                else
                   move high-value to ord2-rec
                   start ordfor2 key <= k-ord
                         invalid set errori to true
                   end-start
                end-if
           when 36
                if hid-ascending
                   set ord2-si-conferma to true
                else
                   set ord2-no-conferma to true
                end-if
                 move low-value to ord2-art-descrizione
                start ordfor2 key >= k-ok
                      invalid set errori to true
                end-start
           end-evaluate.
           if tutto-ok
              set RicaricaGrid to true
              perform RIEMPI-GRID
              move store-colonna to colonna
              perform BMP-SORT
              set RicaricaGrid to false
           end-if 
           .
      * <TOTEM:END>

       RICARICA-VIDEO.
      * <TOTEM:PARA. RICARICA-VIDEO>
           move 0 to idx.
           move mese-scelto to ord2-mese-rif.
           move ef-mese-buf to ord2-fabb-qta(ord2-mese-rif).
           move ef-lt-buf   to ord2-lead-time-f.
           close       tmp-forn.
           open output tmp-forn
           close       tmp-forn
           open i-o    tmp-forn.
           perform COPRI-FABBISOGNO.
           perform RIEMPI-FORNITORI 
           .
      * <TOTEM:END>

       RIEMPI-FORNITORI.
      * <TOTEM:PARA. RIEMPI-FORNITORI>
           modify gd-form-i, mass-update = 1.
           modify gd-form-e, mass-update = 1.

           modify gd-form-i, reset-grid = 1.
           perform GD-FORM-I-CONTENT.
           
           modify gd-form-e, reset-grid = 1.
           perform GD-FORM-E-CONTENT.

           if path-tmp-forn = spaces
              perform OPEN-OUTPUT-TMP-FORN
           else
              close       tmp-forn
              open output tmp-forn
              close       tmp-forn
              open i-o    tmp-forn
           end-if.
           move low-value     to rlis-rec.
           move ord2-articolo to rlis-articolo.
           move low-value to rlis-chiave-ricerca
           start rlistini key >= rlis-k-art of rlistini
                 invalid
             not invalid
                 perform until 1 = 2
                    read rlistini next at end exit perform end-read
                    if rlis-articolo  not = ord2-articolo
                       exit perform
                    end-if
                    if rlis-lead-time = 0
                       move ord2-articolo to art-codice
                       read articoli no lock
                            invalid continue
                       end-read
                       move art-marca-prodotto to mar-codice
                       read tmarche no lock
                            invalid continue
                       end-read
                       move mar-lead-time to tmf-lead-time
                                            rlis-lead-time
                    end-if
                    if data-calcolo >= rlis-ini-val  and
                       data-calcolo <= rlis-fine-val and
                       ef-lt-buf    >= rlis-lead-time
                       set tmf-inclusi to true
                    else
                       set tmf-esclusi to true
                    end-if
                    perform SCRIVI-RIGA-TMP-FORN
                 end-perform
           end-start.

           move 0             to qta-disp.
           move low-value     to tmf-rec.
           set tmf-inclusi    to true.
           move ord2-articolo to tmf-articolo.
           start tmp-forn key >= tmf-chiave
                 invalid continue
             not invalid
                 move 2 to riga
                 perform until 1 = 2
                    read tmp-forn next at end exit perform end-read
                    if tmf-articolo not = ord2-articolo
                       exit perform
                    end-if

                    if tmf-esclusi
                       exit perform
                    end-if 

                    move tmf-fornitore     to col-forn-i  
                    move tmf-destino       to col-dest-i
                    move tmf-ragsoc        to col-des-i
                    move tmf-lead-time     to col-lt-i    
                    move tmf-disponibilita to col-qta-d-i
                    move tmf-listino       to col-listino-i
                            
                    move tmf-listino       to cpf-listino
                    move tmf-articolo      to cpf-articolo
                    if FromCoperfab
                       read coperfab no lock 
                            invalid 
                            move tmf-listino       to rlis-codice
                            move tmf-articolo      to rlis-articolo
                            read rlistini no lock
                                 invalid move 0 to col-qta-o-i
                             not invalid
                                 if tmf-disponibilita >= 0
                                    if tmf-disponibilita < 
           ord2-fabb-qta(ord2-mese-rif)
                                       move tmf-disponibilita to 
           col-qta-o-i
                                    else
                                       move 
           ord2-fabb-qta(ord2-mese-rif) to col-qta-o-i
                                    end-if
                                 else
                                    move 0    to col-qta-o-i 
                                 end-if
                            end-read
                        not invalid
                            move cpf-qta      to col-qta-o-i
                       end-read
                    else                   
                       if ord2-fabb-qta(ord2-mese-rif) < 0
                          move 0 to qta-utile qta-disp cpf-qta
                       else
                          |Quante me ne servono ancora???
                          compute qta-utile = 
                                  ord2-fabb-qta(ord2-mese-rif) - 
           qta-disp
                          if qta-utile > tmf-disponibilita
                             move tmf-disponibilita to col-qta-o-i
                             add  tmf-disponibilita to qta-disp
                          else
                             move qta-utile to col-qta-o-i
                             add  qta-utile to qta-disp
                          end-if
                       end-if
                    end-if
                    move tmf-prz-confronto to col-prz-i
                    move tmf-premio        to col-premio-i
                    move tmf-totale        to col-tot-i
                    move tmf-prz-listino   to col-reale-i
                    move tmf-data-ini      to como-data
                    perform DATE-TO-SCREEN
                    move como-data         to col-ini-i
                    move tmf-data-fine     to como-data
                    perform DATE-TO-SCREEN
                    move como-data         to col-fine-i
                    modify gd-form-i(riga,  1), cell-data col-forn-i
                    modify gd-form-i(riga,  2), cell-data col-dest-i
                    modify gd-form-i(riga,  3), cell-data col-des-i
                    modify gd-form-i(riga,  4), cell-data col-lt-i
                    modify gd-form-i(riga,  5), cell-data col-qta-d-i
                    modify gd-form-i(riga,  6), cell-data col-qta-o-i
                    modify gd-form-i(riga,  7), cell-data col-prz-i
                    modify gd-form-i(riga,  8), cell-data col-premio-i
                    modify gd-form-i(riga,  9), cell-data col-tot-i
                    modify gd-form-i(riga, 10), cell-data col-reale-i 
                    modify gd-form-i(riga, 11), cell-data col-listino-i
                    modify gd-form-i(riga, 12), cell-data col-ini-i
                    modify gd-form-i(riga, 13), cell-data col-fine-i

                    add 1 to riga
                 end-perform
           end-start.

           move low-value     to tmf-rec.
           set tmf-esclusi    to true.
           move ord2-articolo to tmf-articolo.
           move high-value    to tmf-data-fine.
           start tmp-forn key <= tmf-k-data
                 invalid continue
             not invalid
                 move 2 to riga
                 perform until 1 = 2
                    read tmp-forn previous at end exit perform end-read
                    if tmf-articolo not = ord2-articolo
                       exit perform
                    end-if
                   
                    if tmf-inclusi
                       exit perform
                    end-if 

                    move tmf-fornitore     to col-forn-e  
                    move tmf-destino       to col-dest-e
                    move tmf-ragsoc        to col-des-e
                    move tmf-lead-time     to col-lt-e
                    move tmf-disponibilita to col-qta-d-e
                    move tmf-listino       to col-listino-e
                    move tmf-articolo      to cpf-articolo

                    if FromCoperfab
                       move tmf-listino       to cpf-listino
                       move tmf-articolo      to cpf-articolo
                       read coperfab no lock key k-listino
                            invalid move 0    to col-qta-o-e 
                        not invalid
                            if cpf-manuale
                               move cpf-qta      to col-qta-o-e
                            else
                               move 0    to col-qta-o-e 
                            end-if
                       end-read
                    else
                       move 0    to col-qta-o-e 
                    end-if
                    move tmf-prz-confronto to col-prz-e
                    move tmf-premio        to col-premio-e
                    move tmf-totale        to col-tot-e
                    move tmf-prz-listino   to col-reale-e
                    move tmf-totale        to col-tot-e
                    move tmf-data-ini      to como-data
                    perform DATE-TO-SCREEN
                    move como-data         to col-ini-e
                    move tmf-data-fine     to como-data
                    perform DATE-TO-SCREEN
                    move como-data         to col-fine-e
                    modify gd-form-e(riga,  1), cell-data col-forn-e
                    modify gd-form-e(riga,  2), cell-data col-dest-e
                    modify gd-form-e(riga,  3), cell-data col-des-e
                    modify gd-form-e(riga,  4), cell-data col-lt-e
                    modify gd-form-e(riga,  5), cell-data col-qta-d-e
                    modify gd-form-e(riga,  6), cell-data col-qta-o-e
                    modify gd-form-e(riga,  7), cell-data col-prz-e
                    modify gd-form-e(riga,  8), cell-data col-premio-e
                    modify gd-form-e(riga,  9), cell-data col-tot-e
                    modify gd-form-e(riga, 10), cell-data col-reale-e
                    modify gd-form-e(riga, 11), cell-data col-listino-e
                    modify gd-form-e(riga, 12), cell-data col-ini-e
                    modify gd-form-e(riga, 13), cell-data col-fine-e

                    add 1 to riga
                 end-perform
           end-start.
           modify gd-form-i, mass-update = 0.
           modify gd-form-e, mass-update = 0.
           set FromCoperfab to false 
           .
      * <TOTEM:END>

       RIEMPI-GRID.
      * <TOTEM:PARA. RIEMPI-GRID>
           modify form1-gd-1, reset-grid  = 1.
           modify form1-gd-1, mass-update = 1.
           perform INTESTAZIONE.

           if prima-volta
              move 0 to tot-mag
              move 0 to idx-marca-tot
           end-if.

           move 3 to riga.
           set primo-ciclo to true.
           perform until 1 = 2
              if store-colonna = 36
                 read ordfor2 next 
                      at end
                      if hid-ascending
                         set secondo-ciclo to true
                         set ord2-no-conferma to true
                         move low-value       to ord2-art-descrizione
                         start ordfor2 key >= k-ok
                               invalid exit perform
                           not invalid
                               read ordfor2 next
                         end-start
                      else
                         exit perform
                      end-if
                  not at end
                      if secondo-ciclo
                         if ord2-si-conferma
                            exit perform
                         end-if
                      end-if
                 end-read
              else
                 if hid-ascending
                    read ordfor2 next at end exit perform end-read
                 else
                    read ordfor2 previous at end exit perform end-read
                 end-if
              end-if
              |XYZ
              if prima-volta
                 set trovato-marca to false
                 set idx-marca to 1
                 search el-marca
                 when el-marca(idx-marca) = ord2-marca
                      set trovato-marca to true
                 end-search
                 if not trovato-marca
                    add 1 to idx-marca-tot
                    move ord2-marca to el-marca(idx-marca-tot)
                 end-if
                 perform AGGIUNGI-RIGA
              else
                 if ord2-marca = sel-marca or sel-marca = 0
                    set trovato-scorta to false
                    set idx-scorta to 1
                    search el-scorta
                    when el-scorta(idx-scorta) = ord2-scorta
                         set trovato-scorta to true
                    end-search
                    if el-selected(idx-scorta) = 1
                       perform AGGIUNGI-RIGA
                    end-if
                 end-if
              end-if

           end-perform.
           move tot-mag to tot-mag-buf.
           display lab-tot-mag.
           modify form1-gd-1, mass-update = 0.
           inquire form1-gd-1, last-row in tot-righe.
           if tot-righe >= 3
              move 3 to event-data-2
              perform SPOSTAMENTO
              modify form1-gd-1, cursor-y = 3, cursor-x = 1

              if sel-marca = 0
                 move "Tutte le marche" to lab-marca-buf
              else
                 move sel-marca to mar-codice
                 read tmarche no lock invalid continue end-read
                 move mar-codice      to cbo-codice
                 move mar-descrizione to cbo-descrizione
                 move cbo-marca-buf to lab-marca-buf
              end-if
              display lab-marca

              move 0 to counter
              move "Scorta esclusa: " to lab-scorta-buf
              move low-value          to lab-scorta-buf(16:)
              set trovato-scorta to false
              perform varying idx-scorta from 1 by 1 
                        until idx-scorta > idx-scorta-tot
                 if el-selected(idx-scorta) = 0
                    move el-scorta(idx-scorta) to como-scorta
                    string lab-scorta-buf delimited low-value
                           como-scorta    delimited size
                           " "            delimited size
                           into lab-scorta-buf
                    end-string
                    add 1 to counter
                 end-if
              end-perform
              inspect lab-scorta-buf replacing trailing 
                                     low-value by spaces
              if counter = 0
                 move "Tutte le scorte" to lab-scorta-buf
              end-if
              display lab-scorta
           else
              perform AZZERA-FILTRI
              move 0 to filtri
              modify chk-filtri, bitmap-number = 2, value filtri        
            
              if LK-BL-PROG-ID not = "desktop"
                 display message "Nessun dato"
                           title titolo
                            icon 2
              end-if
           end-if.

      ***---
       AGGIUNGI-RIGA.
           initialize prg-chiave replacing numeric data by zeros
                                      alphanumeric data by spaces.
           move ord2-articolo        to prg-cod-articolo art-codice.
           read articoli no lock invalid continue end-read.
           read progmag  no lock invalid continue end-read.
           move 0 to col-ordinato.
           if prg-ordinato-6 not = 0
              move prg-ordinato-6 to col-ordinato
           else
              if prg-ordinato-5 not = 0
                 move prg-ordinato-5 to col-ordinato
              else
                 if prg-ordinato-4 not = 0
                    move prg-ordinato-4 to col-ordinato
                 else
                    if prg-ordinato-3 not = 0
                       move prg-ordinato-3 to col-ordinato
                    else
                       if prg-ordinato-2 not = 0
                          move prg-ordinato-2 to col-ordinato
                       else
                          if prg-ordinato-1 not = 0
                             move prg-ordinato-1 to col-ordinato
                          end-if
                       end-if
                    end-if
                 end-if
              end-if
           end-if.

           if art-qta-epal > 0
              move art-qta-epal to col-qta-b
           else
              move art-qta-std  to col-qta-b
           end-if.

           move ord2-articolo        to col-codice.
           move ord2-art-descrizione to col-descr.
           move ord2-qta-imb         to col-imb.
           move ord2-marca           to col-marca.
           move ord2-scorta          to col-scorta.
           move ord2-scost           to col-scost.
           move 1                    to idx.
           move mese-start           to mese.
           move 0 to tot-anno.
           perform 12 times
              if mese > 12
                 move 1 to mese
              end-if
              if mese-end = 12
                 move ord2-qta-past-m(mese) to el-qta(idx)
                 add  ord2-qta-past-m(mese) to tot-anno
              else
                 if mese > mese-end
                    move ord2-qta-past-m(mese) to el-qta(idx)
                    add  ord2-qta-past-m(mese) to tot-anno
                 else
                    move ord2-qta-corr-m(mese) to el-qta(idx)
                    add  ord2-qta-corr-m(mese) to tot-anno
                 end-if
              end-if
              add 1 to mese idx
           end-perform.     

           move ord2-riordino to col-riordino.

           move el-qta(1)       to col-mese1.
           move el-qta(2)       to col-mese2.
           move el-qta(3)       to col-mese3.
           move el-qta(4)       to col-mese4.
           move el-qta(5)       to col-mese5.
           move el-qta(6)       to col-mese6.
           move el-qta(7)       to col-mese7.
           move el-qta(8)       to col-mese8.
           move el-qta(9)       to col-mese9.
           move el-qta(10)      to col-mese10.
           move el-qta(11)      to col-mese11.
           move el-qta(12)      to col-mese12.
           move tot-anno        to col-tot-anno.
           move ord2-media-vend to col-media.

           move ord2-chiave to qta-chiave.
           read qta-vend no lock 
                invalid move 0 to col-andamento
            not invalid move qta-media to col-andamento
           end-read.

           move ord2-consegna    to col-consegna.
           move ord2-giac        to col-giac-pz.
           compute giacenza rounded = ord2-giac / ord2-qta-imb.
           move giacenza        to col-giac-imb.
           move ord2-promo      to col-promo.

           move ord2-fabb-qta(1) to col-F1.
           compute giacenza rounded = ord2-fabb-qta(1) / ord2-qta-imb.
           move giacenza         to col-F1-imb.
           move ord2-fabb-qta(2) to col-F2.
           move ord2-fabb-qta(3) to col-F3.
           move ord2-fabb-qta(4) to col-F4.
           move ord2-fabb-qta(5) to col-F5.
           move ord2-fabb-qta(6) to col-F6.
           move ord2-qta-ord     to col-qta-ord.
           
           modify form1-gd-1, insert-rows 1.
           modify form1-gd-1(riga, 1),  cell-data col-codice.
           modify form1-gd-1(riga, 2),  cell-data col-descr.
           modify form1-gd-1(riga, 3),  cell-data col-imb.
           modify form1-gd-1(riga, 4),  cell-data col-scorta.
           modify form1-gd-1(riga, 5),  cell-data col-marca.
           modify form1-gd-1(riga, 6),  cell-data col-scost.
           modify form1-gd-1(riga, 7),  cell-data col-mese1.
           modify form1-gd-1(riga, 8),  cell-data col-mese2.
           modify form1-gd-1(riga, 9),  cell-data col-mese3.
           modify form1-gd-1(riga, 10), cell-data col-mese4.
           modify form1-gd-1(riga, 11), cell-data col-mese5.
           modify form1-gd-1(riga, 12), cell-data col-mese6.
           modify form1-gd-1(riga, 13), cell-data col-mese7.
           modify form1-gd-1(riga, 14), cell-data col-mese8.
           modify form1-gd-1(riga, 15), cell-data col-mese9.
           modify form1-gd-1(riga, 16), cell-data col-mese10.
           modify form1-gd-1(riga, 17), cell-data col-mese11.
           modify form1-gd-1(riga, 18), cell-data col-mese12.
           modify form1-gd-1(riga, 19), cell-data col-riordino.

           modify form1-gd-1(riga, 20), cell-data col-tot-anno.
           modify form1-gd-1(riga, 21), cell-data col-media.
           modify form1-gd-1(riga, 22), cell-data col-andamento.
           modify form1-gd-1(riga, 23), cell-data col-consegna.
           modify form1-gd-1(riga, 24), cell-data col-qta-b.
           modify form1-gd-1(riga, 25), cell-data col-giac-imb.
           modify form1-gd-1(riga, 26), cell-data col-giac-pz.
           modify form1-gd-1(riga, 27), cell-data col-ordinato.
           modify form1-gd-1(riga, 28), cell-data col-promo.
           modify form1-gd-1(riga, 29), cell-data col-F1-imb.
           modify form1-gd-1(riga, 30), cell-data col-F1.
           modify form1-gd-1(riga, 31), cell-data col-F2.
           modify form1-gd-1(riga, 32), cell-data col-F3.
           modify form1-gd-1(riga, 33), cell-data col-F4.
           modify form1-gd-1(riga, 34), cell-data col-F5.
           modify form1-gd-1(riga, 35), cell-data col-F6.
           modify form1-gd-1(riga, 37), cell-data col-qta-ord.

           |HIDDEN
           move ord2-programmazione to hid-programmazione.
           move ord2-mese-rif       to hid-mese-rif.
           move ord2-mese-scelto    to hid-mese-scelto.
           set  hid-no-urgente      to true.

           if ord2-si-urgente and ord2-giac < ord2-promo-urgente
              if ord2-promo-urgente > 0
                 set hid-si-urgente to true
              end-if
           end-if.

           move ord2-costo-mp       to hid-costo-mp.
           move ord2-chiave         to hid-chiave.
           move ord2-sostituto      to hid-sostituto.

           modify form1-gd-1(riga, 1), hidden-data gruppo-hidden.

           if prima-volta
              if ord2-giac > 0
                 compute tot-mag = tot-mag + ord2-giac * ord2-costo-mp
              end-if
           end-if.

           if hid-si-urgente
              modify form1-gd-1(riga, 1), cell-color 176
              modify form1-gd-1(riga, 2), cell-color 176
              modify form1-gd-1(riga, 3), cell-color 176
           else
              modify form1-gd-1(riga, 1), cell-color 513
              modify form1-gd-1(riga, 2), cell-color 513
              modify form1-gd-1(riga, 3), cell-color 513
           end-if.

           if hid-sostituto not = 0
              modify form1-gd-1(riga, 1), cell-color 449
              modify form1-gd-1(riga, 2), cell-color 449
           end-if.

           if ricalcolo
              perform VALUTA-COPERTURA
           else
              perform COLORA-FABBISOGNO
           end-if.

           if ord2-si-conferma
              modify form1-gd-1(riga, 36),
                     bitmap-number = 2
                     bitmap spunta-ordfor-bmp
                     bitmap-width 30
           else
              modify form1-gd-1(riga, 36), 
                     bitmap-number = 1
                     bitmap spunta-ordfor-bmp
                     bitmap-width 30
           end-if.

           add 1 to riga.

           evaluate true
           when ord2-fabbisogno-mese1
                if chk-nessuna-buf = 0
                   subtract 1 from riga
                   modify form1-gd-1, record-to-delete riga
                end-if

           when ord2-fabbisogno-mese2
                if chk-parziale-buf = 0
                   subtract 1 from riga
                   modify form1-gd-1, record-to-delete riga
                end-if

           when ord2-fabbisogno-mese3
                if chk-forn-buf = 0
                   subtract 1 from riga
                   modify form1-gd-1, record-to-delete riga
                end-if

           when ord2-fabbisogno-other
                if chk-singolo-buf = 0
                   subtract 1 from riga
                   modify form1-gd-1, record-to-delete riga
                end-if

           when ord2-fabbisogno-no-attivo
                if chk-scorta-buf = 0
                   subtract 1 from riga
                   modify form1-gd-1, record-to-delete riga
                end-if

           end-evaluate 
           .
      * <TOTEM:END>

       RIEPILOGO-VIA-MAIL.
      * <TOTEM:PARA. RIEPILOGO-VIA-MAIL>
           initialize LinkMail replacing numeric data by zeroes
                                    alphanumeric data by spaces.

           perform SETTA-INIZIO-RIGA.
           initialize como-riga.
           string r-inizio                 delimited size
                  "INVIO MAIL IN CORSO..." delimited size
                  into como-riga
           end-string.
           display como-riga upon syserr.

           move "RIEPILOGO ORDINI FORNITORI GENERATI" to LinkSubject.
           accept LinkAddress from environment "ORDFORN_ADDRESSES_AUTO".
           if primo-numero = 0
              move "NESSUN ORDINE GENERATO!!!" to LinkBody
           else
              string "GENERATI ORDINI DAL: "      delimited size
                     primo-numero-z               delimited size
                     " AL: "                      delimited size
                     ultimo-numero-z              delimited size
                     x"0d0a"                      delimited size
                     "TOTALE ORDINI: "            delimited size
                     tot-ordini-z                 delimited size
                     x"0d0a"                      delimited size
                     "OPERAZIONE EFFETTUATA IL: " delimited size
                     como-data(7:2)               delimited size
                     "/"                          delimited size
                     como-data(5:2)               delimited size
                     "/"                          delimited size
                     como-data(1:4)               delimited size
                     " ALLE: "                    delimited size
                     como-ora(1:2)                delimited size
                     ":"                          delimited size
                     como-ora(3:2)                delimited size
                     into LinkBody
              end-string
           end-if.

           set errori to true.
           move 0 to tentativi.
           move "pordini" to NomeProgramma.
           perform 10 times
              add 1 to tentativi
              perform SEND-MAIL

              perform SETTA-INIZIO-RIGA
              initialize como-riga
              if StatusInvioMail = -1
                 string r-inizio                      delimited size
                        "TENTATIVO N. "               delimited size
                        tentativi                     delimited size
                        ": "                          delimited size
                        "Chiamata InvioMail fallita!" delimited size
                        " STATUS -1"                  delimited size
                        into como-riga
                 end-string
              else
                 string r-inizio                       delimited size
                        "TENTATIVO N. "                delimited size
                        tentativi                      delimited size
                        ": "                           delimited size
                        "Chiamata InvioMail riuscita!" delimited size
                        into como-riga
                 end-string
              end-if
              display como-riga upon syserr

              open input lineseq1
              read  lineseq1 next
              if line-riga of lineseq1 = "True"
                 set tutto-ok to true
                 close lineseq1
                 exit perform
              end-if
              close lineseq1

              perform SETTA-INIZIO-RIGA
              initialize como-riga
              string r-inizio              delimited size
                     "TENTATIVO N. "       delimited size
                     tentativi             delimited size
                     ": "                  delimited size
                     line-riga of lineseq1 delimited size
                     into como-riga
              end-string
              display como-riga upon syserr

           end-perform.
               
           perform SETTA-INIZIO-RIGA.
           initialize como-riga.
           if tutto-ok
              string r-inizio               delimited size
                     "INVIO MAIL RIUSCITO!" delimited size
                     into como-riga
              end-string
           else
              string r-inizio                   delimited size
                     "INVIO MAIL NON RIUSCITO!" delimited size
                     into como-riga
              end-string
           end-if.
           display como-riga upon syserr.

           delete file lineseq.


      ***---
       SETTA-INIZIO-RIGA.
           accept como-ora  from time.
           accept como-data from century-date.

           move como-data(3:2) to r-aa. 
           move como-data(5:2) to r-mm.
           move como-data(7:2) to r-gg.

           move como-ora(1:2) to r-hh.
           move como-ora(3:2) to r-min.
           move como-ora(5:2) to r-sec 
           .
      * <TOTEM:END>

       RIGENERA-QTA-VENDUTI.
      * <TOTEM:PARA. RIGENERA-QTA-VENDUTI>
           set tutto-ok to true.                           
           if tge-data-consolid-progmag = 0
              move spaces to tge-chiave
              read tparamge no lock
           end-if.
           move tge-data-consolid-progmag(1:4) to CurrentYear.
           subtract 1 from CurrentYear giving PastYear.  

           accept wstampa from environment "PATH_VENDUTI".
           open input lineseq1 allowing all.
           if status-lineseq1 not = "00"
              if lk-bl-prog-id not = "desktop"
                 display message "Errore " status-lineseq1 " su:"
                   x"0d0a"wstampa
                   x"0d0a""Le quantità storiche non saranno aggiornate."
                   x"0d0a""Procedere comunque?"
                           type mb-yes-no
                          default mb-no
                          giving scelta
                            icon 2
                 if scelta = mb-no
                    set errori to true 
                 end-if
              else                            
                 move "QTA STORICHE NON AGGIORNATE (1)" to como-riga
                 perform SCRIVI-RIGA-LOG
                 set errori to true
              end-if
           else   
              close    qta-pordini
              open i-o qta-pordini
              if status-qta-pordini not = "00" 
                 if lk-bl-prog-id not = "desktop"                 
                    display message "Errore " status-qta-pordini " su:"
                      x"0d0a""File storici di vendita"
                      x"0d0a""Le quantità storiche non saranno aggiornat
      -    "e."
                      x"0d0a""Procedere comunque?"
                               type mb-yes-no
                            default mb-no
                             giving scelta
                               icon 2
                    if scelta = mb-no     
                       set errori to true 
                    end-if
                 else                
                    move "QTA STORICHE NON AGGIORNATE (2)" to como-riga
                    perform SCRIVI-RIGA-LOG
                    set errori to true
                 end-if
              else
                 move low-value to qp-chiave
                 start qta-pordini key >= qp-chiave
                       invalid continue
                   not invalid
                       perform until 1 = 2
                          read qta-pordini next 
                               at end exit perform 
                          end-read
                          delete qta-pordini record
                       end-perform
                 end-start
                 accept data-ini from century-date
                 move 1 to giorno-ini
                 evaluate mese-ini
                 when  1 
                       subtract 2 from anno-ini
                       move    11   to mese-ini
                 when  2                        
                       subtract 2 from anno-ini
                       move    12   to mese-ini
                 when  3        
                       subtract 1 from anno-ini
                       move     1   to mese-ini
                 when  4                        
                       subtract 1 from anno-ini
                       move     2   to mese-ini
                 when  5                        
                       subtract 1 from anno-ini
                       move     3   to mese-ini
                 when  6                        
                       subtract 1 from anno-ini
                       move     4   to mese-ini
                 when  7                        
                       subtract 1 from anno-ini
                       move     5   to mese-ini
                 when  8                        
                       subtract 1 from anno-ini
                       move     6   to mese-ini
                 when  9                        
                       subtract 1 from anno-ini
                       move     7   to mese-ini
                 when 10                        
                       subtract 1 from anno-ini
                       move     8   to mese-ini
                 when 11                        
                       subtract 1 from anno-ini
                       move     9   to mese-ini
                 when 12                        
                       subtract 1 from anno-ini
                       move    10   to mese-ini
                 end-evaluate
                 move anno-ini to periodo-ini(1:4)
                 move mese-ini to periodo-ini(5:2)
                 perform until 1 = 2
                    read lineseq1 next at end exit perform end-read
                    unstring line-riga of lineseq1 delimited by ";"
                        into r-articolo r-negativo 
                             r-qta r-anno r-mese r-note
                    end-unstring          
                    move r-anno to periodo-confronto(1:4)
                    move r-mese to periodo-confronto(5:2)
                    if periodo-confronto < periodo-ini
                       exit perform cycle
                    end-if
                    if r-articolo is numeric 
                       if r-negativo not = spaces
                          compute r-qta = r-qta * -1
                       end-if
                       move r-articolo to qp-articolo
                       move r-anno     to qp-anno
                       move r-mese     to qp-mese
                       move r-qta      to qp-qta qp-qta-ass
                       move r-note     to qp-note
                       move 1 to qp-prog
                       move como-data to qp-data-import
                       move como-ora  to qp-ora-import
                       perform until 1 = 2
                          write qp-rec
                                invalid add 1 to qp-prog
                            not invalid exit perform
                          end-write
                       end-perform
                    end-if
                 end-perform 
              end-if     
              close lineseq1
           end-if 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire form1-gd-1, cursor-y in riga, cursor-x in colonna.
           if event-data-1 > 36
              move colonna to event-data-1
           end-if.
           if nascoste
              if event-data-1 > 4 and < 22
                 if colonna < 5
                    move 22 to event-data-1
                 end-if
                 if colonna > 21
                    move 4 to event-data-1
                 end-if
              end-if
           end-if.

           inquire form1-gd-1 last-row in tot-righe.
           if event-data-2 < 3
              move 3 to event-data-2
           end-if.
           if event-data-2 > tot-righe
              move tot-righe to event-data-2
           end-if.

           inquire form1-gd-1(event-data-2, 1), hidden-data 
           gruppo-hidden.

           if hid-si-urgente
              modify form1-gd-1, y = event-data-2,
                           start-y = event-data-2,
                                 x = 4,
                           start-x = 28,
                           region-color = 304
           else
              modify form1-gd-1, y = event-data-2,
                           start-y = event-data-2,
                                 x = 1,
                           start-x = 28,
                           region-color = 304
           end-if.

           set event-action to event-action-fail.
           modify form1-gd-1, cursor-y event-data-2, 
                              cursor-x event-data-1.

           move 78-ID-form1-gd-1 to control-id.
           move 4 to accept-control 
           .
      * <TOTEM:END>

       SPOSTAMENTO-E.
      * <TOTEM:PARA. SPOSTAMENTO-E>
           move 6 to event-data-1.

           inquire gd-form-e last-row in tot-righe.
           if event-data-2 < 2
              move 2 to event-data-2
           end-if.
           if event-data-2 > tot-righe
              move tot-righe to event-data-2
           end-if.

           set event-action to event-action-fail.
           modify gd-form-e, cursor-y event-data-2, 
                             cursor-x event-data-1.

           move 78-ID-gd-form-e to control-id.
           move 4 to accept-control            
           .
      * <TOTEM:END>

       SPOSTAMENTO-I.
      * <TOTEM:PARA. SPOSTAMENTO-I>
           move 6 to event-data-1.

           inquire gd-form-i last-row in tot-righe.
           if event-data-2 < 2
              move 2 to event-data-2
           end-if.
           if event-data-2 > tot-righe
              move tot-righe to event-data-2
           end-if.

           set event-action to event-action-fail.
           modify gd-form-i, cursor-y event-data-2, 
                             cursor-x event-data-1.

           move 78-ID-gd-form-i to control-id.
           move 4 to accept-control            
           .
      * <TOTEM:END>

       VALORIZZA-CAMPI.
      * <TOTEM:PARA. VALORIZZA-CAMPI>
      *    **************************************************
      *    * ATTENZIONE!!! ALLINEARE SEMPRE CON FORFOR-P!!! *
      *    * NON PER QUANTO RIGUARDA IL FABBISOGNO!!!       *
      *    **************************************************
           if ricalcolo
              unlock      coperfab all records
              close       coperfab
              open output coperfab
              close       coperfab
              open i-o    coperfab
           else
              move 0 to counter2
              |Controllo che sia ancora presente il listino
              |con cui ho fatto la associazione
              move low-value to cpf-rec
              start coperfab key >= cpf-chiave
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read coperfab next at end exit perform end-read

                       add 1 to counter
                       add 1 to counter2
                       if counter2 = 10
                          move counter to counter-edit
                          display counter-edit
                             upon scr-elab-handle at column 53
                                                       line 04
                          move 0 to counter2
                       end-if                                                                                                              

                       move cpf-listino  to rlis-codice
                       move cpf-articolo to rlis-articolo
                       read rlistini no lock
                            invalid 
                            delete coperfab record
                       end-read
                    end-perform
              end-start          
           end-if.
           perform CALCOLA-PERIODO.                     

           display "                             "
              upon scr-elab-handle at column 45
                                        line 04

           move low-value  to ord2-rec.
           start ordfor2 key is >= ord2-chiave
                 invalid set errori to true
           end-start.

           if tutto-ok        
              move 0 to counter2
              perform until 1 = 2

                 read ordfor2 next at end exit perform end-read

                 add 1 to counter
                 add 1 to counter2   
                 if counter2 = 10
                    move counter to counter-edit
                    display counter-edit
                       upon scr-elab-handle at column 53
                                                 line 04
                    move 0 to counter2
                 end-if

                 move ord2-articolo to art-codice
                 read articoli no lock
                      invalid continue
                  not invalid
                      move ord2-articolo to prg-cod-articolo
                      perform TROVA-GIACENZA-IMPEGNATO
                                                            
                      move ord2-articolo to prg-cod-articolo
                      move spaces        to prg-cod-magazzino
                      move spaces        to prg-tipo-imballo
                      move 0             to prg-peso
                      read progmag no lock
                           invalid continue
                       not invalid perform AGGIORNA-RECORD
                      end-read
                 end-read

              end-perform
           end-if.

           move space  to tge2-codice.
           read tparamge2 no lock invalid continue end-read 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       ordini-Ev-Before-Program.
      * <TOTEM:PARA. ordini-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           |Questo programma non può scrivere nei log di scheduler
           |allora lo forzo io                 
           if LK-BL-PROG-ID = "desktop"
              accept path-genlog from environment "SCHEDULER_PATH_LOG"
              accept como-ora  from time
              accept como-data from century-date
              inspect path-genlog replacing trailing spaces by low-value
              string path-genlog     delimited low-value
                     "LOG_PORDINI_"   delimited size
                     como-data        delimited size
                     "_"              delimited size
                     como-ora         delimited size
                     ".log"           delimited size
                     into path-genlog
              end-string
              open output genlog
              move "INIZIO PROGRAMMA" to como-riga
              perform SCRIVI-RIGA-LOG
           end-if.

           set tutto-ok to true.
           open exclusive i-o ordfor2.        
           set solo-uscita to false.
           if errori
              set solo-uscita to true
              perform ORDINI-EV-AFTER-PROGRAM
              goback
           else            
              if LK-BL-PROG-ID not = "desktop"
                 move "INIZIO SOMMA VENDUTI" to como-riga
                 perform SCRIVI-RIGA-LOG
                 open input ordfor qta-pordini tparamge
                 move low-value to ord2-rec
                 start ordfor2 key >= ord2-chiave
                       invalid set errori to true
                 end-start
                 perform until 1 = 2 or errori
                 
                    read ordfor2 next at end exit perform end-read
                    move ord2-chiave to ord-chiave        
                    read ordfor 
                         invalid                                  
                         initialize ord-qta-vendita-anno-corrente 
                                    replacing numeric data by zeroes
                                         alphanumeric data by spaces
                         initialize ord-qta-vendita-anno-passsato
                                    replacing numeric data by zeroes
                                         alphanumeric data by spaces
                     not invalid continue
                    end-read
                    move ord-qta-vendita-anno-corrente 
                      to ord2-qta-vendita-anno-corrente
                    move ord-qta-vendita-anno-passsato 
                      to ord2-qta-vendita-anno-passsato
                                    
                    perform AGGIUNGI-QTA-VENDUTI
                    rewrite ord2-rec invalid continue end-rewrite
                 end-perform
                 close ordfor2 
                 close ordfor qta-pordini tparamge

                 move "FINE SOMMA VENDUTI" to como-riga
                 perform SCRIVI-RIGA-LOG
              else
                 perform INIT-FONT
                 perform SCR-ELAB2-OPEN-ROUTINE
              end-if
           end-if.
                             
           move "CONTROLLO ESEGUIBILITA'" to como-riga.
           perform SCRIVI-RIGA-LOG.
      *****     perform CONTROLLA-ESEGUIBILITA.
           |LO DEVO FARE PER FORZA QUA PER AVERE IL CONTROLLO 

           set RecLocked to false.
           open i-o multigest.
           move spaces to mul-chiave.
           read multigest lock invalid continue end-read.
           if RecLocked
              read multigest no lock invalid continue end-read
              if mul-ricalcolo       
                 close multigest
                 SET LK-BL-CANCELLAZIONE TO TRUE
                 MOVE COMO-PROG-ID       TO LK-BL-PROG-ID
                 CALL "BLOCKPGM"  USING LK-BLOCKPGM
                 move "GENERAZIONE INTERROTTA" to como-riga
                 perform SCRIVI-RIGA-LOG
                 close genlog           
                 perform ORDINI-EV-AFTER-PROGRAM
                 goback
              end-if
           else
              set mul-funzione to true
              rewrite mul-rec
              read multigest lock
           end-if.         
                             
           move "CONTROLLO ESEGUIBILITA' OK" to como-riga.
           perform SCRIVI-RIGA-LOG.

           copy resource "spunta-ordfor.bmp".
           call "W$BITMAP" using wbitmap-load "spunta-ordfor.bmp"
                          giving spunta-ordfor-bmp.   
 
      *****     |come prima cosa riaggiorno le sole qta.  
      *****     |Il prf. si aspetta il file aperto.
      *****     open input qta-pordini.
      *****     perform RIGENERA-QTA-VENDUTI.   
      *****     close qta-pordini. |lo riapre poi totem     

      ***---
       SCRIVI-RIGA-LOG.
           if path-genlog = spaces exit paragraph end-if.
           inspect como-riga replacing trailing spaces by low-value.
           perform SETTA-INIZIO-RIGA.
           initialize gl-riga.
           string r-inizio  delimited size
                  como-riga delimited low-value
             into gl-riga
           end-string.
           write gl-riga 
           .
      * <TOTEM:END>
       ordini-Ev-After-Program.
      * <TOTEM:PARA. ordini-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.

           move "FINE PROGRAMMA" to como-riga.
           perform SCRIVI-RIGA-LOG.

           if LK-BL-PROG-ID = "desktop"
              close genlog
           end-if.

           if solo-uscita exit paragraph end-if.
           unlock multigest all records.
           close  multigest.           

           if path-tmp-forn not = spaces
              close       tmp-forn
              delete file tmp-forn
           end-if.
           
           if path-tmp-ordfor not = spaces
              close       tmp-ordfor
              delete file tmp-ordfor
           end-if.

           if path-tmp-ordf-art not = spaces
              close       tmp-ordf-art
              delete file tmp-ordf-art
           end-if.

           call "W$BITMAP" using wbitmap-destroy, spunta-ordfor-bmp   
           .
      * <TOTEM:END>
       scr-data-Ef-1-BeforeProcedure.
      * <TOTEM:PARA. scr-data-Ef-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       scr-data-Ef-1-AfterProcedure.
      * <TOTEM:PARA. scr-data-Ef-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           inquire ef-data, value in ef-data-buf.
           move ef-data-buf to como-data.
           perform DATE-FORMAT.
           move como-data to ef-data-buf.
      *****     display ef-data.

           perform DATE-TO-FILE.
           move como-data to data-sos.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       pb-ok-BeforeProcedure.
      * <TOTEM:PARA. pb-ok-BeforeProcedure>
           modify pb-ok, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-ok-AfterProcedure.
      * <TOTEM:PARA. pb-ok-AfterProcedure>
           modify pb-ok, bitmap-number 1 
           .
      * <TOTEM:END>
       pb-ok-LinkTo.
      * <TOTEM:PARA. pb-ok-LinkTo>
           .
      * <TOTEM:END>
       pb-annulla-BeforeProcedure.
      * <TOTEM:PARA. pb-annulla-BeforeProcedure>
           modify pb-annulla, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-annulla-AfterProcedure.
      * <TOTEM:PARA. pb-annulla-AfterProcedure>
           modify pb-annulla, bitmap-number 1 
           .
      * <TOTEM:END>
       pb-mostra-LinkTo.
      * <TOTEM:PARA. pb-mostra-LinkTo>
           if nascoste                          
              modify form1-gd-1, display-columns (1, 8, 45, 50, 57, 63, 
           70, 78, 86, 94, 102, 110, 118, 126, 134, 142, 150, 158, 166, 
           174, 
           182,
           190, 197, 206, 214, 222, 230, 238, 246, 254, 262, 
           270, 278, 286, 294, 302, 306)
      *     (1, 8, 45, 50, 57, 63, 
      *     70, 78, 86, 94, 102, 110, 118, 126, 134, 142, 150, 158, 166, 
      *     174, 182, 189, 198, 206, 214, 222, 230, 238, 246, 254, 
      *     262, 270, 278, 286, 294, 298)
              modify form1-gd-1, virtual-width 314
              modify pb-mostra, title "&Nascondi colonne mesi"
              set visibili to true
              modify pb-mostra, bitmap-number = 1
           else                               
              |Per ripristinare in caso di cambio colonne 
              |prendere quello generato nel cbl
              modify form1-gd-1, display-columns (1, 7, 40, 45, 48, 48, 
           48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 
           48, 53, 58, 65, 72, 79, 85, 91, 99, 107, 115, 123, 131, 139, 
           147, 151)
              modify form1-gd-1, virtual-width 157
              modify pb-mostra, title "&Mostra colonne mesi"
              set nascoste to true
              modify pb-mostra, bitmap-number = 3
           end-if.

           inquire form1-gd-1, cursor-y in riga.
           move riga to event-data-2.
           move 4 to event-data-1 colonna.
           modify form1-gd-1, cursor-y colonna.
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Entry>
           inquire form1-gd-1(event-data-2, 1), hidden-data in 
           gruppo-hidden.
           evaluate event-data-1
           when 1
           when 2
                inquire form1-gd-1, entry-reason in como-x
                set event-action to event-action-fail-terminate
                evaluate como-x
                when X"00"|doppio click
                     inquire form1-gd-1, cursor-y = store-riga
                     set CallCollegato to true
                end-evaluate 


           when 35
           when 34
           when 33
           when 32
           when 31
           when 30
                inquire form1-gd-1, entry-reason in como-x
                evaluate como-x
                when X"00"|doppio click
                     set event-action to event-action-fail-terminate
                     inquire form1-gd-1, cursor-y = store-riga
                     set CallAssociazioni to true
                when other
                     if hid-programmazione-no
                        set event-action to event-action-fail
                     end-if
                end-evaluate


           when 29
                inquire form1-gd-1, entry-reason in como-x
                set event-action to event-action-fail-terminate
                evaluate como-x
                when X"00"|doppio click
                     inquire form1-gd-1, cursor-y = store-riga
                     set CallAssociazioni to true
                end-evaluate 
           

           when 27
                inquire form1-gd-1, entry-reason in como-x
                set event-action to event-action-fail-terminate
                inquire form1-gd-1, cursor-y = store-riga
                inquire form1-gd-1(store-riga, 1), 
                        hidden-data in gruppo-hidden
                move hid-chiave to ord2-chiave
                read ordfor2 no lock
                     invalid        
                     display message "Chiave non trovata" ord2-chiave
                              x"0d0a""Contattare assistenza"
                               title tit-err
                                icon 3
                 not invalid
                     set RiepilogoOrdini to true
                end-read
      *****          inquire form1-gd-1(event-data-2, 27), 
      *****                  cell-data in giacenza
      *****          if giacenza > 0
      *****             evaluate como-x
      *****             when X"00"|doppio click
      *****                  set RiepilogoOrdini to true
      *****                  inquire form1-gd-1, cursor-y = store-riga
      *****                  inquire form1-gd-1(store-riga, 1), 
      *****                          cell-data in ord2-articolo
      *****                  
      *****                  initialize prg-chiave 
      *****                             replacing numeric data by zeros
      *****                                  alphanumeric data by spaces
      *****                  move ord2-articolo        to prg-cod-articolo
      *****                  read progmag no lock invalid continue end-read
      *****
      *****                  compute ordinato-1 = 
      *****                      prg-ordinato-1
      *****
      *****                  compute ordinato-2 = 
      *****                      prg-ordinato-2 -
      *****                      prg-ordinato-1
      *****
      *****                  compute ordinato-3 = 
      *****                      prg-ordinato-3 -
      *****                      prg-ordinato-2
      *****
      *****                  compute ordinato-4 = 
      *****                      prg-ordinato-4 -
      *****                      prg-ordinato-3
      *****
      *****                  compute ordinato-5 = 
      *****                      prg-ordinato-5 -
      *****                      prg-ordinato-4
      *****
      *****                  compute ordinato-6 = 
      *****                      prg-ordinato-6 -
      *****                      prg-ordinato-5
      *****
      *****                  move ordinato-1 to mese-1-ed
      *****                  move ordinato-2 to mese-2-ed
      *****                  move ordinato-3 to mese-3-ed
      *****                  move ordinato-4 to mese-4-ed
      *****                  move ordinato-5 to mese-5-ed
      *****                  move ordinato-6 to mese-6-ed
      *****                  move ord2-promo-urgente to qta-ed
      *****                  display message
      *****                       "== Ordinato suddiviso in mesi =="
      *****                x"0d0a"""
      *****                x"0d0a""  MESE 1     ", mese-1-ed
      *****                x"0d0a""  MESE 2     ", mese-2-ed
      *****                x"0d0a""  MESE 3     ", mese-3-ed
      *****                x"0d0a""  MESE 4     ", mese-4-ed
      *****                x"0d0a""  MESE 5     ", mese-5-ed
      *****                x"0d0a""  MESE 6     ", mese-6-ed
      *****                x"0d0a"""
      *****                x"0d0a""  PROMO URGENTE  ", qta-ed
      *****                x"0d0a""====================="
      *****                                 title titolo
      *****                                  icon 1
      *****                  
      *****             end-evaluate 
      *****          end-if

           when 28
                inquire form1-gd-1, entry-reason in como-x
                set event-action to event-action-fail-terminate
                inquire form1-gd-1(event-data-2, 28), 
                        cell-data in giacenza
                if giacenza > 0
                   evaluate como-x
                   when X"00"|doppio click
                        inquire form1-gd-1, cursor-y = store-riga
                        inquire form1-gd-1(store-riga, 1), 
                                hidden-data in gruppo-hidden
                        move hid-chiave to ord2-chiave
                        read ordfor2 no lock 
                             invalid  
                             display message "Chiave non trovata" 
           ord2-chiave
                                      x"0d0a""Contattare assistenza"
                                       title tit-err
                                        icon 3
                         not invalid
                             move ord2-promo-mese(1) to mese-1-ed
                             move ord2-promo-mese(2) to mese-2-ed
                             move ord2-promo-mese(3) to mese-3-ed
                             move ord2-promo-mese(4) to mese-4-ed
                             move ord2-promo-mese(5) to mese-5-ed
                             move ord2-promo-mese(6) to mese-6-ed
                             move ord2-promo-urgente to qta-ed
                             display message
                             "== Q.tà SOS suddivisa in mesi =="
                      x"0d0a"" "
                      x"0d0a""  MESE 1     ", mese-1-ed
                      x"0d0a""  MESE 2     ", mese-2-ed
                      x"0d0a""  MESE 3     ", mese-3-ed
                      x"0d0a""  MESE 4     ", mese-4-ed
                      x"0d0a""  MESE 5     ", mese-5-ed
                      x"0d0a""  MESE 6     ", mese-6-ed
                      x"0d0a"" "
                      x"0d0a""  PROMO URGENTE  ", qta-ed
                      x"0d0a""====================="
                                       title titolo
                                        icon 1
                        end-read
                   end-evaluate 
                end-if
           when other
                set event-action to event-action-fail
           end-evaluate 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Mouse>
           if event-data-1 = 36
              inquire form1-gd-1(event-data-2, 1), hidden-data in 
           gruppo-hidden
              move hid-chiave to ord2-chiave
              read ordfor2 no lock
                   invalid
                   display message "Chiave non trovata" ord2-chiave
                            x"0d0a""Contattare assistenza"
                             title tit-err
                              icon 3
               not invalid
                   if ord2-si-conferma
                      set ord2-no-conferma to true
                      rewrite ord2-rec
                      modify form1-gd-1(event-data-2, 36), 
                             bitmap-number = 1
                             bitmap spunta-ordfor-bmp
                             bitmap-width 30
                   else
                      inquire form1-gd-1(event-data-2, 37), 
                              cell-data in giacenza
                      if giacenza > 0
                         set ord2-si-conferma to true
                         rewrite ord2-rec
                         modify form1-gd-1(event-data-2, 36), 
                                bitmap-number = 2
                                bitmap spunta-ordfor-bmp
                                bitmap-width 30
                      end-if
                   end-if
              end-read
           end-if.
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Finish-Entry>
           set tutto-ok to true.
           inquire form1-gd-1(event-data-2, 1), 
                   hidden-data in gruppo-hidden.

           move hid-chiave to ord2-chiave.
           read ordfor2 no lock 
                invalid 
                set errori to true
                display message "Chiave non trovata" ord2-chiave
                         x"0d0a""Contattare assistenza"
                          title tit-err
                           icon 3
           end-read.
      
           inquire form1-gd-1(event-data-2, 30), 
                   cell-data in ord2-fabb-qta(1).
      
           inquire form1-gd-1(event-data-2, 31), 
                   cell-data in ord2-fabb-qta(2).
      
           inquire form1-gd-1(event-data-2, 32), 
                   cell-data in ord2-fabb-qta(3).
      
           inquire form1-gd-1(event-data-2, 33), 
                   cell-data in ord2-fabb-qta(4).
      
           inquire form1-gd-1(event-data-2, 34), 
                   cell-data in ord2-fabb-qta(5).
      
           inquire form1-gd-1(event-data-2, 35), 
                   cell-data in ord2-fabb-qta(6). 

           if ord2-fabb-qta(1) = 0
              set errori to true
           else
              if ord2-fabb-qta(2) < ord2-fabb-qta(1)
                 set errori to true
              else
                 if ord2-fabb-qta(3) < ord2-fabb-qta(2)
                    set errori to true
                 else
                    if ord2-fabb-qta(4) < ord2-fabb-qta(3)
                       set errori to true
                    else
                       if ord2-fabb-qta(5) < ord2-fabb-qta(4)
                          set errori to true
                       else
                          if ord2-fabb-qta(6) < ord2-fabb-qta(5)
                             set errori to true
                          end-if
                       end-if
                    end-if
                 end-if
              end-if
           end-if.
                    
           if errori
              set event-action to event-action-fail
           else
              rewrite ord2-rec 
                      invalid
                      display message "Chiave non trovata" ord2-chiave
                               x"0d0a""Contattare assistenza"
                                title tit-err
                                 icon 3
              end-rewrite
      *****     move event-data-2 to riga.
      *****     perform CALCOLA-FABBISOGNO.
                 
           |Se vario l'impegnato non devo ricoprire il fabbisogno
           |ma dovrò farlo dalla funzione di associazione fornitori
     
      *****     if path-tmp-forn = spaces
      *****        perform OPEN-OUTPUT-TMP-FORN
      *****     else
      *****        close       tmp-forn
      *****        open output tmp-forn
      *****        close       tmp-forn
      *****        open i-o    tmp-forn
      *****     end-if.
                       
              perform COPRI-FABBISOGNO
              perform SCRIVI-COPERTURA
              perform VALUTA-COPERTURA

              move ord2-fabb-qta(1) to col-F1
              if ord2-fabb-qta(1) <=  ord2-qta-imb
                 move 1 to giacenza
              else
                 compute giacenza = ord2-fabb-qta(1) / ord2-qta-imb
              end-if
              move giacenza         to col-F1-imb
              move ord2-fabb-qta(2) to col-F2
              move ord2-fabb-qta(3) to col-F3
              move ord2-fabb-qta(4) to col-F4
              move ord2-fabb-qta(5) to col-F5
              move ord2-fabb-qta(6) to col-F6
              rewrite ord2-rec 
                      invalid
                      display message "Chiave non trovata" ord2-chiave
                               x"0d0a""Contattare assistenza"
                                title tit-err
                                 icon 3
              end-rewrite

              modify form1-gd-1(event-data-2, 29), cell-data col-F1-imb
              modify form1-gd-1(event-data-2, 30), cell-data col-F1
              modify form1-gd-1(event-data-2, 31), cell-data col-F2
              modify form1-gd-1(event-data-2, 32), cell-data col-F3
              modify form1-gd-1(event-data-2, 33), cell-data col-F4
              modify form1-gd-1(event-data-2, 34), cell-data col-F5
              modify form1-gd-1(event-data-2, 35), cell-data col-F6
           end-if 
           .
      * <TOTEM:END>
       pb-ricalcolo-LinkTo.
      * <TOTEM:PARA. pb-ricalcolo-LinkTo>
           if LK-BL-PROG-ID not = "desktop"
              display message "Ricalcolare il file partendo da ordfor?"
                        title titolo
                         icon 2
                         type mb-yes-no
                       giving scelta
           else
              move mb-yes to scelta
           end-if.

           if scelta = mb-yes         
              move "INIZIO RICALCOLO" to como-riga
              perform SCRIVI-RIGA-LOG

              move 1 to chk-parziale-buf
              move 1 to chk-nessuna-buf
              move 1 to chk-forn-buf
              move 1 to chk-singolo-buf
              display chk-parziale
                      chk-nessuna
                      chk-forn
                      chk-singolo

              set tutto-ok  to true
              set ricalcolo to true
              close ordfor2
              perform RIGENERA-QTA-VENDUTI
              if tutto-ok
                 perform CREA-ORDFOR2
              end-if     
              move "FINE RICALCOLO" to como-riga
              perform SCRIVI-RIGA-LOG
              if errori
                 exit paragraph
              end-if
              close ordfor2
              open exclusive i-o ordfor2
              perform SCR-ELAB-OPEN-ROUTINE
              set ricalcolo to false
              modify pb-ricalcolo, bitmap-number 1
              move 0 to filtri
              modify chk-filtri, value filtri, bitmap-number = 2

              perform AGGIORNA-DATA-RICALCOLO-TPARAMGE  
                                      
           end-if 
           .
      * <TOTEM:END>
       pb-ricalcolo-BeforeProcedure.
      * <TOTEM:PARA. pb-ricalcolo-BeforeProcedure>
           modify pb-ricalcolo, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-ricalcolo-AfterProcedure.
      * <TOTEM:PARA. pb-ricalcolo-AfterProcedure>
           modify pb-ricalcolo, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-mostra-BeforeProcedure.
      * <TOTEM:PARA. pb-mostra-BeforeProcedure>
           if nascoste
              modify pb-mostra, bitmap-number = 4
           else
              modify pb-mostra, bitmap-number = 2
           end-if 
           .
      * <TOTEM:END>
       pb-mostra-AfterProcedure.
      * <TOTEM:PARA. pb-mostra-AfterProcedure>
           if nascoste
              modify pb-mostra, bitmap-number = 3
           else
              modify pb-mostra, bitmap-number = 1
           end-if 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Heading-Clicked.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Heading-Clicked>
           if event-data-2 <= 2
              evaluate event-data-1
              when 1
              when 2
              when 4
              when 5
              when 36
                   inquire form1-gd-1(1, event-data-1)
                           hidden-data in hid-sort
                   if hid-ascending 
                      set hid-descending to true
                   else
                      set hid-ascending  to true
                   end-if

                   modify form1-gd-1(riga,  1), hidden-data = "N"
                   modify form1-gd-1(riga,  2), hidden-data = "N"
                   modify form1-gd-1(riga,  4), hidden-data = "N"
                   modify form1-gd-1(riga,  5), hidden-data = "N"
                   modify form1-gd-1(riga, 36), hidden-data = "N"

                   modify form1-gd-1(1, event-data-1)
                          hidden-data hid-sort

                   move event-data-1 to store-colonna
                   move 1            to store-riga

                   evaluate store-colonna
                   when 1
                        if hid-ascending
                           move low-value to ord2-rec
                           start ordfor2 key >= ord2-chiave
                                 invalid continue
                           end-start
                        else
                           move high-value to ord2-rec
                           start ordfor2 key <= ord2-chiave
                                 invalid continue
                           end-start
                        end-if
                   when 2
                        if hid-ascending
                           move low-value to ord2-rec
                           start ordfor2 key >= k-descr
                                 invalid continue
                           end-start
                        else
                           move high-value to ord2-rec
                           start ordfor2 key <= k-descr
                                 invalid continue
                           end-start
                        end-if
                   when 4
                        if hid-ascending
                           move low-value to ord2-rec
                           start ordfor2 key >= k-scorta
                                 invalid continue
                           end-start
                        else
                           move high-value to ord2-rec
                           start ordfor2 key <= k-scorta
                                 invalid continue
                           end-start
                        end-if
                   when 5
                        if hid-ascending
                           move low-value to ord2-rec
                           start ordfor2 key >= k-ord
                                 invalid continue
                           end-start
                        else
                           move high-value to ord2-rec
                           start ordfor2 key <= k-ord
                                 invalid continue
                           end-start
                        end-if
                   when 36
                        if hid-ascending
                           set ord2-si-conferma to true
                        else
                           set ord2-no-conferma to true
                        end-if
                        move low-value to ord2-art-descrizione
                        start ordfor2 key >= k-ok
                              invalid continue
                        end-start
                        |Se non ci sono di confermate lo status del
                        |file diventa "23" ma non va in INVALID
                        if status-ordfor2 not = "00"
                           set hid-descending   to true
                           set ord2-no-conferma to true
                           move low-value to ord2-art-descrizione
                           start ordfor2 key >= k-ok
                                 invalid continue
                           end-start
                        end-if
                   end-evaluate
                   set RicaricaGrid to true
                   perform RIEMPI-GRID
                   move store-colonna to colonna
                   perform BMP-SORT

                   modify form1-gd-1(store-riga, store-colonna)
                          hidden-data hid-sort
              end-evaluate
           end-if 
           .
      * <TOTEM:END>
       ef-cod-BeforeProcedure.
      * <TOTEM:PARA. ef-cod-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-cod-AfterProcedure.
      * <TOTEM:PARA. ef-cod-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       rb-cod-BeforeProcedure.
      * <TOTEM:PARA. rb-cod-BeforeProcedure>
           modify control-handle, color = colore-nu
           modify control-handle, color = colore-nu
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       rb-cod-AfterProcedure.
      * <TOTEM:PARA. rb-cod-AfterProcedure>
           modify control-handle, color = colore-or
           modify control-handle, color = colore-or
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       rb-cod-LinkTo.
      * <TOTEM:PARA. rb-cod-LinkTo>
           .
      * <TOTEM:END>
       rb-des-BeforeProcedure.
      * <TOTEM:PARA. rb-des-BeforeProcedure>
           modify control-handle, color = colore-nu
           modify control-handle, color = colore-nu
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       rb-des-AfterProcedure.
      * <TOTEM:PARA. rb-des-AfterProcedure>
           modify control-handle, color = colore-or
           modify control-handle, color = colore-or
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       rb-des-LinkTo.
      * <TOTEM:PARA. rb-des-LinkTo>
           .
      * <TOTEM:END>
       ef-des-BeforeProcedure.
      * <TOTEM:PARA. ef-des-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-des-AfterProcedure.
      * <TOTEM:PARA. ef-des-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       pb-esegui-LinkTo.
      * <TOTEM:PARA. pb-esegui-LinkTo>
           set tutto-ok to true.

           if tipo-ricerca = 1
              inquire ef-cod, value in cod
              if cod not > spaces 
                 set errori  to true 
              else
                 move cod    to TextToSearch
                 call "C$JUSTIFY" using TextToSearch, "L"
                 move spaces to des
                 display ef-des
              end-if 
           else                           
              inquire ef-des, value in des
              if des = spaces 
                 set errori to true 
              else
                 move des to TextToSearch   
                 move 0 to cod
                 display ef-cod
              end-if
           end-if.
           move tipo-ricerca to event-data-1. 

           if tutto-ok 
              move 27 to key-status 
              set Ricerca to true
           end-if.

           Set tutto-ok to true 
           .
      * <TOTEM:END>
       cb-match-BeforeProcedure.
      * <TOTEM:PARA. cb-match-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       cb-match-AfterProcedure.
      * <TOTEM:PARA. cb-match-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       tool-CercaTesto-LinkTo.
      * <TOTEM:PARA. tool-CercaTesto-LinkTo>
           perform CERCA-TESTO 
           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify pb-eseguia, bitmap-number = 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify pb-eseguia, bitmap-number = 1 
           .
      * <TOTEM:END>
       Form1-Pb-2-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2-BeforeProcedure>
           modify pb-cancel, bitmap-number = 2 
           .
      * <TOTEM:END>
       Form1-Pb-2-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2-AfterProcedure>
           modify pb-cancel, bitmap-number = 1 
           .
      * <TOTEM:END>
       scr-filtri-Cm-1-BeforeProcedure.
      * <TOTEM:PARA. scr-filtri-Cm-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       scr-filtri-Cm-1-AfterProcedure.
      * <TOTEM:PARA. scr-filtri-Cm-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       PB-ESEGUIa-LinkTo.
      * <TOTEM:PARA. PB-ESEGUIa-LinkTo>
           inquire cbo-marca, value in cbo-marca-buf.
           move cbo-codice to sel-marca.
           set RicaricaGrid to true.
           perform varying riga from 1 by 1 
                     until riga > idx-scorta-tot
              inquire gd-scorte(riga, 1) hidden-data hidden-sel
              inquire gd-scorte(riga, 2) hidden-data hidden-idx
              move hidden-sel to el-selected(hidden-idx)
           end-perform.
           move 27 to key-status 
           .
      * <TOTEM:END>
       gd-scorte-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-scorte-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-scorte-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-scorte-Ev-Msg-Goto-Cell-Mouse>
           inquire gd-scorte(event-data-2, 1), hidden-data in 
           hidden-sel.
           if hidden-sel = 0
              modify gd-scorte, row-color 481
              move 1 to hidden-sel
           else
              modify gd-scorte, row-color 513
              move 0 to hidden-sel
           end-if.
           modify gd-scorte(event-data-2, 1), hidden-data hidden-sel 
           .
      * <TOTEM:END>
       Screen1-Cb-1-BeforeProcedure.
      * <TOTEM:PARA. Screen1-Cb-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen1-Cb-1-AfterProcedure.
      * <TOTEM:PARA. Screen1-Cb-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       chk-filtri-LinkTo.
      * <TOTEM:PARA. chk-filtri-LinkTo>
           if filtri = 1
              perform FILTRA-E-VALUTA
           else
              if sel-marca not = 0
                 display message "Rimuovere i filtri?"
                           title titolo
                            type mb-yes-no
                          giving scelta
                 if scelta = mb-yes
                    perform AZZERA-FILTRI
                 else
                    perform FILTRA-E-VALUTA
                 end-if
              else
                 move 0 to filtri
                 perform varying idx-scorta from 1 by 1 
                           until idx-scorta > idx-scorta-tot
                    if el-selected(idx-scorta) = 0
                       display message "Rimuovere i filtri?"
                                 title titolo
                                  type mb-yes-no
                                giving scelta
                       if scelta = mb-yes
                          perform AZZERA-FILTRI
                       else
                          perform FILTRA-E-VALUTA
                       end-if
                       exit perform
                    end-if
                 end-perform
              end-if
           end-if.
           if RicaricaGrid
              perform RICARICA-GRID
           end-if.

           if filtri = 1
              modify chk-filtri, bitmap-number = 3, value filtri
           else
              modify chk-filtri, bitmap-number = 2, value filtri
           end-if.

      ***---
       FILTRA-E-VALUTA.
           perform SCR-FILTRI-OPEN-ROUTINE.
           if sel-marca not = 0
              move 1 to filtri
           else
              move 0 to filtri
              perform varying idx-scorta from 1 by 1 
                        until idx-scorta > idx-scorta-tot
                 if el-selected(idx-scorta) = 0
                    move 1 to filtri
                    exit perform
                 end-if
              end-perform
           end-if.

      ***---
       AZZERA-FILTRI.
           move 0 to sel-marca.
           perform varying idx-scorta from 1 by 1 
                     until idx-scorta > idx-scorta-tot
              move 1 to el-selected(idx-scorta)
           end-perform.
           set RicaricaGrid to true 
           .
      * <TOTEM:END>
       PB-ESEGUIaa-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUIaa-BeforeProcedure>
           modify pb-eseguiaa, bitmap-number = 2 
           .
      * <TOTEM:END>
       PB-ESEGUIaa-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUIaa-AfterProcedure>
           modify pb-eseguiaa, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-cancela-BeforeProcedure.
      * <TOTEM:PARA. pb-cancela-BeforeProcedure>
           modify pb-cancela, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-cancela-AfterProcedure.
      * <TOTEM:PARA. pb-cancela-AfterProcedure>
           modify pb-cancela, bitmap-number = 1 
           .
      * <TOTEM:END>
       scr-forn-Ef-1-BeforeProcedure.
      * <TOTEM:PARA. scr-forn-Ef-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       scr-forn-Ef-1-AfterProcedure.
      * <TOTEM:PARA. scr-forn-Ef-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform RICARICA-VIDEO 
           .
      * <TOTEM:END>
       pb-1-LinkTo.
      * <TOTEM:PARA. pb-1-LinkTo>
           move tit-mese-1 to ef-mese-buf.
           display ef-mese.
           move 1 to mese-scelto.
           move "Mese scelto (1)" to lab-mese-buf.
           display lab-mese.

      *****     move 20 to ef-lt-buf.
      *****     display ef-lt.
           perform RICARICA-VIDEO 
           .
      * <TOTEM:END>
       pb-2-LinkTo.
      * <TOTEM:PARA. pb-2-LinkTo>
           move tit-mese-2 to ef-mese-buf.
           display ef-mese.
           move 2 to mese-scelto.
           move "Mese scelto (2)" to lab-mese-buf.
           display lab-mese.

      *****     move 40 to ef-lt-buf.
      *****     display ef-lt.
           perform RICARICA-VIDEO 
           .
      * <TOTEM:END>
       pb-3-LinkTo.
      * <TOTEM:PARA. pb-3-LinkTo>
           move tit-mese-3 to ef-mese-buf.
           display ef-mese.
           move 3 to mese-scelto.
           move "Mese scelto (3)" to lab-mese-buf.
           display lab-mese.

      *****     move 60 to ef-lt-buf.
      *****     display ef-lt.
           perform RICARICA-VIDEO 
           .
      * <TOTEM:END>
       pb-4-LinkTo.
      * <TOTEM:PARA. pb-4-LinkTo>
           move tit-mese-4 to ef-mese-buf.
           display ef-mese.
           move 4 to mese-scelto.
           move "Mese scelto (4)" to lab-mese-buf.
           display lab-mese.

      *****     move 80 to ef-lt-buf.
      *****     display ef-lt.
           perform RICARICA-VIDEO 
           .
      * <TOTEM:END>
       pb-5-LinkTo.
      * <TOTEM:PARA. pb-5-LinkTo>
           move tit-mese-5 to ef-mese-buf.
           display ef-mese.
           move 5 to mese-scelto.
           move "Mese scelto (5)" to lab-mese-buf.
           display lab-mese.

      *****     move 100 to ef-lt-buf.
      *****     display ef-lt.
           perform RICARICA-VIDEO 
           .
      * <TOTEM:END>
       pb-6-LinkTo.
      * <TOTEM:PARA. pb-6-LinkTo>
           move tit-mese-6 to ef-mese-buf.
           display ef-mese.
           move 6 to mese-scelto.
           move "Mese scelto (6)" to lab-mese-buf.
           display lab-mese.

      *****     move 120 to ef-lt-buf.
      *****     display ef-lt.
           perform RICARICA-VIDEO 
           .
      * <TOTEM:END>
       PB-ESEGUIaa-LinkTo.
      * <TOTEM:PARA. PB-ESEGUIaa-LinkTo>
           perform RECOUNT-QTA.
           set aggiorna-copertura to true.
           inquire gd-form-i, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              initialize cpf-rec replacing numeric data by zeroes
                                      alphanumeric data by spaces

              inquire gd-form-i(riga,  1), cell-data col-forn-i
              inquire gd-form-i(riga,  2), cell-data col-dest-i
              inquire gd-form-i(riga,  4), cell-data col-lt-i 
              inquire gd-form-i(riga,  6), cell-data col-qta-o-i
              inquire gd-form-i(riga,  7), cell-data col-prz-i
              inquire gd-form-i(riga,  9), cell-data col-tot-i
              inquire gd-form-i(riga, 10), cell-data col-reale-i
              inquire gd-form-i(riga, 11), cell-data col-listino-i
              inquire gd-form-i(riga, 12), cell-data col-ini-i
              inquire gd-form-i(riga, 13), cell-data col-fine-i
              move col-listino-i to cpf-listino
              move ord2-articolo to cpf-articolo
              read coperfab no lock invalid continue end-read
              move col-forn-i    to cpf-fornitore
              move col-dest-i    to cpf-destino
              move col-ini-i     to como-data
              perform DATE-TO-FILE
              move como-data     to cpf-data-ini 
              move col-fine-e    to como-data
              perform DATE-TO-FILE
              move como-data     to cpf-data-fine
              move col-qta-o-i   to cpf-qta
              move col-lt-i      to cpf-lead-time
              move col-prz-i     to cpf-prz-listino

              if cpf-utente-creazione = spaces
                 move user-codi  to cpf-utente-creazione
                 accept cpf-ora-creazione  from time
                 accept cpf-data-creazione from century-date
              else
                 move user-codi  to cpf-utente-modifica
                 accept cpf-ora-modifica  from time
                 accept cpf-data-modifica from century-date
              end-if
              set cpf-manuale to true

              write cpf-rec invalid rewrite cpf-rec end-write
           end-perform.

           inquire gd-form-e, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              initialize cpf-rec replacing numeric data by zeroes
                                      alphanumeric data by spaces

              inquire gd-form-e(riga,  1), cell-data col-forn-e
              inquire gd-form-e(riga,  2), cell-data col-dest-e
              inquire gd-form-e(riga,  4), cell-data col-lt-e
              inquire gd-form-e(riga,  6), cell-data col-qta-o-e
              inquire gd-form-e(riga,  7), cell-data col-prz-e
              inquire gd-form-e(riga,  9), cell-data col-tot-e
              inquire gd-form-e(riga, 10), cell-data col-reale-e
              inquire gd-form-e(riga, 11), cell-data col-listino-e
              inquire gd-form-e(riga, 12), cell-data col-ini-e
              inquire gd-form-e(riga, 13), cell-data col-fine-e

              move col-listino-e to cpf-listino
              move ord2-articolo to cpf-articolo
              read coperfab no lock invalid continue end-read
              move col-forn-e    to cpf-fornitore
              move col-dest-e    to cpf-destino
              move col-ini-e     to como-data
              perform DATE-TO-FILE
              move como-data     to cpf-data-ini 
              move col-fine-e    to como-data
              perform DATE-TO-FILE
              move como-data     to cpf-data-fine
              move col-qta-o-e   to cpf-qta
              move col-tot-e     to cpf-totale
              move col-lt-e      to cpf-lead-time
              move col-prz-e     to cpf-prz-listino

              if cpf-utente-creazione = spaces
                 move user-codi  to cpf-utente-creazione
                 accept cpf-ora-creazione  from time
                 accept cpf-data-creazione from century-date
              else
                 move user-codi  to cpf-utente-modifica
                 accept cpf-ora-modifica  from time
                 accept cpf-data-modifica from century-date
              end-if
              set cpf-manuale to true 

              write cpf-rec invalid rewrite cpf-rec end-write
           end-perform.

           move 27 to key-status 
           .
      * <TOTEM:END>
       gd-form-i-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-form-i-Ev-Msg-Begin-Entry>
           if event-data-1 not = 6
              set event-action to event-action-fail
           end-if 
           .
      * <TOTEM:END>
       gd-form-e-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-form-e-Ev-Msg-Begin-Entry>
           if event-data-1 not = 6
              set event-action to event-action-fail
           end-if 
           .
      * <TOTEM:END>
       gd-form-i-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-form-i-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-I 
           .
      * <TOTEM:END>
       gd-form-i-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-form-i-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-I 
           .
      * <TOTEM:END>
       gd-form-i-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-form-i-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-I 
           .
      * <TOTEM:END>
       gd-form-i-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-form-i-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-I 
           .
      * <TOTEM:END>
       gd-form-i-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-form-i-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-I 
           .
      * <TOTEM:END>
       gd-form-e-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-form-e-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-E 
           .
      * <TOTEM:END>
       gd-form-e-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-form-e-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-E 
           .
      * <TOTEM:END>
       gd-form-e-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-form-e-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-E 
           .
      * <TOTEM:END>
       gd-form-e-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-form-e-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-E 
           .
      * <TOTEM:END>
       gd-form-e-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-form-e-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-E 
           .
      * <TOTEM:END>
       gd-form-i-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-form-i-Ev-Msg-Finish-Entry>
           inquire gd-form-i(event-data-2, 6), cell-data col-qta-o-i.
           modify  gd-form-i(event-data-2, 6), cell-data col-qta-o-i.
           perform RECOUNT-QTA 
           .
      * <TOTEM:END>
       gd-form-e-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-form-e-Ev-Msg-Finish-Entry>
           inquire gd-form-e(event-data-2, 6), cell-data col-qta-o-e.
           modify  gd-form-e(event-data-2, 6), cell-data col-qta-o-e.
           perform RECOUNT-QTA 
           .
      * <TOTEM:END>
       ef-copie-BeforeProcedure.
      * <TOTEM:PARA. ef-copie-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-copie-AfterProcedure.
      * <TOTEM:PARA. ef-copie-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-lt-Ev-Msg-Spin-Down.
      * <TOTEM:PARA. ef-lt-Ev-Msg-Spin-Down>
           if ef-lt-buf > 20
              subtract 20 from ef-lt-buf
              display ef-lt
              perform RICARICA-VIDEO
           end-if 
           .
      * <TOTEM:END>
       ef-lt-Ev-Msg-Spin-Up.
      * <TOTEM:PARA. ef-lt-Ev-Msg-Spin-Up>
           if ef-lt-buf < 120
              add 20 to ef-lt-buf
              display ef-lt
              perform RICARICA-VIDEO
           end-if 
           .
      * <TOTEM:END>
       pb-genera-BeforeProcedure.
      * <TOTEM:PARA. pb-genera-BeforeProcedure>
           modify pb-genera, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-genera-AfterProcedure.
      * <TOTEM:PARA. pb-genera-AfterProcedure>
           modify pb-genera, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-genera-LinkTo.
      * <TOTEM:PARA. pb-genera-LinkTo>
           if LK-BL-PROG-ID not = "desktop"
              display message "Generare ordini a fornitori?"
                        title titolo
                         icon 2
                         type mb-yes-no
                       giving scelta
           else
              move mb-yes to scelta
           end-if.

           if scelta = mb-yes       
              move "GENERAZIONE ORDINI FORNITORI" to como-riga
              perform SCRIVI-RIGA-LOG

              move low-value       to ord2-rec
              set ord2-si-conferma to true
              start ordfor2 key >= k-ok
                    invalid                 
                    if LK-BL-PROG-ID not = "desktop"
                       display message "Nessun Ordine selezionato!"
                                 title tit-err
                                  icon 2    
                    else
                       move "NESSUN ORDINE SELEZIONATO" to como-riga
                       perform SCRIVI-RIGA-LOG
                    end-if
                not invalid
                    perform SCR-ORDFOR-OPEN-ROUTINE
                    set tutto-ok  to true
                    set ricalcolo to true
                    move 1 to chk-parziale-buf
                    move 1 to chk-nessuna-buf
                    move 1 to chk-forn-buf
                    move 1 to chk-singolo-buf
                    display chk-parziale
                            chk-nessuna
                            chk-forn
                            chk-singolo
                    if primo-numero not = 0       
                       move "RIGENERAZIONE QTA VENDUTI" to como-riga
                       perform SCRIVI-RIGA-LOG
                       perform RIGENERA-QTA-VENDUTI   
                       move "FINE RIGENERAZIONE QTA VENDUTI" to 
           como-riga
                       perform SCRIVI-RIGA-LOG
                       if tutto-ok
                          move "CREAZIONE ORDFOR2" to como-riga
                          perform SCRIVI-RIGA-LOG
                          perform CREA-ORDFOR2   
                          move "FINE CREAZIONE ORDFOR2" to como-riga
                          perform SCRIVI-RIGA-LOG
                       end-if
                       if errori
                          exit paragraph
                       end-if
                       close ordfor2
                       open exclusive i-o ordfor2
                       perform SCR-ELAB-OPEN-ROUTINE
                    else
                       open exclusive i-o ordfor2
                    end-if
                    set ricalcolo to false
                    modify pb-genera, bitmap-number 1   

                    move "FINE GENERAZIONE ORDINI FORNITORI" to 
           como-riga
                    perform SCRIVI-RIGA-LOG
              end-start
           end-if 
           .
      * <TOTEM:END>
       chk-parziale-LinkTo.
      * <TOTEM:PARA. chk-parziale-LinkTo>
           if chk-parziale-buf = 0
              move 1 to chk-parziale-buf
           else
              move 0 to chk-parziale-buf
           end-if.
           perform RICARICA-GRID 
           .
      * <TOTEM:END>
       chk-nessuna-LinkTo.
      * <TOTEM:PARA. chk-nessuna-LinkTo>
           if chk-nessuna-buf = 0
              move 1 to chk-nessuna-buf
           else
              move 0 to chk-nessuna-buf
           end-if.
           perform RICARICA-GRID 
           .
      * <TOTEM:END>
       chk-forn-LinkTo.
      * <TOTEM:PARA. chk-forn-LinkTo>
           if chk-forn-buf = 0
              move 1 to chk-forn-buf
           else
              move 0 to chk-forn-buf
           end-if.
           perform RICARICA-GRID 
           .
      * <TOTEM:END>
       chk-parziale-BeforeProcedure.
      * <TOTEM:PARA. chk-parziale-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       chk-nessuna-BeforeProcedure.
      * <TOTEM:PARA. chk-nessuna-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       chk-forn-BeforeProcedure.
      * <TOTEM:PARA. chk-forn-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       chk-parziale-AfterProcedure.
      * <TOTEM:PARA. chk-parziale-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       chk-nessuna-AfterProcedure.
      * <TOTEM:PARA. chk-nessuna-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       chk-forn-AfterProcedure.
      * <TOTEM:PARA. chk-forn-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       chk-singolo-LinkTo.
      * <TOTEM:PARA. chk-singolo-LinkTo>
           if chk-singolo-buf = 0
              move 1 to chk-singolo-buf
           else
              move 0 to chk-singolo-buf
           end-if.
           perform RICARICA-GRID 
           .
      * <TOTEM:END>
       pb-sia-BeforeProcedure.
      * <TOTEM:PARA. pb-sia-BeforeProcedure>
           .
      * <TOTEM:END>
       pb-sia-AfterProcedure.
      * <TOTEM:PARA. pb-sia-AfterProcedure>
           .
      * <TOTEM:END>
       pb-si-LinkTo.
      * <TOTEM:PARA. pb-si-LinkTo>
           .
      * <TOTEM:END>
       chk-scorta-LinkTo.
      * <TOTEM:PARA. chk-scorta-LinkTo>
           if chk-scorta-buf = 0
              move 1 to chk-scorta-buf
           else
              move 0 to chk-scorta-buf
           end-if.
           perform RICARICA-GRID 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

