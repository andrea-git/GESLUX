      *{TOTEM}PRG-COMMENT
      * rebuild.Cbl
      * rebuild.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          rebuild.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        martedì 1 aprile 2014 19:18:14.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:rebuild, INIT:rebuild, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tmp-listdir.sl".
           COPY "lineseq.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tmp-listdir.fd".
           COPY "lineseq.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\Lubex\GESLUX\Copylib\UTYDATA.DEF".
               COPY "F:\Lubex\GESLUX\Copylib\comune.def".
               COPY "F:\Lubex\GESLUX\Copylib\custom.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
           COPY  "LINK-GESLOCK.DEF".
       77 messaggio        PIC  x(150).
       77 dir-handle
                  USAGE IS HANDLE.
       77 nome-file        PIC  x(100).
       77 status-call
                  USAGE IS SIGNED-SHORT.
       77 status-call-x    PIC  z(5).
       78 titolo VALUE IS "Ricostruzione archivi". 
       01 password         PIC  9.
           88 AccessConfirmed VALUE IS 1. 
           88 AccessDenied VALUE IS 0. 
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 tasto            PIC  x.
       77 comando          PIC  x(200).
       77 path-vutil       PIC  x(256).
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Screen1d-Bt-1-Handle         PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 font-evidenzia-griglia
                  USAGE IS HANDLE OF FONT.
       77 elemento-bmp     PIC  s9(9)
                  USAGE IS COMP-4
                  VALUE IS ZERO.
       77 path-archivi     PIC  x(256).
       77 HiddenSel        PIC  xx.
           88 YesSel VALUE IS "SI". 
           88 NoSel VALUE IS "NO". 
       01 rec-grid.
           05 col-file         PIC  X(100).
       77 path-tmp         PIC  X(256).
       77 STATUS-tmp-listdir           PIC  X(2).
           88 Valid-STATUS-tmp-listdir VALUE IS "00" THRU "09". 
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 sel-tutto-bmp    PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-aggiorna-bmp         PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tmp-listdir-BUF     PIC X(200).
       77 TMP-DataSet1-lineseq-BUF     PIC X(900).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tmp-listdir-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-listdir-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tmp-listdir-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-listdir-KEY1-Asc  VALUE "A".
          88 DataSet1-tmp-listdir-KEY1-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".


      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * GRID
       05
           gd-arc, 
           Grid, 
           COL 2,40, 
           LINE 1,67,
           LINES 29,44 ,
           SIZE 47,00 ,
           BOXED,
           DATA-COLUMNS (1, 2),
           ALIGNMENT ("C", "U"),
           SEPARATION (5, 5),
           DATA-TYPES ("X", "X(100)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS font-evidenzia-griglia,
           HSCROLL,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 45,
           VPADDING 25,
           VSCROLL,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-sel-tutto, 
           Push-Button, 
           COL 15,80, 
           LINE 31,50,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE SEL-TUTTO-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           AFTER PROCEDURE pb-sel-tutto-AfterProcedure, 
           BEFORE PROCEDURE pb-sel-tutto-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-aggiorna, 
           Push-Button, 
           COL 26,90, 
           LINE 31,50,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-AGGIORNA-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1002,
           FLAT,
           ID IS 6,
           SELF-ACT,
           TERMINATION-VALUE 13,
           AFTER PROCEDURE pb-aggiorna-AfterProcedure, 
           BEFORE PROCEDURE pb-aggiorna-BeforeProcedure, 
           .

      * FRAME
       05
           Screen1-Fr-2, 
           Frame, 
           COL 1,00, 
           LINE 33,39,
           LINES 2,78 ,
           SIZE 48,90 ,
           LOWERED,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUI, 
           Push-Button, 
           COL 34,10, 
           LINE 34,06,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 13,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           Form1-Pb-2, 
           Push-Button, 
           COL 41,80, 
           LINE 34,06,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2-BeforeProcedure, 
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE        DIVISION.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:rebuild, INIT:rebuild, BeforeDeclarative>
       LINESEQ-ERR SECTION.
           use after error procedure on lineseq.
           set tutto-ok  to true.
           evaluate status-lineseq
           when "35"
                display message "File [LINESEQ] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [LINESEQ] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[LINESEQ] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "42" |FILE NOT OPEN
                continue
           when "93"
           when "99"
                initialize geslock-messaggio
                string   "File già in uso!"
                  x"0d0a""Impossibile procedere!" delimited size
                      into geslock-messaggio
                end-string
                move 1 to geslock-v-riprova
                move 0 to geslock-v-ignora
                move 1 to geslock-v-termina
                move   "File TXT"   to geslock-nome-file
                call   "geslock" using geslock-linkage
                cancel "geslock"
                evaluate true
                when riprova
                     open output lineseq
                when termina
                     set errori to true
                     display message "Operazione interrotta!"
                               title titolo
                                icon 2
                end-evaluate
           end-evaluate.

       TMP-LISTDIR-ERR SECTION.
           use after error procedure on tmp-listdir.
           set tutto-ok  to true.
           evaluate status-tmp-listdir
           when "35"
                display message "File [TMP-LISTDIR] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMP-LISTDIR] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMP-LISTDIR] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "42" |FILE NOT OPEN
                continue
           when "93"
           when "99"
                initialize geslock-messaggio
                string   "File già in uso!"
                  x"0d0a""Impossibile procedere!" delimited size
                      into geslock-messaggio
                end-string
                move 1 to geslock-v-riprova
                move 0 to geslock-v-ignora
                move 1 to geslock-v-termina
                move   "File TMP"   to geslock-nome-file
                call   "geslock" using geslock-linkage
                cancel "geslock"
                evaluate true
                when riprova
                     open output tmp-listdir
                when termina
                     set errori to true
                     display message "Operazione interrotta!"
                               title titolo
                                icon 2
                end-evaluate
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM aggmese-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:rebuild, INIT:rebuild, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, SEL-TUTTO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-AGGIORNA-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
      *    After-Program
           PERFORM aggmese-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-sel-tutto
           COPY RESOURCE "SEL-TUTTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "SEL-TUTTO.BMP", 
                   GIVING SEL-TUTTO-BMP.
      * pb-aggiorna
           COPY RESOURCE "BOTTONE-AGGIORNA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-AGGIORNA.BMP", 
                   GIVING BOTTONE-AGGIORNA-BMP.
      * PB-ESEGUI
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * Form1-Pb-2
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
      *    tmp-listdir OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-listdir
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    After Open
           .

       OPEN-tmp-listdir.
      * <TOTEM:EPT. INIT:rebuild, FD:tmp-listdir, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-listdir
           IF NOT Valid-STATUS-tmp-listdir
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:rebuild, FD:tmp-listdir, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:rebuild, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:rebuild, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
      *    tmp-listdir CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-listdir
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    After Close
           .

       CLOSE-tmp-listdir.
      * <TOTEM:EPT. INIT:rebuild, FD:tmp-listdir, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:rebuild, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       DataSet1-tmp-listdir-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmp-listdir-KEY1-Asc
                 MOVE Low-Value TO tml-chiave
              ELSE
                 MOVE High-Value TO tml-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmp-listdir-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmp-listdir-KEY1-Asc
                 MOVE High-Value TO tml-chiave
              ELSE
                 MOVE Low-Value TO tml-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tmp-listdir-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tmp-listdir-KEY1-ORDER
           END-EVALUATE
           .

      * tmp-listdir
       DataSet1-tmp-listdir-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmp-listdir-KEY1-Asc
                 START tmp-listdir KEY >= tml-chiave
              ELSE
                 START tmp-listdir KEY <= tml-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmp-listdir-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmp-listdir-KEY1-Asc
                 START tmp-listdir KEY <= tml-chiave
              ELSE
                 START tmp-listdir KEY >= tml-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmp-listdir-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmp-listdir-KEY1-Asc
                 START tmp-listdir KEY > tml-chiave
              ELSE
                 START tmp-listdir KEY < tml-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmp-listdir-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmp-listdir-KEY1-Asc
                 START tmp-listdir KEY < tml-chiave
              ELSE
                 START tmp-listdir KEY > tml-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmp-listdir-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-listdir-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-listdir-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-listdir-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeWrite>
      * <TOTEM:END>
           WRITE tml-rec OF tmp-listdir.
           MOVE STATUS-tmp-listdir TO TOTEM-ERR-STAT
           MOVE "tmp-listdir" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-listdir-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-listdir TO TOTEM-ERR-STAT
           MOVE "tmp-listdir" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-listdir-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-listdir TO TOTEM-ERR-STAT
           MOVE "tmp-listdir" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listdir, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq.
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE tml-rec OF tmp-listdir
           INITIALIZE line-riga OF lineseq
           .


      * GRID
       gd-arc-Content.
      * CELLS' SETTING
              MODIFY gd-arc, X = 2, Y = 1,
                CELL-DATA = "Nome file",
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-listdir-INITREC.
           INITIALIZE tml-rec OF tmp-listdir
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 35,17,
              SIZE 48,90,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS FORM1-HANDLE,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form1 UPON FORM1-HANDLE
      * DISPLAY-COLUMNS settings
              MODIFY gd-arc, DISPLAY-COLUMNS (1, 3)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           call "W$MOUSE" using set-mouse-shape, wait-pointer.
           perform RIEMPI-GRID.
           call "W$MOUSE" using set-mouse-shape, arrow-pointer.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY FORM1-HANDLE
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-sel-tutto-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-aggiorna-LinkTo
              WHEN Key-Status = 1001
                 PERFORM PB-ESEGUI-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1 UPON FORM1-HANDLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-arc-Content
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .



       Screen1-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 1 ALSO
                    FORM1-HANDLE 
              PERFORM gd-arc-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    FORM1-HANDLE 
              PERFORM gd-arc-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 1 ALSO
                    FORM1-HANDLE 
              PERFORM gd-arc-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 1 ALSO
                    FORM1-HANDLE 
              PERFORM gd-arc-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 1 ALSO
                    FORM1-HANDLE 
              PERFORM gd-arc-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 1 ALSO
                    FORM1-HANDLE 
              PERFORM gd-arc-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CAMBIA-FONT-RIGA.
      * <TOTEM:PARA. CAMBIA-FONT-RIGA>
           modify gd-arc(riga), ROW-FONT = Verdana12-Occidentale.

           modify gd-arc(riga, 1),
                  bitmap        = elemento-bmp,
                  bitmap-number = 1,
                  bitmap-width  = 16.

           move event-data-2 to riga.
           modify gd-arc(riga), ROW-FONT = font-evidenzia-griglia.


           modify gd-arc(riga, 1),
                  bitmap        = elemento-bmp,
                  bitmap-number = 2,
                  bitmap-width  = 16.

      *    cambio la label legenda
      *     display form2 
           .
      * <TOTEM:END>

       RIEMPI-GRID.
      * <TOTEM:PARA. RIEMPI-GRID>
           modify gd-arc, reset-grid = 1.
           perform GD-ARC-CONTENT.

           modify gd-arc, mass-update = 1.
           call "C$LIST-DIRECTORY" using LISTDIR-OPEN,
                                         path-archivi,
                                         "*.vix".

           move return-code           to dir-handle.

           perform until 1 = 2
               call "C$LIST-DIRECTORY" using LISTDIR-NEXT,
                                             dir-handle,
                                             nome-file

              if nome-file not = "." and nome-file not = ".." and
                 nome-file not = "Program.vix"                and 
                 nome-file not = "UserPgm.vix"                and    
                 nome-file not = "users.vix"
                 if nome-file = spaces
                    exit perform
                 else
                    
                    move nome-file to tml-nome-file

                    write tml-rec invalid continue end-write
                 end-if
              end-if
           end-perform.

           call "C$LIST-DIRECTORY" using LISTDIR-CLOSE, 
                                         dir-handle.

           call "C$LIST-DIRECTORY" using LISTDIR-OPEN,
                                         path-archivi,
                                         "*.*".

           move return-code           to dir-handle.
           perform until 1 = 2
               call "C$LIST-DIRECTORY" using LISTDIR-NEXT,
                                             dir-handle,
                                             nome-file

              if nome-file not = "." and nome-file not = ".."
                 if nome-file = spaces
                    exit perform
                 else
                    
                    move nome-file to line-riga

                    write line-riga
                 end-if
              end-if
           end-perform.

           call "C$LIST-DIRECTORY" using LISTDIR-CLOSE, 
                                         dir-handle.

           close      lineseq.
           open input lineseq. 

           close      tmp-listdir.
           open input tmp-listdir.

           move 1 to riga.
           perform until 1 = 2
              move spaces to line-riga
              read lineseq   next at end exit perform end-read
              if   line-riga = spaces    exit perform end-if
              inspect line-riga replacing trailing spaces by low-value
              initialize tml-nome-file
              string line-riga delimited low-value
                     ".vix"    delimited size
                     into tml-nome-file
              end-string
              read tmp-listdir 
                   invalid continue
               not invalid
                   set NoSel to true
                   initialize col-file
                   string line-riga delimited low-value
                          into col-file
                   end-string
                   add 1 to riga
                   modify gd-arc(riga),    insert-rows = 1
                   modify gd-arc(riga, 2), cell-data   = col-file
                   modify gd-arc(riga, 2), hidden-data = HiddenSel
              end-read
           end-perform.
           modify gd-arc, mass-update = 0.

           move 0 to riga.
           move 2 to event-data-2.
           modify gd-arc, cursor-y = 2.
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>

       SELEZIONE-RIGA.
      * <TOTEM:PARA. SELEZIONE-RIGA>
           inquire gd-arc(riga, 2), hidden-data in HiddenSel.
           if YesSel
              set NoSel to true
              modify gd-arc(riga, 2) row-color = 513
           else
              set YesSel to true
              modify gd-arc(riga, 2) row-color = 176
           end-if.
           modify gd-arc(riga, 2), hidden-data HiddenSel 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire gd-arc, last-row in tot-righe.
           if event-data-2 < 2         
              move 2         to event-data-2 
           end-if.
           if event-data-2 > tot-righe 
              move tot-righe to event-data-2 
           end-if.
           if riga not = event-data-2 
              perform CAMBIA-FONT-RIGA
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       Form1-Pb-2-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2-BeforeProcedure>
           modify Form1-Pb-2, bitmap-number 2 
           .
      * <TOTEM:END>
       Form1-Pb-2-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2-AfterProcedure>
           modify Form1-Pb-2, bitmap-number 1 
           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify PB-ESEGUI, bitmap-number 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify PB-ESEGUI, bitmap-number 1 
           .
      * <TOTEM:END>
       PB-ESEGUI-LinkTo.
      * <TOTEM:PARA. PB-ESEGUI-LinkTo>
           set tutto-ok to true.
           set trovato  to false.
           display message "Eseguire la ricostruzione?"
                      type mb-yes-no
                     title titolo
                      icon 2
                    giving scelta
           if scelta = mb-yes
              move spaces to path-vutil
              accept path-vutil from environment "PATH_VUTIL"
                     on exception
                        set errori to true
                        display message 
                        "Impossibile eseguire l'operazione."
                 x"0d0a""Variabile di configurazione inesistente"
                                  title tit-err
                                   icon 2
                not on exception
                       if path-vutil = spaces
                          set errori to true
                          display message 
                          "Impossibile eseguire l'operazione."
                   x"0d0a""Variabile di configurazione non valorizzata"
                                    title tit-err
                                     icon 2
                       end-if
              end-accept
              if tutto-ok
                 inspect path-vutil replacing trailing spaces 
                                                    by low-value
                 inquire gd-arc, last-row in tot-righe
                 call "W$MOUSE" using set-mouse-shape, wait-pointer
                 perform varying store-riga from 2 by 1 
                           until store-riga > tot-righe
                    inquire gd-arc,(store-riga, 2), 
                            hidden-data in HiddenSel
                    if YesSel
                       set trovato to true
                       inquire gd-arc,(store-riga, 2), 
                               cell-data in col-file
                       inspect path-archivi replacing trailing spaces 
                                                            by low-value
                       inspect col-file     replacing trailing spaces 
                                                            by low-value
                       initialize comando
                       string path-vutil   delimited low-value
                              "vutil32"    delimited size
                              " "          delimited size
                              "-rebuild"   delimited size
                              " -a -q "    delimited size
                              path-archivi delimited low-value
                              col-file     delimited low-value
                              into comando
                       end-string
                       move 0 to status-call
                       call "C$SYSTEM" using comando
                                      giving status-call
                       if status-call not = 0
                          move status-call to status-call-x
                          set errori to true
                          initialize messaggio
                          string "Procedura interrotta su " delimited 
           size
                                 col-file                   delimited 
           low-value
                                 " con status "             delimited 
           size
                                 status-call-x              delimited 
           size
                                 x"0d0a"                    delimited 
           size
                                 "Errore nell'esecuzione del comando" 
           delimited size
                                 into messaggio
                          end-string
                          display message messaggio
                                    title tit-err
                                     icon 3
                          exit perform
                       end-if
                    end-if
                 end-perform
                 call "W$MOUSE" using set-mouse-shape, arrow-pointer
                 if tutto-ok
                    if trovato
                       display message "Operazione conclusa con successo
      -    ""
                                 title titolo
                    else
                       display message "Operazione non effettuata: nessu
      -    "n elemento selezionato!"
                                 title titolo
                                  icon 2
                    end-if
                 end-if
              end-if
           end-if 
           .
      * <TOTEM:END>
       aggmese-Ev-Before-Program.
      * <TOTEM:PARA. aggmese-Ev-Before-Program>
LUBEXX*****           set AccessConfirmed to true.
LUBEXX*****           call   "passwd" using password.
LUBEXX*****           cancel "passwd".

LUBEXX*****           if AccessDenied
LUBEXX*****              perform AGGMESE-EV-AFTER-PROGRAM
LUBEXX*****              goback
LUBEXX*****           end-if.
           
           set tutto-ok to true.

           accept   como-data    from century-date.
           accept   como-data    from time.
           accept   path-archivi from environment "FILE_PREFIX".
           unstring path-archivi delimited by ";" into path-archivi.
                                       
           accept   wstampa      from environment "PATH_ST".
           inspect  wstampa      replacing trailing spaces by low-value.
           string   wstampa      delimited low-values
                    "rebuild"    delimited size
                    "_"          delimited size
                    como-data    delimited size
                    "_"          delimited size
                    como-ora     delimited size
                    ".tmp"       delimited size
                    into path-tmp
           end-string.
           string  wstampa      delimited low-values
                   "rebuild"    delimited size
                   "_"          delimited size
                   como-data    delimited size
                   "_"          delimited size
                   como-ora     delimited size
                   ".txt"       delimited size
                   into wstampa
           end-string.

           open output lineseq.
           if tutto-ok
              open output tmp-listdir
           end-if.

           if errori
              perform AGGMESE-EV-AFTER-PROGRAM
              goback
           end-if.
              

      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA, font-evidenzia-griglia
           MOVE 12               TO WFONT-SIZE
           MOVE "Verdana"        TO WFONT-NAME
           SET WFONT-BOLD        TO true
           SET WFONT-ITALIC      TO true
           SET WFONT-UNDERLINE   TO FALSE
           SET WFONT-STRIKEOUT   TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0                TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     font-evidenzia-griglia, WFONT-DATA


           copy resource "elemento.bmp".
           call "W$BITMAP" using wbitmap-load, "elemento.bmp"
                          giving elemento-bmp 
           .
      * <TOTEM:END>
       aggmese-Ev-After-Program.
      * <TOTEM:PARA. aggmese-Ev-After-Program>
           close lineseq.
           delete file lineseq.

           close tmp-listdir.
           delete file tmp-listdir 
           .
      * <TOTEM:END>
       gd-arc-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-arc-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-arc-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-arc-Ev-Msg-Begin-Entry>
           inquire gd-arc, entry-reason in tasto
           evaluate tasto
           when x"0D" |INVIO
           when x"20" |SPACE
                move event-data-2 to riga
                perform SELEZIONE-RIGA
           end-evaluate.
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-arc-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-arc-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-arc-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-arc-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-arc-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-arc-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-arc-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-arc-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO.
           move event-data-2 to riga.
           perform SELEZIONE-RIGA 
           .
      * <TOTEM:END>
       pb-sel-tutto-BeforeProcedure.
      * <TOTEM:PARA. pb-sel-tutto-BeforeProcedure>
           modify pb-sel-tutto, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-sel-tutto-AfterProcedure.
      * <TOTEM:PARA. pb-sel-tutto-AfterProcedure>
           modify pb-sel-tutto, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-sel-tutto-LinkTo.
      * <TOTEM:PARA. pb-sel-tutto-LinkTo>
           modify gd-arc, cursor-y = 2.
           move 2 to event-data-2.
           perform SPOSTAMENTO.           

           inquire gd-arc, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              set NoSel to true
              modify gd-arc(riga, 2), hidden-data = HiddenSel
              perform SELEZIONE-RIGA
           end-perform.
           
           move 2 to riga.
           modify gd-arc, cursor-y = riga 
           .
      * <TOTEM:END>
       pb-aggiorna-BeforeProcedure.
      * <TOTEM:PARA. pb-aggiorna-BeforeProcedure>
           modify pb-aggiorna, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-aggiorna-AfterProcedure.
      * <TOTEM:PARA. pb-aggiorna-AfterProcedure>
           modify pb-aggiorna, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-aggiorna-LinkTo.
      * <TOTEM:PARA. pb-aggiorna-LinkTo>
           close       tmp-listdir.
           open output tmp-listdir.

           close       lineseq.
           open output lineseq.

           perform RIEMPI-GRID 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

