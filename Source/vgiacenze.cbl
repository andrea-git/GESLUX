      *{TOTEM}PRG-COMMENT
      * vgiacenze.Cbl
      * vgiacenze.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          vgiacenze.
       AUTHOR.              Utente.
       DATE-WRITTEN.        lunedì 17 ottobre 2022 16:17:14.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:vgiacenze, INIT:vgiacenze, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "progmag.sl".
           COPY "articoli.sl".
           COPY "tmp-progmag.sl".
           COPY "timballi.sl".
           COPY "timbalqta.sl".
           COPY "tmarche.sl".
           COPY "tnomen.sl".
           COPY "tsetmerc.sl".
           COPY "tmagaz.sl".
           COPY "promoeva.sl".
           COPY "multigest.sl".
           COPY "tmp-ordf-art.sl".
           COPY "rordforn.sl".
           COPY "tordforn.sl".
           COPY "clienti.sl".
           COPY "sordforn.sl".
           COPY "lineseq.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "progmag.fd".
           COPY "articoli.fd".
           COPY "tmp-progmag.fd".
           COPY "timballi.fd".
           COPY "timbalqta.fd".
           COPY "tmarche.fd".
           COPY "tnomen.fd".
           COPY "tsetmerc.fd".
           COPY "tmagaz.fd".
           COPY "promoeva.fd".
           COPY "multigest.fd".
           COPY "tmp-ordf-art.fd".
           COPY "rordforn.fd".
           COPY "tordforn.fd".
           COPY "clienti.fd".
           COPY "sordforn.fd".
           COPY "lineseq.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 STATUS-destini   PIC  X(2).
           88 Valid-STATUS-destini VALUE IS "00" THRU "09". 
       77 STATUS-tordini   PIC  X(2).
           88 Valid-STATUS-tordini VALUE IS "00" THRU "09". 
       78 titolo VALUE IS "Geslux - Vedi giacenze". 
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 diff PIC  s9(12)v999.
       77 giacenza-altri   PIC  s9(12)v99.
       77 como-user        PIC  x(10).
       77 como-costo-mp    PIC  s9(8)v99.
       77 como-giacenza    PIC  s9(8).
       77 como-valore      PIC  s9(8)v99.
           COPY  "COSTO-MEDIO.DEF".
           COPY  "COMMON-EXCEL.DEF".
           COPY  "EXTERNALS.DEF".
       01 FILLER           PIC  9.
           88 FigliInStessoMagazzino VALUE IS 1    WHEN SET TO FALSE  
           0. 
       77 MagPrincipale    PIC  x(3).
       77 SaveMagazzino    PIC  x(3).
       77 tot-giacenza     PIC  s9(12)v99.
       77 tot-rim          PIC  s9(12)v99.
       77 tot-gia          PIC  s9(12)v99.
       77 tot-ordinato-6   PIC  s9(12)v99.
       77 tot-impegnato    PIC  s9(12)v99.
       77 tot-giac-bloc    PIC  s9(12)v99.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-NUOVO          PIC  9
                  VALUE IS 1.
       77 E-CANCELLA       PIC  9
                  VALUE IS 1.
       77 FILLER           PIC  9.
           88 CallManutenzione VALUE IS 1    WHEN SET TO FALSE  0. 
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Form1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 mod-fis          PIC  9
                  VALUE IS 1.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0,00.
       77 TIPO-ELAB        PIC  9
                  VALUE IS 1.
       77 MOD-LIMITI       PIC  9
                  VALUE IS 1.
       77 ok-73x21-bmp     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 cancel-73x21-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BLUE-FINO-28X24-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BLUE-DA-28X24-BMP            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 form2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 como-riga        PIC  9(6).
       77 SaveArticolo     PIC  9(5).
       77 RowCounter       PIC  9(9).
       77 num-imballi      PIC  s9(10)v9.
       77 counter          PIC  9(10).
       77 counter2         PIC  9(10).
       77 counter-edit     PIC  z(10).
       77 FILLER           PIC  9.
           88 BeginEntry VALUE IS 1    WHEN SET TO FALSE  0. 
       77 hid-IsSon        PIC  9.
           88 NoIsSon VALUE IS 0. 
           88 YesIsSon VALUE IS 1. 
       77 hid-HasSons      PIC  x.
           88 YesHasSons VALUE IS "Y". 
           88 NoHasSons VALUE IS "N". 
       01 hid-OpenClose    PIC  9.
           88 hid-open VALUE IS 1. 
           88 hid-close VALUE IS 2. 
       01 FILLER           PIC  9.
           88 ApriRighe VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 FileOpen VALUE IS 1    WHEN SET TO FALSE  0. 
       01 gd-giacenze-record.
           05 col-bmp          PIC  x.
           05 col-bmp-2        PIC  x.
           05 col-art          PIC  z(5).
           05 col-des          PIC  x(40).
           05 col-mag          PIC  x(3).
           05 col-imb-des      PIC  x(40).
           05 col-imballi      PIC  --.---.---.--9,9
                      BLANK WHEN ZERO.
           05 col-peso         PIC  zz.zz9,999
                      BLANK WHEN ZERO.
           05 col-giacenza     PIC  ---.---.--9.
           05 col-impegnato    PIC  ---.---.--9.
           05 col-rim          PIC  ---.---.--9.
           05 col-gia          PIC  ---.---.--9.
           05 col-ordinato-6   PIC  ---.---.--9.
           05 col-giac-bloc    PIC  ---.---.--9.
       01 FILLER           PIC  x.
           88 record-ok VALUE IS "O"    WHEN SET TO FALSE  "k". 
       78 78-colore-inevaso VALUE IS 513. 
       78 78-colore-emessa-bolla VALUE IS 464. 
       78 78-colore-fatturato VALUE IS 400. 
       77 como-colore      PIC  9(5).
       77 col-valore       PIC  ----.---.--9,99.
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 como-x           PIC  x.
       01 como-chiave-ordine.
           05 como-anno        PIC  9(4).
           05 como-numero-ordine           PIC  9(8).
       77 Form3-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 font-evidenzia-griglia
                  USAGE IS HANDLE OF FONT.
       77 Screen1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 e-des            PIC  9
                  VALUE IS 1.
       77 e-cod            PIC  9
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 col-stato-ordine PIC  9(6)
                  VALUE IS 0.
       77 tit-stato-ordine PIC  X(20)
                  VALUE IS "Inevaso".
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 ef-des-from-buf  PIC  X(40).
       77 ef-des-to-buf    PIC  X(40).
       77 ef-cod-from-buf  PIC  9(5).
       77 ef-cod-to-buf    PIC  9(5).
       77 STATUS-tmp-progmag           PIC  X(2).
           88 Valid-STATUS-tmp-progmag VALUE IS "00" THRU "09". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 path-tmp-progmag PIC  X(256).
       77 multi-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 ESCI-73X21-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 RESOURCEBOTTONE-ESCI-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-ESCI-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-EXIT-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 ef-marca-buf     PIC  9(4).
       77 ef-settore-buf   PIC  9(4).
       77 lab-marca-buf    PIC  X(50)
                  VALUE IS "0 = TUTTI".
       77 lab-settore-buf  PIC  X(50)
                  VALUE IS "0 = TUTTI".
       77 lab-dogana-buf   PIC  X(50)
                  VALUE IS "0 = TUTTI".
       77 qta-edit         PIC  z.zz9.
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-tnomen    PIC  X(2).
           88 Valid-STATUS-tnomen VALUE IS "00" THRU "09". 
       77 STATUS-tsetmerc  PIC  X(2).
           88 Valid-STATUS-tsetmerc VALUE IS "00" THRU "09". 
       77 ef-dogana-buf    PIC  9(8).
       77 lab-mag-buf      PIC  X(50)
                  VALUE IS "Blank = TUTTI".
       77 ef-mag-buf       PIC  x(3).
       77 como-articolo    PIC  9(6).
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 STATUS-promoeva  PIC  X(2).
           88 Valid-STATUS-promoeva VALUE IS "00" THRU "09". 
       77 STATUS-multigest PIC  X(2).
           88 Valid-STATUS-multigest VALUE IS "00" THRU "09". 
       77 path-tmp-ordf-art            PIC  X(256).
       77 STATUS-tmp-ordf-art          PIC  X(2).
           88 Valid-STATUS-tmp-ordf-art VALUE IS "00" THRU "09". 
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 STATUS-sordforn  PIC  X(2).
           88 Valid-STATUS-sordforn VALUE IS "00" THRU "09". 
       77 EXCEL-BMP        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 stampa-tipo      PIC  9
                  VALUE IS 0.
           88 stampa-excel VALUE IS 1    WHEN SET TO FALSE  0. 
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form2-FLAG-REFRESH PIC  9.
          88 Form2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Form2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form2-progmag-RESTOREBUF  PIC X(1090).
       77 TMP-Form2-KEYIS  PIC 9(3) VALUE 1.
       77 Form2-MULKEY-TMPBUF   PIC X(1090).
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-form3-FLAG-REFRESH PIC  9.
          88 form3-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-tmp-progmag-BUF     PIC X(985).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-tnomen-BUF     PIC X(228).
       77 TMP-DataSet1-tsetmerc-BUF     PIC X(191).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-promoeva-BUF     PIC X(817).
       77 TMP-DataSet1-multigest-BUF     PIC X(3).
       77 TMP-DataSet1-tmp-ordf-art-BUF     PIC X(113).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-sordforn-BUF     PIC X(1139).
       77 TMP-DataSet1-lineseq-BUF     PIC X(1000).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-progmag-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY1-Asc  VALUE "A".
          88 DataSet1-progmag-KEY1-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-tmp-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-progmag-LOCK  VALUE "Y".
       77 DataSet1-tmp-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-progmag-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-tnomen-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tnomen-LOCK  VALUE "Y".
       77 DataSet1-tnomen-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tnomen-KEY-Asc  VALUE "A".
          88 DataSet1-tnomen-KEY-Desc VALUE "D".
       77 DataSet1-tsetmerc-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tsetmerc-LOCK  VALUE "Y".
       77 DataSet1-tsetmerc-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tsetmerc-KEY-Asc  VALUE "A".
          88 DataSet1-tsetmerc-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-promoeva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-promoeva-LOCK  VALUE "Y".
       77 DataSet1-promoeva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-promoeva-KEY-Asc  VALUE "A".
          88 DataSet1-promoeva-KEY-Desc VALUE "D".
       77 DataSet1-multigest-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-multigest-LOCK  VALUE "Y".
       77 DataSet1-multigest-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-multigest-KEY-Asc  VALUE "A".
          88 DataSet1-multigest-KEY-Desc VALUE "D".
       77 DataSet1-tmp-ordf-art-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-ordf-art-LOCK  VALUE "Y".
       77 DataSet1-tmp-ordf-art-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-ordf-art-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-ordf-art-KEY-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-tordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-sordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-sordforn-LOCK  VALUE "Y".
       77 DataSet1-sordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-sordforn-KEY-Asc  VALUE "A".
          88 DataSet1-sordforn-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".

       77 progmag-key01-SPLITBUF  PIC X(21).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 tmp-progmag-key-des-SPLITBUF  PIC X(61).
       77 tmp-progmag-key-costo-SPLITBUF  PIC X(53).
       77 promoeva-pev-k-art-SPLITBUF  PIC X(22).
       77 promoeva-pev-k-descr-art-SPLITBUF  PIC X(65).
       77 promoeva-pev-k-gdo-SPLITBUF  PIC X(70).
       77 promoeva-pev-k-fittizia-SPLITBUF  PIC X(16).
       77 promoeva-pev-k-promo-SPLITBUF  PIC X(30).
       77 promoeva-pev-k-descr-promo-SPLITBUF  PIC X(65).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 tordforn-tof-k-consegna-SPLITBUF  PIC X(21).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-des-from VALUE 5001.
       78  78-ID-ef-des-to VALUE 5002.
       78  78-ID-ef-cod-from VALUE 5003.
       78  78-ID-ef-cod-to VALUE 5004.
       78  78-ID-ef-marca VALUE 5005.
       78  78-ID-ef-settore VALUE 5006.
       78  78-ID-ef-dogana VALUE 5007.
       78  78-ID-ef-mag VALUE 5008.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form2, 
           .

      * GRID
       05
           gd-giacenze, 
           Grid, 
           COL 1,50, 
           LINE 1,62,
           LINES 49,31 ,
           SIZE 175,17 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 2, 3, 8, 48, 51, 91, 107, 117, 128, 139, 
           150, 161, 172),
           ALIGNMENT ("C", "C", "C", "L", "C", "C", "R", "R", "R", "R", 
           "R", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("X", "X", "9(5)", "x(40)", "xxx", "x(40)", "X", 
           "X", "X", "X", "9(11)", "9(11)", "9(11)", "9(11)"),
           NUM-COL-HEADINGS 2,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS Verdana10B-Occidentale,
           HSCROLL,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 172,
           VPADDING 50,
           VSCROLL,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-annulla2, 
           Push-Button, 
           COL 163,17, 
           LINE 51,08,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-EXIT-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 201,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-annulla2-AfterProcedure, 
           BEFORE PROCEDURE pb-annulla2-BeforeProcedure, 
           .

      * FORM
       01 
           Form1, 
           BEFORE PROCEDURE Form1-BeforeProcedure,
           .

      * FRAME
       05
           frame-limiti, 
           Frame, 
           COL 2,00, 
           LINE 1,23,
           LINES 6,00 ,
           SIZE 75,00 ,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Selezione limiti articolo",
           TITLE-POSITION 2,
           .

      * ENTRY FIELD
       05
           ef-des-from, 
           Entry-Field, 
           COL 6,00, 
           LINE 2,73,
           LINES 1,33 ,
           SIZE 25,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-des,
           ID IS 78-ID-ef-des-from,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE ef-des-from-buf,
           AFTER PROCEDURE ef-des-from-AfterProcedure, 
           BEFORE PROCEDURE ef-des-from-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-des-to, 
           Entry-Field, 
           COL 51,00, 
           LINE 2,73,
           LINES 1,33 ,
           SIZE 25,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-des,
           ID IS 78-ID-ef-des-to,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE ef-des-to-buf,
           AFTER PROCEDURE ef-des-to-AfterProcedure, 
           BEFORE PROCEDURE ef-des-to-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-cod-from, 
           Entry-Field, 
           COL 25,00, 
           LINE 4,67,
           LINES 1,33 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-cod,
           ID IS 78-ID-ef-cod-from,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-cod-from-buf,
           AFTER PROCEDURE ef-cod-from-AfterProcedure, 
           BEFORE PROCEDURE ef-cod-from-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-cod-to, 
           Entry-Field, 
           COL 51,00, 
           LINE 4,73,
           LINES 1,33 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-cod,
           ID IS 78-ID-ef-cod-to,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-cod-to-buf,
           AFTER PROCEDURE ef-cod-to-AfterProcedure, 
           BEFORE PROCEDURE ef-cod-to-BeforeProcedure, 
           .

      * RADIO BUTTON
       05
           RB-des, 
           Radio-Button, 
           COL 3,33, 
           LINE 2,73,
           LINES 1,33 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1001
           FLAT,
           GROUP 1,
           GROUP-VALUE 1,
           ID IS 101,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE TIPO-ELAB,
           AFTER PROCEDURE RB-des-AfterProcedure, 
           BEFORE PROCEDURE RB-des-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           RB-cod, 
           Radio-Button, 
           COL 3,33, 
           LINE 4,73,
           LINES 1,33 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1002
           FLAT,
           GROUP 1,
           GROUP-VALUE 2,
           ID IS 102,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE TIPO-ELAB,
           AFTER PROCEDURE RB-cod-AfterProcedure, 
           BEFORE PROCEDURE RB-cod-BeforeProcedure, 
           .
      * LABEL
       05
           Screen3-La-1a, 
           Label, 
           COL 36,00, 
           LINE 2,73,
           LINES 1,33 ,
           SIZE 10,00 ,
           ID IS 100,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Descrizione",
           .

      * BITMAP
       05
           Bitmap-freccia-fino, 
           Bitmap, 
           COL 47,00, 
           LINE 2,73,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR TR-COLOR,
           BITMAP-HANDLE BLUE-FINO-28X24-BMP,
           BITMAP-NUMBER 1,
           ID IS 13,
           .

      * BITMAP
       05
           Bitmap-freccia-da, 
           Bitmap, 
           COL 32,00, 
           LINE 2,73,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR TR-COLOR,
           BITMAP-HANDLE BLUE-DA-28X24-BMP,
           BITMAP-NUMBER 1,
           ID IS 14,
           .

      * LABEL
       05
           Screen4-blockpgm-1, 
           Label, 
           COL 57,80, 
           LINE 4,84,
           LINES 0,62 ,
           SIZE 7,67 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * BITMAP
       05
           Bitmap-freccia-daa, 
           Bitmap, 
           COL 32,00, 
           LINE 4,73,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR TR-COLOR,
           BITMAP-HANDLE BLUE-DA-28X24-BMP,
           BITMAP-NUMBER 1,
           ID IS 4,
           .

      * LABEL
       05
           Screen3-La-1ac, 
           Label, 
           COL 36,00, 
           LINE 4,73,
           LINES 1,33 ,
           SIZE 10,00 ,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Codice",
           .

      * BITMAP
       05
           Bitmap-freccia-finoa, 
           Bitmap, 
           COL 47,00, 
           LINE 4,73,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR TR-COLOR,
           BITMAP-HANDLE BLUE-FINO-28X24-BMP,
           BITMAP-NUMBER 1,
           ID IS 6,
           .

      * LABEL
       05
           Screen4-Custom1-2, 
           Label, 
           COL 9,00, 
           LINE 5,17,
           LINES 0,62 ,
           SIZE 8,17 ,
           ID IS 2,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * ENTRY FIELD
       05
           ef-marca, 
           Entry-Field, 
           COL 18,70, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 5,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-marca,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 4,
           VALUE ef-marca-buf,
           AFTER PROCEDURE ef-marca-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-settore, 
           Entry-Field, 
           COL 18,70, 
           LINE 10,00,
           LINES 1,33 ,
           SIZE 5,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ENABLED 1,
           ID IS 78-ID-ef-settore,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 4,
           VALUE ef-settore-buf,
           AFTER PROCEDURE ef-settore-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-dogana, 
           Entry-Field, 
           COL 18,70, 
           LINE 12,00,
           LINES 1,33 ,
           SIZE 9,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-dogana,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 8,
           VALUE ef-dogana-buf,
           AFTER PROCEDURE ef-cod-dogana-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-mag, 
           Entry-Field, 
           COL 18,70, 
           LINE 14,00,
           LINES 1,33 ,
           SIZE 5,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ENABLED 1,
           ID IS 78-ID-ef-mag,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 4,
           VALUE ef-mag-buf,
           AFTER PROCEDURE ef-mag-AfterProcedure, 
           .

      * FRAME
       05
           Screen4-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 15,50,
           LINES 2,83 ,
           SIZE 77,00 ,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * CHECK BOX
       05
           chk-excel, 
           Check-Box, 
           COL 58,30, 
           LINE 16,28,
           LINES 28,00 ,
           SIZE 28,00 ,
           BITMAP-HANDLE EXCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           FLAT,
           ID IS 202,
           TITLE "Generazione di file E&xcel",
           VALUE stampa-tipo,
           AFTER PROCEDURE scr-stampa-Cb-1-AfterProcedure,
           BEFORE PROCEDURE scr-stampa-Cb-1-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           pb-ok, 
           Push-Button, 
           COL 62,00, 
           LINE 16,22,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 200,
           AFTER PROCEDURE pb-ok-AfterProcedure, 
           BEFORE PROCEDURE pb-ok-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-annulla, 
           Push-Button, 
           COL 69,80, 
           LINE 16,22,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 201,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-annulla-AfterProcedure, 
           BEFORE PROCEDURE pb-annulla-BeforeProcedure, 
           .

      * LABEL
       05
           lab1, 
           Label, 
           COL 2,70, 
           LINE 8,00,
           LINES 1,22 ,
           SIZE 8,00 ,
           ID IS 204,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Marca",
           .

      * LABEL
       05
           lab-marca, 
           Label, 
           COL 29,00, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 48,00 ,
           COLOR IS 5,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-marca-buf,
           .

      * LABEL
       05
           lab2, 
           Label, 
           COL 2,70, 
           LINE 10,00,
           LINES 1,22 ,
           SIZE 8,00 ,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Settore",
           .

      * LABEL
       05
           lab-settore, 
           Label, 
           COL 29,00, 
           LINE 10,00,
           LINES 1,33 ,
           SIZE 48,00 ,
           COLOR IS 5,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-settore-buf,
           .

      * LABEL
       05
           lab3, 
           Label, 
           COL 2,70, 
           LINE 12,00,
           LINES 1,22 ,
           SIZE 14,30 ,
           ID IS 20,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Codice doganale",
           .

      * LABEL
       05
           lab-dogana, 
           Label, 
           COL 29,00, 
           LINE 12,00,
           LINES 1,33 ,
           SIZE 48,00 ,
           COLOR IS 5,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-dogana-buf,
           .

      * LABEL
       05
           lab2a, 
           Label, 
           COL 2,70, 
           LINE 14,00,
           LINES 1,22 ,
           SIZE 9,00 ,
           ID IS 22,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Magazzino",
           .

      * LABEL
       05
           lab-mag, 
           Label, 
           COL 29,00, 
           LINE 14,00,
           LINES 1,33 ,
           SIZE 48,00 ,
           COLOR IS 5,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-mag-buf,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 11,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 12,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           form3, 
           .

      * LABEL
       05
           lab-mess, 
           Label, 
           COL 2,00, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 30,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Caricamento giacenze in corso...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:vgiacenze, INIT:vgiacenze, BeforeDeclarative>
      ***---
       PROGMAG-ERR SECTION.
           use after error procedure on progmag.
           set tutto-ok  to true.
           evaluate status-progmag
           when "35"
                display message "File [PROGMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PROGMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PROGMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
           
      ***---
       MULTIGEST-ERR SECTION.
           use after error procedure on multigest.
           set tutto-ok  to true.
           evaluate status-multigest
           when "35"
                display message "File [MULTIGEST] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MULTIGEST] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MULTIGEST] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMP-PROGMAG-ERR SECTION.
           use after error procedure on tmp-progmag.
           set tutto-ok  to true.
           evaluate status-tmp-progmag
           when "35"
                display message "File [TMP-PROGMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMP-PROGMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMP-PROGMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TIMBALLI-ERR SECTION.
           use after error procedure on timballi.
           set tutto-ok  to true.
           evaluate status-timballi
           when "35"
                display message "File [TIMBALLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TIMBALLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TIMBALLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TIMBALQTA-ERR SECTION.
           use after error procedure on timbalqta.
           set tutto-ok  to true.
           evaluate status-timbalqta
           when "35"
                display message "File [TIMBALQTA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TIMBALQTA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TIMBALQTA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMARCHE-ERR SECTION.
           use after error procedure on tmarche.
           set tutto-ok  to true.
           evaluate status-tmarche
           when "35"
                display message "File [TMARCHE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMARCHE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMARCHE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TNOMEN-ERR SECTION.
           use after error procedure on tnomen.
           set tutto-ok  to true.
           evaluate status-tnomen
           when "35"
                display message "File [TNOMEN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TNOMEN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TNOMEN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TSETMERC-ERR SECTION.
           use after error procedure on tsetmerc.
           set tutto-ok  to true.
           evaluate status-tsetmerc
           when "35"
                display message "File [TSETMERC] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TSETMERC] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TSETMERC] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMAGAZ-ERR SECTION.
           use after error procedure on tmagaz.
           set tutto-ok  to true.
           evaluate status-tmagaz
           when "35"
                display message "File [TMAGAZ] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMAGAZ] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMAGAZ] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ginqui-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:vgiacenze, INIT:vgiacenze, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana12-Occidentale
           DESTROY Verdana12BI-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-EXIT-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BLUE-FINO-28X24-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BLUE-DA-28X24-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, EXCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-annulla2
           COPY RESOURCE "BOTTONE-EXIT.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-EXIT.BMP", 
                   GIVING BOTTONE-EXIT-BMP.
      * Bitmap-freccia-fino
           COPY RESOURCE "BLUE-FINO-28X24.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BLUE-FINO-28X24.BMP", 
                   GIVING BLUE-FINO-28X24-BMP.
      * Bitmap-freccia-da
           COPY RESOURCE "BLUE-DA-28X24.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BLUE-DA-28X24.BMP", 
                   GIVING BLUE-DA-28X24-BMP.
      * chk-excel
           COPY RESOURCE "EXCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "EXCEL.BMP", 
                   GIVING EXCEL-BMP.
      * pb-ok
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-annulla
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-progmag
           PERFORM OPEN-articoli
      *    tmp-progmag OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-progmag
           PERFORM OPEN-timballi
           PERFORM OPEN-timbalqta
           PERFORM OPEN-tmarche
           PERFORM OPEN-tnomen
           PERFORM OPEN-tsetmerc
           PERFORM OPEN-tmagaz
           PERFORM OPEN-promoeva
      *    multigest OPEN MODE IS FALSE
      *    PERFORM OPEN-multigest
      *    tmp-ordf-art OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-ordf-art
           PERFORM OPEN-rordforn
           PERFORM OPEN-tordforn
           PERFORM OPEN-clienti
           PERFORM OPEN-sordforn
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    After Open
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:vgiacenze, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:vgiacenze, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-progmag.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmp-progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-progmag
           IF NOT Valid-STATUS-tmp-progmag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmp-progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:vgiacenze, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:vgiacenze, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tnomen.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tnomen, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tnomen
           IF NOT Valid-STATUS-tnomen
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:tnomen, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tsetmerc.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tsetmerc, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tsetmerc
           IF NOT Valid-STATUS-tsetmerc
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:tsetmerc, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-promoeva.
      * <TOTEM:EPT. INIT:vgiacenze, FD:promoeva, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT promoeva
           IF NOT Valid-STATUS-promoeva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:promoeva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-multigest.
      * <TOTEM:EPT. INIT:vgiacenze, FD:multigest, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O multigest
           IF STATUS-multigest = "35"
              OPEN OUTPUT multigest
                IF Valid-STATUS-multigest
                   CLOSE multigest
                   OPEN I-O multigest
                END-IF
           END-IF
           IF NOT Valid-STATUS-multigest
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:multigest, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-ordf-art.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmp-ordf-art, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-ordf-art
           IF NOT Valid-STATUS-tmp-ordf-art
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmp-ordf-art, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:vgiacenze, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rordforn
           IF NOT Valid-STATUS-rordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tordforn
           IF NOT Valid-STATUS-tordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:vgiacenze, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-sordforn.
      * <TOTEM:EPT. INIT:vgiacenze, FD:sordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT sordforn
           IF NOT Valid-STATUS-sordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:sordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:vgiacenze, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:vgiacenze, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-progmag
           PERFORM CLOSE-articoli
      *    tmp-progmag CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-progmag
           PERFORM CLOSE-timballi
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-tnomen
           PERFORM CLOSE-tsetmerc
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-promoeva
      *    multigest CLOSE MODE IS FALSE
      *    PERFORM CLOSE-multigest
      *    tmp-ordf-art CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-ordf-art
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-clienti
           PERFORM CLOSE-sordforn
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    After Close
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:vgiacenze, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:vgiacenze, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-tmp-progmag.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmp-progmag, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:vgiacenze, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:vgiacenze, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-tnomen.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tnomen, BeforeClose>
      * <TOTEM:END>
           CLOSE tnomen
           .

       CLOSE-tsetmerc.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tsetmerc, BeforeClose>
      * <TOTEM:END>
           CLOSE tsetmerc
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-promoeva.
      * <TOTEM:EPT. INIT:vgiacenze, FD:promoeva, BeforeClose>
      * <TOTEM:END>
           CLOSE promoeva
           .

       CLOSE-multigest.
      * <TOTEM:EPT. INIT:vgiacenze, FD:multigest, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-ordf-art.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tmp-ordf-art, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:vgiacenze, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:vgiacenze, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:vgiacenze, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-sordforn.
      * <TOTEM:EPT. INIT:vgiacenze, FD:sordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE sordforn
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:vgiacenze, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE Low-Value TO prg-chiave OF progmag
              ELSE
                 MOVE High-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE High-Value TO prg-chiave OF progmag
              ELSE
                 MOVE Low-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

      * progmag
       DataSet1-progmag-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY >= prg-chiave OF progmag
              ELSE
                 START progmag KEY <= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY <= prg-chiave OF progmag
              ELSE
                 START progmag KEY >= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY > prg-chiave OF progmag
              ELSE
                 START progmag KEY < prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY < prg-chiave OF progmag
              ELSE
                 START progmag KEY > prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-LOCK
                 READ progmag WITH LOCK 
                 KEY prg-chiave OF progmag
              ELSE
                 READ progmag WITH NO LOCK 
                 KEY prg-chiave OF progmag
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       tmp-progmag-key-des-MERGE-SPLITBUF.
           INITIALIZE tmp-progmag-key-des-SPLITBUF
           MOVE tmp-prg-art-des(1:40) TO 
           tmp-progmag-key-des-SPLITBUF(1:40)
           MOVE tmp-prg-chiave(1:20) TO 
           tmp-progmag-key-des-SPLITBUF(41:20)
           .

       tmp-progmag-key-costo-MERGE-SPLITBUF.
           INITIALIZE tmp-progmag-key-costo-SPLITBUF
           MOVE tmp-prg-costo-medio(1:12) TO 
           tmp-progmag-key-costo-SPLITBUF(1:12)
           MOVE tmp-prg-art-des(1:40) TO 
           tmp-progmag-key-costo-SPLITBUF(13:40)
           .

       DataSet1-tmp-progmag-INITSTART.
           IF DataSet1-tmp-progmag-KEY-Asc
              MOVE Low-Value TO tmp-prg-chiave
           ELSE
              MOVE High-Value TO tmp-prg-chiave
           END-IF
           .

       DataSet1-tmp-progmag-INITEND.
           IF DataSet1-tmp-progmag-KEY-Asc
              MOVE High-Value TO tmp-prg-chiave
           ELSE
              MOVE Low-Value TO tmp-prg-chiave
           END-IF
           .

      * tmp-progmag
       DataSet1-tmp-progmag-START.
           IF DataSet1-tmp-progmag-KEY-Asc
              START tmp-progmag KEY >= tmp-prg-chiave
           ELSE
              START tmp-progmag KEY <= tmp-prg-chiave
           END-IF
           .

       DataSet1-tmp-progmag-START-NOTGREATER.
           IF DataSet1-tmp-progmag-KEY-Asc
              START tmp-progmag KEY <= tmp-prg-chiave
           ELSE
              START tmp-progmag KEY >= tmp-prg-chiave
           END-IF
           .

       DataSet1-tmp-progmag-START-GREATER.
           IF DataSet1-tmp-progmag-KEY-Asc
              START tmp-progmag KEY > tmp-prg-chiave
           ELSE
              START tmp-progmag KEY < tmp-prg-chiave
           END-IF
           .

       DataSet1-tmp-progmag-START-LESS.
           IF DataSet1-tmp-progmag-KEY-Asc
              START tmp-progmag KEY < tmp-prg-chiave
           ELSE
              START tmp-progmag KEY > tmp-prg-chiave
           END-IF
           .

       DataSet1-tmp-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeWrite>
      * <TOTEM:END>
           WRITE tmp-prg-rec OF tmp-progmag.
           MOVE STATUS-tmp-progmag TO TOTEM-ERR-STAT
           MOVE "tmp-progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-progmag TO TOTEM-ERR-STAT
           MOVE "tmp-progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-progmag TO TOTEM-ERR-STAT
           MOVE "tmp-progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tnomen-INITSTART.
           IF DataSet1-tnomen-KEY-Asc
              MOVE Low-Value TO nom-chiave
           ELSE
              MOVE High-Value TO nom-chiave
           END-IF
           .

       DataSet1-tnomen-INITEND.
           IF DataSet1-tnomen-KEY-Asc
              MOVE High-Value TO nom-chiave
           ELSE
              MOVE Low-Value TO nom-chiave
           END-IF
           .

      * tnomen
       DataSet1-tnomen-START.
           IF DataSet1-tnomen-KEY-Asc
              START tnomen KEY >= nom-chiave
           ELSE
              START tnomen KEY <= nom-chiave
           END-IF
           .

       DataSet1-tnomen-START-NOTGREATER.
           IF DataSet1-tnomen-KEY-Asc
              START tnomen KEY <= nom-chiave
           ELSE
              START tnomen KEY >= nom-chiave
           END-IF
           .

       DataSet1-tnomen-START-GREATER.
           IF DataSet1-tnomen-KEY-Asc
              START tnomen KEY > nom-chiave
           ELSE
              START tnomen KEY < nom-chiave
           END-IF
           .

       DataSet1-tnomen-START-LESS.
           IF DataSet1-tnomen-KEY-Asc
              START tnomen KEY < nom-chiave
           ELSE
              START tnomen KEY > nom-chiave
           END-IF
           .

       DataSet1-tnomen-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tnomen-LOCK
              READ tnomen WITH LOCK 
              KEY nom-chiave
           ELSE
              READ tnomen WITH NO LOCK 
              KEY nom-chiave
           END-IF
           MOVE STATUS-tnomen TO TOTEM-ERR-STAT 
           MOVE "tnomen" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tnomen-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tnomen-KEY-Asc
              IF DataSet1-tnomen-LOCK
                 READ tnomen NEXT WITH LOCK
              ELSE
                 READ tnomen NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tnomen-LOCK
                 READ tnomen PREVIOUS WITH LOCK
              ELSE
                 READ tnomen PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tnomen TO TOTEM-ERR-STAT
           MOVE "tnomen" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tnomen-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tnomen-KEY-Asc
              IF DataSet1-tnomen-LOCK
                 READ tnomen PREVIOUS WITH LOCK
              ELSE
                 READ tnomen PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tnomen-LOCK
                 READ tnomen NEXT WITH LOCK
              ELSE
                 READ tnomen NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tnomen TO TOTEM-ERR-STAT
           MOVE "tnomen" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tnomen-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tnomen TO TOTEM-ERR-STAT
           MOVE "tnomen" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tnomen-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tnomen TO TOTEM-ERR-STAT
           MOVE "tnomen" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tnomen-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tnomen TO TOTEM-ERR-STAT
           MOVE "tnomen" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnomen, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tsetmerc-INITSTART.
           IF DataSet1-tsetmerc-KEY-Asc
              MOVE Low-Value TO sme-chiave
           ELSE
              MOVE High-Value TO sme-chiave
           END-IF
           .

       DataSet1-tsetmerc-INITEND.
           IF DataSet1-tsetmerc-KEY-Asc
              MOVE High-Value TO sme-chiave
           ELSE
              MOVE Low-Value TO sme-chiave
           END-IF
           .

      * tsetmerc
       DataSet1-tsetmerc-START.
           IF DataSet1-tsetmerc-KEY-Asc
              START tsetmerc KEY >= sme-chiave
           ELSE
              START tsetmerc KEY <= sme-chiave
           END-IF
           .

       DataSet1-tsetmerc-START-NOTGREATER.
           IF DataSet1-tsetmerc-KEY-Asc
              START tsetmerc KEY <= sme-chiave
           ELSE
              START tsetmerc KEY >= sme-chiave
           END-IF
           .

       DataSet1-tsetmerc-START-GREATER.
           IF DataSet1-tsetmerc-KEY-Asc
              START tsetmerc KEY > sme-chiave
           ELSE
              START tsetmerc KEY < sme-chiave
           END-IF
           .

       DataSet1-tsetmerc-START-LESS.
           IF DataSet1-tsetmerc-KEY-Asc
              START tsetmerc KEY < sme-chiave
           ELSE
              START tsetmerc KEY > sme-chiave
           END-IF
           .

       DataSet1-tsetmerc-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tsetmerc-LOCK
              READ tsetmerc WITH LOCK 
              KEY sme-chiave
           ELSE
              READ tsetmerc WITH NO LOCK 
              KEY sme-chiave
           END-IF
           MOVE STATUS-tsetmerc TO TOTEM-ERR-STAT 
           MOVE "tsetmerc" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tsetmerc-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tsetmerc-KEY-Asc
              IF DataSet1-tsetmerc-LOCK
                 READ tsetmerc NEXT WITH LOCK
              ELSE
                 READ tsetmerc NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetmerc-LOCK
                 READ tsetmerc PREVIOUS WITH LOCK
              ELSE
                 READ tsetmerc PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetmerc TO TOTEM-ERR-STAT
           MOVE "tsetmerc" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tsetmerc-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tsetmerc-KEY-Asc
              IF DataSet1-tsetmerc-LOCK
                 READ tsetmerc PREVIOUS WITH LOCK
              ELSE
                 READ tsetmerc PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetmerc-LOCK
                 READ tsetmerc NEXT WITH LOCK
              ELSE
                 READ tsetmerc NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetmerc TO TOTEM-ERR-STAT
           MOVE "tsetmerc" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tsetmerc-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tsetmerc TO TOTEM-ERR-STAT
           MOVE "tsetmerc" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tsetmerc-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tsetmerc TO TOTEM-ERR-STAT
           MOVE "tsetmerc" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tsetmerc-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tsetmerc TO TOTEM-ERR-STAT
           MOVE "tsetmerc" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetmerc, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       promoeva-pev-k-art-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-art-SPLITBUF
           MOVE pev-articolo OF promoeva(1:6) TO 
           promoeva-pev-k-art-SPLITBUF(1:6)
           MOVE pev-tpr-codice OF promoeva(1:15) TO 
           promoeva-pev-k-art-SPLITBUF(7:15)
           .

       promoeva-pev-k-descr-art-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-descr-art-SPLITBUF
           MOVE pev-descr-art OF promoeva(1:50) TO 
           promoeva-pev-k-descr-art-SPLITBUF(1:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-descr-art-SPLITBUF(51:14)
           .

       promoeva-pev-k-gdo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-gdo-SPLITBUF
           MOVE pev-gdo OF promoeva(1:5) TO 
           promoeva-pev-k-gdo-SPLITBUF(1:5)
           MOVE pev-descr-art OF promoeva(1:50) TO 
           promoeva-pev-k-gdo-SPLITBUF(6:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-gdo-SPLITBUF(56:14)
           .

       promoeva-pev-k-fittizia-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-fittizia-SPLITBUF
           MOVE pev-fittizia OF promoeva(1:1) TO 
           promoeva-pev-k-fittizia-SPLITBUF(1:1)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-fittizia-SPLITBUF(2:14)
           .

       promoeva-pev-k-promo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-promo-SPLITBUF
           MOVE pev-tpr-codice OF promoeva(1:15) TO 
           promoeva-pev-k-promo-SPLITBUF(1:15)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-promo-SPLITBUF(16:14)
           .

       promoeva-pev-k-descr-promo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-descr-promo-SPLITBUF
           MOVE pev-tpr-descrizione OF promoeva(1:50) TO 
           promoeva-pev-k-descr-promo-SPLITBUF(1:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-descr-promo-SPLITBUF(51:14)
           .

       DataSet1-promoeva-INITSTART.
           IF DataSet1-promoeva-KEY-Asc
              MOVE Low-Value TO pev-chiave OF promoeva
           ELSE
              MOVE High-Value TO pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-INITEND.
           IF DataSet1-promoeva-KEY-Asc
              MOVE High-Value TO pev-chiave OF promoeva
           ELSE
              MOVE Low-Value TO pev-chiave OF promoeva
           END-IF
           .

      * promoeva
       DataSet1-promoeva-START.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY >= pev-chiave OF promoeva
           ELSE
              START promoeva KEY <= pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-NOTGREATER.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY <= pev-chiave OF promoeva
           ELSE
              START promoeva KEY >= pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-GREATER.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY > pev-chiave OF promoeva
           ELSE
              START promoeva KEY < pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-LESS.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY < pev-chiave OF promoeva
           ELSE
              START promoeva KEY > pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-promoeva-LOCK
              READ promoeva WITH LOCK 
              KEY pev-chiave OF promoeva
           ELSE
              READ promoeva WITH NO LOCK 
              KEY pev-chiave OF promoeva
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT 
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-promoeva-KEY-Asc
              IF DataSet1-promoeva-LOCK
                 READ promoeva NEXT WITH LOCK
              ELSE
                 READ promoeva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-promoeva-LOCK
                 READ promoeva PREVIOUS WITH LOCK
              ELSE
                 READ promoeva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-promoeva-KEY-Asc
              IF DataSet1-promoeva-LOCK
                 READ promoeva PREVIOUS WITH LOCK
              ELSE
                 READ promoeva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-promoeva-LOCK
                 READ promoeva NEXT WITH LOCK
              ELSE
                 READ promoeva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-multigest-INITSTART.
           IF DataSet1-multigest-KEY-Asc
              MOVE Low-Value TO mul-chiave
           ELSE
              MOVE High-Value TO mul-chiave
           END-IF
           .

       DataSet1-multigest-INITEND.
           IF DataSet1-multigest-KEY-Asc
              MOVE High-Value TO mul-chiave
           ELSE
              MOVE Low-Value TO mul-chiave
           END-IF
           .

      * multigest
       DataSet1-multigest-START.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY >= mul-chiave
           ELSE
              START multigest KEY <= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-NOTGREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY <= mul-chiave
           ELSE
              START multigest KEY >= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-GREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY > mul-chiave
           ELSE
              START multigest KEY < mul-chiave
           END-IF
           .

       DataSet1-multigest-START-LESS.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY < mul-chiave
           ELSE
              START multigest KEY > mul-chiave
           END-IF
           .

       DataSet1-multigest-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-multigest-LOCK
              READ multigest WITH LOCK 
              KEY mul-chiave
           ELSE
              READ multigest WITH NO LOCK 
              KEY mul-chiave
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT 
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeWrite>
      * <TOTEM:END>
           WRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeDelete>
      * <TOTEM:END>
           DELETE multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-INITSTART.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              MOVE Low-Value TO toa-chiave
           ELSE
              MOVE High-Value TO toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-INITEND.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              MOVE High-Value TO toa-chiave
           ELSE
              MOVE Low-Value TO toa-chiave
           END-IF
           .

      * tmp-ordf-art
       DataSet1-tmp-ordf-art-START.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY >= toa-chiave
           ELSE
              START tmp-ordf-art KEY <= toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-START-NOTGREATER.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY <= toa-chiave
           ELSE
              START tmp-ordf-art KEY >= toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-START-GREATER.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY > toa-chiave
           ELSE
              START tmp-ordf-art KEY < toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-START-LESS.
           IF DataSet1-tmp-ordf-art-KEY-Asc
              START tmp-ordf-art KEY < toa-chiave
           ELSE
              START tmp-ordf-art KEY > toa-chiave
           END-IF
           .

       DataSet1-tmp-ordf-art-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeWrite>
      * <TOTEM:END>
           WRITE toa-rec OF tmp-ordf-art.
           MOVE STATUS-tmp-ordf-art TO TOTEM-ERR-STAT
           MOVE "tmp-ordf-art" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-ordf-art TO TOTEM-ERR-STAT
           MOVE "tmp-ordf-art" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordf-art-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-ordf-art TO TOTEM-ERR-STAT
           MOVE "tmp-ordf-art" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordf-art, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       tordforn-tof-k-consegna-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-consegna-SPLITBUF
           MOVE tof-data-consegna OF tordforn(1:8) TO 
           tordforn-tof-k-consegna-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-consegna-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           IF DataSet1-tordforn-KEY-Asc
              MOVE Low-Value TO tof-chiave
           ELSE
              MOVE High-Value TO tof-chiave
           END-IF
           .

       DataSet1-tordforn-INITEND.
           IF DataSet1-tordforn-KEY-Asc
              MOVE High-Value TO tof-chiave
           ELSE
              MOVE Low-Value TO tof-chiave
           END-IF
           .

      * tordforn
       DataSet1-tordforn-START.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY >= tof-chiave
           ELSE
              START tordforn KEY <= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-NOTGREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY <= tof-chiave
           ELSE
              START tordforn KEY >= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-GREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY > tof-chiave
           ELSE
              START tordforn KEY < tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-LESS.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY < tof-chiave
           ELSE
              START tordforn KEY > tof-chiave
           END-IF
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordforn-LOCK
              READ tordforn WITH LOCK 
              KEY tof-chiave
           ELSE
              READ tordforn WITH NO LOCK 
              KEY tof-chiave
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-sordforn-INITSTART.
           IF DataSet1-sordforn-KEY-Asc
              MOVE Low-Value TO sof-chiave OF sordforn
           ELSE
              MOVE High-Value TO sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-INITEND.
           IF DataSet1-sordforn-KEY-Asc
              MOVE High-Value TO sof-chiave OF sordforn
           ELSE
              MOVE Low-Value TO sof-chiave OF sordforn
           END-IF
           .

      * sordforn
       DataSet1-sordforn-START.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY >= sof-chiave OF sordforn
           ELSE
              START sordforn KEY <= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-NOTGREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY <= sof-chiave OF sordforn
           ELSE
              START sordforn KEY >= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-GREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY > sof-chiave OF sordforn
           ELSE
              START sordforn KEY < sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-LESS.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY < sof-chiave OF sordforn
           ELSE
              START sordforn KEY > sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-sordforn-LOCK
              READ sordforn WITH LOCK 
              KEY sof-chiave OF sordforn
           ELSE
              READ sordforn WITH NO LOCK 
              KEY sof-chiave OF sordforn
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT 
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq.
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE prg-rec OF progmag
           INITIALIZE art-rec OF articoli
           INITIALIZE tmp-prg-rec OF tmp-progmag
           INITIALIZE imb-rec OF timballi
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE mar-rec OF tmarche
           INITIALIZE nom-rec OF tnomen
           INITIALIZE sme-rec OF tsetmerc
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE pev-rec OF promoeva
           INITIALIZE mul-rec OF multigest
           INITIALIZE toa-rec OF tmp-ordf-art
           INITIALIZE rof-rec OF rordforn
           INITIALIZE tof-rec OF tordforn
           INITIALIZE cli-rec OF clienti
           INITIALIZE sof-rec OF sordforn
           INITIALIZE line-riga OF lineseq
           .


      * GRID
       gd-giacenze-Content.
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 3, Y = 1,
                CELL-DATA = "Art.",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 4, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 5, Y = 1,
                CELL-DATA = "Mag.",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 6, Y = 1,
                CELL-DATA = "Imballo",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 7, Y = 1,
                CELL-DATA = "Num.",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 8, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 9, Y = 1,
                CELL-DATA = "Giacenza",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 10, Y = 1,
                CELL-DATA = "Impegnato",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 11, Y = 1,
                CELL-DATA = "Prenotata",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 12, Y = 1,
                CELL-DATA = "Giac. Utile",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 13, Y = 1,
                CELL-DATA = "Ord-6",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 14, Y = 1,
                CELL-DATA = "Blocc",
      * CELLS' SETTING
              MODIFY gd-giacenze, X = 7, Y = 2,
                CELL-DATA = "Imballi",
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-progmag-INITREC.
           INITIALIZE tmp-prg-rec OF tmp-progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tnomen-INITREC.
           INITIALIZE nom-rec OF tnomen
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tsetmerc-INITREC.
           INITIALIZE sme-rec OF tsetmerc
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-promoeva-INITREC.
           INITIALIZE pev-rec OF promoeva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-multigest-INITREC.
           INITIALIZE mul-rec OF multigest
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-ordf-art-INITREC.
           INITIALIZE toa-rec OF tmp-ordf-art
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-sordforn-INITREC.
           INITIALIZE sof-rec OF sordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form2-Buf-To-Fld
           END-EVALUATE
           .

       Form2-Open-Routine.
           PERFORM Form2-Scrn
           PERFORM Form2-Proc
           .

       Form2-Scrn.
           PERFORM Form2-Create-Win
           PERFORM Form2-Init-Value
           PERFORM Form2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form2-DISPLAY
           .

       Form2-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 52,92,
              SIZE 176,33,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Small-Font,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS form2-Handle,
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form2 UPON form2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-giacenze, DISPLAY-COLUMNS (1, 4, 7, 14, 58, 66, 
           91, 100, 111, 125, 139, 153, 153, 163)
           .

       Form2-PROC.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeAccept>
           set CallManutenzione to false.
           perform FORM3-OPEN-ROUTINE.

           if not trovato       
              display message box 
              "Nessun elemento presente nei limiti di ricerca impostati"
                      title = titolo
              perform FORM2-EXIT
           else
              if stampa-excel
                 perform FORM2-EXIT
              else
                 modify form2-Handle, visible = 1 
                 move 3 to riga event-data-2
                 modify gd-giacenze, cursor-y = 2
                 perform CAMBIA-FONT-RIGA
              end-if
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form2
                 ON EXCEPTION
                    PERFORM Form2-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form2-Handle
           INITIALIZE Key-Status
           .

       Form2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterAccept>
           if BeginEntry
              inquire gd-giacenze, cursor-x in colonna
              if colonna = 13
                 inquire gd-giacenze (riga, 13), cell-data in 
           tot-ordinato-6
                 if tot-ordinato-6 not = 0
                    perform RIEPILOGO-ORDINI
                 end-if
              else
                 if ApriRighe
                    if hid-open
                       modify gd-giacenze, (riga, 1),
                              bitmap        = multi-bmp,
                              bitmap-number = 3,
                              bitmap-width  = 16
                       set hid-close to true
                       modify gd-giacenze(riga, 2), hidden-data = 
           hid-OpenClose
                       perform VEDI-MASTER
                    else                        
                       modify gd-giacenze, (riga, 1),
                              bitmap        = multi-bmp,
                              bitmap-number = 2,
                              bitmap-width  = 16
                       set hid-open to true 
                       modify gd-giacenze(riga, 2), hidden-data = 
           hid-OpenClose
                       perform VEDI-SLAVES
                    end-if
                 else
                    if YesIsSon
                       perform VEDI-MASTER 
                       
                       modify gd-giacenze, (como-riga, 1),
                              bitmap        = multi-bmp,
                              bitmap-number = 3,
                              bitmap-width  = 16
                       set hid-close to true
                       modify gd-giacenze(como-riga, 2), hidden-data = 
           hid-OpenClose
                 
                    end-if
                 end-if
              end-if
              move como-riga to riga
              modify gd-giacenze, cursor-y = riga
              modify gd-giacenze(riga), ROW-FONT = 
           font-evidenzia-griglia
           end-if.

           set BeginEntry to false.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form2-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form2-CLEAR.
           PERFORM Form2-INIT-VALUE
           PERFORM Form2-DISPLAY
           .

       Form2-DISPLAY.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form2 UPON form2-Handle
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form2-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-giacenze-Content
           .

       Form2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form2-DataSet1-Update-Key
           .

       Form2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           PERFORM Form2-DataSet1-Update-Key
           .

       Form2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           PERFORM Form2-DataSet1-Update-Key
           .

       Form2-DataSet1-Update-Key.
           MOVE prg-rec OF progmag TO
                     Form2-MULKEY-TMPBUF
           PERFORM Form2-CLEAR
           PERFORM Form2-INIT-DATA
           MOVE Form2-MULKEY-TMPBUF TO
                     prg-rec OF progmag
           PERFORM DataSet1-progmag-Read
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-CURR
           PERFORM Form2-IUD-Display
           .

       Form2-DUPLICATE-MOVEKEY.
           .

       Form2-First.
           PERFORM Form2-DUMMY-FIRST
           PERFORM DataSet1-progmag-INITSTART
           PERFORM DataSet1-progmag-START
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-progmag-Read-Next
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterFirst>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY.
           PERFORM Form2-IUD-Display
           .

       Form2-Previous.
              PERFORM Form2-Buf-To-Fld
              PERFORM DataSet1-progmag-START-LESS
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-progmag-Read-Prev
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-PREVIOUS
           PERFORM Form2-IUD-Display
           .

       Form2-Next.
              PERFORM Form2-Buf-To-Fld
              PERFORM DataSet1-progmag-START-GREATER
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-progmag-Read-Next
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterNext>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-NEXT
           PERFORM Form2-IUD-Display
           .
      
       Form2-Last.
           PERFORM Form2-DUMMY-LAST
           PERFORM DataSet1-progmag-INITEND
           PERFORM DataSet1-progmag-START-NOTGREATER
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-progmag-Read-Prev
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterLast>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY.
           PERFORM Form2-IUD-Display
           .

       Form2-Curr.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form2-Buf-To-Fld
           PERFORM DataSet1-progmag-Read
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-CURR
           PERFORM Form2-IUD-Display
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterCurrent>
      * <TOTEM:END>
           .

       Form2-IUD-Display.
           IF Valid-STATUS-progmag
              PERFORM Form2-ALLGRID-RESET
              PERFORM Form2-Fld-To-Buf
              PERFORM Form2-NAVI-FOR-MASTERGRID
              PERFORM Form2-DISPLAY
           ELSE
              IF Form2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form2-Extended-File-Status
              END-IF
           END-IF
           .

       Form2-Add.
           PERFORM Form2-Buf-To-Fld
           PERFORM Form2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form2-DUMMY-ADD
           PERFORM DataSet1-progmag-INITREC
           PERFORM Form2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-progmag-Rec-Write
           IF Valid-STATUS-progmag
              PERFORM Form2-RESUMMARY-INS
              PERFORM Form2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form2-IUD-Display
           END-IF
           PERFORM Form2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterAdd>
      * <TOTEM:END>
           .
     
       Form2-Update.
           PERFORM Form2-Buf-To-Fld
           PERFORM DataSet1-progmag-START              
           IF NOT Valid-STATUS-progmag
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-progmag-Read
           PERFORM Form2-Buf-To-Fld
           PERFORM Form2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form2-DUMMY-UPDATE
           PERFORM Form2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-progmag-Rec-Rewrite
           IF Valid-STATUS-progmag
              PERFORM Form2-RESUMMARY-DEL
              PERFORM Form2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form2-IUD-Display
           END-IF
           PERFORM Form2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterUpdate>
      * <TOTEM:END>
           .

       Form2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form2-DUMMY-DELETE
      * delete
           PERFORM Form2-Buf-To-Fld
           PERFORM DataSet1-progmag-Rec-Delete
           IF Valid-STATUS-progmag
              PERFORM Form2-CLEAR
              PERFORM Form2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-progmag
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterDelete>
      * <TOTEM:END>
           PERFORM Form2-ERR-CHECKING
           .

       Form2-NAVI-FOR-MASTERGRID.
           .

       Form2-ERR-CHECKING.
           IF Valid-STATUS-progmag
              PERFORM Form2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form2-Extended-File-Status
           END-IF
           .

       Form2-RESUMMARY-INS.
           .

       Form2-RESUMMARY-DEL.
           .


       Form2-DUMMY-FIRST.
           .

       Form2-DUMMY-PREVIOUS.
           .

       Form2-DUMMY-NEXT.
           .

       Form2-DUMMY-LAST.
           .

       Form2-DUMMY-CURR.
           .

       Form2-DUMMY-ADD.
           .

       Form2-DUMMY-UPDATE.
           .

       Form2-DUMMY-UPDATE-INIT.
           .

       Form2-DUMMY-DELETE.
           .

       Form2-DUMMY-DELETE-INIT.
           .

       Form2-Init-Value.
      * FORM : Form2
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, SetDefault>
      * <TOTEM:END>
           PERFORM Form2-FLD-TO-BUF
           .


       Form2-ALLGRID-RESET.
           .

      * for Form's Validation
       Form2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterBufToFld>
      * <TOTEM:END>
           .

       Form2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form2-SHOW-MSG-ROUTINE
           .

       Form2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form2-DISPLAY-MESSAGE
           .

       Form2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form2-Save-Status.
           MOVE DataSet1-progmag-KEY1-ORDER TO TMP-Form2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form2-KEYIS
           MOVE prg-rec OF progmag TO 
              TMP-Form2-progmag-RESTOREBUF
           .             

       Form2-Restore-Status.
           MOVE TMP-Form2-KEY1-ORDER TO DataSet1-progmag-KEY1-ORDER
           MOVE TMP-Form2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form2-progmag-RESTOREBUF TO
              prg-rec OF progmag
           PERFORM DataSet1-progmag-START
           IF Valid-STATUS-progmag
              PERFORM DataSet1-progmag-Read-Next
           ELSE
              PERFORM DataSet1-progmag-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-progmag OR
              (Valid-STATUS-progmag AND
                 prg-rec OF progmag = 
                   TMP-Form2-progmag-RESTOREBUF)
              PERFORM DataSet1-progmag-Read-Next
           END-PERFORM
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 17,33,
              SIZE 77,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen4-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
      * SPECIFICO PER PROGRAMMI CON SCREEN DI ACCETTAZIONE LIMITI
           set stampa-excel to false.
           move 1       to tipo-elab.
           move spaces  to ef-des-from-buf.
           move all "z" to ef-des-to-buf.

           move zero    to ef-cod-from-buf
           move all "9" to ef-cod-to-buf.

           move "0 = TUTTE" to lab-marca-buf.
           move "0 = TUTTI" to lab-settore-buf.
           move "0 = TUTTI" to lab-dogana-buf.

           display Form1.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM RB-des-LinkTo
              WHEN Key-Status = 1002
                 PERFORM RB-cod-LinkTo
              WHEN Key-Status = 1000
                 PERFORM pb-ok-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form1-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .

       form3-Open-Routine.
           PERFORM form3-Scrn
           PERFORM form3-Proc
           .

       form3-Scrn.
           PERFORM form3-Create-Win
           PERFORM form3-Init-Value
           PERFORM form3-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form3-DISPLAY
           .

       form3-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 3,00,
              SIZE 32,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE form3-Event-Proc,
              HANDLE IS form3-Handle,
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form3 UPON form3-Handle
      * DISPLAY-COLUMNS settings
           .

       form3-PROC.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeAccept>
           call "w$mouse"   using set-mouse-shape, wait-pointer

           call   "tprev-elab" using user-codi.
           cancel "tprev-elab".

           perform RIEMPI-TMP.

           call "w$mouse" using set-mouse-shape, arrow-pointer.



           perform FORM3-EXIT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM form3-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form3-Handle
           INITIALIZE Key-Status
           .

       form3-Evaluate-Func.
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form3-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form3-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form3-CLEAR.
           PERFORM form3-INIT-VALUE
           PERFORM form3-DISPLAY
           .

       form3-DISPLAY.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form3 UPON form3-Handle
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       form3-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form3-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       form3-Init-Value.
      * <TOTEM:EPT. FORM:form3, FORM:form3, SetDefault>
      * <TOTEM:END>
           PERFORM form3-FLD-TO-BUF
           .


       form3-ALLGRID-RESET.
           .

      * for Form's Validation
       form3-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form3-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterBufToFld>
      * <TOTEM:END>
           .

       form3-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterFldToBuf>
      * <TOTEM:END>
           .

       form3-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form3-BUF-TO-FLD.
           move 0 to scelta.
           .
       form3-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form3-SHOW-MSG-ROUTINE
           .

       form3-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form3-DISPLAY-MESSAGE
           .

       form3-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form3-Save-Status.
           .             

       form3-Restore-Status.
           .



       Form1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5005 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5006 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5007 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5008 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5005 PERFORM ef-marca-BeforeProcedure
           When 5006 PERFORM ef-settore-BeforeProcedure
           When 5007 PERFORM ef-cod-dogana-BeforeProcedure
           When 5008 PERFORM ef-mag-BeforeProcedure
           END-EVALUATE
           .

       Screen1-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       Screen4-Event-Proc.
           .

       form3-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
      *
           when 78-ID-ef-des-from
                inquire ef-des-from    value art-descrizione
                move "articoli-alfa"      to Como-File
                call   "zoom-gt" using como-file, art-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = ZERO  
                   modify ef-des-from,   value art-descrizione
                end-if             
      *
           when 78-ID-ef-des-to  
                inquire ef-des-to    value art-descrizione
                move "articoli-alfa"      to Como-File
                call   "zoom-gt" using como-file, art-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = ZERO  
                   modify ef-des-to,   value art-descrizione
                end-if           
      *
           when 78-ID-ef-cod-from
                inquire ef-cod-from    value art-codice
                move "articoli"      to Como-File
                call   "zoom-gt" using como-file, art-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = ZERO  
                   modify ef-cod-from,   value art-codice
                end-if           
      *
           when 78-ID-ef-cod-to  
                inquire ef-cod-to    value art-codice
                move "articoli"      to Como-File
                call   "zoom-gt" using como-file, art-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = ZERO  
                   modify ef-cod-to,   value art-codice
                end-if           
      *
           when 78-ID-ef-marca
                inquire ef-marca value mar-codice
                move "tmarche"      to como-file         
                call "zoom-gt"   using como-file, mar-rec
                                giving stato-zoom
                end-call
                cancel "zoom-gt"
                if stato-zoom = 0
                   move mar-codice      to ef-marca-buf
                   move mar-descrizione to lab-marca-buf
                   display ef-marca lab-marca
                end-if

           when 78-ID-ef-settore
                inquire ef-settore value sme-codice
                move "tsetmerc"       to como-file         
                call "zoom-gt"    using como-file, sme-rec
                                 giving stato-zoom
                end-call
                cancel "zoom-gt"
                if stato-zoom = 0
                   move sme-codice      to ef-settore-buf
                   move sme-descrizione to lab-settore-buf
                   display ef-settore lab-settore
                end-if

           when 78-ID-ef-dogana
                inquire ef-dogana value nom-codice
                move "tnomen"  to como-file         
                call "zoom-gt" using como-file, nom-rec
                               giving stato-zoom
                end-call
                cancel "zoom-gt"
                if stato-zoom = 0
                   move nom-codice      to ef-dogana-buf
                   move nom-descrizione to lab-dogana-buf
                   display ef-dogana lab-dogana
                end-if
      *
           when 78-ID-ef-mag
                inquire ef-mag   value mag-codice
                move   "tmagaz"     to como-file
                call   "zoom-gt" using como-file, mag-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   modify ef-mag  value mag-codice
                end-if           

           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

           evaluate CONTROL-ID
           when 78-ID-ef-des-to
                if e-des = 1                                
                   inquire ef-des-from, value in ef-des-from-buf
                   inquire ef-des-to,   value in ef-des-to-buf
                   if ef-des-to-buf = spaces
                      move all "Z" to ef-des-to-buf
                      display ef-des-to
                   end-if
                   if ef-des-to-buf < ef-des-from-buf
                      set errori to true
                      display message 
                              "Intervallo limiti descrizione errato!"
                              title = tit-err
                              icon 2
                      move 78-ID-ef-des-from to control-id
                   end-if
                end-if
      *
           when 78-ID-ef-cod-to
                if e-cod = 1                             
                   inquire ef-cod-from, value in ef-cod-from-buf
                   inquire ef-cod-to,   value in ef-cod-to-buf
                   if ef-cod-to-buf = 0
                      move all "9" to ef-cod-to-buf
                      display ef-cod-to
                   end-if
                   if ef-cod-to-buf < ef-cod-from-buf
                      set errori to true
                      display message box "Intervallo limiti codice erra
      -    "to!"
                              title = tit-err
                              icon 2
                      move 78-ID-ef-cod-from to control-id
                   end-if
                end-if
      *
           when 78-ID-ef-marca
                inquire ef-marca, value in ef-marca-buf
                if ef-marca-buf = 0
                   move "Tutte le marche" to lab-marca-buf
                else
                   move ef-marca-buf to mar-codice  
                   read tmarche no lock
                        invalid
                        display message "Marca NON valida"
                                  title tit-err
                                   icon 2
                        set errori to true
                        move spaces to mar-descrizione
                   end-read
                   move mar-descrizione to lab-marca-buf
                end-if
                display lab-marca
      *
           when 78-ID-ef-settore
                inquire ef-settore, value in ef-settore-buf
                if ef-settore-buf = 0
                   move "Tutti i settori" to lab-settore-buf
                else
                   move ef-settore-buf to sme-codice  
                   read tsetmerc no lock
                        invalid
                        display message "Settore NON valido"
                                  title tit-err
                                   icon 2
                        set errori to true
                        move spaces to sme-descrizione
                   end-read
                   move sme-descrizione to lab-settore-buf
                end-if
                display lab-settore
      *
           when 78-ID-ef-dogana
                inquire ef-dogana, value in ef-dogana-buf
                if ef-dogana-buf = 0
                   move "Tutti i codici doganali" to lab-dogana-buf
                else
                   move ef-dogana-buf to nom-codice  
                   read tnomen no lock
                        invalid
                        display message "Codice doganale NON valido"
                                  title tit-err
                                   icon 2
                        set errori to true
                        move spaces to nom-descrizione
                   end-read
                   move nom-descrizione to lab-dogana-buf
                end-if
                display lab-dogana 
      *
           when 78-ID-ef-mag
                inquire ef-mag, value in ef-mag-buf
                if ef-mag-buf = spaces
                   move "Tutti i codici magazzino" to lab-mag-buf
                else
                   move ef-mag-buf to mag-codice  
                   read tmagaz no lock
                        invalid
                        display message "Codice Magazzino NON valido"
                                  title tit-err
                                   icon 2
                        set errori to true
                        move spaces to mag-descrizione
                   end-read
                   move mag-descrizione to lab-mag-buf
                end-if
                display lab-mag

           end-evaluate.

           if errori
              perform CANCELLA-COLORE
              move control-id to store-id
              move 4          to accept-control
           end-if.

           display form1 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy".
           copy "calcola-colore-trasparente.cpy".
           copy "riempi-tmp-progmag.cpy".
           copy "multigest.cpy".
           copy "common-excel.cpy".
           copy "costo-medio.cpy".

      ***---
       RECUPERO-ANAGRAFICA     
           .
      * <TOTEM:END>

       CAMBIA-FONT-RIGA.
      * <TOTEM:PARA. CAMBIA-FONT-RIGA>
           modify  gd-giacenze(riga), ROW-FONT = small-font.
           move event-data-2 to riga.
           modify  gd-giacenze(riga), ROW-FONT = font-evidenzia-griglia.
           inquire gd-giacenze(riga, 1), hidden-data in hid-HasSons 
           .
      * <TOTEM:END>

       SECCA-TMP.
      * <TOTEM:PARA. SECCA-TMP>
           if FileOpen
              close tmp-progmag
              call "C$DELETE" using path-tmp-progmag, "I"
              set FileOpen to false
           end-if 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire gd-giacenze, last-row in tot-righe.
           if event-data-2 < 3 move 3 to event-data-2 end-if.
           if event-data-2 > tot-righe move tot-righe to event-data-2 
           end-if.
           if riga not = event-data-2 
              perform CAMBIA-FONT-RIGA
           end-if 
           .
      * <TOTEM:END>

       RIEPILOGO-ORDINI.
      * <TOTEM:PARA. RIEPILOGO-ORDINI>
           accept como-data from century-date.
           accept como-ora  from time.
           initialize path-tmp-ordf-art.
           accept  path-tmp-ordf-art from environment "PATH_ST".
           inspect path-tmp-ordf-art replacing trailing spaces by 
           low-value.
           string  path-tmp-ordf-art delimited low-value
                   "TMP_ORDF_ART_"   delimited size
                   como-data         delimited size
                   "_"               delimited size
                   como-ora          delimited size
                   into path-tmp-ordf-art
           end-string.
           move spaces to ext-file.
           open output tmp-ordf-art.
           move low-value    to rof-rec.
           inquire gd-giacenze(riga, 3), cell-data in como-articolo
           move como-articolo to rof-cod-articolo.
           start rordforn key >= rof-k-articolo
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read rordforn next at end exit perform end-read
                    if rof-cod-articolo not = como-articolo
                       exit perform
                    end-if
                    move rof-chiave to tof-chiave
                    read tordforn no lock
                         invalid exit perform cycle
                    end-read
                    if tof-chiuso or tof-inserito
                       continue
                    else
                       move path-tmp-ordf-art to ext-file
                       set cli-tipo-F to true
                       move tof-cod-forn to cli-codice
                       read clienti no lock
                       move rof-chiave         to toa-chiave
                       move cli-ragsoc-1       to toa-forn
                       move cli-tel-1          to toa-tel
                       move rof-qta-ord        to toa-ord

      *****                 move rof-qta-evasa      to toa-eva
                       compute toa-eva = rof-qta-ord - rof-qta-evasa

                       move rof-chiave to sof-chiave
                       read sordforn no lock 
                            invalid 
                            move 0 to toa-qta-soll
                            move 0 to sof-prog
                            read sordforn
                                 invalid 
                                 move 0      to toa-data-arrivo
                                 move spaces to toa-dati-salvati
                             not invalid 
                                 move sof-data-arr     to 
           toa-data-arrivo
                                 move sof-dati-salvati to 
           toa-dati-salvati
                            end-read
                        not invalid 
                            move sof-data-arr     to toa-data-arrivo
                            move sof-qta          to toa-qta-soll
                            move sof-dati-salvati to toa-dati-salvati
                       end-read
                       move tof-data-ordine    to toa-data-ordine

                       write toa-rec
                    end-if
                 end-perform
           end-start
           close       tmp-ordf-art
           if ext-file not = spaces
              move "tmp-ordf-art2" to como-file
              call   "zoom-gt" using como-file, toa-rec
                              giving stato-zoom
              cancel "zoom-gt"
           end-if
           delete file tmp-ordf-art
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       ginqui-Ev-Before-Program.
      * <TOTEM:PARA. ginqui-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           perform CONTROLLA-ESEGUIBILITA.

           perform CALCOLA-COLORE-TRASPARENTE.

      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA font-evidenzia-griglia
           MOVE 10 TO WFONT-SIZE
           MOVE "Arial" TO WFONT-NAME
           SET WFONT-BOLD TO true
           SET WFONT-ITALIC TO true
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     font-evidenzia-griglia, WFONT-DATA
           move LK-BL-PROG-ID    TO COMO-PROG-ID.

           copy resource "multi.bmp".
           call "W$BITMAP" using wbitmap-load, "multi.bmp"
                          giving multi-bmp 
           .
      * <TOTEM:END>
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           DESTROY font-evidenzia-griglia.
           perform SECCA-TMP.
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           call "W$BITMAP" using wbitmap-destroy, multi-bmp.
           unlock multigest all records.
           close  multigest 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Begin-Entry>
           inquire gd-giacenze, entry-reason in como-x.
           set event-action to event-action-fail-terminate.
           evaluate como-x
           when X"00"|doppio click
           when X"0D"|invio
                set BeginEntry to true
                move riga to como-riga
                inquire gd-giacenze(riga, 3), cell-data in col-art
                inquire gd-giacenze, CURSOR-Y = riga
                inquire gd-giacenze(riga, 1), hidden-data in hid-HasSons
                inquire gd-giacenze(riga, 3), hidden-data in hid-IsSon  
                inquire gd-giacenze(riga, 4), cell-data   in col-des
                if YesHasSons
                   set ApriRighe to true
                   inquire gd-giacenze(riga, 2), hidden-data in 
           hid-OpenClose
                else
                   set ApriRighe to false
                end-if
           end-evaluate 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           perform CERCA 
           .
      * <TOTEM:END>
       RB-des-BeforeProcedure.
      * <TOTEM:PARA. RB-des-BeforeProcedure>
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       RB-cod-BeforeProcedure.
      * <TOTEM:PARA. RB-cod-BeforeProcedure>
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       RB-des-AfterProcedure.
      * <TOTEM:PARA. RB-des-AfterProcedure>
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       RB-cod-AfterProcedure.
      * <TOTEM:PARA. RB-cod-AfterProcedure>
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       RB-des-LinkTo.
      * <TOTEM:PARA. RB-des-LinkTo>
           move 1 to e-des.
           move 0 to e-cod.
           display form1.
           perform CANCELLA-COLORE.
           move 78-ID-ef-des-from to control-id.
           move 4 to accept-control 
           .
      * <TOTEM:END>
       RB-cod-LinkTo.
      * <TOTEM:PARA. RB-cod-LinkTo>
           move 0 to e-des.
           move 1 to e-cod.
           display form1.   
           perform CANCELLA-COLORE.
           move 78-ID-ef-cod-from to control-id.
           move 4 to accept-control 
           .
      * <TOTEM:END>
       pb-annulla2-BeforeProcedure.
      * <TOTEM:PARA. pb-annulla2-BeforeProcedure>
           modify pb-annulla2, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-annulla2-AfterProcedure.
      * <TOTEM:PARA. pb-annulla2-AfterProcedure>
           modify pb-annulla2, bitmap-number 1 
           .
      * <TOTEM:END>
       pb-ok-BeforeProcedure.
      * <TOTEM:PARA. pb-ok-BeforeProcedure>
           modify pb-ok, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-ok-AfterProcedure.
      * <TOTEM:PARA. pb-ok-AfterProcedure>
           modify pb-ok, bitmap-number 1 
           .
      * <TOTEM:END>
       pb-ok-LinkTo.
      * <TOTEM:PARA. pb-ok-LinkTo>
           move control-id to mem-id.
           perform  varying control-id from 78-ID-ef-des-from by 1
                      until control-id > 78-ID-ef-mag
              perform CONTROLLO
              if errori exit perform end-if
           end-perform.

           if tutto-ok
              modify form1-Handle, visible 0
              perform FORM2-OPEN-ROUTINE                       
              modify form1-Handle, visible 1
              if tipo-elab = 1
                 move 78-ID-ef-des-from to control-id
              else                 
                 move 78-ID-ef-cod-from to control-id
              end-if
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>
       pb-annulla-BeforeProcedure.
      * <TOTEM:PARA. pb-annulla-BeforeProcedure>
           modify pb-annulla, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-annulla-AfterProcedure.
      * <TOTEM:PARA. pb-annulla-AfterProcedure>
           modify pb-annulla, bitmap-number 1 
           .
      * <TOTEM:END>
       ef-marca-BeforeProcedure.
      * <TOTEM:PARA. ef-marca-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-marca-AfterProcedure.
      * <TOTEM:PARA. ef-marca-AfterProcedure>
           perform CONTROLLO.
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-settore-BeforeProcedure.
      * <TOTEM:PARA. ef-settore-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-cod-dogana-BeforeProcedure.
      * <TOTEM:PARA. ef-cod-dogana-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-settore-AfterProcedure.
      * <TOTEM:PARA. ef-settore-AfterProcedure>
           perform CONTROLLO.
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-cod-dogana-AfterProcedure.
      * <TOTEM:PARA. ef-cod-dogana-AfterProcedure>
           perform CONTROLLO.
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-cod-from-BeforeProcedure.
      * <TOTEM:PARA. ef-cod-from-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-cod-from-AfterProcedure.
      * <TOTEM:PARA. ef-cod-from-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-cod-to-BeforeProcedure.
      * <TOTEM:PARA. ef-cod-to-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-cod-to-AfterProcedure.
      * <TOTEM:PARA. ef-cod-to-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO 
           .
      * <TOTEM:END>
       ef-des-from-BeforeProcedure.
      * <TOTEM:PARA. ef-des-from-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-des-from-AfterProcedure.
      * <TOTEM:PARA. ef-des-from-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-des-to-BeforeProcedure.
      * <TOTEM:PARA. ef-des-to-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-des-to-AfterProcedure.
      * <TOTEM:PARA. ef-des-to-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO 
           .
      * <TOTEM:END>
       ef-mag-BeforeProcedure.
      * <TOTEM:PARA. ef-mag-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-mag-AfterProcedure.
      * <TOTEM:PARA. ef-mag-AfterProcedure>
           perform CONTROLLO.
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       scr-stampa-Cb-1-BeforeProcedure.
      * <TOTEM:PARA. scr-stampa-Cb-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           modify chk-excel, bitmap-number = 2 
           .
      * <TOTEM:END>
       scr-stampa-Cb-1-AfterProcedure.
      * <TOTEM:PARA. scr-stampa-Cb-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           modify chk-excel, bitmap-number = 1 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

