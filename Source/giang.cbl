      *{TOTEM}PRG-COMMENT
      * giang.Cbl
      * giang.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          giang.
       AUTHOR.              andre.
       DATE-WRITTEN.        lunedì 16 marzo 2020 15:14:29.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:giang, INIT:giang, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "mtordini.sl".
           COPY "mrordini.sl".
           COPY "articoli.sl".
           COPY "clienti.sl".
           COPY "destini.sl".
           COPY "tpromo.sl".
           COPY "rordforn.sl".
           COPY "tordforn.sl".
           COPY "tgrupgdo.sl".
           COPY "destinif.sl".
           COPY "tmp-giang.sl".
           COPY "tmp-mrordini.sl".
           COPY "progmag.sl".
           COPY "tmp-mtordini.sl".
           COPY "sordforn.sl".
           COPY "timballi.sl".
           COPY "timbalqta.sl".
           COPY "tcaumag.sl".
           COPY "rordini.sl".
           COPY "tagli.sl".
           COPY "tordini.sl".
           COPY "lockfile.sl".
           COPY "tmp-blis-eva.sl".
           COPY "tparamge.sl".
           COPY "zoom-art-giac.sl".
           COPY "tmarche.sl".
           COPY "ttipocli.sl".
           COPY "tpiombo.sl".
           COPY "tscorte.sl".
           COPY "param.sl".
           COPY "promoeva.sl".
           COPY "tmp-k-mrordini.sl".
           COPY "tmp-k-mtordini.sl".
           COPY "tmp-qta-eva.sl".
           COPY "tmp-qta-pren.sl".
           COPY "tmagaz.sl".
           COPY "multigest.sl".
           COPY "blister.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "mtordini.fd".
           COPY "mrordini.fd".
           COPY "articoli.fd".
           COPY "clienti.fd".
           COPY "destini.fd".
           COPY "tpromo.fd".
           COPY "rordforn.fd".
           COPY "tordforn.fd".
           COPY "tgrupgdo.fd".
           COPY "destinif.fd".
           COPY "tmp-giang.fd".
           COPY "tmp-mrordini.fd".
           COPY "progmag.fd".
           COPY "tmp-mtordini.fd".
           COPY "sordforn.fd".
           COPY "timballi.fd".
           COPY "timbalqta.fd".
           COPY "tcaumag.fd".
           COPY "rordini.fd".
           COPY "tagli.fd".
           COPY "tordini.fd".
           COPY "lockfile.fd".
           COPY "tmp-blis-eva.fd".
           COPY "tparamge.fd".
           COPY "zoom-art-giac.fd".
           COPY "tmarche.fd".
           COPY "ttipocli.fd".
           COPY "tpiombo.fd".
           COPY "tscorte.fd".
           COPY "param.fd".
           COPY "promoeva.fd".
           COPY "tmp-k-mrordini.fd".
           COPY "tmp-k-mtordini.fd".
           COPY "tmp-qta-eva.fd".
           COPY "tmp-qta-pren.fd".
           COPY "tmagaz.fd".
           COPY "multigest.fd".
           COPY "blister.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
           COPY  "TROVA-PARAMETRO.DEF".
           COPY  "VERSIONE-EVASIONE.DEF".
           COPY  "LINK-FIND-PROGR.DEF".
           COPY  "AGGIORNA-STATO-MASTER.DEF".
           COPY  "LINK-WPROGMAG.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "LINK-GORDCVAR.DEF".
           COPY  "LINK-GORDFORNVAR.DEF".
           COPY  "LINK-STGIANG.DEF".
       78 tipo-evasione VALUE IS 1. 
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 trovato-prog VALUE IS 1    WHEN SET TO FALSE  0. 
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
      *
      *
       77 GiacenzaMAG      PIC  s9(8).
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 RichiamoBatch VALUE IS 1    WHEN SET TO FALSE  0. 
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 TITOLO           PIC  X(100)
                  VALUE IS "GESLUX - Funzione GIANG".
       78 chk-tutto-buf VALUE IS 1. 
       78 save-magazzino VALUE IS "LBX". 
       01 GdoInUsoFlag     PIC  x.
           88 GdoInUso VALUE IS "S". 
           88 GdoNonInUso VALUE IS "N". 
       01 GiacenzaKey.
           10 gia-cod-articolo PIC  9(6).
           10 gia-cod-magazzino            PIC  X(3).
           10 gia-tipo-imballo PIC  X(3).
           10 gia-peso         PIC  9(5)V9(3).
       77 como-x           PIC  x.
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 EvasioneIntera VALUE IS 1    WHEN SET TO FALSE  0. 
       77 mag-idx          PIC  9(3).
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 SaltaPromo VALUE IS 1    WHEN SET TO FALSE  0. 
       77 giac-utile       PIC  9(8).
       77 tot-peso         PIC  9(9)v999.
       77 tot-utf          PIC  9(9)v999.
       77 tot-idx          PIC  9(5).
       77 num-componenti   PIC  9(5).
       77 min-imb-evadibile            PIC  9(5).
       01 FILLER           PIC  9.
           88 ValutaBlister VALUE IS 1    WHEN SET TO FALSE  0. 
       01 tab-blister.
           05 riga-blister
                      OCCURS 50 TIMES.
               10 el-bli-chiave-master.
                   15 el-bli-chiave-testa.
                       20 el-bli-chiave-anno           PIC  9(4).
                       20 el-bli-chiave-numero         PIC  9(8).
                   15 el-bli-chiave-riga           PIC  9(5).
               10 el-bli-qta-imb   PIC  9(8).
               10 el-bli-ordinata  PIC  9(8).
               10 el-bli-evadibile PIC  9(8).
               10 el-bli-imb-evadibile         PIC  9(8).
       01 tab-blister-peso-utf.
           05 el-peso-utf-blister-ok       PIC  9(4)v999
                      OCCURS 5000 TIMES.
           05 el-peso-peso-blister-ok      PIC  9(4)v999
                      OCCURS 5000 TIMES.
       77 giac-assoluta    PIC  9(8).
       77 tot-righe-evadibili          PIC  9(8).
       77 save-gg-cons-max PIC  9(3)
                  VALUE IS 0.
       77 save-giacenza-assoluta       PIC  9(8).
       77 como-giacenza    PIC  s9(8).
       01 save-prg-chiave.
           05 save-prg-cod-articolo        PIC  9(6).
           05 save-prg-cod-magazzino       PIC  X(3).
           05 save-prg-tipo-imballo        PIC  X(3).
           05 save-prg-peso    PIC  9(5)V9(3).
       77 tot-master       PIC  9(8).
       77 righe-ok         PIC  9(8).
       77 righe-blister    PIC  9(8).
       77 como-qta         PIC  9(8).
       77 tot-qta-pre      PIC  9(8).
       77 save-data-pre    PIC  9(8).
       77 save-bli-codice  PIC  9(6).
       77 como-qta-z       PIC  9(8).
       77 resto            PIC  9(8).
       77 data-num         PIC  9(8).
       77 como-data-1      PIC  9(8).
       77 tot-promo        PIC  9(8)
                  VALUE IS 0.
       77 data-consegna    PIC  9(8).
       78 78-giang VALUE IS "giang". 
       77 como-data-2      PIC  9(8).
       77 num-screen       PIC  9.
       77 num-evasioni     PIC  999.
       77 tot-blis-idx     PIC  9(8)
                  VALUE IS 0.
       77 blister-id       PIC  9(8)
                  VALUE IS 0.
       01 tab-promo.
           05 el-promo         PIC  9(15)
                      OCCURS 10000 TIMES
                      INDEXED  idx-promo.
       01 como-promo       PIC  9.
           88 como-promo-si VALUE IS 1. 
           88 como-promo-no VALUE IS 0. 
       01 SaveChiave.
           05 SaveAnno         PIC  9(4).
           05 SaveNumero       PIC  9(8).
           05 SaveRiga         PIC  9(8).
       01 blis-tab.
           05 blis-riga
                      OCCURS 9999 TIMES
                      INDEXED  blis-idx.
               10 blis-chiave.
                   15 blis-art         PIC  9(6).
                   15 blis-mag         PIC  x(3).
                   15 blis-imb         PIC  x(3).
                   15 blis-peso        PIC  9(5)v999.
               10 blis-qta         PIC  9(8).
               10 blis-giac        PIC  s9(8).
               10 blis-idx-giac    PIC  9(8).
               10 blis-num-comp    PIC  9(8).
       77 tot-evasa        PIC  9(10).
       77 data-oggi        PIC  9(8).
       77 multi-s-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 bloccato-bmp
                  USAGE IS HANDLE OF BITMAP.
       77 colore           PIC  999.
       77 tot-idx-giac     PIC  9(5).
       77 codice-x         PIC  x(6).
       77 tpr-codice-x     PIC  x(15).
       77 save-stato       PIC  x(10).
       77 tot-idx-art      PIC  9(3).
       77 evasioni-valide  PIC  9(3).
       77 articoli-validi  PIC  9(3).
       77 como-evasa       PIC  9(8).
       77 data-start       PIC  9(8).
       77 data-end         PIC  9(8).
       77 qta-tot          PIC  9(8).
       77 imballi-ed       PIC  x(4).
       77 giacenza         PIC  s9(8)
                  VALUE IS 0.
       77 giacenza-LBX     PIC  s9(8)
                  VALUE IS 0.
       77 impegnato-LBX    PIC  s9(8)
                  VALUE IS 0.
       77 imp-master-LBX   PIC  s9(8)
                  VALUE IS 0.
       77 imp-TRAD-LBX     PIC  s9(8)
                  VALUE IS 0.
       77 imp-GDO-LBX      PIC  s9(8)
                  VALUE IS 0.
       77 evadi-tutto      PIC  9
                  VALUE IS 0.
       77 data-partenza    PIC  9(8)
                  VALUE IS 0.
       77 data-cons-max    PIC  9(8)
                  VALUE IS 0.
       77 da-evadere       PIC  9(8)
                  VALUE IS 0.
       77 tot-ordforn      PIC  9(8)
                  VALUE IS 0.
       77 counter          PIC  9(10)
                  VALUE IS 0.
       77 counter2         PIC  9(10)
                  VALUE IS 0.
       77 counter-edit     PIC  z(10).
       78 78-tutti-vol VALUE IS "Tutti i volantini". 
       01 tab-giacenza.
           05 el-riga
                      OCCURS 9999 TIMES
                      INDEXED  idx-giac.
               10 el-prg-chiave.
                   15 el-art           PIC  9(6).
                   15 el-mag           PIC  x(3).
                   15 el-imb           PIC  x(3).
                   15 el-peso          PIC  9(5)v999.
               10 el-giacenza      PIC  s9(8).
       77 FILLER           PIC  9.
           88 GestisciAzione VALUE IS 1    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 trovato-ordine-master VALUE IS 1    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 trovato-ordine VALUE IS 1    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 trovata-quantita VALUE IS 1    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 primo-lancio VALUE IS 1    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 prima-volta VALUE IS 1    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 RiepilogoOrdini VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 StampaEvasione VALUE IS 1    WHEN SET TO FALSE  0. 
           88 StampaBolla VALUE IS 2    WHEN SET TO FALSE  0. 
           88 StampaFattura VALUE IS 3    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 trovata-riga VALUE IS 1    WHEN SET TO FALSE  0. 
       01 tab-articoli.
           05 el-articolo      PIC  9(6)
                      OCCURS 10000 TIMES
                      INDEXED  idx-art.
       01 FILLER           PIC  9.
           88 evasa-tutto VALUE IS 1    WHEN SET TO FALSE  0. 
       77 save-blocco      PIC  x.
           88 save-blocco-si VALUE IS "S". 
           88 save-blocco-no VALUE IS "N". 
       01 FILLER           PIC  9.
           88 sostituito VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 ActionGrid VALUE IS 1    WHEN SET TO FALSE  0. 
       01 gd-hidden.
           05 hid-PadreFiglio  PIC  x.
               88 hid-padre VALUE IS "P". 
               88 hid-figlio VALUE IS "F". 
           05 hid-OpenClose    PIC  x.
               88 hid-close VALUE IS "C". 
               88 hid-open VALUE IS "O". 
           05 hid-cod-articolo PIC  9(6).
           05 hid-tot-ordfor   PIC  9(8).
           05 hid-master-ordf.
               10 hid-testa.
                   15 hid-anno         PIC  9(4).
                   15 hid-numero       PIC  9(8).
               10 hid-riga         PIC  9(5).
           05 hid-ordf.
               10 hid-ordf-testa.
                   15 hid-ordf-anno    PIC  9(4).
                   15 hid-ordf-numero  PIC  9(8).
               10 hid-ordf-riga    PIC  9(5).
       01 rec-gd-art.
           05 cod-art          PIC  z(6).
           05 des-art          PIC  x(40).
       01 k    PIC  9.
           88 k-agente VALUE IS 1. 
           88 k-clides VALUE IS 2. 
           88 k-gdo VALUE IS 3. 
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 CANCEL-73X21-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 1002.
       01 FILLER           PIC  9.
           88 CampiOrdF VALUE IS 1    WHEN SET TO FALSE  0. 
       01 filler           PIC  9.
           88 ApriRighe VALUE IS 1,    WHEN SET TO FALSE  0. 
       01 filler           PIC  9.
           88 record-ok VALUE IS 1,    WHEN SET TO FALSE  0. 
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 BLUE-DA-28X24-BMP            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BLUE-FINO-28X24-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 ef-cli-buf       PIC  z(5).
       77 ef-dest-buf      PIC  9(5).
       77 ef-data-from-buf PIC  99/99/9999.
       77 ef-data-to-buf   PIC  99/99/9999.
       77 lab-dest-buf     PIC  x(50).
       77 lab-cli-buf      PIC  x(50).
       77 STATUS-destini   PIC  X(2).
           88 Valid-STATUS-destini VALUE IS "00" THRU "09". 
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 ef-age-buf       PIC  9(5).
       77 lab-age-buf      PIC  x(50).
       77 ef-art-buf       PIC  9(5).
       77 STATUS-mrordini  PIC  X(2).
           88 Valid-STATUS-mrordini VALUE IS "00" THRU "09". 
       77 STATUS-mtordini  PIC  X(2).
           88 Valid-STATUS-mtordini VALUE IS "00" THRU "09". 
       77 scr-elab-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 scr-ordini-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Screen1-Pg-2-Visible         PIC  9
                  VALUE IS 0.
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 ini-vol          PIC  99/99/9999.
       77 fine-vol         PIC  99/99/9999.
       77 lab-dest-m-buf   PIC  x(50)
                  VALUE IS "<<HELP>> 0 = Tutti i destini del Cliente".
       77 lab-cli-m-buf    PIC  x(50).
       77 Arial8-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 como-numero      PIC  9(8).
       77 como-data-x8     PIC  x(8).
       77 scr-elab-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Arial8B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 cbo-promo-buf    PIC  x(100).
       77 como-des-promo   PIC  x(100).
       77 STATUS-tpromo    PIC  X(2).
           88 Valid-STATUS-tpromo VALUE IS "00" THRU "09". 
       77 Form1-Tb-1-Handleaa
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 STATUS-tgrupgdo  PIC  X(2).
           88 Valid-STATUS-tgrupgdo VALUE IS "00" THRU "09". 
       77 MS-Sans-Serif9BU-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-sordforn  PIC  X(2).
           88 Valid-STATUS-sordforn VALUE IS "00" THRU "09". 
       77 Arial8U-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Arial8BU-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-destinif  PIC  X(2).
           88 Valid-STATUS-destinif VALUE IS "00" THRU "09". 
       77 path-tmp-giang   PIC  X(256).
       77 STATUS-tmp-giang PIC  X(2).
           88 Valid-STATUS-tmp-giang VALUE IS "00" THRU "09". 
       77 lab-esito-buf    PIC  X(30).
       77 path-tmp-mrordini            PIC  X(256).
       77 STATUS-tmp-mrordini          PIC  X(2).
           88 Valid-STATUS-tmp-mrordini VALUE IS "00" THRU "09". 
       01 gd1-rec.
           05 col1-anno        PIC  9(4).
           05 col1-numero      PIC  z(8).
           05 col1-gdo         PIC  x(40).
           05 col1-cliente     PIC  x(40).
           05 col1-destino     PIC  x(40).
           05 col1-data-ord    PIC  99/99/9999.
           05 col1-data-cons   PIC  99/99/9999.
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 path-tmp-mtordini            PIC  X(256).
       77 STATUS-tmp-mtordini          PIC  X(2).
           88 Valid-STATUS-tmp-mtordini VALUE IS "00" THRU "09". 
       77 lab-gdo-buf      PIC  x(40).
       77 lab-cliente-buf  PIC  x(40).
       77 APPLICA-BMP      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 eg-gdo-buf       PIC  X(5).
       77 ef-data-buf      PIC  99/99/9999.
       77 ef-gdo-buf       PIC  X(5).
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       01 save-dati.
           10 save-master-ordf.
               15 save-anno        PIC  9(4).
               15 save-numero      PIC  9(8).
               15 save-riga        PIC  9(5).
      *(( XFD NAME = tgia-qta_1_1 ))
           10 save-dt-arrivo   PIC  9(8).
      *(( XFD NAME = tgia-qta_1_1_1 ))
           10 save-note        PIC  x(500).
      *(( XFD NAME = tgia-qta_1_1_1_2 ))
           10 save-ragsoc      PIC  x(50).
      *(( XFD NAME = tgia-qta_1_1_1_2_1 ))
           10 save-destino     PIC  x(50).
      *(( XFD NAME = tgia-qta_1_1_1_2_1 ))
           10 save-qta-p       PIC  9(8).
       01 gd2-rec.
           05 col2-nulla       PIC  x.
           05 col2-articolo    PIC  x(100).
           05 col2-inevaso     PIC  x(13).
           05 col2-ord-gdo     PIC  x(30).
           05 col2-qta         PIC  x(10).
           05 col2-qtap-dt-ord PIC  x(10).
           05 col2-dt-arr-cons PIC  x(10).
           05 col2-note-promo  PIC  x(100).
           05 col2-for-cli     PIC  x(50).
           05 col2-destino-CF  PIC  x(50).
           05 col2-chiave-ordf PIC  x(19).
       77 scr-azione-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       01 como-chiave-f.
           05 como-num-f       PIC  9(10).
           05 FILLER           PIC  x.
           05 como-anno-f      PIC  9(4).
       01 como-chiave-m.
           05 como-num-m       PIC  9(8).
           05 FILLER           PIC  x.
           05 como-anno-m      PIC  9(4).
       77 scr-azione-MN-1-HANDLE
                  USAGE IS HANDLE OF MENU.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 lab-art-buf      PIC  X(100)
                  VALUE IS "Label".
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 azione           PIC  9
                  VALUE IS 0.
       77 old-azione       PIC  9
                  VALUE IS 0.
       77 v-sost           PIC  9
                  VALUE IS 0.
       77 lab-art-sost-buf PIC  x(100).
       77 ef-art-sost-buf  PIC  9(6).
       77 e-cerca2         PIC  9
                  VALUE IS 0.
       77 ext-file EXTERNAL   PIC  x(256).
       77 e-blister EXTERNAL   PIC  9.
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-rordini   PIC  X(2).
           88 Valid-STATUS-rordini VALUE IS "00" THRU "09". 
       77 STATUS-tagli     PIC  X(2).
           88 Valid-STATUS-tagli VALUE IS "00" THRU "09". 
       77 STATUS-tordini   PIC  X(2).
           88 Valid-STATUS-tordini VALUE IS "00" THRU "09". 
       77 STATUS-lockfile  PIC  X(2).
           88 Valid-STATUS-lockfile VALUE IS "00" THRU "09". 
       77 path-tmp-blis-eva            PIC  X(256).
       77 STATUS-tmp-blis-eva          PIC  X(2).
           88 Valid-STATUS-tmp-blis-eva VALUE IS "00" THRU "09". 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       77 path-zoom-art-giac           PIC  X(256).
       77 STATUS-zoom-art-giac         PIC  X(2).
           88 Valid-STATUS-zoom-art-giac VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-ttipocli  PIC  X(2).
           88 Valid-STATUS-ttipocli VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 STATUS-tscorte   PIC  X(2).
           88 Valid-STATUS-tscorte VALUE IS "00" THRU "09". 
       77 STATUS-evaclides PIC  X(2).
           88 Valid-STATUS-evaclides VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-promoeva  PIC  X(2).
           88 Valid-STATUS-promoeva VALUE IS "00" THRU "09". 
       77 path-tmp-k-mrordini          PIC  X(256).
       77 STATUS-tmp-k-mrordini        PIC  X(2).
           88 Valid-STATUS-tmp-k-mrordini VALUE IS "00" THRU "09". 
       77 path-tmp-k-mtordini          PIC  X(256).
       77 STATUS-tmp-k-mtordini        PIC  X(2).
           88 Valid-STATUS-tmp-k-mtordini VALUE IS "00" THRU "09". 
       77 path-tmp-qta-eva PIC  X(256).
       77 STATUS-tmp-qta-eva           PIC  X(2).
           88 Valid-STATUS-tmp-qta-eva VALUE IS "00" THRU "09". 
       77 path-tmp-qta-pren            PIC  X(256).
       77 STATUS-tmp-qta-pren          PIC  X(2).
           88 Valid-STATUS-tmp-qta-pren VALUE IS "00" THRU "09". 
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 STATUS-blister   PIC  X(2).
           88 Valid-STATUS-blister VALUE IS "00" THRU "09". 
       77 STATUS-multigest PIC  X(2).
           88 Valid-STATUS-multigest VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-scr-elab-FLAG-REFRESH PIC  9.
          88 scr-elab-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-ordini-FLAG-REFRESH PIC  9.
          88 scr-ordini-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-scr-ordini-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-scr-ordini-mtordini-RESTOREBUF  PIC X(2122).
       77 TMP-scr-ordini-KEYIS  PIC 9(3) VALUE 1.
       77 scr-ordini-MULKEY-TMPBUF   PIC X(2122).
       77 STATUS-scr-azione-FLAG-REFRESH PIC  9.
          88 scr-azione-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-mtordini-BUF     PIC X(2122).
       77 TMP-DataSet1-mrordini-BUF     PIC X(891).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-destini-BUF     PIC X(3386).
       77 TMP-DataSet1-tpromo-BUF     PIC X(263).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-tgrupgdo-BUF     PIC X(1206).
       77 TMP-DataSet1-destinif-BUF     PIC X(1322).
       77 TMP-DataSet1-tmp-giang-BUF     PIC X(836).
       77 TMP-DataSet1-tmp-mrordini-BUF     PIC X(375).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-tmp-mtordini-BUF     PIC X(157).
       77 TMP-DataSet1-sordforn-BUF     PIC X(1139).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-rordini-BUF     PIC X(667).
       77 TMP-DataSet1-tagli-BUF     PIC X(198).
       77 TMP-DataSet1-tordini-BUF     PIC X(3898).
       77 TMP-DataSet1-lockfile-BUF     PIC X(183).
       77 TMP-DataSet1-tmp-blis-eva-BUF     PIC X(11).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-zoom-art-giac-BUF     PIC X(80).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-ttipocli-BUF     PIC X(889).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(739).
       77 TMP-DataSet1-tscorte-BUF     PIC X(205).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-promoeva-BUF     PIC X(817).
       77 TMP-DataSet1-tmp-k-mrordini-BUF     PIC X(116).
       77 TMP-DataSet1-tmp-k-mtordini-BUF     PIC X(31).
       77 TMP-DataSet1-tmp-qta-eva-BUF     PIC X(30).
       77 TMP-DataSet1-tmp-qta-pren-BUF     PIC X(37).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-multigest-BUF     PIC X(3).
       77 TMP-DataSet1-blister-BUF     PIC X(2967).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-mtordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mtordini-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-mtordini-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-mtordini-KEY1-Asc  VALUE "A".
          88 DataSet1-mtordini-KEY1-Desc VALUE "D".
       77 DataSet1-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mrordini-LOCK  VALUE "Y".
       77 DataSet1-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-destini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destini-LOCK  VALUE "Y".
       77 DataSet1-destini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destini-KEY-Asc  VALUE "A".
          88 DataSet1-destini-KEY-Desc VALUE "D".
       77 DataSet1-tpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpromo-LOCK  VALUE "Y".
       77 DataSet1-tpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpromo-KEY-Asc  VALUE "A".
          88 DataSet1-tpromo-KEY-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-tordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY-Desc VALUE "D".
       77 DataSet1-tgrupgdo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tgrupgdo-LOCK  VALUE "Y".
       77 DataSet1-tgrupgdo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Asc  VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Desc VALUE "D".
       77 DataSet1-destinif-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destinif-LOCK  VALUE "Y".
       77 DataSet1-destinif-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destinif-KEY-Asc  VALUE "A".
          88 DataSet1-destinif-KEY-Desc VALUE "D".
       77 DataSet1-tmp-giang-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-giang-LOCK  VALUE "Y".
       77 DataSet1-tmp-giang-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-giang-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-giang-KEY-Desc VALUE "D".
       77 DataSet1-tmp-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-mrordini-LOCK  VALUE "Y".
       77 DataSet1-tmp-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-tmp-mtordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-mtordini-LOCK  VALUE "Y".
       77 DataSet1-tmp-mtordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-mtordini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-mtordini-KEY-Desc VALUE "D".
       77 DataSet1-sordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-sordforn-LOCK  VALUE "Y".
       77 DataSet1-sordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-sordforn-KEY-Asc  VALUE "A".
          88 DataSet1-sordforn-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-rordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordini-LOCK  VALUE "Y".
       77 DataSet1-rordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordini-KEY-Asc  VALUE "A".
          88 DataSet1-rordini-KEY-Desc VALUE "D".
       77 DataSet1-tagli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tagli-LOCK  VALUE "Y".
       77 DataSet1-tagli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tagli-KEY-Asc  VALUE "A".
          88 DataSet1-tagli-KEY-Desc VALUE "D".
       77 DataSet1-tordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordini-LOCK  VALUE "Y".
       77 DataSet1-tordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordini-KEY-Asc  VALUE "A".
          88 DataSet1-tordini-KEY-Desc VALUE "D".
       77 DataSet1-lockfile-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lockfile-LOCK  VALUE "Y".
       77 DataSet1-lockfile-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lockfile-KEY-Asc  VALUE "A".
          88 DataSet1-lockfile-KEY-Desc VALUE "D".
       77 DataSet1-tmp-blis-eva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-blis-eva-LOCK  VALUE "Y".
       77 DataSet1-tmp-blis-eva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-blis-eva-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-blis-eva-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-zoom-art-giac-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-zoom-art-giac-LOCK  VALUE "Y".
       77 DataSet1-zoom-art-giac-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-zoom-art-giac-KEY-Asc  VALUE "A".
          88 DataSet1-zoom-art-giac-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-ttipocli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ttipocli-LOCK  VALUE "Y".
       77 DataSet1-ttipocli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ttipocli-KEY-Asc  VALUE "A".
          88 DataSet1-ttipocli-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-tscorte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tscorte-LOCK  VALUE "Y".
       77 DataSet1-tscorte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tscorte-KEY-Asc  VALUE "A".
          88 DataSet1-tscorte-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-promoeva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-promoeva-LOCK  VALUE "Y".
       77 DataSet1-promoeva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-promoeva-KEY-Asc  VALUE "A".
          88 DataSet1-promoeva-KEY-Desc VALUE "D".
       77 DataSet1-tmp-k-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-k-mrordini-LOCK  VALUE "Y".
       77 DataSet1-tmp-k-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-k-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-k-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-tmp-k-mtordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-k-mtordini-LOCK  VALUE "Y".
       77 DataSet1-tmp-k-mtordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-k-mtordini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-k-mtordini-KEY-Desc VALUE "D".
       77 DataSet1-tmp-qta-eva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-qta-eva-LOCK  VALUE "Y".
       77 DataSet1-tmp-qta-eva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-qta-eva-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-qta-eva-KEY-Desc VALUE "D".
       77 DataSet1-tmp-qta-pren-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-qta-pren-LOCK  VALUE "Y".
       77 DataSet1-tmp-qta-pren-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-qta-pren-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-qta-pren-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-multigest-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-multigest-LOCK  VALUE "Y".
       77 DataSet1-multigest-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-multigest-KEY-Asc  VALUE "A".
          88 DataSet1-multigest-KEY-Desc VALUE "D".
       77 DataSet1-blister-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-blister-LOCK  VALUE "Y".
       77 DataSet1-blister-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-blister-KEY-Asc  VALUE "A".
          88 DataSet1-blister-KEY-Desc VALUE "D".

       77 mtordini-mto-k-ord-cli-SPLITBUF  PIC X(55).
       77 mtordini-mto-k-data-SPLITBUF  PIC X(21).
       77 mtordini-mto-k-clides-SPLITBUF  PIC X(19).
       77 mtordini-mto-k-age-SPLITBUF  PIC X(14).
       77 mtordini-k-mto-stato-sel-SPLITBUF  PIC X(15).
       77 mtordini-k-mto-stato-SPLITBUF  PIC X(14).
       77 mtordini-mto-k-gdo-SPLITBUF  PIC X(26).
       77 mtordini-mto-k-bloc-SPLITBUF  PIC X(20).
       77 mtordini-k-giang-SPLITBUF  PIC X(21).
       77 mtordini-mto-k-promo-SPLITBUF  PIC X(25).
       77 mrordini-mro-k-promo-SPLITBUF  PIC X(33).
       77 mrordini-mro-k-articolo-SPLITBUF  PIC X(24).
       77 mrordini-mro-k-progr-SPLITBUF  PIC X(18).
       77 mrordini-mro-k-tprev-SPLITBUF  PIC X(39).
       77 mrordini-mro-k-ord-art-SPLITBUF  PIC X(19).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 destini-K1-SPLITBUF  PIC X(51).
       77 destini-k-localita-SPLITBUF  PIC X(36).
       77 tpromo-tpr-chiave-ricerca-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-gdo-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-ini-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-volantino-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-fine-vol-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-data-ins-SPLITBUF  PIC X(29).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 tgrupgdo-gdo-k-g2-SPLITBUF  PIC X(9).
       77 destinif-K1-SPLITBUF  PIC X(51).
       77 destinif-desf-k2-SPLITBUF  PIC X(51).
       77 tmp-giang-tgia-k-articolo-SPLITBUF  PIC X(8).
       77 tmp-giang-tgia-k-numero-SPLITBUF  PIC X(20).
       77 tmp-giang-tgia-k-forn-SPLITBUF  PIC X(58).
       77 tmp-mrordini-k-prg-SPLITBUF  PIC X(36).
       77 tmp-mrordini-k-promo-SPLITBUF  PIC X(19).
       77 tmp-mrordini-k-blister-SPLITBUF  PIC X(8).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 tmp-mtordini-k-ord-SPLITBUF  PIC X(21).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 rordini-ror-k-promo-SPLITBUF  PIC X(16).
       77 rordini-ror-k-articolo-SPLITBUF  PIC X(24).
       77 rordini-ror-k-master-SPLITBUF  PIC X(35).
       77 rordini-ror-k-stbolle-SPLITBUF  PIC X(30).
       77 rordini-ror-k-ord-art-SPLITBUF  PIC X(19).
       77 tagli-k2-SPLITBUF  PIC X(9).
       77 tordini-k-causale-SPLITBUF  PIC X(17).
       77 tordini-k1-SPLITBUF  PIC X(23).
       77 tordini-k2-SPLITBUF  PIC X(21).
       77 tordini-k-bolla-SPLITBUF  PIC X(13).
       77 tordini-k3-SPLITBUF  PIC X(22).
       77 tordini-k-fattura-SPLITBUF  PIC X(13).
       77 tordini-k4-SPLITBUF  PIC X(30).
       77 tordini-k-contab-SPLITBUF  PIC X(14).
       77 tordini-k-tipo-SPLITBUF  PIC X(14).
       77 tordini-k-data-SPLITBUF  PIC X(17).
       77 tordini-k-agfatt-SPLITBUF  PIC X(42).
       77 tordini-k-stbolle-SPLITBUF  PIC X(34).
       77 tordini-k-andamento-data-SPLITBUF  PIC X(10).
       77 tordini-k-andamento-cliente-SPLITBUF  PIC X(15).
       77 tordini-k-andamento-clides-SPLITBUF  PIC X(20).
       77 tordini-k-promo-SPLITBUF  PIC X(29).
       77 tordini-k-or-SPLITBUF  PIC X(21).
       77 tordini-k-tor-inviare-SPLITBUF  PIC X(14).
       77 tordini-k-tor-tipocli-SPLITBUF  PIC X(25).
       77 tordini-k-tor-gdo-SPLITBUF  PIC X(28).
       77 promoeva-pev-k-art-SPLITBUF  PIC X(22).
       77 promoeva-pev-k-descr-art-SPLITBUF  PIC X(65).
       77 promoeva-pev-k-gdo-SPLITBUF  PIC X(70).
       77 promoeva-pev-k-fittizia-SPLITBUF  PIC X(16).
       77 promoeva-pev-k-promo-SPLITBUF  PIC X(30).
       77 promoeva-pev-k-descr-promo-SPLITBUF  PIC X(65).
       77 tmp-k-mrordini-k-mro-promo-SPLITBUF  PIC X(39).
       77 tmp-k-mrordini-k-mro-blister-SPLITBUF  PIC X(24).
       77 tmp-k-mtordini-tmp-k-promo-SPLITBUF  PIC X(14).
       77 tmp-k-mtordini-tmp-k-valutare-SPLITBUF  PIC X(14).
       77 tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF  PIC X(15).
       77 blister-k-magaz-SPLITBUF  PIC X(10).
       77 blister-k-des-SPLITBUF  PIC X(51).

       01  old-tgia-rec.
           05 old-tgia-chiave.
               10 old-tgia-cod-articolo            PIC  9(6).
               10 old-tgia-tipo-rec    PIC  x.
                   88 old-tgia-articolo VALUE IS "A". 
                   88 old-tgia-ordfor VALUE IS "F". 
                   88 old-tgia-master VALUE IS "M". 
               10 old-tgia-master-ordf.
                   15 old-tgia-testa-ordf.
                       20 old-tgia-anno        PIC  9(4).
                       20 old-tgia-numero      PIC  9(8).
                   15 old-tgia-riga        PIC  9(5).
           05 old-tgia-dati.
               10 old-tgia-tot-ordfor  PIC  9(3).
               10 old-tgia-inevaso     PIC  9(8).
               10 old-tgia-ordinato    PIC  9(8).
               10 old-tgia-azione      PIC  x.
                   88 old-tgia-attesa VALUE IS " ". 
                   88 old-tgia-tagliare-merce VALUE IS "M". 
                   88 old-tgia-tenere-saldo VALUE IS "T". 
                   88 old-tgia-sostituzione VALUE IS "S". 
               10 old-tgia-qta         PIC  9(8).
               10 old-tgia-qta-p       PIC  9(8).
               10 old-tgia-dt-arrivo   PIC  9(8).
               10 old-tgia-note        PIC  x(500).
               10 old-tgia-cod-CF      PIC  9(5).
               10 old-tgia-ragsoc      PIC  x(50).
               10 old-tgia-des-CF      PIC  9(5).
               10 old-tgia-destino     PIC  x(50).
               10 old-tgia-GDO         PIC  X(20).
               10 old-tgia-dt-ord      PIC  9(8).
               10 old-tgia-dt-cons     PIC  9(8).
               10 old-tgia-promo       PIC  9(15).
               10 old-tgia-des-promo   PIC  x(50).
               10 old-tgia-tiene-saldi PIC  x(20).
               10 old-tgia-ordf.
                   15 old-tgia-anno-ordf   PIC  9(4).
                   15 old-tgia-numero-ordf PIC  9(8).
                   15 old-tgia-riga-ordf   PIC  9(5).
               10 old-tgia-ordm.
                   15 old-tgia-anno-m      PIC  9(4).
                   15 old-tgia-numero-m    PIC  9(8).
                   15 old-tgia-riga-m      PIC  9(8).
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-gd-art2 VALUE 5001.
       78  78-ID-ef-gdo VALUE 5002.
       78  78-ID-ef-cli VALUE 5003.
       78  78-ID-ef-data VALUE 5004.
       78  78-ID-gd-1 VALUE 5005.
       78  78-ID-gd-2 VALUE 5006.
       78  78-ID-rb-attesa VALUE 5001.
       78  78-ID-rb-sost VALUE 5002.
       78  78-ID-ef-art-sost VALUE 5003.
       78  78-ID-rb-saldo VALUE 5004.
       78  78-ID-rb-tagliare VALUE 5005.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           scr-elab, 
           .

      * LABEL
       05
           Screen1-blockpgm-1a, 
           Label, 
           COL 1,00, 
           LINE 1,00,
           LINES 0,56 ,
           SIZE 1,82 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-La-1b, 
           Label, 
           COL 3,45, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 25,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Caricamento Articoli in corso...",
           .

      * FORM
       01 
           scr-ordini, 
           AFTER PROCEDURE  scr-ordini-AFTER-SCREEN
           BEFORE PROCEDURE  scr-ordini-BEFORE-SCREEN
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 18,33, 
           LINE 1,43,
           LINES 9,36 ,
           SIZE 177,50 ,
           COLOR IS 2,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           HEAVY,
           TITLE "Filtri di visualizzazione",
           TITLE-POSITION 2,
           .

      * GRID
       05
           gd-art2, 
           Grid, 
           COL 21,00, 
           LINE 2,64,
           LINES 7,43 ,
           SIZE 53,17 ,
           BOXED,
           DATA-COLUMNS (1, 7),
           ALIGNMENT ("R", "U"),
           SEPARATION (5, 5),
           DATA-TYPES ("9(6)", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 481
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           FONT IS Arial8B-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-art2,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 100,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 50,
           VPADDING 15,
           VSCROLL,
           AFTER PROCEDURE gd-art2-AfterProcedure, 
           BEFORE PROCEDURE gd-art2-BeforeProcedure, 
           EVENT PROCEDURE gd-art2-Event-Proc,
           .

      * COMBO-BOX
       05
           cbo-promo, 
           Combo-Box, 
           COL 82,33, 
           LINE 5,43,
           LINES 5,36 ,
           SIZE 49,33 ,
           3-D,
           COLOR IS 513,
           FONT IS Small-Font,
           ID IS 501,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MASS-UPDATE 0,
           DROP-LIST,
           UNSORTED,
           AFTER PROCEDURE Screen2-Cm-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Cm-1-BeforeProcedure, 
           .
      * ENTRY FIELD
       05
           ef-gdo, 
           Entry-Field, 
           COL 152,66, 
           LINE 3,43,
           LINES 1,29 ,
           SIZE 8,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-gdo,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 5,
           VALUE ef-gdo-buf,
           AFTER PROCEDURE ef-gdo-AfterProcedure, 
           BEFORE PROCEDURE ef-gdo-BeforeProcedure, 
           .


      * ENTRY FIELD
       05
           ef-cli, 
           Entry-Field, 
           COL 152,66, 
           LINE 5,64,
           LINES 1,29 ,
           SIZE 8,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-cli,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-cli-buf,
           AFTER PROCEDURE ef-cli-AfterProcedure, 
           BEFORE PROCEDURE ef-cli-BeforeProcedure, 
           .


      * ENTRY FIELD
       05
           ef-data, 
           Entry-Field, 
           COL 150,16, 
           LINE 8,00,
           LINES 1,29 ,
           SIZE 10,50 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-data,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           VALUE ef-data-buf,
           AFTER PROCEDURE Screen2-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Ef-1-BeforeProcedure, 
           .


      * PUSH BUTTON
       05
           pb-applica, 
           Push-Button, 
           COL 100,33, 
           LINE 7,72,
           LINES 33,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE APPLICA-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           AFTER PROCEDURE pb-applica-AfterProcedure, 
           BEFORE PROCEDURE pb-applica-BeforeProcedure, 
           .

      * BITMAP
       05
           Bitmap-freccia-daaaaa, 
           Bitmap, 
           COL 95,83, 
           LINE 3,29,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR TR-COLOR,
           BITMAP-HANDLE BLUE-DA-28X24-BMP,
           BITMAP-NUMBER 1,
           FONT IS Verdana10-Occidentale,
           ID IS 245,
           VISIBLE 0,
           .

      * LABEL
       05
           Screen3-La-1acaaa, 
           Label, 
           COL 102,16, 
           LINE 2,86,
           LINES 2,21 ,
           SIZE 9,67 ,
           COLOR IS 5,
           FONT IS Arial8B-Occidentale,
           ID IS 246,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Data di consegna",
           VISIBLE 0,
           .

      * BITMAP
       05
           Bitmap-freccia-finoaaaa, 
           Bitmap, 
           COL 113,00, 
           LINE 3,29,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR TR-COLOR,
           BITMAP-HANDLE BLUE-FINO-28X24-BMP,
           BITMAP-NUMBER 1,
           FONT IS Verdana10-Occidentale,
           ID IS 247,
           VISIBLE 0,
           .

      * LABEL
       05
           lab-data-to, 
           Label, 
           COL 119,50, 
           LINE 3,43,
           LINES 1,57 ,
           SIZE 10,00 ,
           COLOR IS 5,
           FONT IS Arial8B-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE ef-data-to-buf,
           VISIBLE 0,
           .

      * LABEL
       05
           lab-data-from, 
           Label, 
           COL 84,50, 
           LINE 3,43,
           LINES 1,57 ,
           SIZE 10,00 ,
           COLOR IS 5,
           FONT IS Arial8B-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE ef-data-from-buf,
           VISIBLE 0,
           .

      * LABEL
       05
           Screen2-La-1, 
           Label, 
           COL 134,00, 
           LINE 3,43,
           LINES 1,29 ,
           SIZE 14,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Gruppo GDO",
           .

      * LABEL
       05
           Screen2-La-1a, 
           Label, 
           COL 134,00, 
           LINE 5,64,
           LINES 1,29 ,
           SIZE 14,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Cliente",
           .

      * LABEL
       05
           Screen2-La-1aa, 
           Label, 
           COL 134,00, 
           LINE 7,22,
           LINES 2,93 ,
           SIZE 14,00 ,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Data di consegna sucessivi  al (data compresa)",
           .

      * LABEL
       05
           lab-gdo, 
           Label, 
           COL 162,00, 
           LINE 3,43,
           LINES 2,00 ,
           SIZE 31,00 ,
           COLOR IS 5,
           FONT IS Arial8B-Occidentale,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-gdo-buf,
           .

      * LABEL
       05
           lab-cli, 
           Label, 
           COL 162,00, 
           LINE 5,43,
           LINES 2,00 ,
           SIZE 31,00 ,
           COLOR IS 5,
           FONT IS Arial8B-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-cli-buf,
           .

      * GRID
       05
           gd-1, 
           Grid, 
           COL 18,33, 
           LINE 11,93,
           LINES 12,29 ,
           SIZE 177,17 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 5, 13, 53, 93, 133, 143),
           ALIGNMENT ("C", "R", "U", "U", "U", "C", "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(4)", "9(8)", "X(40)", "X(40)", "X(40)", "X(10)
      -    "", "X(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 174,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * GRID
       05
           gd-2, 
           Grid, 
           COL 3,33, 
           LINE 25,14,
           LINES 26,79 ,
           SIZE 207,17 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 2, 102, 115, 145, 153, 163, 173, 273, 323, 
           373),
           ALIGNMENT ("U", "U", "C", "C", "C", "C", "C", "U", "U", "U", 
           "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("X(1)", "X(100)", "X(13)", "X(30)", "zz.zz.zz9", 
           "X(10)", "X(10)", "X(100)", "X(50)", "X(50)", "X(15)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 78-ID-gd-2,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 204,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE gd-Event-Proc,
           .

      * LABEL
       05
           Screen2-blockpgm-1, 
           Label, 
           COL 1,33, 
           LINE 3,57,
           LINES 0,50 ,
           SIZE 7,38 ,
           ID IS 41,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen2-Custom1-1, 
           Label, 
           COL 2,67, 
           LINE 6,71,
           LINES 1,86 ,
           SIZE 4,67 ,
           FONT IS Default-Font,
           ID IS 42,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCIa, 
           Push-Button, 
           COL 1,00, 
           LINE 1,43,
           LINES 25,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 1016,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "Esci (Esc)",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,43,
           LINES 25,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 8,
           FRAMED,
           SQUARE,
           ENABLED e-cerca,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 1017,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * PUSH BUTTON
       05
           TOOL-STAMPA, 
           Push-Button, 
           COL 11,00, 
           LINE 1,43,
           LINES 25,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 7,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 7,
           FLAT,
           ID IS 1018,
           SELF-ACT,
           TITLE "Stampa (F7)",
           .

      * FORM
       01 
           scr-azione, 
           HELP-ID 1,
           AFTER PROCEDURE  scr-azione-AFTER-SCREEN
           BEFORE PROCEDURE  scr-azione-BEFORE-SCREEN
           .

      * FRAME
       05
           scr-azione-Fr-1, 
           Frame, 
           COL 2,10, 
           LINE 1,94,
           LINES 16,00 ,
           SIZE 58,30 ,
           FONT IS Verdana12B-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Gestione problema articolo",
           TITLE-POSITION 2,
           .

      * RADIO BUTTON
       05
           rb-attesa, 
           Radio-Button, 
           COL 4,60, 
           LINE 6,72,
           LINES 1,30 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1001
           FLAT,
           GROUP 1,
           GROUP-VALUE 1,
           ID IS 78-ID-rb-attesa,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&R",
           VALUE azione,
           AFTER PROCEDURE scr-azione-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE scr-azione-Rb-1-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           rb-sost, 
           Radio-Button, 
           COL 4,60, 
           LINE 9,72,
           LINES 1,30 ,
           SIZE 2,00 ,
           ENABLED e-blister,
           EXCEPTION-VALUE 1000
           FLAT,
           GROUP 1,
           GROUP-VALUE 2,
           ID IS 78-ID-rb-sost,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&S",
           VALUE azione,
           AFTER PROCEDURE scr-azione-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE scr-azione-Rb-1-BeforeProcedure, 
           .
      * ENTRY FIELD
       05
           ef-art-sost, 
           Entry-Field, 
           COL 25,20, 
           LINE 9,72,
           LINES 1,30 ,
           SIZE 7,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-art-sost,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-art-sost-buf,
           VISIBLE v-sost,
           AFTER PROCEDURE scr-azione-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE scr-azione-Ef-1-BeforeProcedure, 
           .

      * RADIO BUTTON
       05
           rb-saldo, 
           Radio-Button, 
           COL 4,60, 
           LINE 12,72,
           LINES 1,30 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1002
           FLAT,
           GROUP 1,
           GROUP-VALUE 3,
           ID IS 78-ID-rb-saldo,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&E",
           VALUE azione,
           AFTER PROCEDURE scr-azione-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE scr-azione-Rb-1-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           rb-tagliare, 
           Radio-Button, 
           COL 4,60, 
           LINE 15,72,
           LINES 1,30 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1003
           FLAT,
           GROUP 1,
           GROUP-VALUE 4,
           ID IS 78-ID-rb-tagliare,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&T",
           VALUE azione,
           AFTER PROCEDURE scr-azione-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE scr-azione-Rb-1-BeforeProcedure, 
           .
      * LABEL
       05
           lab-art, 
           Label, 
           COL 3,70, 
           LINE 3,66,
           LINES 2,10 ,
           SIZE 55,00 ,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-art-buf,
           .

      * LABEL
       05
           scr-azione-La-1a, 
           Label, 
           COL 7,60, 
           LINE 9,72,
           LINES 1,30 ,
           SIZE 14,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "&SOSTITUZIONE",
           .

      * LABEL
       05
           scr-azione-La-1aa, 
           Label, 
           COL 7,60, 
           LINE 12,72,
           LINES 1,30 ,
           SIZE 14,00 ,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "T&ENERE SALDO",
           .

      * LABEL
       05
           scr-azione-La-1ab, 
           Label, 
           COL 7,60, 
           LINE 15,72,
           LINES 1,30 ,
           SIZE 15,00 ,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "&TAGLIARE MERCE",
           .

      * LABEL
       05
           scr-azione-La-1ac, 
           Label, 
           COL 7,60, 
           LINE 6,72,
           LINES 1,30 ,
           SIZE 15,00 ,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "&RESTA IN ATTESA",
           .

      * LABEL
       05
           lab-art-sost, 
           Label, 
           COL 33,20, 
           LINE 9,72,
           LINES 3,00 ,
           SIZE 26,40 ,
           COLOR IS 2,
           ID IS 200,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-art-sost-buf,
           VISIBLE v-sost,
           .

      * LABEL
       05
           scr-azione-Custom1-1, 
           Label, 
           COL 3,40, 
           LINE 7,11,
           LINES 1,00 ,
           SIZE 1,00 ,
           FONT IS Default-Font,
           ID IS 201,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * TOOLBAR
       01
           Form1-Tb-1aa,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCIaa, 
           Push-Button, 
           COL 1,00, 
           LINE 1,06,
           LINES 25,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 1016,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "Esci (Esc)",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA2, 
           Push-Button, 
           COL 10,20, 
           LINE 1,06,
           LINES 25,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 8,
           FRAMED,
           SQUARE,
           ENABLED e-cerca2,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 1017,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * PUSH BUTTON
       05
           TOOL-SALVA2, 
           Push-Button, 
           COL 5,80, 
           LINE 1,06,
           LINES 25,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 3,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 3,
           FLAT,
           ID IS 1018,
           SELF-ACT,
           TITLE "Salva (F3)",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:giang, INIT:giang, BeforeDeclarative>
      ***---
       CLIENTI-ERR SECTION.
           use after error procedure on clienti.
           set tutto-ok  to true.
           evaluate status-clienti
           when "35"
                display message "File [CLIENTI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [CLIENTI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[CLIENTI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.   
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       MTORDINI-ERR SECTION.
           use after error procedure on mtordini.
           set tutto-ok  to true.
           evaluate status-mtordini
           when "35"
                display message "File [MTORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MTORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MTORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.   
 
      ***---
       MRORDINI-ERR SECTION.
           use after error procedure on mrordini.
           set tutto-ok  to true.
           evaluate status-mrordini
           when "35"
                display message "File [MRORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MRORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MRORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       LOCKFILE-ERR SECTION.
           use after error procedure on lockfile.
           evaluate status-lockfile
           when "35"
                display message "File [LOCKFILE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [LOCKFILE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[LOCKFILE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.           
 
      ***---
       TORDFORN-ERR SECTION.
           use after error procedure on tordforn.
           set tutto-ok  to true.
           evaluate status-tordforn
           when "35"
                display message "File [TORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       SORDFORN-ERR SECTION.
           use after error procedure on sordforn.
           set tutto-ok  to true.
           evaluate status-sordforn
           when "35"
                display message "File [SORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [SORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[SORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       MULTIGEST-ERR SECTION.
           use after error procedure on multigest.
           set tutto-ok  to true.
           evaluate status-multigest
           when "35"
                display message "File [MULTIGEST] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MULTIGEST] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MULTIGEST] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM scr-ordini-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:giang, INIT:giang, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12BI-Occidentale
           DESTROY Arial8B-Occidentale
           DESTROY Verdana10-Occidentale
           DESTROY Arial8-Occidentale
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, APPLICA-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BLUE-DA-28X24-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BLUE-FINO-28X24-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
      *    After-Program
           PERFORM giang-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA

      * Arial8B-Occidentale
           INITIALIZE WFONT-DATA Arial8B-Occidentale
           MOVE 8 TO WFONT-SIZE
           MOVE "Arial" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Arial8B-Occidentale, WFONT-DATA
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
      * Arial8-Occidentale
           INITIALIZE WFONT-DATA Arial8-Occidentale
           MOVE 8 TO WFONT-SIZE
           MOVE "Arial" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Arial8-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-applica
           COPY RESOURCE "APPLICA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "APPLICA.BMP", 
                   GIVING APPLICA-BMP.
      * Bitmap-freccia-daaaaa
           COPY RESOURCE "BLUE-DA-28X24.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BLUE-DA-28X24.BMP", 
                   GIVING BLUE-DA-28X24-BMP.
      * Bitmap-freccia-finoaaaa
           COPY RESOURCE "BLUE-FINO-28X24.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BLUE-FINO-28X24.BMP", 
                   GIVING BLUE-FINO-28X24-BMP.
      * TOOL-ESCIa
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-mtordini
           PERFORM OPEN-mrordini
           PERFORM OPEN-articoli
           PERFORM OPEN-clienti
           PERFORM OPEN-destini
           PERFORM OPEN-tpromo
           PERFORM OPEN-rordforn
           PERFORM OPEN-tordforn
           PERFORM OPEN-tgrupgdo
           PERFORM OPEN-destinif
      *    tmp-giang OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-giang
      *    tmp-mrordini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-mrordini
           PERFORM OPEN-progmag
      *    tmp-mtordini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-mtordini
           PERFORM OPEN-sordforn
           PERFORM OPEN-timballi
           PERFORM OPEN-timbalqta
           PERFORM OPEN-tcaumag
           PERFORM OPEN-rordini
           PERFORM OPEN-tagli
           PERFORM OPEN-tordini
           PERFORM OPEN-lockfile
      *    tmp-blis-eva OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-blis-eva
           PERFORM OPEN-tparamge
      *    zoom-art-giac OPEN MODE IS FALSE
      *    PERFORM OPEN-zoom-art-giac
           PERFORM OPEN-tmarche
           PERFORM OPEN-ttipocli
           PERFORM OPEN-tpiombo
           PERFORM OPEN-tscorte
           PERFORM OPEN-param
           PERFORM OPEN-promoeva
      *    tmp-k-mrordini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-k-mrordini
      *    tmp-k-mtordini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-k-mtordini
      *    tmp-qta-eva OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-qta-eva
      *    tmp-qta-pren OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-qta-pren
           PERFORM OPEN-tmagaz
      *    multigest OPEN MODE IS FALSE
      *    PERFORM OPEN-multigest
           PERFORM OPEN-blister
      *    After Open
           .

       OPEN-mtordini.
      * <TOTEM:EPT. INIT:giang, FD:mtordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O mtordini
           IF STATUS-mtordini = "35"
              OPEN OUTPUT mtordini
                IF Valid-STATUS-mtordini
                   CLOSE mtordini
                   OPEN I-O mtordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-mtordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:mtordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-mrordini.
      * <TOTEM:EPT. INIT:giang, FD:mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O mrordini
           IF STATUS-mrordini = "35"
              OPEN OUTPUT mrordini
                IF Valid-STATUS-mrordini
                   CLOSE mrordini
                   OPEN I-O mrordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-mrordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:giang, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:giang, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destini.
      * <TOTEM:EPT. INIT:giang, FD:destini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destini
           IF NOT Valid-STATUS-destini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:destini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpromo.
      * <TOTEM:EPT. INIT:giang, FD:tpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpromo
           IF NOT Valid-STATUS-tpromo
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:giang, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rordforn
           IF NOT Valid-STATUS-rordforn
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:giang, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordforn
           IF STATUS-tordforn = "35"
              OPEN OUTPUT tordforn
                IF Valid-STATUS-tordforn
                   CLOSE tordforn
                   OPEN I-O tordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordforn
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tgrupgdo.
      * <TOTEM:EPT. INIT:giang, FD:tgrupgdo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tgrupgdo
           IF NOT Valid-STATUS-tgrupgdo
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tgrupgdo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destinif.
      * <TOTEM:EPT. INIT:giang, FD:destinif, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O destinif
           IF STATUS-destinif = "35"
              OPEN OUTPUT destinif
                IF Valid-STATUS-destinif
                   CLOSE destinif
                   OPEN I-O destinif
                END-IF
           END-IF
           IF NOT Valid-STATUS-destinif
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:destinif, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-giang.
      * <TOTEM:EPT. INIT:giang, FD:tmp-giang, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmp-giang
           IF NOT Valid-STATUS-tmp-giang
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-giang, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-mrordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tmp-mrordini
           IF STATUS-tmp-mrordini = "35"
              OPEN OUTPUT tmp-mrordini
                IF Valid-STATUS-tmp-mrordini
                   CLOSE tmp-mrordini
                   OPEN I-O tmp-mrordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-tmp-mrordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:giang, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-mtordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-mtordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmp-mtordini
           IF NOT Valid-STATUS-tmp-mtordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-mtordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-sordforn.
      * <TOTEM:EPT. INIT:giang, FD:sordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O sordforn
           IF STATUS-sordforn = "35"
              OPEN OUTPUT sordforn
                IF Valid-STATUS-sordforn
                   CLOSE sordforn
                   OPEN I-O sordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-sordforn
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:sordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:giang, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:giang, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:giang, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordini.
      * <TOTEM:EPT. INIT:giang, FD:rordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rordini
           IF NOT Valid-STATUS-rordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:rordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tagli.
      * <TOTEM:EPT. INIT:giang, FD:tagli, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tagli
           IF STATUS-tagli = "35"
              OPEN OUTPUT tagli
                IF Valid-STATUS-tagli
                   CLOSE tagli
                   OPEN I-O tagli
                END-IF
           END-IF
           IF NOT Valid-STATUS-tagli
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tagli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordini.
      * <TOTEM:EPT. INIT:giang, FD:tordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tordini
           IF NOT Valid-STATUS-tordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lockfile.
      * <TOTEM:EPT. INIT:giang, FD:lockfile, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O lockfile
           IF STATUS-lockfile = "35"
              OPEN OUTPUT lockfile
                IF Valid-STATUS-lockfile
                   CLOSE lockfile
                   OPEN I-O lockfile
                END-IF
           END-IF
           IF NOT Valid-STATUS-lockfile
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:lockfile, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-blis-eva.
      * <TOTEM:EPT. INIT:giang, FD:tmp-blis-eva, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-blis-eva
           IF NOT Valid-STATUS-tmp-blis-eva
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-blis-eva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:giang, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-zoom-art-giac.
      * <TOTEM:EPT. INIT:giang, FD:zoom-art-giac, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT zoom-art-giac
           IF NOT Valid-STATUS-zoom-art-giac
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:zoom-art-giac, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:giang, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ttipocli.
      * <TOTEM:EPT. INIT:giang, FD:ttipocli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ttipocli
           IF NOT Valid-STATUS-ttipocli
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:ttipocli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:giang, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tscorte.
      * <TOTEM:EPT. INIT:giang, FD:tscorte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tscorte
           IF NOT Valid-STATUS-tscorte
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tscorte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:giang, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-promoeva.
      * <TOTEM:EPT. INIT:giang, FD:promoeva, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT promoeva
           IF NOT Valid-STATUS-promoeva
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:promoeva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-k-mrordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-k-mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-k-mrordini
           IF NOT Valid-STATUS-tmp-k-mrordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-k-mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-k-mtordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-k-mtordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-k-mtordini
           IF NOT Valid-STATUS-tmp-k-mtordini
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-k-mtordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-qta-eva.
      * <TOTEM:EPT. INIT:giang, FD:tmp-qta-eva, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-qta-eva
           IF NOT Valid-STATUS-tmp-qta-eva
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-qta-eva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-qta-pren.
      * <TOTEM:EPT. INIT:giang, FD:tmp-qta-pren, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-qta-pren
           IF NOT Valid-STATUS-tmp-qta-pren
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmp-qta-pren, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:giang, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-multigest.
      * <TOTEM:EPT. INIT:giang, FD:multigest, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O multigest
           IF STATUS-multigest = "35"
              OPEN OUTPUT multigest
                IF Valid-STATUS-multigest
                   CLOSE multigest
                   OPEN I-O multigest
                END-IF
           END-IF
           IF NOT Valid-STATUS-multigest
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:multigest, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-blister.
      * <TOTEM:EPT. INIT:giang, FD:blister, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT blister
           IF NOT Valid-STATUS-blister
              PERFORM  scr-ordini-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giang, FD:blister, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-mtordini
           PERFORM CLOSE-mrordini
           PERFORM CLOSE-articoli
           PERFORM CLOSE-clienti
           PERFORM CLOSE-destini
           PERFORM CLOSE-tpromo
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-tgrupgdo
           PERFORM CLOSE-destinif
      *    tmp-giang CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-giang
      *    tmp-mrordini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-mrordini
           PERFORM CLOSE-progmag
      *    tmp-mtordini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-mtordini
           PERFORM CLOSE-sordforn
           PERFORM CLOSE-timballi
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-rordini
           PERFORM CLOSE-tagli
           PERFORM CLOSE-tordini
           PERFORM CLOSE-lockfile
      *    tmp-blis-eva CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-blis-eva
           PERFORM CLOSE-tparamge
      *    zoom-art-giac CLOSE MODE IS FALSE
      *    PERFORM CLOSE-zoom-art-giac
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-ttipocli
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-tscorte
           PERFORM CLOSE-param
           PERFORM CLOSE-promoeva
      *    tmp-k-mrordini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-k-mrordini
      *    tmp-k-mtordini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-k-mtordini
      *    tmp-qta-eva CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-qta-eva
      *    tmp-qta-pren CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-qta-pren
           PERFORM CLOSE-tmagaz
      *    multigest CLOSE MODE IS FALSE
      *    PERFORM CLOSE-multigest
           PERFORM CLOSE-blister
      *    After Close
           .

       CLOSE-mtordini.
      * <TOTEM:EPT. INIT:giang, FD:mtordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mtordini
           .

       CLOSE-mrordini.
      * <TOTEM:EPT. INIT:giang, FD:mrordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mrordini
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:giang, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:giang, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-destini.
      * <TOTEM:EPT. INIT:giang, FD:destini, BeforeClose>
      * <TOTEM:END>
           CLOSE destini
           .

       CLOSE-tpromo.
      * <TOTEM:EPT. INIT:giang, FD:tpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpromo
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:giang, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:giang, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-tgrupgdo.
      * <TOTEM:EPT. INIT:giang, FD:tgrupgdo, BeforeClose>
      * <TOTEM:END>
           CLOSE tgrupgdo
           .

       CLOSE-destinif.
      * <TOTEM:EPT. INIT:giang, FD:destinif, BeforeClose>
      * <TOTEM:END>
           CLOSE destinif
           .

       CLOSE-tmp-giang.
      * <TOTEM:EPT. INIT:giang, FD:tmp-giang, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-mrordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-mrordini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:giang, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-tmp-mtordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-mtordini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-sordforn.
      * <TOTEM:EPT. INIT:giang, FD:sordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE sordforn
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:giang, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:giang, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:giang, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-rordini.
      * <TOTEM:EPT. INIT:giang, FD:rordini, BeforeClose>
      * <TOTEM:END>
           CLOSE rordini
           .

       CLOSE-tagli.
      * <TOTEM:EPT. INIT:giang, FD:tagli, BeforeClose>
      * <TOTEM:END>
           CLOSE tagli
           .

       CLOSE-tordini.
      * <TOTEM:EPT. INIT:giang, FD:tordini, BeforeClose>
      * <TOTEM:END>
           CLOSE tordini
           .

       CLOSE-lockfile.
      * <TOTEM:EPT. INIT:giang, FD:lockfile, BeforeClose>
      * <TOTEM:END>
           CLOSE lockfile
           .

       CLOSE-tmp-blis-eva.
      * <TOTEM:EPT. INIT:giang, FD:tmp-blis-eva, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:giang, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-zoom-art-giac.
      * <TOTEM:EPT. INIT:giang, FD:zoom-art-giac, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:giang, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-ttipocli.
      * <TOTEM:EPT. INIT:giang, FD:ttipocli, BeforeClose>
      * <TOTEM:END>
           CLOSE ttipocli
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:giang, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-tscorte.
      * <TOTEM:EPT. INIT:giang, FD:tscorte, BeforeClose>
      * <TOTEM:END>
           CLOSE tscorte
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:giang, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-promoeva.
      * <TOTEM:EPT. INIT:giang, FD:promoeva, BeforeClose>
      * <TOTEM:END>
           CLOSE promoeva
           .

       CLOSE-tmp-k-mrordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-k-mrordini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-k-mtordini.
      * <TOTEM:EPT. INIT:giang, FD:tmp-k-mtordini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-qta-eva.
      * <TOTEM:EPT. INIT:giang, FD:tmp-qta-eva, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-qta-pren.
      * <TOTEM:EPT. INIT:giang, FD:tmp-qta-pren, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:giang, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-multigest.
      * <TOTEM:EPT. INIT:giang, FD:multigest, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-blister.
      * <TOTEM:EPT. INIT:giang, FD:blister, BeforeClose>
      * <TOTEM:END>
           CLOSE blister
           .

       mtordini-mto-k-ord-cli-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-ord-cli-SPLITBUF
           MOVE mto-anno(1:4) TO mtordini-mto-k-ord-cli-SPLITBUF(1:4)
           MOVE mto-num-ord-cli(1:50) TO 
           mtordini-mto-k-ord-cli-SPLITBUF(5:50)
           .

       mtordini-mto-k-data-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-data-SPLITBUF
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-data-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-data-SPLITBUF(9:12)
           .

       mtordini-mto-k-clides-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-clides-SPLITBUF
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-clides-SPLITBUF(1:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-clides-SPLITBUF(6:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-clides-SPLITBUF(11:8)
           .

       mtordini-mto-k-age-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-age-SPLITBUF
           MOVE mto-cod-agente(1:5) TO mtordini-mto-k-age-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-age-SPLITBUF(6:8)
           .

       mtordini-k-mto-stato-sel-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-sel-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(1:1)
           MOVE mto-cod-cli(1:5) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(2:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(7:8)
           .

       mtordini-k-mto-stato-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-SPLITBUF(1:1)
           MOVE mto-chiave(1:12) TO mtordini-k-mto-stato-SPLITBUF(2:12)
           .

       mtordini-mto-k-gdo-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-gdo-SPLITBUF
           MOVE mto-gdo(1:5) TO mtordini-mto-k-gdo-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-gdo-SPLITBUF(6:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-gdo-SPLITBUF(14:12)
           .

       mtordini-mto-k-bloc-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-bloc-SPLITBUF
           MOVE mto-stato-attivazione(1:1) TO 
           mtordini-mto-k-bloc-SPLITBUF(1:1)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-bloc-SPLITBUF(2:8)
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-bloc-SPLITBUF(10:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-bloc-SPLITBUF(15:5)
           .

       mtordini-k-giang-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-giang-SPLITBUF
           MOVE mto-data-note1(1:8) TO mtordini-k-giang-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-k-giang-SPLITBUF(9:12)
           .

       mtordini-mto-k-promo-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-promo-SPLITBUF
           MOVE mto-promo(1:1) TO mtordini-mto-k-promo-SPLITBUF(1:1)
           MOVE mto-tipo-CF(1:1) TO mtordini-mto-k-promo-SPLITBUF(2:1)
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-promo-SPLITBUF(3:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-promo-SPLITBUF(8:5)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-promo-SPLITBUF(13:12)
           .

       DataSet1-mtordini-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 MOVE Low-Value TO mto-chiave
              ELSE
                 MOVE High-Value TO mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 MOVE High-Value TO mto-chiave
              ELSE
                 MOVE Low-Value TO mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           .

      * mtordini
       DataSet1-mtordini-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY >= mto-chiave
              ELSE
                 START mtordini KEY <= mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY <= mto-chiave
              ELSE
                 START mtordini KEY >= mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY > mto-chiave
              ELSE
                 START mtordini KEY < mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY < mto-chiave
              ELSE
                 START mtordini KEY > mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-LOCK
                 READ mtordini WITH LOCK 
                 KEY mto-chiave
              ELSE
                 READ mtordini WITH NO LOCK 
                 KEY mto-chiave
              END-IF
           END-EVALUATE
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT 
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 IF DataSet1-mtordini-LOCK
                    READ mtordini NEXT WITH LOCK
                 ELSE
                    READ mtordini NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-mtordini-LOCK
                    READ mtordini PREVIOUS WITH LOCK
                 ELSE
                    READ mtordini PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 IF DataSet1-mtordini-LOCK
                    READ mtordini PREVIOUS WITH LOCK
                 ELSE
                    READ mtordini PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-mtordini-LOCK
                    READ mtordini NEXT WITH LOCK
                 ELSE
                    READ mtordini NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeWrite>
      * <TOTEM:END>
           WRITE mto-rec OF mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mto-rec OF mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeDelete>
      * <TOTEM:END>
           DELETE mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterDelete>
      * <TOTEM:END>
           .

       mrordini-mro-k-promo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-promo-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-promo-SPLITBUF(1:15)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-promo-SPLITBUF(16:17)
           .

       mrordini-mro-k-articolo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-articolo-SPLITBUF
           MOVE mro-cod-articolo(1:6) TO 
           mrordini-mro-k-articolo-SPLITBUF(1:6)
           MOVE mro-chiave(1:17) TO 
           mrordini-mro-k-articolo-SPLITBUF(7:17)
           .

       mrordini-mro-k-progr-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-progr-SPLITBUF
           MOVE mro-chiave-testa(1:12) TO 
           mrordini-mro-k-progr-SPLITBUF(1:12)
           MOVE mro-progr(1:5) TO mrordini-mro-k-progr-SPLITBUF(13:5)
           .

       mrordini-mro-k-tprev-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-tprev-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-tprev-SPLITBUF(1:15)
           MOVE mro-prg-cod-articolo(1:6) TO 
           mrordini-mro-k-tprev-SPLITBUF(16:6)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-tprev-SPLITBUF(22:17)
           .

       mrordini-mro-k-ord-art-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-ord-art-SPLITBUF
           MOVE mro-chiave-testa(1:12) TO 
           mrordini-mro-k-ord-art-SPLITBUF(1:12)
           MOVE mro-cod-articolo(1:6) TO 
           mrordini-mro-k-ord-art-SPLITBUF(13:6)
           .

       DataSet1-mrordini-INITSTART.
           IF DataSet1-mrordini-KEY-Asc
              MOVE Low-Value TO mro-chiave
           ELSE
              MOVE High-Value TO mro-chiave
           END-IF
           .

       DataSet1-mrordini-INITEND.
           IF DataSet1-mrordini-KEY-Asc
              MOVE High-Value TO mro-chiave
           ELSE
              MOVE Low-Value TO mro-chiave
           END-IF
           .

      * mrordini
       DataSet1-mrordini-START.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY >= mro-chiave
           ELSE
              START mrordini KEY <= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-NOTGREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY <= mro-chiave
           ELSE
              START mrordini KEY >= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-GREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY > mro-chiave
           ELSE
              START mrordini KEY < mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-LESS.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY < mro-chiave
           ELSE
              START mrordini KEY > mro-chiave
           END-IF
           .

       DataSet1-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-mrordini-LOCK
              READ mrordini WITH LOCK 
              KEY mro-chiave
           ELSE
              READ mrordini WITH NO LOCK 
              KEY mro-chiave
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT 
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeWrite>
      * <TOTEM:END>
           WRITE mro-rec OF mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mro-rec OF mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeDelete>
      * <TOTEM:END>
           DELETE mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       destini-K1-MERGE-SPLITBUF.
           INITIALIZE destini-K1-SPLITBUF
           MOVE des-ragsoc-1(1:40) TO destini-K1-SPLITBUF(1:40)
           MOVE des-codice(1:5) TO destini-K1-SPLITBUF(41:5)
           MOVE des-prog(1:5) TO destini-K1-SPLITBUF(46:5)
           .

       destini-k-localita-MERGE-SPLITBUF.
           INITIALIZE destini-k-localita-SPLITBUF
           MOVE des-localita(1:35) TO destini-k-localita-SPLITBUF(1:35)
           .

       DataSet1-destini-INITSTART.
           IF DataSet1-destini-KEY-Asc
              MOVE Low-Value TO des-chiave
           ELSE
              MOVE High-Value TO des-chiave
           END-IF
           .

       DataSet1-destini-INITEND.
           IF DataSet1-destini-KEY-Asc
              MOVE High-Value TO des-chiave
           ELSE
              MOVE Low-Value TO des-chiave
           END-IF
           .

      * destini
       DataSet1-destini-START.
           IF DataSet1-destini-KEY-Asc
              START destini KEY >= des-chiave
           ELSE
              START destini KEY <= des-chiave
           END-IF
           .

       DataSet1-destini-START-NOTGREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY <= des-chiave
           ELSE
              START destini KEY >= des-chiave
           END-IF
           .

       DataSet1-destini-START-GREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY > des-chiave
           ELSE
              START destini KEY < des-chiave
           END-IF
           .

       DataSet1-destini-START-LESS.
           IF DataSet1-destini-KEY-Asc
              START destini KEY < des-chiave
           ELSE
              START destini KEY > des-chiave
           END-IF
           .

       DataSet1-destini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destini-LOCK
              READ destini WITH LOCK 
              KEY des-chiave
           ELSE
              READ destini WITH NO LOCK 
              KEY des-chiave
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT 
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterDelete>
      * <TOTEM:END>
           .

       tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ricerca-SPLITBUF
           MOVE tpr-chiave-ricerca OF tpromo(1:21) TO 
           tpromo-tpr-chiave-ricerca-SPLITBUF(1:21)
           .

       tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-gdo-fine-SPLITBUF
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(1:5)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(6:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(14:8)
           .

       tpromo-tpr-chiave-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-fine-SPLITBUF
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(1:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-ini-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ini-SPLITBUF
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(1:8)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-volantino-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-volantino-SPLITBUF
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(1:8)
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(17:5)
           .

       tpromo-tpr-k-fine-vol-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-fine-vol-SPLITBUF
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(1:8)
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(17:5)
           .

       tpromo-tpr-k-data-ins-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-data-ins-SPLITBUF
           MOVE tpr-data-creazione OF tpromo(1:8) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(1:8)
           MOVE tpr-codice OF tpromo(1:15) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(9:15)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(24:5)
           .

       DataSet1-tpromo-INITSTART.
           IF DataSet1-tpromo-KEY-Asc
              MOVE Low-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE High-Value TO tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-INITEND.
           IF DataSet1-tpromo-KEY-Asc
              MOVE High-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE Low-Value TO tpr-chiave OF tpromo
           END-IF
           .

      * tpromo
       DataSet1-tpromo-START.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY >= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY <= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-NOTGREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY <= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY >= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-GREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY > tpr-chiave OF tpromo
           ELSE
              START tpromo KEY < tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-LESS.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY < tpr-chiave OF tpromo
           ELSE
              START tpromo KEY > tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpromo-LOCK
              READ tpromo WITH LOCK 
              KEY tpr-chiave OF tpromo
           ELSE
              READ tpromo WITH NO LOCK 
              KEY tpr-chiave OF tpromo
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT 
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           IF DataSet1-tordforn-KEY-Asc
              MOVE Low-Value TO tof-chiave
           ELSE
              MOVE High-Value TO tof-chiave
           END-IF
           .

       DataSet1-tordforn-INITEND.
           IF DataSet1-tordforn-KEY-Asc
              MOVE High-Value TO tof-chiave
           ELSE
              MOVE Low-Value TO tof-chiave
           END-IF
           .

      * tordforn
       DataSet1-tordforn-START.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY >= tof-chiave
           ELSE
              START tordforn KEY <= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-NOTGREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY <= tof-chiave
           ELSE
              START tordforn KEY >= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-GREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY > tof-chiave
           ELSE
              START tordforn KEY < tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-LESS.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY < tof-chiave
           ELSE
              START tordforn KEY > tof-chiave
           END-IF
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordforn-LOCK
              READ tordforn WITH LOCK 
              KEY tof-chiave
           ELSE
              READ tordforn WITH NO LOCK 
              KEY tof-chiave
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       tgrupgdo-gdo-k-g2-MERGE-SPLITBUF.
           INITIALIZE tgrupgdo-gdo-k-g2-SPLITBUF
           MOVE gdo-codice-G2 OF tgrupgdo(1:3) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(1:3)
           MOVE gdo-chiave OF tgrupgdo(1:5) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(4:5)
           .

       DataSet1-tgrupgdo-INITSTART.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-INITEND.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

      * tgrupgdo
       DataSet1-tgrupgdo-START.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-NOTGREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-GREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-LESS.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-LOCK
              READ tgrupgdo WITH LOCK 
              KEY gdo-chiave OF tgrupgdo
           ELSE
              READ tgrupgdo WITH NO LOCK 
              KEY gdo-chiave OF tgrupgdo
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT 
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterDelete>
      * <TOTEM:END>
           .

       destinif-K1-MERGE-SPLITBUF.
           INITIALIZE destinif-K1-SPLITBUF
           MOVE desf-ragsoc-1(1:40) TO destinif-K1-SPLITBUF(1:40)
           MOVE desf-codice(1:5) TO destinif-K1-SPLITBUF(41:5)
           MOVE desf-prog(1:5) TO destinif-K1-SPLITBUF(46:5)
           .

       destinif-desf-k2-MERGE-SPLITBUF.
           INITIALIZE destinif-desf-k2-SPLITBUF
           MOVE desf-codice(1:5) TO destinif-desf-k2-SPLITBUF(1:5)
           MOVE desf-ragsoc-1(1:40) TO destinif-desf-k2-SPLITBUF(6:40)
           MOVE desf-prog(1:5) TO destinif-desf-k2-SPLITBUF(46:5)
           .

       DataSet1-destinif-INITSTART.
           IF DataSet1-destinif-KEY-Asc
              MOVE Low-Value TO desf-chiave
           ELSE
              MOVE High-Value TO desf-chiave
           END-IF
           .

       DataSet1-destinif-INITEND.
           IF DataSet1-destinif-KEY-Asc
              MOVE High-Value TO desf-chiave
           ELSE
              MOVE Low-Value TO desf-chiave
           END-IF
           .

      * destinif
       DataSet1-destinif-START.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY >= desf-chiave
           ELSE
              START destinif KEY <= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-NOTGREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY <= desf-chiave
           ELSE
              START destinif KEY >= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-GREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY > desf-chiave
           ELSE
              START destinif KEY < desf-chiave
           END-IF
           .

       DataSet1-destinif-START-LESS.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY < desf-chiave
           ELSE
              START destinif KEY > desf-chiave
           END-IF
           .

       DataSet1-destinif-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destinif-LOCK
              READ destinif WITH LOCK 
              KEY desf-chiave
           ELSE
              READ destinif WITH NO LOCK 
              KEY desf-chiave
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT 
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeWrite>
      * <TOTEM:END>
           WRITE desf-rec OF destinif.
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRewrite>
      * <TOTEM:END>
           REWRITE desf-rec OF destinif.
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeDelete>
      * <TOTEM:END>
           DELETE destinif.
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterDelete>
      * <TOTEM:END>
           .

       tmp-giang-tgia-k-articolo-MERGE-SPLITBUF.
           INITIALIZE tmp-giang-tgia-k-articolo-SPLITBUF
           MOVE tgia-tipo-rec(1:1) TO 
           tmp-giang-tgia-k-articolo-SPLITBUF(1:1)
           MOVE tgia-cod-articolo(1:6) TO 
           tmp-giang-tgia-k-articolo-SPLITBUF(2:6)
           .

       tmp-giang-tgia-k-numero-MERGE-SPLITBUF.
           INITIALIZE tmp-giang-tgia-k-numero-SPLITBUF
           MOVE tgia-tipo-rec(1:1) TO 
           tmp-giang-tgia-k-numero-SPLITBUF(1:1)
           MOVE tgia-testa-ordf(1:12) TO 
           tmp-giang-tgia-k-numero-SPLITBUF(2:12)
           MOVE tgia-cod-articolo(1:6) TO 
           tmp-giang-tgia-k-numero-SPLITBUF(14:6)
           .

       tmp-giang-tgia-k-forn-MERGE-SPLITBUF.
           INITIALIZE tmp-giang-tgia-k-forn-SPLITBUF
           MOVE tgia-tipo-rec(1:1) TO 
           tmp-giang-tgia-k-forn-SPLITBUF(1:1)
           MOVE tgia-ragsoc(1:50) TO 
           tmp-giang-tgia-k-forn-SPLITBUF(2:50)
           MOVE tgia-cod-articolo(1:6) TO 
           tmp-giang-tgia-k-forn-SPLITBUF(52:6)
           .

       DataSet1-tmp-giang-INITSTART.
           IF DataSet1-tmp-giang-KEY-Asc
              MOVE Low-Value TO tgia-chiave
           ELSE
              MOVE High-Value TO tgia-chiave
           END-IF
           .

       DataSet1-tmp-giang-INITEND.
           IF DataSet1-tmp-giang-KEY-Asc
              MOVE High-Value TO tgia-chiave
           ELSE
              MOVE Low-Value TO tgia-chiave
           END-IF
           .

      * tmp-giang
       DataSet1-tmp-giang-START.
           IF DataSet1-tmp-giang-KEY-Asc
              START tmp-giang KEY >= tgia-chiave
           ELSE
              START tmp-giang KEY <= tgia-chiave
           END-IF
           .

       DataSet1-tmp-giang-START-NOTGREATER.
           IF DataSet1-tmp-giang-KEY-Asc
              START tmp-giang KEY <= tgia-chiave
           ELSE
              START tmp-giang KEY >= tgia-chiave
           END-IF
           .

       DataSet1-tmp-giang-START-GREATER.
           IF DataSet1-tmp-giang-KEY-Asc
              START tmp-giang KEY > tgia-chiave
           ELSE
              START tmp-giang KEY < tgia-chiave
           END-IF
           .

       DataSet1-tmp-giang-START-LESS.
           IF DataSet1-tmp-giang-KEY-Asc
              START tmp-giang KEY < tgia-chiave
           ELSE
              START tmp-giang KEY > tgia-chiave
           END-IF
           .

       DataSet1-tmp-giang-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmp-giang-LOCK
              READ tmp-giang WITH LOCK 
              KEY tgia-chiave
           ELSE
              READ tmp-giang WITH NO LOCK 
              KEY tgia-chiave
           END-IF
           PERFORM tmp-giang-tgia-k-articolo-MERGE-SPLITBUF
           PERFORM tmp-giang-tgia-k-numero-MERGE-SPLITBUF
           PERFORM tmp-giang-tgia-k-forn-MERGE-SPLITBUF
           MOVE STATUS-tmp-giang TO TOTEM-ERR-STAT 
           MOVE "tmp-giang" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-giang-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmp-giang-KEY-Asc
              IF DataSet1-tmp-giang-LOCK
                 READ tmp-giang NEXT WITH LOCK
              ELSE
                 READ tmp-giang NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-giang-LOCK
                 READ tmp-giang PREVIOUS WITH LOCK
              ELSE
                 READ tmp-giang PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-giang-tgia-k-articolo-MERGE-SPLITBUF
           PERFORM tmp-giang-tgia-k-numero-MERGE-SPLITBUF
           PERFORM tmp-giang-tgia-k-forn-MERGE-SPLITBUF
           MOVE STATUS-tmp-giang TO TOTEM-ERR-STAT
           MOVE "tmp-giang" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-giang-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmp-giang-KEY-Asc
              IF DataSet1-tmp-giang-LOCK
                 READ tmp-giang PREVIOUS WITH LOCK
              ELSE
                 READ tmp-giang PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-giang-LOCK
                 READ tmp-giang NEXT WITH LOCK
              ELSE
                 READ tmp-giang NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-giang-tgia-k-articolo-MERGE-SPLITBUF
           PERFORM tmp-giang-tgia-k-numero-MERGE-SPLITBUF
           PERFORM tmp-giang-tgia-k-forn-MERGE-SPLITBUF
           MOVE STATUS-tmp-giang TO TOTEM-ERR-STAT
           MOVE "tmp-giang" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-giang-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-giang TO TOTEM-ERR-STAT
           MOVE "tmp-giang" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-giang-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-giang TO TOTEM-ERR-STAT
           MOVE "tmp-giang" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-giang-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-giang TO TOTEM-ERR-STAT
           MOVE "tmp-giang" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giang, AfterDelete>
      * <TOTEM:END>
           .

       tmp-mrordini-k-prg-MERGE-SPLITBUF.
           INITIALIZE tmp-mrordini-k-prg-SPLITBUF
           MOVE tmro-prg-chiave(1:18) TO 
           tmp-mrordini-k-prg-SPLITBUF(1:18)
           MOVE tmro-chiave(1:17) TO tmp-mrordini-k-prg-SPLITBUF(19:17)
           .

       tmp-mrordini-k-promo-MERGE-SPLITBUF.
           INITIALIZE tmp-mrordini-k-promo-SPLITBUF
           MOVE tmro-promo(1:1) TO tmp-mrordini-k-promo-SPLITBUF(1:1)
           MOVE tmro-chiave(1:17) TO tmp-mrordini-k-promo-SPLITBUF(2:17)
           .

       tmp-mrordini-k-blister-MERGE-SPLITBUF.
           INITIALIZE tmp-mrordini-k-blister-SPLITBUF
           MOVE tmro-promo(1:1) TO tmp-mrordini-k-blister-SPLITBUF(1:1)
           MOVE tmro-blister-id(1:6) TO 
           tmp-mrordini-k-blister-SPLITBUF(2:6)
           .

       DataSet1-tmp-mrordini-INITSTART.
           IF DataSet1-tmp-mrordini-KEY-Asc
              MOVE Low-Value TO tmro-chiave
           ELSE
              MOVE High-Value TO tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-INITEND.
           IF DataSet1-tmp-mrordini-KEY-Asc
              MOVE High-Value TO tmro-chiave
           ELSE
              MOVE Low-Value TO tmro-chiave
           END-IF
           .

      * tmp-mrordini
       DataSet1-tmp-mrordini-START.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY >= tmro-chiave
           ELSE
              START tmp-mrordini KEY <= tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-START-NOTGREATER.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY <= tmro-chiave
           ELSE
              START tmp-mrordini KEY >= tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-START-GREATER.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY > tmro-chiave
           ELSE
              START tmp-mrordini KEY < tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-START-LESS.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY < tmro-chiave
           ELSE
              START tmp-mrordini KEY > tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmp-mrordini-LOCK
              READ tmp-mrordini WITH LOCK 
              KEY tmro-chiave
           ELSE
              READ tmp-mrordini WITH NO LOCK 
              KEY tmro-chiave
           END-IF
           PERFORM tmp-mrordini-k-prg-MERGE-SPLITBUF
           PERFORM tmp-mrordini-k-promo-MERGE-SPLITBUF
           PERFORM tmp-mrordini-k-blister-MERGE-SPLITBUF
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT 
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmp-mrordini-KEY-Asc
              IF DataSet1-tmp-mrordini-LOCK
                 READ tmp-mrordini NEXT WITH LOCK
              ELSE
                 READ tmp-mrordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-mrordini-LOCK
                 READ tmp-mrordini PREVIOUS WITH LOCK
              ELSE
                 READ tmp-mrordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-mrordini-k-prg-MERGE-SPLITBUF
           PERFORM tmp-mrordini-k-promo-MERGE-SPLITBUF
           PERFORM tmp-mrordini-k-blister-MERGE-SPLITBUF
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmp-mrordini-KEY-Asc
              IF DataSet1-tmp-mrordini-LOCK
                 READ tmp-mrordini PREVIOUS WITH LOCK
              ELSE
                 READ tmp-mrordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-mrordini-LOCK
                 READ tmp-mrordini NEXT WITH LOCK
              ELSE
                 READ tmp-mrordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-mrordini-k-prg-MERGE-SPLITBUF
           PERFORM tmp-mrordini-k-promo-MERGE-SPLITBUF
           PERFORM tmp-mrordini-k-blister-MERGE-SPLITBUF
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeWrite>
      * <TOTEM:END>
           WRITE tmro-rec OF tmp-mrordini.
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tmro-rec OF tmp-mrordini.
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeDelete>
      * <TOTEM:END>
           DELETE tmp-mrordini.
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       tmp-mtordini-k-ord-MERGE-SPLITBUF.
           INITIALIZE tmp-mtordini-k-ord-SPLITBUF
           MOVE tmto-data-cons(1:8) TO tmp-mtordini-k-ord-SPLITBUF(1:8)
           MOVE tmto-chiave(1:12) TO tmp-mtordini-k-ord-SPLITBUF(9:12)
           .

       DataSet1-tmp-mtordini-INITSTART.
           IF DataSet1-tmp-mtordini-KEY-Asc
              MOVE Low-Value TO tmto-chiave
           ELSE
              MOVE High-Value TO tmto-chiave
           END-IF
           .

       DataSet1-tmp-mtordini-INITEND.
           IF DataSet1-tmp-mtordini-KEY-Asc
              MOVE High-Value TO tmto-chiave
           ELSE
              MOVE Low-Value TO tmto-chiave
           END-IF
           .

      * tmp-mtordini
       DataSet1-tmp-mtordini-START.
           IF DataSet1-tmp-mtordini-KEY-Asc
              START tmp-mtordini KEY >= tmto-chiave
           ELSE
              START tmp-mtordini KEY <= tmto-chiave
           END-IF
           .

       DataSet1-tmp-mtordini-START-NOTGREATER.
           IF DataSet1-tmp-mtordini-KEY-Asc
              START tmp-mtordini KEY <= tmto-chiave
           ELSE
              START tmp-mtordini KEY >= tmto-chiave
           END-IF
           .

       DataSet1-tmp-mtordini-START-GREATER.
           IF DataSet1-tmp-mtordini-KEY-Asc
              START tmp-mtordini KEY > tmto-chiave
           ELSE
              START tmp-mtordini KEY < tmto-chiave
           END-IF
           .

       DataSet1-tmp-mtordini-START-LESS.
           IF DataSet1-tmp-mtordini-KEY-Asc
              START tmp-mtordini KEY < tmto-chiave
           ELSE
              START tmp-mtordini KEY > tmto-chiave
           END-IF
           .

       DataSet1-tmp-mtordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmp-mtordini-LOCK
              READ tmp-mtordini WITH LOCK 
              KEY tmto-chiave
           ELSE
              READ tmp-mtordini WITH NO LOCK 
              KEY tmto-chiave
           END-IF
           PERFORM tmp-mtordini-k-ord-MERGE-SPLITBUF
           MOVE STATUS-tmp-mtordini TO TOTEM-ERR-STAT 
           MOVE "tmp-mtordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-mtordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmp-mtordini-KEY-Asc
              IF DataSet1-tmp-mtordini-LOCK
                 READ tmp-mtordini NEXT WITH LOCK
              ELSE
                 READ tmp-mtordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-mtordini-LOCK
                 READ tmp-mtordini PREVIOUS WITH LOCK
              ELSE
                 READ tmp-mtordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-mtordini-k-ord-MERGE-SPLITBUF
           MOVE STATUS-tmp-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-mtordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-mtordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmp-mtordini-KEY-Asc
              IF DataSet1-tmp-mtordini-LOCK
                 READ tmp-mtordini PREVIOUS WITH LOCK
              ELSE
                 READ tmp-mtordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-mtordini-LOCK
                 READ tmp-mtordini NEXT WITH LOCK
              ELSE
                 READ tmp-mtordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-mtordini-k-ord-MERGE-SPLITBUF
           MOVE STATUS-tmp-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-mtordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-mtordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-mtordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-mtordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-mtordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-mtordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-mtordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mtordini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-sordforn-INITSTART.
           IF DataSet1-sordforn-KEY-Asc
              MOVE Low-Value TO sof-chiave OF sordforn
           ELSE
              MOVE High-Value TO sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-INITEND.
           IF DataSet1-sordforn-KEY-Asc
              MOVE High-Value TO sof-chiave OF sordforn
           ELSE
              MOVE Low-Value TO sof-chiave OF sordforn
           END-IF
           .

      * sordforn
       DataSet1-sordforn-START.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY >= sof-chiave OF sordforn
           ELSE
              START sordforn KEY <= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-NOTGREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY <= sof-chiave OF sordforn
           ELSE
              START sordforn KEY >= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-GREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY > sof-chiave OF sordforn
           ELSE
              START sordforn KEY < sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-LESS.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY < sof-chiave OF sordforn
           ELSE
              START sordforn KEY > sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-sordforn-LOCK
              READ sordforn WITH LOCK 
              KEY sof-chiave OF sordforn
           ELSE
              READ sordforn WITH NO LOCK 
              KEY sof-chiave OF sordforn
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT 
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       rordini-ror-k-promo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-promo-SPLITBUF
           MOVE ror-promo OF rordini(1:15) TO 
           rordini-ror-k-promo-SPLITBUF(1:15)
           .

       rordini-ror-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-articolo-SPLITBUF
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-articolo-SPLITBUF(1:6)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-articolo-SPLITBUF(7:17)
           .

       rordini-ror-k-master-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-master-SPLITBUF
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(1:17)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(18:17)
           .

       rordini-ror-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-stbolle-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-stbolle-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-stbolle-SPLITBUF(5:8)
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-stbolle-SPLITBUF(13:17)
           .

       rordini-ror-k-ord-art-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-ord-art-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-ord-art-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-ord-art-SPLITBUF(5:8)
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-ord-art-SPLITBUF(13:6)
           .

       DataSet1-rordini-INITSTART.
           IF DataSet1-rordini-KEY-Asc
              MOVE Low-Value TO ror-chiave OF rordini
           ELSE
              MOVE High-Value TO ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-INITEND.
           IF DataSet1-rordini-KEY-Asc
              MOVE High-Value TO ror-chiave OF rordini
           ELSE
              MOVE Low-Value TO ror-chiave OF rordini
           END-IF
           .

      * rordini
       DataSet1-rordini-START.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY >= ror-chiave OF rordini
           ELSE
              START rordini KEY <= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-NOTGREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY <= ror-chiave OF rordini
           ELSE
              START rordini KEY >= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-GREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY > ror-chiave OF rordini
           ELSE
              START rordini KEY < ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-LESS.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY < ror-chiave OF rordini
           ELSE
              START rordini KEY > ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordini-LOCK
              READ rordini WITH LOCK 
              KEY ror-chiave OF rordini
           ELSE
              READ rordini WITH NO LOCK 
              KEY ror-chiave OF rordini
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT 
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterDelete>
      * <TOTEM:END>
           .

       tagli-k2-MERGE-SPLITBUF.
           INITIALIZE tagli-k2-SPLITBUF
           MOVE tag-data(1:8) TO tagli-k2-SPLITBUF(1:8)
           .

       DataSet1-tagli-INITSTART.
           IF DataSet1-tagli-KEY-Asc
              MOVE Low-Value TO tag-chiave
           ELSE
              MOVE High-Value TO tag-chiave
           END-IF
           .

       DataSet1-tagli-INITEND.
           IF DataSet1-tagli-KEY-Asc
              MOVE High-Value TO tag-chiave
           ELSE
              MOVE Low-Value TO tag-chiave
           END-IF
           .

      * tagli
       DataSet1-tagli-START.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY >= tag-chiave
           ELSE
              START tagli KEY <= tag-chiave
           END-IF
           .

       DataSet1-tagli-START-NOTGREATER.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY <= tag-chiave
           ELSE
              START tagli KEY >= tag-chiave
           END-IF
           .

       DataSet1-tagli-START-GREATER.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY > tag-chiave
           ELSE
              START tagli KEY < tag-chiave
           END-IF
           .

       DataSet1-tagli-START-LESS.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY < tag-chiave
           ELSE
              START tagli KEY > tag-chiave
           END-IF
           .

       DataSet1-tagli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tagli-LOCK
              READ tagli WITH LOCK 
              KEY tag-chiave
           ELSE
              READ tagli WITH NO LOCK 
              KEY tag-chiave
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT 
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tagli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tagli-KEY-Asc
              IF DataSet1-tagli-LOCK
                 READ tagli NEXT WITH LOCK
              ELSE
                 READ tagli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tagli-LOCK
                 READ tagli PREVIOUS WITH LOCK
              ELSE
                 READ tagli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tagli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tagli-KEY-Asc
              IF DataSet1-tagli-LOCK
                 READ tagli PREVIOUS WITH LOCK
              ELSE
                 READ tagli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tagli-LOCK
                 READ tagli NEXT WITH LOCK
              ELSE
                 READ tagli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeWrite>
      * <TOTEM:END>
           WRITE tag-rec OF tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tag-rec OF tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeDelete>
      * <TOTEM:END>
           DELETE tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterDelete>
      * <TOTEM:END>
           .

       tordini-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordini-k-causale-SPLITBUF
           MOVE tor-causale(1:4) TO tordini-k-causale-SPLITBUF(1:4)
           MOVE tor-anno(1:4) TO tordini-k-causale-SPLITBUF(5:4)
           MOVE tor-numero(1:8) TO tordini-k-causale-SPLITBUF(9:8)
           .

       tordini-k1-MERGE-SPLITBUF.
           INITIALIZE tordini-k1-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k1-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k1-SPLITBUF(6:5)
           MOVE tor-anno(1:4) TO tordini-k1-SPLITBUF(11:4)
           MOVE tor-numero(1:8) TO tordini-k1-SPLITBUF(15:8)
           .

       tordini-k2-MERGE-SPLITBUF.
           INITIALIZE tordini-k2-SPLITBUF
           MOVE tor-data-passaggio-ordine(1:8) TO 
           tordini-k2-SPLITBUF(1:8)
           MOVE tor-anno(1:4) TO tordini-k2-SPLITBUF(9:4)
           MOVE tor-numero(1:8) TO tordini-k2-SPLITBUF(13:8)
           .

       tordini-k-bolla-MERGE-SPLITBUF.
           INITIALIZE tordini-k-bolla-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-bolla-SPLITBUF(1:4)
           MOVE tor-num-bolla(1:8) TO tordini-k-bolla-SPLITBUF(5:8)
           .

       tordini-k3-MERGE-SPLITBUF.
           INITIALIZE tordini-k3-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k3-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k3-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k3-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO tordini-k3-SPLITBUF(21:1)
           .

       tordini-k-fattura-MERGE-SPLITBUF.
           INITIALIZE tordini-k-fattura-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-fattura-SPLITBUF(1:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-fattura-SPLITBUF(5:8)
           .

       tordini-k4-MERGE-SPLITBUF.
           INITIALIZE tordini-k4-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k4-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k4-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k4-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k4-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO tordini-k4-SPLITBUF(29:1)
           .

       tordini-k-contab-MERGE-SPLITBUF.
           INITIALIZE tordini-k-contab-SPLITBUF
           MOVE tor-agg-contab(1:1) TO tordini-k-contab-SPLITBUF(1:1)
           MOVE tor-anno-fattura(1:4) TO tordini-k-contab-SPLITBUF(2:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-contab-SPLITBUF(6:8)
           .

       tordini-k-tipo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tipo-SPLITBUF
           MOVE tor-tipo(1:1) TO tordini-k-tipo-SPLITBUF(1:1)
           MOVE tor-chiave(1:12) TO tordini-k-tipo-SPLITBUF(2:12)
           .

       tordini-k-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-data-SPLITBUF
           MOVE tor-data-creazione(1:8) TO tordini-k-data-SPLITBUF(1:8)
           MOVE tor-numero(1:8) TO tordini-k-data-SPLITBUF(9:8)
           .

       tordini-k-agfatt-MERGE-SPLITBUF.
           INITIALIZE tordini-k-agfatt-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-agfatt-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k-agfatt-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO 
           tordini-k-agfatt-SPLITBUF(29:1)
           MOVE tor-chiave(1:12) TO tordini-k-agfatt-SPLITBUF(30:12)
           .

       tordini-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE tordini-k-stbolle-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-stbolle-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO 
           tordini-k-stbolle-SPLITBUF(21:1)
           MOVE tor-chiave(1:12) TO tordini-k-stbolle-SPLITBUF(22:12)
           .

       tordini-k-andamento-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-data-SPLITBUF
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-data-SPLITBUF(1:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-data-SPLITBUF(2:8)
           .

       tordini-k-andamento-cliente-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-cliente-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-cliente-SPLITBUF(1:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-cliente-SPLITBUF(6:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-cliente-SPLITBUF(7:8)
           .

       tordini-k-andamento-clides-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-clides-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(6:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-clides-SPLITBUF(11:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-clides-SPLITBUF(12:8)
           .

       tordini-k-promo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-promo-SPLITBUF
           MOVE tor-stato(1:1) TO tordini-k-promo-SPLITBUF(1:1)
           MOVE tor-promo(1:1) TO tordini-k-promo-SPLITBUF(2:1)
           MOVE tor-data-ordine(1:8) TO tordini-k-promo-SPLITBUF(3:8)
           MOVE tor-numero(1:8) TO tordini-k-promo-SPLITBUF(11:8)
           MOVE tor-cod-cli(1:5) TO tordini-k-promo-SPLITBUF(19:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-promo-SPLITBUF(24:5)
           .

       tordini-k-or-MERGE-SPLITBUF.
           INITIALIZE tordini-k-or-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k-or-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-or-SPLITBUF(6:5)
           MOVE tor-num-ord-cli(1:10) TO tordini-k-or-SPLITBUF(11:10)
           .

       tordini-k-tor-inviare-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-inviare-SPLITBUF
           MOVE tor-da-inviare OF tordini(1:1) TO 
           tordini-k-tor-inviare-SPLITBUF(1:1)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-inviare-SPLITBUF(2:12)
           .

       tordini-k-tor-tipocli-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-tipocli-SPLITBUF
           MOVE tor-tipocli OF tordini(1:2) TO 
           tordini-k-tor-tipocli-SPLITBUF(1:2)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(3:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(8:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-tipocli-SPLITBUF(13:12)
           .

       tordini-k-tor-gdo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-gdo-SPLITBUF
           MOVE tor-gdo OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(1:5)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(6:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(11:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-gdo-SPLITBUF(16:12)
           .

       DataSet1-tordini-INITSTART.
           IF DataSet1-tordini-KEY-Asc
              MOVE Low-Value TO tor-chiave
           ELSE
              MOVE High-Value TO tor-chiave
           END-IF
           .

       DataSet1-tordini-INITEND.
           IF DataSet1-tordini-KEY-Asc
              MOVE High-Value TO tor-chiave
           ELSE
              MOVE Low-Value TO tor-chiave
           END-IF
           .

      * tordini
       DataSet1-tordini-START.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY >= tor-chiave
           ELSE
              START tordini KEY <= tor-chiave
           END-IF
           .

       DataSet1-tordini-START-NOTGREATER.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY <= tor-chiave
           ELSE
              START tordini KEY >= tor-chiave
           END-IF
           .

       DataSet1-tordini-START-GREATER.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY > tor-chiave
           ELSE
              START tordini KEY < tor-chiave
           END-IF
           .

       DataSet1-tordini-START-LESS.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY < tor-chiave
           ELSE
              START tordini KEY > tor-chiave
           END-IF
           .

       DataSet1-tordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordini-LOCK
              READ tordini WITH LOCK 
              KEY tor-chiave
           ELSE
              READ tordini WITH NO LOCK 
              KEY tor-chiave
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT 
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordini-KEY-Asc
              IF DataSet1-tordini-LOCK
                 READ tordini NEXT WITH LOCK
              ELSE
                 READ tordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordini-LOCK
                 READ tordini PREVIOUS WITH LOCK
              ELSE
                 READ tordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordini-KEY-Asc
              IF DataSet1-tordini-LOCK
                 READ tordini PREVIOUS WITH LOCK
              ELSE
                 READ tordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordini-LOCK
                 READ tordini NEXT WITH LOCK
              ELSE
                 READ tordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lockfile-INITSTART.
           IF DataSet1-lockfile-KEY-Asc
              MOVE Low-Value TO lck-chiave
           ELSE
              MOVE High-Value TO lck-chiave
           END-IF
           .

       DataSet1-lockfile-INITEND.
           IF DataSet1-lockfile-KEY-Asc
              MOVE High-Value TO lck-chiave
           ELSE
              MOVE Low-Value TO lck-chiave
           END-IF
           .

      * lockfile
       DataSet1-lockfile-START.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY >= lck-chiave
           ELSE
              START lockfile KEY <= lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-NOTGREATER.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY <= lck-chiave
           ELSE
              START lockfile KEY >= lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-GREATER.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY > lck-chiave
           ELSE
              START lockfile KEY < lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-LESS.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY < lck-chiave
           ELSE
              START lockfile KEY > lck-chiave
           END-IF
           .

       DataSet1-lockfile-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lockfile-LOCK
              READ lockfile WITH LOCK 
              KEY lck-chiave
           ELSE
              READ lockfile WITH NO LOCK 
              KEY lck-chiave
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT 
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lockfile-KEY-Asc
              IF DataSet1-lockfile-LOCK
                 READ lockfile NEXT WITH LOCK
              ELSE
                 READ lockfile NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockfile-LOCK
                 READ lockfile PREVIOUS WITH LOCK
              ELSE
                 READ lockfile PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-lockfile-KEY-Asc
              IF DataSet1-lockfile-LOCK
                 READ lockfile PREVIOUS WITH LOCK
              ELSE
                 READ lockfile PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockfile-LOCK
                 READ lockfile NEXT WITH LOCK
              ELSE
                 READ lockfile NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeWrite>
      * <TOTEM:END>
           WRITE lck-rec OF lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRewrite>
      * <TOTEM:END>
           REWRITE lck-rec OF lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeDelete>
      * <TOTEM:END>
           DELETE lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-INITSTART.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              MOVE Low-Value TO tblis-chiave
           ELSE
              MOVE High-Value TO tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-INITEND.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              MOVE High-Value TO tblis-chiave
           ELSE
              MOVE Low-Value TO tblis-chiave
           END-IF
           .

      * tmp-blis-eva
       DataSet1-tmp-blis-eva-START.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY >= tblis-chiave
           ELSE
              START tmp-blis-eva KEY <= tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-START-NOTGREATER.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY <= tblis-chiave
           ELSE
              START tmp-blis-eva KEY >= tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-START-GREATER.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY > tblis-chiave
           ELSE
              START tmp-blis-eva KEY < tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-START-LESS.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY < tblis-chiave
           ELSE
              START tmp-blis-eva KEY > tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeWrite>
      * <TOTEM:END>
           WRITE tblis-rec OF tmp-blis-eva.
           MOVE STATUS-tmp-blis-eva TO TOTEM-ERR-STAT
           MOVE "tmp-blis-eva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-blis-eva TO TOTEM-ERR-STAT
           MOVE "tmp-blis-eva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-blis-eva TO TOTEM-ERR-STAT
           MOVE "tmp-blis-eva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-zoom-art-giac-INITSTART.
           IF DataSet1-zoom-art-giac-KEY-Asc
              MOVE Low-Value TO zag-chiave
           ELSE
              MOVE High-Value TO zag-chiave
           END-IF
           .

       DataSet1-zoom-art-giac-INITEND.
           IF DataSet1-zoom-art-giac-KEY-Asc
              MOVE High-Value TO zag-chiave
           ELSE
              MOVE Low-Value TO zag-chiave
           END-IF
           .

      * zoom-art-giac
       DataSet1-zoom-art-giac-START.
           IF DataSet1-zoom-art-giac-KEY-Asc
              START zoom-art-giac KEY >= zag-chiave
           ELSE
              START zoom-art-giac KEY <= zag-chiave
           END-IF
           .

       DataSet1-zoom-art-giac-START-NOTGREATER.
           IF DataSet1-zoom-art-giac-KEY-Asc
              START zoom-art-giac KEY <= zag-chiave
           ELSE
              START zoom-art-giac KEY >= zag-chiave
           END-IF
           .

       DataSet1-zoom-art-giac-START-GREATER.
           IF DataSet1-zoom-art-giac-KEY-Asc
              START zoom-art-giac KEY > zag-chiave
           ELSE
              START zoom-art-giac KEY < zag-chiave
           END-IF
           .

       DataSet1-zoom-art-giac-START-LESS.
           IF DataSet1-zoom-art-giac-KEY-Asc
              START zoom-art-giac KEY < zag-chiave
           ELSE
              START zoom-art-giac KEY > zag-chiave
           END-IF
           .

       DataSet1-zoom-art-giac-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-zoom-art-giac-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-zoom-art-giac-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-zoom-art-giac-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeWrite>
      * <TOTEM:END>
           WRITE zag-rec OF zoom-art-giac.
           MOVE STATUS-zoom-art-giac TO TOTEM-ERR-STAT
           MOVE "zoom-art-giac" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-zoom-art-giac-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-zoom-art-giac TO TOTEM-ERR-STAT
           MOVE "zoom-art-giac" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-zoom-art-giac-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-zoom-art-giac TO TOTEM-ERR-STAT
           MOVE "zoom-art-giac" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:zoom-art-giac, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-INITSTART.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE Low-Value TO tcl-chiave
           ELSE
              MOVE High-Value TO tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-INITEND.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE High-Value TO tcl-chiave
           ELSE
              MOVE Low-Value TO tcl-chiave
           END-IF
           .

      * ttipocli
       DataSet1-ttipocli-START.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY >= tcl-chiave
           ELSE
              START ttipocli KEY <= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-NOTGREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY <= tcl-chiave
           ELSE
              START ttipocli KEY >= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-GREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY > tcl-chiave
           ELSE
              START ttipocli KEY < tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-LESS.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY < tcl-chiave
           ELSE
              START ttipocli KEY > tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ttipocli-LOCK
              READ ttipocli WITH LOCK 
              KEY tcl-chiave
           ELSE
              READ ttipocli WITH NO LOCK 
              KEY tcl-chiave
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT 
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tscorte-INITSTART.
           IF DataSet1-tscorte-KEY-Asc
              MOVE Low-Value TO sco-chiave
           ELSE
              MOVE High-Value TO sco-chiave
           END-IF
           .

       DataSet1-tscorte-INITEND.
           IF DataSet1-tscorte-KEY-Asc
              MOVE High-Value TO sco-chiave
           ELSE
              MOVE Low-Value TO sco-chiave
           END-IF
           .

      * tscorte
       DataSet1-tscorte-START.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY >= sco-chiave
           ELSE
              START tscorte KEY <= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-NOTGREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY <= sco-chiave
           ELSE
              START tscorte KEY >= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-GREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY > sco-chiave
           ELSE
              START tscorte KEY < sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-LESS.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY < sco-chiave
           ELSE
              START tscorte KEY > sco-chiave
           END-IF
           .

       DataSet1-tscorte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tscorte-LOCK
              READ tscorte WITH LOCK 
              KEY sco-chiave
           ELSE
              READ tscorte WITH NO LOCK 
              KEY sco-chiave
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT 
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       promoeva-pev-k-art-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-art-SPLITBUF
           MOVE pev-articolo OF promoeva(1:6) TO 
           promoeva-pev-k-art-SPLITBUF(1:6)
           MOVE pev-tpr-codice OF promoeva(1:15) TO 
           promoeva-pev-k-art-SPLITBUF(7:15)
           .

       promoeva-pev-k-descr-art-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-descr-art-SPLITBUF
           MOVE pev-descr-art OF promoeva(1:50) TO 
           promoeva-pev-k-descr-art-SPLITBUF(1:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-descr-art-SPLITBUF(51:14)
           .

       promoeva-pev-k-gdo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-gdo-SPLITBUF
           MOVE pev-gdo OF promoeva(1:5) TO 
           promoeva-pev-k-gdo-SPLITBUF(1:5)
           MOVE pev-descr-art OF promoeva(1:50) TO 
           promoeva-pev-k-gdo-SPLITBUF(6:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-gdo-SPLITBUF(56:14)
           .

       promoeva-pev-k-fittizia-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-fittizia-SPLITBUF
           MOVE pev-fittizia OF promoeva(1:1) TO 
           promoeva-pev-k-fittizia-SPLITBUF(1:1)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-fittizia-SPLITBUF(2:14)
           .

       promoeva-pev-k-promo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-promo-SPLITBUF
           MOVE pev-tpr-codice OF promoeva(1:15) TO 
           promoeva-pev-k-promo-SPLITBUF(1:15)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-promo-SPLITBUF(16:14)
           .

       promoeva-pev-k-descr-promo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-descr-promo-SPLITBUF
           MOVE pev-tpr-descrizione OF promoeva(1:50) TO 
           promoeva-pev-k-descr-promo-SPLITBUF(1:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-descr-promo-SPLITBUF(51:14)
           .

       DataSet1-promoeva-INITSTART.
           IF DataSet1-promoeva-KEY-Asc
              MOVE Low-Value TO pev-chiave OF promoeva
           ELSE
              MOVE High-Value TO pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-INITEND.
           IF DataSet1-promoeva-KEY-Asc
              MOVE High-Value TO pev-chiave OF promoeva
           ELSE
              MOVE Low-Value TO pev-chiave OF promoeva
           END-IF
           .

      * promoeva
       DataSet1-promoeva-START.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY >= pev-chiave OF promoeva
           ELSE
              START promoeva KEY <= pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-NOTGREATER.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY <= pev-chiave OF promoeva
           ELSE
              START promoeva KEY >= pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-GREATER.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY > pev-chiave OF promoeva
           ELSE
              START promoeva KEY < pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-LESS.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY < pev-chiave OF promoeva
           ELSE
              START promoeva KEY > pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-promoeva-LOCK
              READ promoeva WITH LOCK 
              KEY pev-chiave OF promoeva
           ELSE
              READ promoeva WITH NO LOCK 
              KEY pev-chiave OF promoeva
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT 
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-promoeva-KEY-Asc
              IF DataSet1-promoeva-LOCK
                 READ promoeva NEXT WITH LOCK
              ELSE
                 READ promoeva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-promoeva-LOCK
                 READ promoeva PREVIOUS WITH LOCK
              ELSE
                 READ promoeva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-promoeva-KEY-Asc
              IF DataSet1-promoeva-LOCK
                 READ promoeva PREVIOUS WITH LOCK
              ELSE
                 READ promoeva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-promoeva-LOCK
                 READ promoeva NEXT WITH LOCK
              ELSE
                 READ promoeva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterDelete>
      * <TOTEM:END>
           .

       tmp-k-mrordini-k-mro-promo-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mrordini-k-mro-promo-SPLITBUF
           MOVE k-mro-promo(1:15) TO 
           tmp-k-mrordini-k-mro-promo-SPLITBUF(1:15)
           MOVE k-mro-articolo(1:6) TO 
           tmp-k-mrordini-k-mro-promo-SPLITBUF(16:6)
           MOVE k-mro-chiave(1:17) TO 
           tmp-k-mrordini-k-mro-promo-SPLITBUF(22:17)
           .

       tmp-k-mrordini-k-mro-blister-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mrordini-k-mro-blister-SPLITBUF
           MOVE k-mro-chiave(1:17) TO 
           tmp-k-mrordini-k-mro-blister-SPLITBUF(1:17)
           MOVE k-mro-bli-codice(1:6) TO 
           tmp-k-mrordini-k-mro-blister-SPLITBUF(18:6)
           .

       DataSet1-tmp-k-mrordini-INITSTART.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              MOVE Low-Value TO k-mro-chiave
           ELSE
              MOVE High-Value TO k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-INITEND.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              MOVE High-Value TO k-mro-chiave
           ELSE
              MOVE Low-Value TO k-mro-chiave
           END-IF
           .

      * tmp-k-mrordini
       DataSet1-tmp-k-mrordini-START.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY >= k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY <= k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-START-NOTGREATER.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY <= k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY >= k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-START-GREATER.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY > k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY < k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-START-LESS.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY < k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY > k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeWrite>
      * <TOTEM:END>
           WRITE k-mro-rec OF tmp-k-mrordini.
           MOVE STATUS-tmp-k-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterDelete>
      * <TOTEM:END>
           .

       tmp-k-mtordini-tmp-k-promo-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mtordini-tmp-k-promo-SPLITBUF
           MOVE k-mto-promo(1:1) TO 
           tmp-k-mtordini-tmp-k-promo-SPLITBUF(1:1)
           MOVE k-mto-chiave(1:12) TO 
           tmp-k-mtordini-tmp-k-promo-SPLITBUF(2:12)
           .

       tmp-k-mtordini-tmp-k-valutare-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mtordini-tmp-k-valutare-SPLITBUF
           MOVE k-mto-evadibile(1:1) TO 
           tmp-k-mtordini-tmp-k-valutare-SPLITBUF(1:1)
           MOVE k-mto-chiave(1:12) TO 
           tmp-k-mtordini-tmp-k-valutare-SPLITBUF(2:12)
           .

       tmp-k-mtordini-tmp-k-valutare-blister-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF
           MOVE k-mto-evadibile(1:1) TO 
           tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF(1:1)
           MOVE k-mto-blister(1:1) TO 
           tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF(2:1)
           MOVE k-mto-chiave(1:12) TO 
           tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF(3:12)
           .

       DataSet1-tmp-k-mtordini-INITSTART.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              MOVE Low-Value TO k-mto-chiave
           ELSE
              MOVE High-Value TO k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-INITEND.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              MOVE High-Value TO k-mto-chiave
           ELSE
              MOVE Low-Value TO k-mto-chiave
           END-IF
           .

      * tmp-k-mtordini
       DataSet1-tmp-k-mtordini-START.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY >= k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY <= k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-START-NOTGREATER.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY <= k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY >= k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-START-GREATER.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY > k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY < k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-START-LESS.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY < k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY > k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeWrite>
      * <TOTEM:END>
           WRITE k-mto-rec OF tmp-k-mtordini.
           MOVE STATUS-tmp-k-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mtordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mtordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mtordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-INITSTART.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              MOVE Low-Value TO tqe-chiave
           ELSE
              MOVE High-Value TO tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-INITEND.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              MOVE High-Value TO tqe-chiave
           ELSE
              MOVE Low-Value TO tqe-chiave
           END-IF
           .

      * tmp-qta-eva
       DataSet1-tmp-qta-eva-START.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY >= tqe-chiave
           ELSE
              START tmp-qta-eva KEY <= tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-START-NOTGREATER.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY <= tqe-chiave
           ELSE
              START tmp-qta-eva KEY >= tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-START-GREATER.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY > tqe-chiave
           ELSE
              START tmp-qta-eva KEY < tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-START-LESS.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY < tqe-chiave
           ELSE
              START tmp-qta-eva KEY > tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeWrite>
      * <TOTEM:END>
           WRITE tqe-rec OF tmp-qta-eva.
           MOVE STATUS-tmp-qta-eva TO TOTEM-ERR-STAT
           MOVE "tmp-qta-eva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-eva TO TOTEM-ERR-STAT
           MOVE "tmp-qta-eva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-eva TO TOTEM-ERR-STAT
           MOVE "tmp-qta-eva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-INITSTART.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              MOVE Low-Value TO tqp-chiave
           ELSE
              MOVE High-Value TO tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-INITEND.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              MOVE High-Value TO tqp-chiave
           ELSE
              MOVE Low-Value TO tqp-chiave
           END-IF
           .

      * tmp-qta-pren
       DataSet1-tmp-qta-pren-START.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY >= tqp-chiave
           ELSE
              START tmp-qta-pren KEY <= tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-START-NOTGREATER.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY <= tqp-chiave
           ELSE
              START tmp-qta-pren KEY >= tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-START-GREATER.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY > tqp-chiave
           ELSE
              START tmp-qta-pren KEY < tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-START-LESS.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY < tqp-chiave
           ELSE
              START tmp-qta-pren KEY > tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeWrite>
      * <TOTEM:END>
           WRITE tqp-rec OF tmp-qta-pren.
           MOVE STATUS-tmp-qta-pren TO TOTEM-ERR-STAT
           MOVE "tmp-qta-pren" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-pren TO TOTEM-ERR-STAT
           MOVE "tmp-qta-pren" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-pren TO TOTEM-ERR-STAT
           MOVE "tmp-qta-pren" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-multigest-INITSTART.
           IF DataSet1-multigest-KEY-Asc
              MOVE Low-Value TO mul-chiave
           ELSE
              MOVE High-Value TO mul-chiave
           END-IF
           .

       DataSet1-multigest-INITEND.
           IF DataSet1-multigest-KEY-Asc
              MOVE High-Value TO mul-chiave
           ELSE
              MOVE Low-Value TO mul-chiave
           END-IF
           .

      * multigest
       DataSet1-multigest-START.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY >= mul-chiave
           ELSE
              START multigest KEY <= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-NOTGREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY <= mul-chiave
           ELSE
              START multigest KEY >= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-GREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY > mul-chiave
           ELSE
              START multigest KEY < mul-chiave
           END-IF
           .

       DataSet1-multigest-START-LESS.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY < mul-chiave
           ELSE
              START multigest KEY > mul-chiave
           END-IF
           .

       DataSet1-multigest-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-multigest-LOCK
              READ multigest WITH LOCK 
              KEY mul-chiave
           ELSE
              READ multigest WITH NO LOCK 
              KEY mul-chiave
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT 
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeWrite>
      * <TOTEM:END>
           WRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeDelete>
      * <TOTEM:END>
           DELETE multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterDelete>
      * <TOTEM:END>
           .

       blister-k-magaz-MERGE-SPLITBUF.
           INITIALIZE blister-k-magaz-SPLITBUF
           MOVE bli-magazzino(1:3) TO blister-k-magaz-SPLITBUF(1:3)
           MOVE bli-codice(1:6) TO blister-k-magaz-SPLITBUF(4:6)
           .

       blister-k-des-MERGE-SPLITBUF.
           INITIALIZE blister-k-des-SPLITBUF
           MOVE bli-descrizione(1:50) TO blister-k-des-SPLITBUF(1:50)
           .

       DataSet1-blister-INITSTART.
           IF DataSet1-blister-KEY-Asc
              MOVE Low-Value TO bli-chiave
           ELSE
              MOVE High-Value TO bli-chiave
           END-IF
           .

       DataSet1-blister-INITEND.
           IF DataSet1-blister-KEY-Asc
              MOVE High-Value TO bli-chiave
           ELSE
              MOVE Low-Value TO bli-chiave
           END-IF
           .

      * blister
       DataSet1-blister-START.
           IF DataSet1-blister-KEY-Asc
              START blister KEY >= bli-chiave
           ELSE
              START blister KEY <= bli-chiave
           END-IF
           .

       DataSet1-blister-START-NOTGREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY <= bli-chiave
           ELSE
              START blister KEY >= bli-chiave
           END-IF
           .

       DataSet1-blister-START-GREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY > bli-chiave
           ELSE
              START blister KEY < bli-chiave
           END-IF
           .

       DataSet1-blister-START-LESS.
           IF DataSet1-blister-KEY-Asc
              START blister KEY < bli-chiave
           ELSE
              START blister KEY > bli-chiave
           END-IF
           .

       DataSet1-blister-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-blister-LOCK
              READ blister WITH LOCK 
              KEY bli-chiave
           ELSE
              READ blister WITH NO LOCK 
              KEY bli-chiave
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT 
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE mto-rec OF mtordini
           INITIALIZE mro-rec OF mrordini
           INITIALIZE art-rec OF articoli
           INITIALIZE cli-rec OF clienti
           INITIALIZE des-rec OF destini
           INITIALIZE tpr-rec OF tpromo
           INITIALIZE rof-rec OF rordforn
           INITIALIZE tof-rec OF tordforn
           INITIALIZE gdo-rec OF tgrupgdo
           INITIALIZE desf-rec OF destinif
           INITIALIZE tgia-rec OF tmp-giang
           INITIALIZE tmro-rec OF tmp-mrordini
           INITIALIZE prg-rec OF progmag
           INITIALIZE tmto-rec OF tmp-mtordini
           INITIALIZE sof-rec OF sordforn
           INITIALIZE imb-rec OF timballi
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE ror-rec OF rordini
           INITIALIZE tag-rec OF tagli
           INITIALIZE tor-rec OF tordini
           INITIALIZE lck-rec OF lockfile
           INITIALIZE tblis-rec OF tmp-blis-eva
           INITIALIZE tge-rec OF tparamge
           INITIALIZE zag-rec OF zoom-art-giac
           INITIALIZE mar-rec OF tmarche
           INITIALIZE tcl-rec OF ttipocli
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE sco-rec OF tscorte
           INITIALIZE prm-rec OF param
           INITIALIZE pev-rec OF promoeva
           INITIALIZE k-mro-rec OF tmp-k-mrordini
           INITIALIZE k-mto-rec OF tmp-k-mtordini
           INITIALIZE tqe-rec OF tmp-qta-eva
           INITIALIZE tqp-rec OF tmp-qta-pren
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE mul-rec OF multigest
           INITIALIZE bli-rec OF blister
           .


      * GRID
       gd-art2-Content.
      * CELLS' SETTING
              MODIFY gd-art2, X = 1, Y = 1,
                CELL-DATA = "Articolo",
      * CELLS' SETTING
              MODIFY gd-art2, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
           .

      * COMBO-BOX
       cbo-promo-Content.
           .

      * GRID
       gd-1-Content.
      * CELLS' SETTING
              MODIFY gd-1, X = 1, Y = 1,
                CELL-DATA = "Anno",
      * CELLS' SETTING
              MODIFY gd-1, X = 2, Y = 1,
                CELL-DATA = "Numero",
      * CELLS' SETTING
              MODIFY gd-1, X = 3, Y = 1,
                CELL-DATA = "Gruppo GDO",
      * CELLS' SETTING
              MODIFY gd-1, X = 4, Y = 1,
                CELL-DATA = "Cliente",
      * CELLS' SETTING
              MODIFY gd-1, X = 5, Y = 1,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd-1, X = 6, Y = 1,
                CELL-DATA = "Data Ord",
      * CELLS' SETTING
              MODIFY gd-1, X = 7, Y = 1,
                CELL-COLOR = 5,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Data Cons.",
           .

      * GRID
       gd-2-Content.
      * CELLS' SETTING
              MODIFY gd-2, X = 2, Y = 1,
                CELL-COLOR = 385,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Articolo",
      * CELLS' SETTING
              MODIFY gd-2, X = 3, Y = 1,
                CELL-COLOR = 385,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Inevaso",
      * CELLS' SETTING
              MODIFY gd-2, X = 4, Y = 1,
                CELL-COLOR = 385,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Ord (6)",
      * CELLS' SETTING
              MODIFY gd-2, X = 5, Y = 1,
                CELL-COLOR = 449,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Qta Ord",
      * CELLS' SETTING
              MODIFY gd-2, X = 6, Y = 1,
                CELL-COLOR = 449,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Qta Pre",
      * CELLS' SETTING
              MODIFY gd-2, X = 7, Y = 1,
                CELL-COLOR = 449,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Dt Arrivo",
      * CELLS' SETTING
              MODIFY gd-2, X = 8, Y = 1,
                CELL-COLOR = 449,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Note",
      * CELLS' SETTING
              MODIFY gd-2, X = 9, Y = 1,
                CELL-COLOR = 449,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Fornitore",
      * CELLS' SETTING
              MODIFY gd-2, X = 10, Y = 1,
                CELL-COLOR = 449,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd-2, X = 11, Y = 1,
                CELL-COLOR = 449,
                CELL-FONT Arial8B-Occidentale,
                CELL-DATA = "Ord. For.",
           .

      * FD's Initialize Paragraph
       DataSet1-mtordini-INITREC.
           INITIALIZE mto-rec OF mtordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-mrordini-INITREC.
           INITIALIZE mro-rec OF mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destini-INITREC.
           INITIALIZE des-rec OF destini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpromo-INITREC.
           INITIALIZE tpr-rec OF tpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tgrupgdo-INITREC.
           INITIALIZE gdo-rec OF tgrupgdo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destinif-INITREC.
           INITIALIZE desf-rec OF destinif
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-giang-INITREC.
           INITIALIZE tgia-rec OF tmp-giang
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-mrordini-INITREC.
           INITIALIZE tmro-rec OF tmp-mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-mtordini-INITREC.
           INITIALIZE tmto-rec OF tmp-mtordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-sordforn-INITREC.
           INITIALIZE sof-rec OF sordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordini-INITREC.
           INITIALIZE ror-rec OF rordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tagli-INITREC.
           INITIALIZE tag-rec OF tagli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordini-INITREC.
           INITIALIZE tor-rec OF tordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lockfile-INITREC.
           INITIALIZE lck-rec OF lockfile
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-blis-eva-INITREC.
           INITIALIZE tblis-rec OF tmp-blis-eva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-zoom-art-giac-INITREC.
           INITIALIZE zag-rec OF zoom-art-giac
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ttipocli-INITREC.
           INITIALIZE tcl-rec OF ttipocli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tscorte-INITREC.
           INITIALIZE sco-rec OF tscorte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-promoeva-INITREC.
           INITIALIZE pev-rec OF promoeva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-k-mrordini-INITREC.
           INITIALIZE k-mro-rec OF tmp-k-mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-k-mtordini-INITREC.
           INITIALIZE k-mto-rec OF tmp-k-mtordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-qta-eva-INITREC.
           INITIALIZE tqe-rec OF tmp-qta-eva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-qta-pren-INITREC.
           INITIALIZE tqp-rec OF tmp-qta-pren
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-multigest-INITREC.
           INITIALIZE mul-rec OF multigest
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-blister-INITREC.
           INITIALIZE bli-rec OF blister
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 2 ALSO 0
                  PERFORM scr-ordini-Buf-To-Fld
           END-EVALUATE
           .

       scr-elab-Open-Routine.
           PERFORM scr-elab-Scrn
           PERFORM scr-elab-Proc
           .

       scr-elab-Scrn.
           PERFORM scr-elab-Create-Win
           PERFORM scr-elab-Init-Value
           PERFORM scr-elab-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 2,39,
              SIZE 30,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-elab-Handle,
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab UPON scr-elab-Handle
      * DISPLAY-COLUMNS settings
           .

       scr-elab-PROC.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeAccept>
           call "w$mouse" using set-mouse-shape, wait-pointer
           perform CARICA-ORDINI.

           call "w$mouse" using set-mouse-shape, arrow-pointer.

           perform SCR-ELAB-EXIT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab-Handle
           INITIALIZE Key-Status
           .

       scr-elab-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab-CLEAR.
           PERFORM scr-elab-INIT-VALUE
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab UPON scr-elab-Handle
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen1-blockpgm-1a, Disable **>>

      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-elab-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab-FLD-TO-BUF
           .


       scr-elab-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab-SHOW-MSG-ROUTINE
           .

       scr-elab-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab-DISPLAY-MESSAGE
           .

       scr-elab-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab-Save-Status.
           .             

       scr-elab-Restore-Status.
           .

       scr-ordini-Open-Routine.
           PERFORM scr-ordini-Scrn
           PERFORM scr-ordini-Proc
           .

       scr-ordini-Scrn.
           PERFORM scr-ordini-Create-Win
           PERFORM scr-ordini-Init-Value
           PERFORM scr-ordini-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM scr-ordini-DISPLAY
           .

       scr-ordini-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 51,50,
              SIZE 212,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Arial8-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-ordini-Handle,
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,79,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY scr-ordini UPON scr-ordini-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-art2, DISPLAY-COLUMNS (1, 9)
              MODIFY gd-1, DISPLAY-COLUMNS (1, 8, 19, 59, 104, 149, 162)
              MODIFY gd-2, DISPLAY-COLUMNS (1, 4, 45, 56, 68, 76, 87, 
           98, 128, 158, 188)
           .

       scr-ordini-PROC.
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeAccept>
           accept versione-evasione from environment "VERSIONE_EVASIONE"
           modify cbo-promo, reset-list = 1.
      *****     if vecchia-evasione
      *****        accept data-oggi from century-date
      *****        perform CALCOLA-DATE
      *****        move data-consegna to data-start
      *****        move data-cons-max to data-end
      *****     end-if.

           perform SCRIVI-LOCKFILE.
           perform SCR-ELAB-OPEN-ROUTINE.

           modify scr-ordini-handle visible true.
           move data-start to como-data.
           perform DATE-TO-SCREEN.
           move como-data to ef-data-from-buf.
           display lab-data-from.
           move data-end to como-data.
           perform DATE-TO-SCREEN.
           move como-data to ef-data-to-buf.
           display lab-data-to.
           if trovato-ordine-master
              perform RIEMPI-GD-1
              perform RIEMPI-GD-2
           else
              modify gd-1, reset-grid = 1
              modify gd-2, reset-grid = 1
              perform GD-1-CONTENT
              perform GD-2-CONTENT
              display message "Nessun master risulta avere problemi nel 
      -    "periodo indicato"
                        title titolo
           end-if.
           set ActionGrid to false.
           move 78-tutti-vol  to cbo-promo-buf.
           modify cbo-promo,  item-to-add cbo-promo-buf.   
           modify cbo-promo,  value 78-tutti-vol.
           set SaltaPromo to true.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-ordini
                 ON EXCEPTION
                    PERFORM scr-ordini-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-ordini-Handle
           INITIALIZE Key-Status
           .

       scr-ordini-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterAccept>
           if ActionGrid
              if GestisciAzione
                 continue
      *****           inquire gd-2(riga, 11), cell-data in col2-chiave-ordf
      *****           inquire gd-2(riga,  3), cell-data in col2-inevaso
      *****           move col2-inevaso to como-chiave-m
      *****           inspect como-num-m replacing leading x"20" by x"30"
      *****           move como-num-m  to mto-numero
      *****           move como-anno-m to mto-anno
      *****           move riga to store-riga
      *****           inquire gd-2(riga, 1), hidden-data in gd-hidden
      *****           move hid-master-ordf to mro-chiave
      *****           read mrordini no lock invalid continue end-read
      *****           if mro-si-blister
      *****              move 0 to e-blister
      *****           else
      *****              move 1 to e-blister
      *****           end-if
      *****           perform SCR-AZIONE-OPEN-ROUTINE
      *****           if SiSalvato
      *****              if azione = 2
      *****                 perform RESET-GRIGLIE
      *****                 perform PB-APPLICA-LINKTO
      *****              else
      *****                 evaluate azione
      *****                 when 1 set tgia-attesa         to true
      *****                 when 2 set tgia-sostituzione   to true
      *****                 when 3 set tgia-tenere-saldo   to true
      *****                 when 4 set tgia-tagliare-merce to true
      *****                 end-evaluate
      *****                 evaluate true
      *****                 when tgia-attesa          move "RESTA IN ATTESA" to col2-chiave-ordf
      *****                 when tgia-tagliare-merce  move "TAGLIARE MERCE"  to col2-chiave-ordf
      *****                 when tgia-tenere-saldo    move "TENERE SALDO"    to col2-chiave-ordf
      *****                 when tgia-sostituzione    move "SOSTITUZIONE"    to col2-chiave-ordf
      *****                 end-evaluate
      *****                 modify gd-2(store-riga, 11), cell-data col2-chiave-ordf
      *****                 modify gd-2, cursor-y store-riga, cursor-x 12
      *****                 move 78-ID-gd-2 to control-id
      *****                 move 4          to accept-control
      *****                 perform STATO-GD-1
      *****              end-if
      *****           end-if
              else
                 if ApriRighe
                    perform APRI-RIGHE
                 else
                    perform CHIUDI-RIGHE
                 end-if
              end-if
           end-if.
      
           set ActionGrid to false.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-ordini-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-ordini-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-applica-LinkTo
              WHEN Key-Status = 27
                 PERFORM TOOL-CERCA-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
              WHEN Key-Status = 7
                 PERFORM TOOL-STAMPA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-ordini-CLEAR.
           PERFORM scr-ordini-INIT-VALUE
           PERFORM scr-ordini-DISPLAY
           .

       scr-ordini-DISPLAY.
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY scr-ordini UPON scr-ordini-Handle
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-ordini-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeExit>
           move 1 to num-screen.
           
           if path-tmp-giang not = spaces
              close       tmp-giang
              delete file tmp-giang
              move spaces to path-tmp-giang
           end-if.
           perform DELETE-LOCKFILE.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-ordini-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-art2-Content
      * COMBO-BOX
           PERFORM cbo-promo-Content
      * GRID
           PERFORM gd-1-Content
      * GRID
           PERFORM gd-2-Content
           .

       scr-ordini-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM scr-ordini-DataSet1-Update-Key
           .

       scr-ordini-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           PERFORM scr-ordini-DataSet1-Update-Key
           .

       scr-ordini-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           PERFORM scr-ordini-DataSet1-Update-Key
           .

       scr-ordini-DataSet1-Update-Key.
           MOVE mto-rec OF mtordini TO
                     scr-ordini-MULKEY-TMPBUF
           PERFORM scr-ordini-CLEAR
           PERFORM scr-ordini-INIT-DATA
           MOVE scr-ordini-MULKEY-TMPBUF TO
                     mto-rec OF mtordini
           PERFORM DataSet1-mtordini-Read
           PERFORM scr-ordini-DUPLICATE-MOVEKEY
           PERFORM scr-ordini-DUMMY-CURR
           PERFORM scr-ordini-IUD-Display
           .

       scr-ordini-DUPLICATE-MOVEKEY.
           .

       scr-ordini-First.
           PERFORM scr-ordini-DUMMY-FIRST
           PERFORM DataSet1-mtordini-INITSTART
           PERFORM DataSet1-mtordini-START
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Next
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterFirst>
      * <TOTEM:END>
           PERFORM scr-ordini-DUPLICATE-MOVEKEY.
           PERFORM scr-ordini-IUD-Display
           .

       scr-ordini-Previous.
              PERFORM scr-ordini-Buf-To-Fld
              PERFORM DataSet1-mtordini-START-LESS
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Prev
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterPrevious>
      * <TOTEM:END>
           PERFORM scr-ordini-DUPLICATE-MOVEKEY
           PERFORM scr-ordini-DUMMY-PREVIOUS
           PERFORM scr-ordini-IUD-Display
           .

       scr-ordini-Next.
              PERFORM scr-ordini-Buf-To-Fld
              PERFORM DataSet1-mtordini-START-GREATER
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Next
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterNext>
      * <TOTEM:END>
           PERFORM scr-ordini-DUPLICATE-MOVEKEY
           PERFORM scr-ordini-DUMMY-NEXT
           PERFORM scr-ordini-IUD-Display
           .
      
       scr-ordini-Last.
           PERFORM scr-ordini-DUMMY-LAST
           PERFORM DataSet1-mtordini-INITEND
           PERFORM DataSet1-mtordini-START-NOTGREATER
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Prev
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterLast>
      * <TOTEM:END>
           PERFORM scr-ordini-DUPLICATE-MOVEKEY.
           PERFORM scr-ordini-IUD-Display
           .

       scr-ordini-Curr.
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeCurrent>
      * <TOTEM:END>
           PERFORM scr-ordini-Buf-To-Fld
           PERFORM DataSet1-mtordini-Read
           PERFORM scr-ordini-DUPLICATE-MOVEKEY
           PERFORM scr-ordini-DUMMY-CURR
           PERFORM scr-ordini-IUD-Display
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterCurrent>
      * <TOTEM:END>
           .

       scr-ordini-IUD-Display.
           IF Valid-STATUS-mtordini
              PERFORM scr-ordini-ALLGRID-RESET
              PERFORM scr-ordini-Fld-To-Buf
              PERFORM scr-ordini-NAVI-FOR-MASTERGRID
              PERFORM scr-ordini-DISPLAY
           ELSE
              IF scr-ordini-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM scr-ordini-Extended-File-Status
              END-IF
           END-IF
           .

       scr-ordini-Add.
           PERFORM scr-ordini-Buf-To-Fld
           PERFORM scr-ordini-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM scr-ordini-DUMMY-ADD
           PERFORM DataSet1-mtordini-INITREC
           PERFORM scr-ordini-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-mtordini-Rec-Write
           IF Valid-STATUS-mtordini
              PERFORM scr-ordini-RESUMMARY-INS
              PERFORM scr-ordini-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM scr-ordini-IUD-Display
           END-IF
           PERFORM scr-ordini-ERR-CHECKING
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterAdd>
      * <TOTEM:END>
           .
     
       scr-ordini-Update.
           PERFORM scr-ordini-Buf-To-Fld
           PERFORM DataSet1-mtordini-START              
           IF NOT Valid-STATUS-mtordini
              PERFORM scr-ordini-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-mtordini-Read
           PERFORM scr-ordini-Buf-To-Fld
           PERFORM scr-ordini-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM scr-ordini-DUMMY-UPDATE
           PERFORM scr-ordini-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-mtordini-Rec-Rewrite
           IF Valid-STATUS-mtordini
              PERFORM scr-ordini-RESUMMARY-DEL
              PERFORM scr-ordini-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM scr-ordini-IUD-Display
           END-IF
           PERFORM scr-ordini-ERR-CHECKING
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterUpdate>
      * <TOTEM:END>
           .

       scr-ordini-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeDelete>
      * <TOTEM:END>
           PERFORM scr-ordini-DUMMY-DELETE
      * delete
           PERFORM scr-ordini-Buf-To-Fld
           PERFORM DataSet1-mtordini-Rec-Delete
           IF Valid-STATUS-mtordini
              PERFORM scr-ordini-CLEAR
              PERFORM scr-ordini-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-mtordini
           END-IF
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterDelete>
      * <TOTEM:END>
           PERFORM scr-ordini-ERR-CHECKING
           .

       scr-ordini-NAVI-FOR-MASTERGRID.
           .

       scr-ordini-ERR-CHECKING.
           IF Valid-STATUS-mtordini
              PERFORM scr-ordini-SHOW-MSG-ROUTINE
           ELSE
              PERFORM scr-ordini-Extended-File-Status
           END-IF
           .

       scr-ordini-RESUMMARY-INS.
           .

       scr-ordini-RESUMMARY-DEL.
           .


       scr-ordini-DUMMY-FIRST.
           .

       scr-ordini-DUMMY-PREVIOUS.
           .

       scr-ordini-DUMMY-NEXT.
           .

       scr-ordini-DUMMY-LAST.
           .

       scr-ordini-DUMMY-CURR.
           .

       scr-ordini-DUMMY-ADD.
           .

       scr-ordini-DUMMY-UPDATE.
           .

       scr-ordini-DUMMY-UPDATE-INIT.
           .

       scr-ordini-DUMMY-DELETE.
           .

       scr-ordini-DUMMY-DELETE-INIT.
           .

       scr-ordini-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * FORM : scr-ordini
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, SetDefault>
      * <TOTEM:END>
           PERFORM scr-ordini-FLD-TO-BUF
           .


       scr-ordini-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-ordini-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-ordini-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-ordini-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-ordini, FORM:scr-ordini, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-ordini-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-ordini-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-ordini-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-ordini-SHOW-MSG-ROUTINE
           .

       scr-ordini-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-ordini-DISPLAY-MESSAGE
           .

       scr-ordini-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-ordini-Save-Status.
           MOVE DataSet1-mtordini-KEY1-ORDER TO 
           TMP-scr-ordini-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-scr-ordini-KEYIS
           MOVE mto-rec OF mtordini TO 
              TMP-scr-ordini-mtordini-RESTOREBUF
           .             

       scr-ordini-Restore-Status.
           MOVE TMP-scr-ordini-KEY1-ORDER TO 
           DataSet1-mtordini-KEY1-ORDER
           MOVE TMP-scr-ordini-KEYIS TO DataSet1-KEYIS
           MOVE TMP-scr-ordini-mtordini-RESTOREBUF TO
              mto-rec OF mtordini
           PERFORM DataSet1-mtordini-START
           IF Valid-STATUS-mtordini
              PERFORM DataSet1-mtordini-Read-Next
           ELSE
              PERFORM DataSet1-mtordini-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-mtordini OR
              (Valid-STATUS-mtordini AND
                 mto-rec OF mtordini = 
                   TMP-scr-ordini-mtordini-RESTOREBUF)
              PERFORM DataSet1-mtordini-Read-Next
           END-PERFORM
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen scr-ordini
      ***---
       scr-ordini-BEFORE-SCREEN.
           evaluate control-id
           |78-ID-ef-gdo è l'ID del campo ef-gdo
           when 78-ID-ef-gdo
                move 1 to StatusHelp
                perform STATUS-HELP
           |78-ID-ef-cli è l'ID del campo ef-cli
           when 78-ID-ef-cli
                move 1 to StatusHelp
                perform STATUS-HELP
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","

      * Paragrafo per la struttura del codice in AFTER sulla screen scr-ordini
      ***---
       scr-ordini-AFTER-SCREEN.
           evaluate control-id
           |78-ID-ef-gdo è l'ID del campo ef-gdo
           when 78-ID-ef-gdo
                move 0 to StatusHelp
                perform STATUS-HELP

           |78-ID-ef-cli è l'ID del campo ef-cli
           when 78-ID-ef-cli
                move 0 to StatusHelp
                perform STATUS-HELP

           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."

      * Generazione stringa perform CONTROLLO
           evaluate control-id
           |78-ID-ef-gdo è l'ID del campo ef-gdo
           when 78-ID-ef-gdo
                perform CONTROLLO
           |78-ID-ef-cli è l'ID del campo ef-cli
           when 78-ID-ef-cli
                perform CONTROLLO
           |78-ID-ef-data è l'ID del campo ef-data
           when 78-ID-ef-data
                perform CONTROLLO
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER CONTROLLO della screen
           when 99999 continue
           when other continue
           end-evaluate.

       scr-azione-Open-Routine.
           PERFORM scr-azione-Scrn
           PERFORM scr-azione-Proc
           .

       scr-azione-Scrn.
           PERFORM scr-azione-Create-Win
           PERFORM scr-azione-Init-Value
           PERFORM scr-azione-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1aa
           PERFORM scr-azione-DISPLAY
           .

       scr-azione-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 17,94,
              SIZE 60,50,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-azione-SF-HANDLE,
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handleaa
           DISPLAY Form1-Tb-1aa UPON Form1-Tb-1-Handleaa

      * Status-bar
           DISPLAY scr-azione UPON scr-azione-SF-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-azione-PROC.
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, BeforeAccept>
      *****     initialize lab-art-buf.
      *****     move hid-cod-articolo to art-codice.
      *****     read articoli no lock.
      *****     move art-codice to lab-art-buf.
      *****     call "C$JUSTIFY" using lab-art-buf, "L".
      *****     inspect lab-art-buf replacing leading x"30" by x"20".
      *****     inspect lab-art-buf  replacing trailing spaces by low-value.
      *****     string  lab-art-buf  delimited low-value
      *****            " - "           delimited size
      *****            art-descrizione delimited size
      *****            into lab-art-buf
      *****     end-string.
      *****     display lab-art.
      *****
      **********     evaluate col2-chiave-ordf
      **********     when "RESTA IN ATTESA" move 1 to azione
      **********     when "SOSTITUZIONE"    move 2 to azione
      **********     when "TENERE SALDO"    move 3 to azione
      **********     when "TAGLIARE MERCE"  move 4 to azione
      **********     end-evaluate.
      *****
      *****     display rb-attesa rb-sost rb-saldo rb-tagliare.
      *****
      *****     move azione to old-azione.
      *****
      *****     set NoSalvato to true.
      *****
      *****     if azione not = 2
      *****        move 0      to v-sost
      *****        move 0      to ef-art-sost-buf
      *****        move spaces to lab-art-sost-buf
      *****        display ef-art-sost lab-art-sost
      *****     end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-azione
                 ON EXCEPTION
                    PERFORM scr-azione-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-azione-SF-HANDLE
           INITIALIZE Key-Status
           .

       scr-azione-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-azione-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-azione-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM rb-attesa-LinkTo
              WHEN Key-Status = 1000
                 PERFORM rb-sost-LinkTo
              WHEN Key-Status = 1002
                 PERFORM rb-saldo-LinkTo
              WHEN Key-Status = 1003
                 PERFORM rb-tagliare-LinkTo
              WHEN Key-Status = 27
                 PERFORM TOOL-CERCA-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCAa-LinkTo
              WHEN Key-Status = 3
                 PERFORM TOOL-SALVA2-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-azione-CLEAR.
           PERFORM scr-azione-INIT-VALUE
           PERFORM scr-azione-DISPLAY
           .

       scr-azione-DISPLAY.
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1aa
           DISPLAY scr-azione UPON scr-azione-SF-HANDLE
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen1-blockpgm-1a, Disable **>>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-azione-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, BeforeExit>
           if azione not = old-azione
              display message "Salvare le modifiche?"
                        title titolo
                         type mb-yes-no-cancel
                       giving scelta
              evaluate scelta
              when mb-yes
                   perform SALVA2
              when mb-no
                   continue
              when mb-cancel
                   move 26 to key-status
                   exit paragraph
              end-evaluate
           end-if.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-azione-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-azione-Init-Value.
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, SetDefault>
      * <TOTEM:END>
           PERFORM scr-azione-FLD-TO-BUF
           .


       scr-azione-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-azione-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-azione-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-azione-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-azione, FORM:scr-azione, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-azione-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-azione-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-azione-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-azione-SHOW-MSG-ROUTINE
           .

       scr-azione-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-azione-DISPLAY-MESSAGE
           .

       scr-azione-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-azione-Save-Status.
           .             

       scr-azione-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen scr-azione
      ***---
       scr-azione-BEFORE-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","

      * Paragrafo per la struttura del codice in AFTER sulla screen scr-azione
      ***---
       scr-azione-AFTER-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."

      * Generazione stringa perform CONTROLLO
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER CONTROLLO della screen
           when 99999 continue
           when other continue
           end-evaluate.



       Screen1-Event-Proc.
           .

       gd-art2-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    scr-ordini-Handle 
              PERFORM gd-art2-Ev-Msg-Begin-Drag
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    scr-ordini-Handle 
              PERFORM gd-art2-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5001 ALSO
                    scr-ordini-Handle 
              PERFORM gd-art2-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    scr-ordini-Handle 
              PERFORM gd-art2-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    scr-ordini-Handle 
              PERFORM gd-art2-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    scr-ordini-Handle 
              PERFORM gd-art2-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       Screen2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5005 ALSO
                    scr-ordini-Handle 
              PERFORM gd1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5005 ALSO
                    scr-ordini-Handle 
              PERFORM gd1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5005 ALSO
                    scr-ordini-Handle 
              PERFORM gd1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 5005 ALSO
                    scr-ordini-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5005 ALSO
                    scr-ordini-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5005 ALSO
                    scr-ordini-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       gd-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 5006 ALSO
                    scr-ordini-Handle 
              PERFORM gd-Ev-Msg-Begin-Entry
           WHEN Msg-Cancel-Entry ALSO 5006 ALSO
                    scr-ordini-Handle 
              PERFORM gd-2-Ev-Msg-Cancel-Entry
           WHEN Msg-Finish-Entry ALSO 5006 ALSO
                    scr-ordini-Handle 
              PERFORM gd-2-Ev-Msg-Finish-Entry
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       APRI-RIGHE.
      * <TOTEM:PARA. APRI-RIGHE>
           modify gd-2 (riga, 1),
                  bitmap        = multi-s-bmp,
                  bitmap-number = 2,
                  bitmap-width  = 16.
           set hid-open   to true.
           modify gd-2(riga,  1), hidden-data gd-hidden.
           add 1 to riga.

           if hid-tot-ordfor > 1
              set tgia-ordfor       to true
              move hid-cod-articolo to tgia-cod-articolo
              start tmp-giang key >= tgia-k-articolo
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read tmp-giang next at end exit perform end-read
                       if tgia-cod-articolo not = hid-cod-articolo or
                          tgia-articolo                            or
                          tgia-master
                          exit perform
                       end-if
                       modify gd-2, insertion-index riga, insert-rows = 
           1
                       move tgia-anno   to tgia-anno-ordf
                       move tgia-numero to tgia-numero-ordf

                       move 257 to colore
                       perform CELLE-ORDF
                       perform CELLE-ORDF-DISPLAY
                       set hid-figlio to true
                       set hid-open   to true
                       move 0 to hid-tot-ordfor
                       move tgia-master-ordf to hid-master-ordf
                       move tgia-ordf        to hid-ordf
                       modify gd-2(riga, 1), hidden-data gd-hidden
                       modify gd-2(riga, 1),
                              bitmap        = multi-s-bmp,
                              bitmap-number = 4,
                              bitmap-width  = 16

                       add 1 to riga
                    end-perform
              end-start
           end-if.

           modify gd-2, insertion-index riga, insert-rows = 1.
           set hid-figlio to true.
           set hid-open   to true.
           modify gd-2(riga,  3), cell-data "Master".
           modify gd-2(riga,  4), cell-data "GDO".
           modify gd-2(riga,  5), cell-data "Qta".
           modify gd-2(riga,  6), cell-data "Dt Ordine".
           modify gd-2(riga,  7), cell-data "Dt Cons".
           modify gd-2(riga,  8), cell-data "Promo".
           modify gd-2(riga,  9), cell-data "Cliente".
           modify gd-2(riga, 10), cell-data "Destino".
           modify gd-2(riga, 11), cell-data "Tiene Saldi".

           modify gd-2(riga,  3), cell-color 481, 
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga,  4), cell-color 481,
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga,  5), cell-color 481,
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga,  6), cell-color 481,
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga,  7), cell-color 481,
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga,  8), cell-color 481,
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga,  9), cell-color 481,
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga, 10), cell-color 481,
                                  cell-font  Arial8B-Occidentale.
           modify gd-2(riga, 11), cell-color 481,
                                  cell-font  Arial8B-Occidentale.

           modify gd-2(riga, 1),
                  bitmap        = multi-s-bmp,
                  bitmap-number = 4,
                  bitmap-width  = 16.
      
           modify gd-2(riga, 1), hidden-data gd-hidden.
           
           add 1 to riga.
           set tgia-master      to true
           move hid-cod-articolo to tgia-cod-articolo
           start tmp-giang key >= tgia-k-articolo
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-giang next at end exit perform end-read
                    if tgia-cod-articolo not = hid-cod-articolo or
                       tgia-articolo                            or
                       tgia-ordfor
                       exit perform
                    end-if
                    modify gd-2, insertion-index riga, insert-rows = 1

                    initialize col2-inevaso
                    string tgia-numero delimited size
                           "-"         delimited size
                           tgia-anno   delimited size
                           into col2-inevaso
                    end-string
                    inspect col2-inevaso replacing leading x"30" by x"20
      -    ""
                    move tgia-gdo to col2-ord-gdo

                    move tgia-qta         to col2-qta
                    call "C$JUSTIFY"   using col2-qta, "L"
                    inspect col2-qta replacing leading x"30" by x"20"

                    move tgia-dt-ord(1:4) to col2-qtap-dt-ord(7:4)
                    move "/"              to col2-qtap-dt-ord(6:1)
                    move tgia-dt-ord(5:2) to col2-qtap-dt-ord(4:2)
                    move "/"              to col2-qtap-dt-ord(3:1)
                    move tgia-dt-ord(7:2) to col2-qtap-dt-ord(1:2)

                    move tgia-dt-cons(1:4) to col2-dt-arr-cons(7:4)
                    move "/"               to col2-dt-arr-cons(6:1)
                    move tgia-dt-cons(5:2) to col2-dt-arr-cons(4:2)
                    move "/"               to col2-dt-arr-cons(3:1)
                    move tgia-dt-cons(7:2) to col2-dt-arr-cons(1:2)

                    move tgia-des-promo    to col2-note-promo
                    move tgia-ragsoc       to col2-for-cli
                    move tgia-destino      to col2-destino-CF
                    move tgia-tiene-saldi  to col2-chiave-ordf

      *****              evaluate true
      *****              when tgia-attesa          move "RESTA IN ATTESA" to col2-chiave-ordf
      *****              when tgia-tagliare-merce  move "TAGLIARE MERCE"  to col2-chiave-ordf
      *****              when tgia-tenere-saldo    move "TENERE SALDO"    to col2-chiave-ordf
      *****              when tgia-sostituzione    move "SOSTITUZIONE"    to col2-chiave-ordf
      *****              end-evaluate

                    modify gd-2(riga,  3), cell-data col2-inevaso
                    modify gd-2(riga,  4), cell-data col2-ord-gdo
                    modify gd-2(riga,  5), cell-data col2-qta
                    modify gd-2(riga,  6), cell-data col2-qtap-dt-ord
                    modify gd-2(riga,  7), cell-data col2-dt-arr-cons
                    modify gd-2(riga,  8), cell-data col2-note-promo 
                    modify gd-2(riga,  9), cell-data col2-for-cli
                    modify gd-2(riga, 10), cell-data col2-destino-CF
                    modify gd-2(riga, 11), cell-data col2-chiave-ordf

                    modify gd-2(riga,  3), cell-color 304
                    modify gd-2(riga,  4), cell-color 304
                    modify gd-2(riga,  5), cell-color 304               
                
                    modify gd-2(riga,  6), cell-color 304
                    modify gd-2(riga,  7), cell-color 304
                    modify gd-2(riga,  8), cell-color 304
                    modify gd-2(riga,  9), cell-color 304
                    modify gd-2(riga, 10), cell-color 304
                    modify gd-2(riga, 11), cell-color 513
                                           cell-font  
           Arial8B-Occidentale
                    
                    set hid-figlio to true
                    set hid-open   to true
                    move 0 to hid-tot-ordfor
                    move tgia-master-ordf to hid-master-ordf
                    move tgia-ordf        to hid-ordf
                    modify gd-2(riga, 1), hidden-data gd-hidden
                    modify gd-2(riga, 1),
                           bitmap        = multi-s-bmp,
                           bitmap-number = 4,
                           bitmap-width  = 16
                    add 1 to riga
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       CARICA-ORDINI.
      * <TOTEM:PARA. CARICA-ORDINI>
           perform CREA-FILES.

           move save-magazzino to mag-codice.
           read tmagaz no lock invalid continue end-read.
      *****     if mag-complete-si set EvasioneIntera to true
      *****     else               set EvasioneIntera to false
      *****     end-if.
           accept data-oggi from century-date.

           move 0 to counter counter2.
           move 0 to tot-master.
           move spaces to tge-chiave.
           read tparamge no lock invalid continue end-read.
           move low-value to mto-rec.
           set mto-registrato to true.
           start mtordini key >= k-mto-stato
                 invalid continue
             not invalid perform LOOP-MTORDINI
           end-start.

           if tot-master > 0
              perform CICLO-PROMO
              perform CICLO-EVADIBILITA-PROMO   
              perform CICLO-BANCO
              perform CICLO-EVADIBILITA-BANCO
      *****        if EvasioneIntera
                 perform EVASIONE-INTERA
      *****        end-if
              perform OPERAZIONI-BLISTER
              perform CICLO-GIANG
           else
              display message "Non ci sono master da controllare"
                        title titolo
                         icon 2
           end-if.

      ***---
       LOOP-MTORDINI.
           |FILTRO TUTTI I MASTER APPARTENENTI ALL'EVASIONE SCELTA E NON CHIUSI
           |FILTRO TUTTI I MASTER CON DATA CONSEGNA < DI OGGI+GG-CONSEGNA-MAX 
           |CONSUIDERO QUELLI CON DATA DI CONSEGNA COMPRESA TRA OGGI +
           |GG EVAS. PARZIALE E OGGI + GG CONSEGNA MAX

           perform until 1 = 2
              set record-ok to false
              read mtordini next at end exit perform end-read
              if mto-chiuso exit perform end-if

              perform COUNTER-VIDEO

              |CONTROLLI PRELIMINARI
              if mto-chiuso-man or mto-sped-tot or
                 mto-causale-blocco-manuale|     or
                 |mto-causale-blocco-fido
                 continue
              else
                 set cli-tipo-C to true
                 move mto-cod-cli to cli-codice
                 read clienti no lock invalid continue end-read
                 if cli-attivo   or
                  ( cli-bloccato and cli-fuori-fido )
                    if mto-prg-destino not = 0
                       move mto-cod-cli     to des-codice
                       move mto-prg-destino to des-prog
                       read destini no lock invalid continue end-read
                       if des-attivo
                          set record-ok to true
                       end-if
                    else
                       set record-ok to true
                    end-if
                 end-if
              end-if

              if record-ok
                 move mto-cod-cli     to como-prm-cliente
                 move mto-prg-destino to como-prm-destino
                 perform TROVA-PARAMETRO
                 perform MASTER-NUOVI-CONTROLLI
              end-if
           end-perform.

      ***---
       CICLO-GIANG. 
           move 0 to counter counter2.
           initialize tab-giacenza.
           perform OPEN-OUTPUT-TMP-GIANG.
           initialize tab-promo.

           set tutto-ok              to true.
           set trovato               to false.
           set prima-volta           to true.
           set primo-lancio          to true.
           set trovato-ordine-master to false.
           
           if vecchia-evasione
              perform CALCOLA-DATE
              move data-consegna to data-start
              move data-cons-max to data-end
           end-if.
           
           move low-value to k-mto-rec.
      *****     move 1 to k-mto-promo.
      *****     start tmp-k-mtordini key >= k-mto-promo
           start tmp-k-mtordini key >= k-mto-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2

                    perform COUNTER-VIDEO

                    read tmp-k-mtordini next at end exit perform 
           end-read

                    move k-mto-chiave to mto-chiave
                    read mtordini no lock invalid continue end-read

                    move mto-cod-cli     to como-prm-cliente
                    move mto-prg-destino to como-prm-destino
                    perform TROVA-PARAMETRO
                    compute como-data  = function integer-of-date 
           (data-oggi)
                    compute data-start = como-data + prm-gg-parziale
                    compute data-end   = como-data + prm-gg-cons-max
                    compute data-start = function date-of-integer 
           (data-start)
                    compute data-end   = function date-of-integer 
           (data-end)
                    if mto-data-note1 >= data-start and
                       mto-data-note1 <= data-end
                       set record-ok to true
                    else
                       set record-ok to false
                    end-if

                    if record-ok
                       set record-ok to true
                       if ef-gdo-buf not = spaces
                          set  cli-tipo-C to true
                          move mto-cod-cli to cli-codice
                          read clienti no lock
                          if cli-gdo not = ef-gdo-buf
                             set record-ok to false
                          end-if
                       end-if
                       move ef-cli-buf to cli-codice
                       if cli-codice not = 0
                          if mto-cod-cli not = cli-codice
                             set record-ok to false
                          end-if
                       end-if   
                       if mto-chiuso
                          set record-ok to false
                       end-if
                       if record-ok
      *****                    if mto-si-promo
                             perform CICLO-RIGHE
      *****                    end-if
                       end-if
                    end-if
                 end-perform
           end-start.
           if trovato
      *****        perform CICLO-EVADIBILITA-PROMO-CICLO-1
              perform FILTRA-NON-EVASI-TOT
           end-if.

      ***---
       CICLO-RIGHE.
           move low-value  to mro-rec.
           move mto-chiave to mro-chiave-testa.
           start mrordini key >= mro-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read mrordini next at end exit perform end-read
                    if mro-chiave-testa not = mto-chiave
                       exit perform
                    end-if
                    if tot-idx-art not = 0
                       set idx-art to 1
                       search el-articolo
                       at end set record-ok to false
                       when el-articolo(idx-art) = mro-cod-articolo
                            set record-ok to true
                       end-search
                    else
                       set record-ok to true
                    end-if
      *****              if mro-promo = 0
      *****                 set record-ok to false
      *****              end-if
                    if record-ok
                       inquire cbo-promo, value in cbo-promo-buf
                       move cbo-promo-buf to como-des-promo
                       if como-des-promo = spaces
                          move 78-tutti-vol to como-des-promo
                       end-if
                       if como-des-promo not = 78-tutti-vol
                          move mro-promo to tpr-codice
                          read tpromo no lock 
                               invalid move spaces to tpr-descrizione
                           not invalid
                               perform DESCRIZIONE-PROMO
                               if cbo-promo-buf not = como-des-promo
                                  set record-ok to false
                               end-if
                          end-read
                       end-if
                    end-if
                    if record-ok
                       if mro-qta > mro-qta-e
                          set  trovato      to true
                          move col1-cliente to tmro-cliente
                          move col1-destino to tmro-destino
                          perform SCRIVI-TMP-GD2
                       end-if
                    end-if
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       CAMBIA-FONT-RIGA-M.
      * <TOTEM:PARA. CAMBIA-FONT-RIGA-M>
      *****     modify gd-ord(riga), row-font = small-font.
      *****
      *****     modify gd-ord(riga, 1),
      *****            bitmap        = elemento-bmp,
      *****            bitmap-number = 1,
      *****            bitmap-width  = 16.
      *****
      *****
      *****     move event-data-2 to riga.
      *****     modify gd-ord(riga), row-font = font-evidenzia-griglia.
      *****
      *****     modify gd-ord, (riga, 1),
      *****            bitmap        = elemento-bmp,
      *****            bitmap-number = 2,
      *****            bitmap-width  = 16.
      *****
      *****
      *****     display scr-ordini 
           .
      * <TOTEM:END>

       CELLE-ORDF.
      * <TOTEM:PARA. CELLE-ORDF>
           move tgia-qta         to col2-qta.
           call "C$JUSTIFY"   using col2-qta, "L".
           inspect col2-qta replacing leading x"30" by x"20".

           move tgia-qta-p          to col2-qtap-dt-ord.
           call "C$JUSTIFY"   using col2-qtap-dt-ord, "L".
           inspect col2-qtap-dt-ord replacing leading x"30" by x"20".
           move tgia-dt-arrivo(1:4) to col2-dt-arr-cons(7:4).
           move "/"                 to col2-dt-arr-cons(6:1).
           move tgia-dt-arrivo(5:2) to col2-dt-arr-cons(4:2).
           move "/"                 to col2-dt-arr-cons(3:1).
           move tgia-dt-arrivo(7:2) to col2-dt-arr-cons(1:2).
           move tgia-note           to col2-note-promo.
           move tgia-ragsoc         to col2-for-cli    .
           move tgia-destino        to col2-destino-CF  .

           move tgia-anno-ordf   to tof-anno
           move tgia-numero-ordf to tof-numero
           read tordforn no lock invalid continue end-read
           move tof-causale to tca-codice
           read tcaumag  no lock invalid continue end-read

           initialize col2-chiave-ordf.
           string "00"             delimited size
                  tgia-numero-ordf delimited size
                  "-"              delimited size
                  tgia-anno-ordf   delimited size
                  "-"              delimited size
                  tca-cod-magaz    delimited size
                  into col2-chiave-ordf
           end-string.
           inspect col2-chiave-ordf replacing leading x"30" by x"20" 
           .
      * <TOTEM:END>

       CELLE-ORDF-DISPLAY.
      * <TOTEM:PARA. CELLE-ORDF-DISPLAY>
           modify gd-2(riga,  5), cell-data col2-qta.
           modify gd-2(riga,  6), cell-data col2-qtap-dt-ord.
           modify gd-2(riga,  7), cell-data col2-dt-arr-cons.
           modify gd-2(riga,  8), cell-data col2-note-promo.
           modify gd-2(riga,  9), cell-data col2-for-cli.
           modify gd-2(riga, 10), cell-data col2-destino-CF.
           modify gd-2(riga, 11), cell-data col2-chiave-ordf.

           modify gd-2(riga,  5), cell-color colore.
           modify gd-2(riga,  6), cell-color colore.
           modify gd-2(riga,  7), cell-color colore.
           modify gd-2(riga,  8), cell-color colore.
           modify gd-2(riga,  9), cell-color colore.
           modify gd-2(riga, 10), cell-color colore.
           modify gd-2(riga, 11), cell-color colore 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-ID-ef-cli
                inquire ef-cli, value in cli-codice
                set cli-tipo-c to true
                move   "clienti-all"  to como-file
                call   "zoom-gt"   using como-file, cli-rec
                                  giving stato-zoom
                cancel "zoom-gt"
      
                if stato-zoom = 0
                   move cli-codice   to ef-cli-buf
                   move cli-ragsoc-1 to lab-cli-buf
                   display ef-cli lab-cli
                end-if 

           when 78-ID-ef-gdo
                inquire ef-gdo,   value gdo-codice
                move "tgrupgdo"      to como-file
                call   "zoom-gt"  using como-file, gdo-rec
                                 giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move gdo-codice       to ef-gdo-buf
                   move gdo-intestazione to lab-gdo-buf
                   display ef-gdo lab-gdo
                   move 4 to accept-control
                end-if 

           when 78-ID-gd-art2
                inquire gd-art2(riga, 1), cell-data in art-codice
                move "articoli"     to como-file
                call   "zoom-gt"  using como-file, art-rec
                                 giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   modify gd-art2(riga, 1), cell-data art-codice
                   modify gd-art2(riga, 2), cell-data art-descrizione
                   perform GD-ART2-EV-MSG-FINISH-ENTRY
                end-if
           end-evaluate 
           .
      * <TOTEM:END>

       CERCA2.
      * <TOTEM:PARA. CERCA2>
           evaluate control-id
           when 78-ID-ef-art-sost
                set trovato to false
                move low-value to prg-rec
                move "LBX" to prg-cod-magazzino
                start progmag key >= key01
                      invalid continue
                  not invalid
                      call "W$MOUSE" using set-mouse-shape, wait-pointer
                      perform until 1 = 2
                         read progmag next at end exit perform end-read
                         if prg-cod-magazzino not = "LBX"
                            exit perform
                         end-if
                         if prg-attivo or prg-disattivo
                            move prg-cod-articolo to art-codice
                            read articoli no lock
                            if art-attivo or art-disattivo
                               if not trovato
                                  set trovato to true
                                  perform OPEN-OUTPUT-ZOOM-ART-GIAC
                               end-if
                               move prg-cod-articolo to zag-art-codice
                               read zoom-art-giac no lock
                                    invalid
                                    move art-descrizione  to 
           zag-art-descrizione
                                    move art-peso-utf     to 
           zag-peso-utf
                                    move art-peso-non-utf to zag-peso
                                    move 0 to zag-giac-LBX
                               end-read
                               add prg-giacenza to zag-giac-LBX
                               write zag-rec invalid rewrite zag-rec 
           end-write
                            end-if
                         end-if
                      end-perform
                      call "W$MOUSE" using set-mouse-shape, 
           arrow-pointer
               end-start
               if trovato
                  close zoom-art-giac
                  inquire ef-art-sost, value in zag-art-codice
                  move "zoom-art-giac"  to como-file
                  move path-zoom-art-giac to ext-file
                  call   "zoom-gt"   using como-file, zag-rec
                                    giving stato-zoom
                  cancel "zoom-gt"
                  if stato-zoom = 0
                     move zag-art-codice      to ef-art-sost-buf
                     move zag-art-descrizione to lab-art-sost-buf
                     display ef-art-sost lab-art-sost
                  end-if
                  delete file zoom-art-giac
               end-if
           end-evaluate.


      ***---
       OPEN-OUTPUT-ZOOM-ART-GIAC.     
           accept como-data from century-date.
           accept como-ora  from time.
           initialize path-zoom-art-giac.
           accept  path-zoom-art-giac from environment "PATH_ST".
           inspect path-zoom-art-giac replacing trailing
                                      spaces by low-value.
           string  path-zoom-art-giac delimited low-value
                   "zoom_art_giac"    delimited size
                   "_"                delimited size
                   como-data          delimited size
                   "_"                delimited size
                   como-ora           delimited size
                   ".tmp"             delimited size
                   into path-zoom-art-giac
           end-string.
           open output zoom-art-giac.
           close       zoom-art-giac.
           open i-o    zoom-art-giac 
           .
      * <TOTEM:END>

       CHIUDI-RIGHE.
      * <TOTEM:PARA. CHIUDI-RIGHE>
           move riga to store-riga.
           if hid-figlio
              perform until 1 = 2
                 subtract 1 from store-riga
                 inquire gd-2(store-riga, 1), hidden-data gd-hidden
                 if hid-padre
                    exit perform
                 end-if
              end-perform
           end-if.
           set hid-close to true.
           modify gd-2(store-riga, 1), hidden-data = gd-hidden.
      
           modify gd-2(store-riga, 1),
                  bitmap        = multi-s-bmp,
                  bitmap-number = 3,
                  bitmap-width  = 16.
                              
           add 1 to store-riga.
           perform until 1 = 2
              inquire gd-2(store-riga, 1), hidden-data gd-hidden,
                                         last-row in tot-righe
              if hid-padre or store-riga > tot-righe
                 exit perform 
              end-if
              modify gd-2, record-to-delete = store-riga
           end-perform 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.
      
           evaluate control-id
           when 78-ID-ef-data
                inquire ef-data, value in como-data
                if como-data not = 0
                   perform DATE-FORMAT
                   move como-data to ef-data-buf
                   display ef-data
                end-if 
      
           when 78-ID-ef-cli
                inquire ef-cli value in ef-cli-buf
                move ef-cli-buf to cli-codice
                if cli-codice = 0
                   move spaces to cli-ragsoc-1
                else
                   set  cli-tipo-C to true
                   read clienti no lock
                        invalid
                        set errori to true
                        display message "Cliente non valido"
                                  title tit-err
                                   icon 2
                        move spaces to cli-ragsoc-1
                   end-read
                end-if
                move cli-ragsoc-1 to lab-cli-buf
                display lab-cli
      
           when 78-ID-ef-gdo
                inquire ef-gdo value in gdo-codice
                if gdo-codice = spaces
                   move spaces to gdo-intestazione
                else
                   read tgrupgdo no lock
                        invalid
                        set errori to true
                        display message "Gruppo non valido"
                                  title tit-err
                                   icon 2
                        move spaces to gdo-intestazione
                   end-read
                end-if
                move gdo-intestazione to lab-gdo-buf
                display lab-gdo
      
           end-evaluate.
      
           if errori
              perform CANCELLA-COLORE
              move control-id to store-id
              move 4          to accept-control
           end-if 
           .
      * <TOTEM:END>

       CONTROLLO-AZIONE.
      * <TOTEM:PARA. CONTROLLO-AZIONE>
           set tutto-ok to true.
           evaluate control-id
           when 78-ID-ef-art-sost
                if azione = 2
                   inquire ef-art-sost, value in art-codice
                   read articoli no lock
                        invalid
                        set errori to true
                        display message "Articolo non valido"
                                 title tit-err
                                   icon 2
                        move spaces to art-descrizione
                    not invalid
                        if art-bloccato 
                           set errori to true
                           display message "Articolo bloccato"
                                     title tit-err
                                      icon 2
                           move spaces to art-descrizione
                        else
                           set trovato to false
                           initialize prg-rec replacing numeric data by 
           zeroes
                                                   alphanumeric data by 
           spaces
                           move art-codice to prg-cod-articolo
                           start progmag key >= prg-chiave
                                 invalid continue
                             not invalid
                                 perform until 1 = 2
                                    read progmag next at end exit 
           perform end-read
                                    if prg-cod-articolo not = art-codice
                                       exit perform
                                    end-if
                                    if prg-peso not = 0
                                       if prg-attivo or prg-disattivo 
           and
                                          prg-cod-magazzino = "LBX"
                                          set trovato to true
                                          exit perform
                                       end-if
                                    end-if
                                 end-perform
                           end-start
                           if not trovato
                              set errori to true
                              display message "Progressivi bloccati"
                                        title tit-err
                                         icon 2
                              move spaces to art-descrizione
                           end-if
                        end-if
                   end-read
                   move art-descrizione to lab-art-sost-buf
                   display lab-art-sost
                end-if
           end-evaluate.

           if errori
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       COUNTER-VIDEO.
      * <TOTEM:PARA. COUNTER-VIDEO>
           add 1 to counter
           add 1 to counter2
           if counter2 = 100
              move counter to counter-edit
              display counter-edit
                 upon scr-elab-Handle at column 21
                                           line 01
              move 0 to counter2
           end-if 
           .
      * <TOTEM:END>

       CREA-FILES.
      * <TOTEM:PARA. CREA-FILES>
           if path-tmp-k-mtordini not = spaces
              close       tmp-k-mtordini
              open output tmp-k-mtordini
              close       tmp-k-mtordini
              open i-o    tmp-k-mtordini

              close       tmp-k-mrordini
              open output tmp-k-mrordini
              close       tmp-k-mrordini
              open i-o    tmp-k-mrordini

              close       tmp-qta-eva 
              open output tmp-qta-eva   
              close       tmp-qta-eva 
              open i-o    tmp-qta-eva 

              close       tmp-qta-pren
              open output tmp-qta-pren
              close       tmp-qta-pren
              open i-o    tmp-qta-pren

           end-if 
           .
      * <TOTEM:END>

       DELETE-LOCKFILE.
      * <TOTEM:PARA. DELETE-LOCKFILE>
           move 78-giang to lck-nome-pgm.
           delete lockfile invalid continue end-delete 
           .
      * <TOTEM:END>

       DESCRIZIONE-PROMO.
      * <TOTEM:PARA. DESCRIZIONE-PROMO>
           if tpr-descrizione not = spaces
              initialize cbo-promo-buf
              inspect tpr-descrizione replacing trailing spaces by 
           low-value
              move tpr-ini-dpo to como-data
              perform DATE-TO-SCREEN
              move como-data to ini-vol
              move tpr-fine-dpo to como-data
              perform DATE-TO-SCREEN
              move como-data to fine-vol
      
              string tpr-descrizione  delimited low-value
                     " DAL "          delimited size
                     ini-vol          delimited size
                     " AL "           delimited size
                     fine-vol         delimited size
                     into cbo-promo-buf
              end-string
           else
              initialize cbo-promo-buf
              move tpr-ini-dpo to como-data
              perform DATE-TO-SCREEN
              move como-data to ini-vol
              move tpr-fine-dpo to como-data
              perform DATE-TO-SCREEN
              move como-data to fine-vol
           
              move tpr-codice to tpr-codice-x
              inspect tpr-codice-x replacing 
              leading x"30" by x"20"
              call "C$JUSTIFY" using tpr-codice-x, "L"
              inspect tpr-codice-x replacing trailing spaces by 
           low-value
              string "ID "      delimited size
                     tpr-codice-x   delimited low-value
                     " DAL "    delimited size
                     ini-vol    delimited size
                     " AL "     delimited size
                     fine-vol   delimited size
                     into cbo-promo-buf
              end-string
           end-if 
           .
      * <TOTEM:END>

       FILTRA-NON-EVASI-TOT.
      * <TOTEM:PARA. FILTRA-NON-EVASI-TOT>
           set trovato-ordine to false.
           move low-value to tmro-rec.
           start tmp-mrordini key >= tmro-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-mrordini next at end exit perform end-read
                    move tmro-chiave to k-mro-chiave
                    read tmp-k-mrordini no lock
                         invalid
                         move tmro-qta-e to tmro-qta-evadibile
                     not invalid
                         compute tmro-qta-evadibile = 
                                 k-mro-evadibile-ok + 
                                 k-mro-evasa
                    end-read
                    if tmro-qta-evadibile >= tmro-qta-o |or tmro-promo-no
                       delete tmp-mrordini record invalid continue 
           end-delete
                    else
                       compute qta-tot = tmro-qta-o - tmro-qta-evadibile
                       set trovato-ordine-master to true
                       move tmro-chiave to mro-chiave
                       read mrordini no lock
                       initialize tmto-rec replacing numeric data by 
           zeroes
                                                alphanumeric data by 
           spaces
                       initialize tgia-rec replacing numeric data by 
           zeroes
                                                alphanumeric data by 
           spaces

                       move tmro-chiave-testa to mto-chiave
                       read mtordini no lock invalid continue end-read
                       set  cli-tipo-C  to true
                       move mto-cod-cli to cli-codice
                       read clienti no lock invalid continue end-read
                       move cli-localita to des-localita
                       if mto-prg-destino not = 0
                          move mto-cod-cli     to des-codice
                          move mto-prg-destino to des-prog
                          read destini no lock invalid continue end-read
                       end-if
                       |ARTICOLO
                       set  tgia-articolo     to true
                       move tmro-art          to tgia-cod-articolo
                       read tmp-giang no lock invalid continue end-read
                       compute tgia-inevaso =
                               tgia-inevaso + qta-tot
                       initialize prg-rec
                       move tgia-cod-articolo to prg-cod-articolo
                       read progmag no lock
                       move prg-ordinato-6 to tgia-ordinato
                       write tgia-rec invalid rewrite tgia-rec end-write
                       initialize tgia-rec replacing numeric data by 
           zeroes
                                                alphanumeric data by 
           spaces
                       |MASTER
                       set tgia-master        to true
                       move tmro-art          to tgia-cod-articolo
                       move tmro-chiave       to tgia-master-ordf
                       read tmp-giang no lock
                            invalid
                            compute tgia-qta = tmro-qta-o - qta-tot
      *****                      move tmro-qta-o       to tgia-qta
                            move mto-cod-cli      to tgia-cod-CF
                            move cli-ragsoc-1     to tgia-ragsoc
                            move mto-prg-destino  to tgia-des-CF
                            move des-localita     to tgia-destino
                            evaluate true also true
                            when mto-saldi-promo-si also 
           mto-saldi-banco-si
                                 move "BANCO e PROMO" to 
           tgia-tiene-saldi
                            when mto-saldi-promo-no also 
           mto-saldi-banco-no
                                 move "NESSUNO"       to 
           tgia-tiene-saldi
                            when mto-saldi-promo-si also 
           mto-saldi-banco-no
                                 move "SOLO PROMO"    to 
           tgia-tiene-saldi
                            when mto-saldi-promo-no also 
           mto-saldi-banco-si
                                 move "SOLO BANCO"    to 
           tgia-tiene-saldi
                            end-evaluate
                            move cli-gdo          to gdo-codice
                            read tgrupgdo no lock invalid continue 
           end-read
                            move gdo-intestazione to tgia-GDO
                            move mto-data-ordine  to tgia-dt-ord
                            move mto-data-note1   to tgia-dt-cons
                            move tmro-cod-promo   to tgia-promo 
           tpr-codice
                            read tpromo no lock invalid continue 
           end-read
                            if tpr-descrizione not = spaces
                               initialize tgia-des-promo
                               inspect tpr-descrizione replacing 
           trailing spaces by low-value
                               move tpr-ini-dpo to como-data
                               perform DATE-TO-SCREEN
                               move como-data to ini-vol
                               move tpr-fine-dpo to como-data
                               perform DATE-TO-SCREEN
                               move como-data to fine-vol
                            
                               string tpr-descrizione  delimited 
           low-value
                                      " DAL "          delimited size
                                      ini-vol          delimited size
                                      " AL "           delimited size
                                      fine-vol         delimited size
                                      into tgia-des-promo
                               end-string
                            else
                               initialize tgia-des-promo
                               move tpr-ini-dpo to como-data
                               perform DATE-TO-SCREEN
                               move como-data to ini-vol
                               move tpr-fine-dpo to como-data
                               perform DATE-TO-SCREEN
                               move como-data to fine-vol
                            
                               move tpr-codice to tpr-codice-x
                               inspect tpr-codice-x replacing 
                               leading x"30" by x"20"
                               call "C$JUSTIFY" using tpr-codice-x, "L"
                               inspect tpr-codice-x replacing trailing 
           spaces by low-value
                               string "ID "      delimited size
                                      tpr-codice-x   delimited low-value
                                      " DAL "    delimited size
                                      ini-vol    delimited size
                                      " AL "     delimited size
                                      fine-vol   delimited size
                                      into tgia-des-promo
                               end-string
                            end-if
      *****                      move mro-giang   to tgia-azione
                            move tmro-chiave to tgia-ordm
                            write tgia-rec invalid continue end-write
                            perform RIEMPI-LISTINI
                       end-read
                       
                       set trovato-ordine to true
                       move tmro-anno    to mto-anno
                       move tmro-numero  to mto-numero
                       read mtordini no lock 
                            invalid 
                            perform 5 times
                               display message "ERRORE A1"
                                        x"0d0a""CONTATTARE ASSISTENZA!!!
      -    ""
                                         title tit-err
                                          icon 2
                           end-perform
                       not invalid
                           set cli-tipo-C   to true
                           move mto-cod-cli to cli-codice
                           read clienti no lock
                           move cli-ragsoc-1 to tmto-cliente
                           move mto-cod-cli     to des-codice
                           move mto-prg-destino to des-prog
                           read destini no lock
                                invalid move cli-localita to 
           des-localita
                           end-read
                           move des-localita to tmto-destino
                           move cli-gdo to gdo-codice
                           read tgrupgdo no lock 
                                invalid move spaces to gdo-intestazione
                           end-read
                           move gdo-intestazione to tmto-gdo
                       end-read

                       move tmro-anno    to tmto-anno
                       move tmro-numero  to tmto-numero

                       move mto-data-note1   to tmto-data-cons
                       move mto-data-ordine  to tmto-data-ord
                       write tmto-rec invalid continue end-write
                    end-if
                 end-perform
           end-start.

           |ORDINI FORNITORI
           if trovato-ordine
              perform VALORIZZA-ORDINI-FORNITORI
           end-if 
           .
      * <TOTEM:END>

       OPEN-OUTPUT-TMP-GIANG.
      * <TOTEM:PARA. OPEN-OUTPUT-TMP-GIANG>
           if path-tmp-giang not = spaces
              close       tmp-giang
              delete file tmp-giang
           end-if.
           accept como-data from century-date.
           accept como-ora  from time.
           initialize path-tmp-giang.
           accept  path-tmp-giang from environment "PATH_ST".
           inspect path-tmp-giang replacing trailing 
                                        spaces by low-value.
           string  path-tmp-giang delimited low-value
                   "tmp_giang"    delimited size
                   "_"            delimited size
                   como-data      delimited size
                   "_"            delimited size
                   como-ora       delimited size
                   ".tmp"         delimited size
                   into path-tmp-giang
           end-string.
           open output tmp-giang.
           close       tmp-giang.
           open i-o    tmp-giang.

           if path-tmp-mtordini not = spaces
              close       tmp-mtordini
              delete file tmp-mtordini
           end-if.
           accept como-data from century-date.
           accept como-ora  from time.
           initialize path-tmp-mtordini.
           accept  path-tmp-mtordini from environment "PATH_ST".
           inspect path-tmp-mtordini replacing trailing 
                                        spaces by low-value.
           string  path-tmp-mtordini delimited low-value
                   "tmp_mtordini"    delimited size
                   "_"               delimited size
                   como-data         delimited size
                   "_"               delimited size
                   como-ora          delimited size
                   ".tmp"            delimited size
                   into path-tmp-mtordini
           end-string.
           open output tmp-mtordini.
           close       tmp-mtordini.
           open i-o    tmp-mtordini.

      ***---
       OPEN-OUTPUT-TMP-BLIS-EVA.
           if path-tmp-blis-eva not = spaces
              close       tmp-blis-eva
              delete file tmp-blis-eva
           end-if.
           accept como-data from century-date.
           accept como-ora  from time.
           initialize path-tmp-blis-eva.
           accept  path-tmp-blis-eva from environment "PATH_ST".
           inspect path-tmp-blis-eva replacing trailing 
                                     spaces by low-value.
           string  path-tmp-blis-eva delimited low-value
                   "TMP-BLIS-EVA_"   delimited size
                   como-data         delimited size
                   "_"               delimited size
                   como-ora          delimited size
                   ".tmp"            delimited size
                   into path-tmp-blis-eva
           end-string.
           open output tmp-blis-eva.
           close       tmp-blis-eva.
           open i-o    tmp-blis-eva 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy".
           copy "utydata.cpy".
           copy "calcola-colore-trasparente.cpy".
           copy "evaart-giang.cpy".
      *     copy "evaart-GDO-giang.cpy".
           copy "evacli-giang.cpy".
           copy "trova-parametro.cpy".
           copy "addizionale-piombo.cpy".
           copy "direziona-impegnato-common.cpy".
           copy "multigest.cpy".

      ***DUMMY
       OPEN-OUTPUT-TMP-EVAART.
       STATUS-HELP 
           .
      * <TOTEM:END>

       READ-MRORDINI-LOCK.
      * <TOTEM:PARA. READ-MRORDINI-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "mrordini" to geslock-nome-file.
      
           set tutto-ok to true.
           read mrordini lock invalid continue end-read
      
           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              string "RECORD MASTER IN USO: " delimited size
                     x"0d0a"                  delimited size
                     mro-anno                 delimited size
                     " - "                    delimited size
                     mro-numero               delimited size
                     " - "                    delimited size
                     mro-riga                 delimited size
                     into geslock-messaggio
              end-string
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read mrordini lock
                        invalid continue 
                   end-read
              when ignora exit perform
              end-evaluate
           end-perform 
           .
      * <TOTEM:END>

       READ-MTORDINI-LOCK.
      * <TOTEM:PARA. READ-MTORDINI-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "mtordini" to geslock-nome-file.
      
           set tutto-ok to true.
           read mtordini lock invalid continue end-read
      
           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              string "RECORD MASTER IN USO: " delimited size
                     x"0d0a"                  delimited size
                     mto-anno                 delimited size
                     " - "                    delimited size
                     mto-numero               delimited size
                     into geslock-messaggio
              end-string
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read mtordini lock
                        invalid continue 
                   end-read
              when ignora exit perform
              end-evaluate
           end-perform 
           .
      * <TOTEM:END>

       READ-SORDFORN-LOCK.
      * <TOTEM:PARA. READ-SORDFORN-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "sordforn" to geslock-nome-file.
      
           set tutto-ok to true.
           read sordforn lock invalid continue end-read
      
           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              string "RECORD SOLLECITI ORDINI F IN USO: " delimited size
                     x"0d0a"                              delimited size
                     sof-anno                             delimited size
                     " - "                                delimited size
                     sof-numero                           delimited size
                     into geslock-messaggio
              end-string
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read sordforn lock
                        invalid continue 
                   end-read
              when ignora 
                   set errori to true
                   exit perform
              end-evaluate
           end-perform 
           .
      * <TOTEM:END>

       READ-TORDFORN-LOCK.
      * <TOTEM:PARA. READ-TORDFORN-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "tordforn" to geslock-nome-file.
      
           set tutto-ok to true.
           read tordforn lock invalid continue end-read
      
           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              string "RECORD ORDINI F IN USO: " delimited size
                     x"0d0a"                    delimited size
                     tof-anno                   delimited size
                     " - "                      delimited size
                     tof-numero                 delimited size
                     into geslock-messaggio
              end-string
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read tordforn lock
                        invalid continue 
                   end-read
              when ignora
                   set errori to true
                   exit perform
              end-evaluate
           end-perform 
           .
      * <TOTEM:END>

       RESET-GRIGLIE.
      * <TOTEM:PARA. RESET-GRIGLIE>
           modify gd-1, reset-grid = 1.
           perform GD-1-CONTENT.
           modify gd-2, reset-grid = 1.
           perform GD-2-CONTENT 
           .
      * <TOTEM:END>

       RIEMPI-GD-1.
      * <TOTEM:PARA. RIEMPI-GD-1>
           move low-value to tmto-rec.
           start tmp-mtordini key >= k-ord
                 invalid continue
           end-start.
           modify gd-1, reset-grid  = 1.
           modify gd-1, mass-update = 1.
           perform GD-1-CONTENT.
           move 1 to riga.
           perform until 1 = 2
              add 1 to riga
              read tmp-mtordini next at end exit perform end-read
              move tmto-anno      to col1-anno    
              move tmto-numero    to col1-numero  
              move tmto-gdo       to col1-gdo     
              move tmto-cliente   to col1-cliente 
              move tmto-destino   to col1-destino 
              move tmto-data-ord  to como-data
              perform DATE-TO-SCREEN
              move como-data      to col1-data-ord
              move tmto-data-cons to como-data
              perform DATE-TO-SCREEN
              move como-data to col1-data-cons
              modify gd-1(riga, 1), cell-data col1-anno    
              modify gd-1(riga, 2), cell-data col1-numero  
              modify gd-1(riga, 3), cell-data col1-gdo     
              modify gd-1(riga, 4), cell-data col1-cliente 
              modify gd-1(riga, 5), cell-data col1-destino 
              modify gd-1(riga, 6), cell-data col1-data-ord
              modify gd-1(riga, 7), cell-data col1-data-cons 
      *****        modify gd-1(riga, 8), cell-data col1-stato   
      *****        move mto- to col1-stato   
           end-perform.
           modify gd-1, mass-update = 0.

           perform STATO-GD-1 
           .
      * <TOTEM:END>

       RIEMPI-GD-2.
      * <TOTEM:PARA. RIEMPI-GD-2>
           modify gd-2, mass-update = 1.
           modify gd-2, reset-grid  = 1.
           move 2 to riga.
           perform GD-2-CONTENT.
           move low-value to tgia-rec.
           set tgia-articolo to true.
           start tmp-giang key >= tgia-k-forn
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-giang next at end    exit perform end-read
                    if tgia-ordfor or tgia-master exit perform end-if
                    move spaces to col2-nulla      
                    move tgia-cod-articolo to art-codice 
           hid-cod-articolo
                    initialize col2-articolo
                    read articoli no lock
                    move tgia-cod-articolo to col2-articolo
                    call "C$JUSTIFY" using col2-articolo, "L"
                    inspect col2-articolo replacing leading x"30" by x"2
      -    "0"
                    inspect col2-articolo  replacing trailing spaces by 
           low-value
                    string  col2-articolo  delimited low-value
                           " - "           delimited size
                           art-descrizione delimited size
                           into col2-articolo
                    end-string
                    move art-scorta to sco-codice
                    read tscorte no lock invalid continue end-read
                    if sco-chiu-forzata-si or sco-chiu-forzata2-si
                       modify gd-2(riga, 2), cell-font = 
           Arial8B-Occidentale
                       modify gd-2(riga, 3), cell-font = 
           Arial8B-Occidentale
                       modify gd-2(riga, 4), cell-font = 
           Arial8B-Occidentale
                    end-if
                    move tgia-inevaso      to col2-inevaso    
                    call "C$JUSTIFY"    using col2-inevaso, "L"
                    inspect col2-inevaso replacing leading x"30" by x"20
      -    ""

                    move tgia-ordinato     to col2-ord-gdo
                    call "C$JUSTIFY"    using col2-ord-gdo, "L"
                    inspect col2-ord-gdo replacing leading x"30" by x"20
      -    ""

                    move tgia-qta          to col2-qta
                    if tgia-tot-ordfor = 1
                       move 257   to colore
      *    Luciano
                       perform PUNTA-ORDFORN 
      *    Luciano fine
                       perform CELLE-ORDF
      *    Luciano
                       perform RESET-CICLO
      *    Luciano fine

                    else
                       if tgia-tot-ordfor = 0
                          move "*** NON"          to col2-qta
                          move "RISULTANO"        to col2-qtap-dt-ord
                          move "ORDINI  AL"       to col2-dt-arr-cons
                          move "FORNITORE  SU  QUESTO  CODICE" 
                                                  to col2-note-promo 
                          move "ARTICOLO ***"     to col2-for-cli    
                          move spaces             to col2-destino-CF
                          move spaces             to col2-chiave-ordf
                          move 48                 to colore
                       else
                          perform CELLE-ORDF
                          move "..." to col2-qtap-dt-ord
                          move "..." to col2-dt-arr-cons
                          move "..." to col2-qta
                          move "..." to col2-note-promo 
                          move "..." to col2-for-cli    
                          move "..." to col2-destino-CF  
                          move "..." to col2-chiave-ordf
                          move 257   to colore
                       end-if
                       modify gd-2(riga,  5), cell-font 
           Arial8B-Occidentale
                       modify gd-2(riga,  6), cell-font 
           Arial8B-Occidentale 
                       modify gd-2(riga,  7), cell-font 
           Arial8B-Occidentale 
                       modify gd-2(riga,  8), cell-font 
           Arial8B-Occidentale 
                       modify gd-2(riga,  9), cell-font 
           Arial8B-Occidentale 
                       modify gd-2(riga, 10), cell-font 
           Arial8B-Occidentale 
                       modify gd-2(riga, 11), cell-font 
           Arial8B-Occidentale 
                    end-if

                    modify gd-2(riga,  1), cell-data col2-nulla
                    modify gd-2(riga,  1),
                           bitmap        = multi-s-bmp,
                           bitmap-number = 3,
                           bitmap-width  = 16

                    modify gd-2(riga,  2), cell-data col2-articolo
                    modify gd-2(riga,  3), cell-data col2-inevaso
                    modify gd-2(riga,  4), cell-data col2-ord-gdo
                    perform CELLE-ORDF-DISPLAY
                    set hid-padre to true
                    set hid-close to true

                    move tgia-tot-ordfor  to hid-tot-ordfor
                    move tgia-master-ordf to hid-master-ordf
                    move tgia-ordf        to hid-ordf
                    modify gd-2(riga, 1), hidden-data gd-hidden

                    add 1 to riga
                 end-perform
           end-start.
           modify gd-2, mass-update = 0.


      ***---
       PUNTA-ORDFORN.
           move tgia-rec  to old-tgia-rec.
           set tgia-ordfor       to true
      *     move hid-cod-articolo to tgia-cod-articolo
           read tmp-giang no lock key is tgia-k-articolo
              invalid 
                 move old-tgia-rec  to tgia-rec
           end-read.

      ***---
       RESET-CICLO.
           move old-tgia-rec  to tgia-rec.
           read tmp-giang no lock key is tgia-k-forn
              invalid 
                 continue
           end-read 

           
           .
      * <TOTEM:END>

       RIEMPI-LISTINI.
      * <TOTEM:PARA. RIEMPI-LISTINI>
           if not SaltaPromo
              set idx-promo to 1
              search el-promo
                  at end
                     move tgia-promo to tpr-codice
                     read tpromo no lock
                          invalid continue
                      not invalid
                          perform DESCRIZIONE-PROMO
                          modify cbo-promo,  item-to-add cbo-promo-buf
                     end-read
              when el-promo(idx-promo) = tgia-promo
                   continue
              end-search
           end-if 
           .
      * <TOTEM:END>

       SALVA2.
      * <TOTEM:PARA. SALVA2>
      *****     perform varying control-id from 78-ID-ef-art-sost by 1
      *****               until control-id > 78-ID-ef-art-sost
      *****        perform CONTROLLO-AZIONE
      *****        if errori
      *****           exit perform
      *****        end-if
      *****     end-perform.
      *****
      *****     if tutto-ok
      *****        set tutto-ok to true
      *****        move azione to old-azione
      *****    
      *****        initialize tgia-rec replacing numeric data by zeroes
      *****                                 alphanumeric data by spaces
      *****        set  tgia-master      to true
      *****        move hid-cod-articolo to tgia-cod-articolo
      *****        move hid-master-ordf  to tgia-master-ordf
      *****        read tmp-giang no lock
      *****              invalid
      *****              set errori to true
      *****              perform 5 times
      *****                 display message "ERRORE A3"
      *****                          x"0d0a""CONTATTARE ASSISTENZA!!!"
      *****                            title tit-err
      *****                            icon 2
      *****              end-perform
      *****          not invalid
      *****              evaluate azione
      *****              when 1 set tgia-attesa         to true
      *****              when 2 set tgia-sostituzione   to true
      *****              when 3 set tgia-tenere-saldo   to true
      *****              when 4 set tgia-tagliare-merce to true
      *****              end-evaluate
      *****              rewrite tgia-rec invalid continue end-rewrite
      *****              move tgia-ordm to mro-chiave
      *****              read mrordini no lock
      *****                   invalid
      *****                   set errori to true
      *****                   perform 5 times
      *****                      display message "ERRORE A3/bis"
      *****                               x"0d0a""CONTATTARE ASSISTENZA!!!"
      *****                                title tit-err
      *****                                 icon 2
      *****                   end-perform
      *****               not invalid
      *****                   perform READ-MTORDINI-LOCK
      *****                   if not RecLocked
      *****                      perform READ-MRORDINI-LOCK
      *****                      if not RecLocked
      *****                         if azione = 2
      *****                            perform SOSTITUZIONE-ARTICOLO
      *****                         else
      *****                            move tgia-azione to mro-giang
      *****                            rewrite mro-rec invalid continue end-rewrite
      *****                            if tgia-tenere-saldo
      *****                               set mto-saldi-promo-si to true
      *****                               rewrite mto-rec
      *****                            end-if
      *****                         end-if
      *****                      end-if
      *****                      unlock mrordini all records
      *****                      unlock mtordini all records
      *****                   else
      *****                      set errori to true
      *****                   end-if
      *****              end-read
      *****        end-read
      *****        if tutto-ok
      *****           set SiSalvato to true
      *****           move 27 to key-status
      *****        end-if
      *****     end-if.
      *****
      ********---
      ***** SOSTITUZIONE-ARTICOLO.
      *****     compute como-qta = mro-qta - mro-qta-e.
      *****     if mro-qta-e = 0
      *****        delete mrordini record invalid continue end-delete
      *****     else
      *****        move mro-qta-e   to mro-qta
      *****        move tgia-azione to mro-giang
      *****        rewrite mro-rec invalid continue end-rewrite
      *****     end-if.
      *****
      *****     |Storno la quantità dall'impegnato
      *****     initialize link-wprogmag.
      *****     set link-update      to true.
      *****     move mro-prg-chiave  to link-key.
      *****     move mto-causale     to link-causale.
      *****     move como-qta to link-valore link-impegnato.
      *****     perform VALORIZZA-ARRAY-CAUSALI.
      *****     if tca-si-stampa
      *****        move -1                to multiplyer(2)
      *****     else             
      *****        move -1                to multiplyer(1)
      *****        move -1                to multiplyer(15)
      *****     end-if.
      *****     move user-codi   to link-user.
      *****     call   "wprogmag" using link-wprogmag.
      *****     cancel "wprogmag".
      *****
      *****     initialize fp-linkage.
      *****     move mro-chiave-testa to fp-chiave.
      *****     call   "find-progr" using fp-linkage.
      *****     cancel "find-progr".
      *****     move fp-progr        to mro-progr.
      *****     move fp-riga         to mro-riga.
      *****
      *****     move mto-causale to tca-codice.
      *****     read tcaumag invalid continue end-read.
      *****
      *****     move 0 to giacenza.
      *****     set  trovato         to false.
      *****     move low-value       to prg-chiave.
      *****     move ef-art-sost-buf to prg-cod-articolo.
      *****     move tca-cod-magaz   to prg-cod-magazzino.
      *****     start progmag key >= prg-chiave
      *****           invalid continue
      *****       not invalid
      *****           perform until 1 = 2
      *****              read progmag next at end exit perform end-read
      *****              if prg-cod-articolo  not = ef-art-sost-buf or
      *****                 prg-cod-magazzino not = tca-cod-magaz
      *****                 exit perform
      *****              end-if
      *****              if prg-attivo
      *****                 if not trovato
      *****                    set trovato to true
      *****                    |Se la prima ed unica volta ho una giacenza di -1
      *****                    move prg-giacenza to giacenza
      *****                    move prg-giacenza to giacenza
      *****                    move prg-chiave to GiacenzaKey
      *****                 end-if
      *****                 if prg-giacenza > giacenza
      *****                    move prg-giacenza to giacenza
      *****                    move prg-chiave to GiacenzaKey
      *****                 end-if
      *****              end-if
      *****           end-perform
      *****     end-start.
      *****     
      *****     move GiacenzaKey to prg-chiave.
      *****     read progmag no lock invalid continue end-read.
      *****
      *****     move ef-art-sost-buf  to mro-cod-articolo art-codice.
      *****     read articoli no lock invalid continue end-read.
      *****     move prg-chiave       to mro-prg-chiave.
      *****     move 0                to mro-qta-e.
      *****     set  mro-attesa       to true.
      *****     move prg-peso-utf     to mro-peso-utf.
      *****     move prg-peso-non-utf to mro-peso-non-utf.
      *****
      *****     move prg-tipo-imballo to imq-codice.
      *****
      *****     move 0 to imp-data.
      *****     read timposte no lock invalid continue end-read.
      *****     set TrattamentoGDO    to true.
      *****     perform CALCOLA-IMPOSTE.
      *****     move imposta-cou     to mro-imp-cou-cobat.
      *****     move imposta-consumo to mro-imp-consumo.
      *****
      *****     move cli-tipo to tcl-codice.
      *****     read ttipocli no lock invalid continue end-read.
      *****     if tcl-si-piombo and art-si-cobat
      *****        move mro-prz-unitario   to como-prz-unitario
      *****        move imposta-cobat      to mro-imp-cou-cobat
      *****        move art-marca-prodotto to tpb-marca
      *****        move mto-data-ordine    to como-data-ordine tpb-data
      *****       perform ADDIZIONALE-PIOMBO
      *****     end-if.
      *****
      *****     move add-piombo      to mro-add-piombo.
      *****     compute mro-imponib-merce = 
      *****             mro-prz-unitario  -
      *****             mro-imp-consumo   -
      *****             mro-imp-cou-cobat -
      *****             mro-add-piombo.
      *****
      *****     read timbalqta no lock invalid continue end-read.
      *****     move imq-tipo  to imb-codice.
      *****     read timballi  no lock invalid continue end-read.
      *****     move imb-descrizione to mro-des-imballo.
      *****     move imq-qta-imb     to mro-qta-imballi.
      *****
      *****     if como-qta <= mro-qta-imballi
      *****        move mro-qta-imballi to mro-qta
      *****        move 1               to mro-num-colli
      *****     else
      *****        move 0 to resto
      *****        divide como-qta by mro-qta-imballi giving mro-num-colli
      *****               remainder resto
      *****        if resto not = 0
      *****           add 1 to mro-num-colli
      *****        end-if
      *****
      *****        compute mro-qta = mro-num-colli * mro-qta-imballi
      *****     end-if.
      *****
      *****     accept mro-data-creazione from century-date.
      *****     accept mro-ora-creazione  from time.
      *****     move   user-codi to mro-utente-creazione.
      *****     move 0 to mro-data-ultima-modifica  mro-ora-ultima-modifica.
      *****     move spaces to mro-utente-ultima-modifica.
      *****     write mro-rec invalid continue end-write.
      *****
      *****     |Storno la quantità dall'impegnato
      *****     initialize link-wprogmag.
      *****     set link-update      to true.
      *****     move mro-prg-chiave  to link-key.
      *****     move mto-causale     to link-causale.
      *****     move como-qta to link-valore link-impegnato.
      *****     perform VALORIZZA-ARRAY-CAUSALI.
      *****     move user-codi   to link-user.
      *****     call   "wprogmag" using link-wprogmag.
      *****     cancel "wprogmag" 
           .
      * <TOTEM:END>

       SCRIVI-LOCKFILE.
      * <TOTEM:PARA. SCRIVI-LOCKFILE>
           move 78-giang to lck-nome-pgm.
           accept lck-data-creazione from century-date.
           accept lck-ora-creazione  from time.
           move user-codi            to lck-utente-creazione.
           write lck-rec invalid rewrite lck-rec end-write.
           read lockfile lock 
           .
      * <TOTEM:END>

       SPOSTAMENTO-ART.
      * <TOTEM:PARA. SPOSTAMENTO-ART>
           inquire gd-art2, last-row in tot-righe
           if event-data-2 > tot-righe
              add 1 to tot-righe giving riga
           else
              move event-data-2 to riga
           end-if.

           modify gd-art2, cursor-y riga, cursor-x 1.
           modify gd-art2, start-x = 1, x = 2,
                           start-y = riga, y = riga,
                           region-color = 144.
           set event-action to event-action-fail 
           .
      * <TOTEM:END>

       SPOSTAMENTO-GD1.
      * <TOTEM:PARA. SPOSTAMENTO-GD1>
           inquire gd-1, last-row in tot-righe
           if event-data-2 > tot-righe
              add 1 to tot-righe giving riga
           else
              move event-data-2 to riga
           end-if.
      
           modify gd-1, cursor-y riga, cursor-x 1.
           modify gd-1, start-x = 1, x = 7,
                       start-y = riga, y = riga,
                       region-color = 144.
           set event-action to event-action-fail.
                                                                
           inquire gd-1(event-data-2, 1), cell-data in tgia-anno.
           inquire gd-1(event-data-2, 2), cell-data in tgia-numero.
           inquire gd-2, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              inquire gd-2(riga, 1), hidden-data gd-hidden
              if hid-padre
                 move hid-cod-articolo to tgia-cod-articolo
                 set tgia-master to true
                 read tmp-giang key tgia-k-numero 
                      invalid
                      modify gd-2(riga,  2), cell-color 513
                      modify gd-2(riga,  3), cell-color 513
                      modify gd-2(riga,  4), cell-color 513
                      modify gd-2(riga, 12), cell-color 513
                  not invalid            
                      modify gd-2(riga,  2), cell-color 193
                      modify gd-2(riga,  3), cell-color 193
                      modify gd-2(riga,  4), cell-color 193
                      modify gd-2(riga, 12), cell-color 193
                 end-read
              end-if
           end-perform 
           .
      * <TOTEM:END>

       SPOSTAMENTO-M.
      * <TOTEM:PARA. SPOSTAMENTO-M>
      *****     inquire gd-ord, last-row in tot-righe.
      *****     if event-data-2 < 2 move 2 to event-data-2 end-if.
      *****     if event-data-2 > tot-righe move tot-righe to event-data-2 end-if.
      *****     if riga not = event-data-2 
      *****        perform CAMBIA-FONT-RIGA-M
      *****     end-if 
           .
      * <TOTEM:END>

       STAMPA.
      * <TOTEM:PARA. STAMPA>
           move path-tmp-giang  to stgiang-path-tmp
           move tab-articoli    to stgiang-articoli

           inquire cbo-promo, VALUE stgiang-promo
           inquire ef-gdo,    VALUE stgiang-gdo
           inquire ef-cli,    VALUE stgiang-cli
           inquire ef-data,   VALUE stgiang-data

           move ef-data-from-buf   to stgiang-dt-cons-da
           move ef-data-to-buf     to stgiang-dt-cons-a


           call   "stgiang" using stgiang-linkage.
           cancel "stgiang" 
           .
      * <TOTEM:END>

       STATO-GD-1.
      * <TOTEM:PARA. STATO-GD-1>
           inquire gd-1, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe               
              move low-value to mro-rec
              inquire gd-1(riga, 1), cell-data in mto-anno
              inquire gd-1(riga, 2), cell-data in mto-numero
              move 0          to tgia-cod-articolo
              move mto-chiave to tgia-testa-ordf
              set record-ok   to true
              set tgia-master to true
              start tmp-giang key >= tgia-k-numero
                    invalid continue
              end-start
              perform until 1 = 2
                 read tmp-giang next at end exit perform end-read
                 if tgia-testa-ordf not = mto-chiave or
                    tgia-ordfor                      or 
                    tgia-articolo
                    exit perform
                 end-if
                 if tgia-attesa
                    set record-ok to false
                    exit perform
                 end-if
              end-perform
              if not record-ok
                 modify gd-1(riga, 8), cell-data  = "PROBLEMA",
                                       cell-color =  176,
                                       cell-font  = Arial8B-Occidentale
              else
                 modify gd-1(riga, 8), cell-data = "OK",
                                       cell-color =  353,
                                       cell-font  = Arial8B-Occidentale
              end-if
           end-perform 
           .
      * <TOTEM:END>

       VALORE-RIGA.
      * <TOTEM:PARA. VALORE-RIGA>
      *****     inquire gd(riga, 1),  hidden-data in gd-hidden.
      *****     inquire gd(riga, 2),  cell-data in col-num.
      *****     inquire gd(riga, 3),  cell-data in col-clides.
      *****     inquire gd(riga, 4),  cell-data in col-localita.
      *****     inquire gd(riga, 5),  cell-data in col-ord-cli.
      *****     inquire gd(riga, 6),  cell-data in col-data-ord.
      *****     inquire gd(riga, 7),  cell-data in col-stato.
      *****     inquire gd(riga, 8),  cell-data in col-nr-e.
      *****     inquire gd(riga, 9),  cell-data in col-data-e.
      *****     inquire gd(riga, 10), cell-data in col-nr-b.
      *****     inquire gd(riga, 11), cell-data in col-data-b.
      *****     inquire gd(riga, 12), cell-data in col-nr-f.
      *****     inquire gd(riga, 13), cell-data in col-data-f.
      *****     inquire gd(riga, 14), cell-data in col-vet.
      *****     inquire gd(riga, 15), cell-data in col-esito 
           .
      * <TOTEM:END>

       VALORIZZA-ORDINI-FORNITORI.
      * <TOTEM:PARA. VALORIZZA-ORDINI-FORNITORI>
           move 0 to save-data-pre tot-qta-pre.
           move low-value    to tgia-rec.
           set tgia-articolo to true.
           start tmp-giang key >= tgia-k-articolo
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-giang next at end exit perform end-read
                    if tgia-ordfor or tgia-master
                       exit perform
                    end-if
                    move low-value         to rof-rec
                    move tgia-cod-articolo to rof-cod-articolo
                    start rordforn key >= rof-k-articolo
                          invalid continue
                      not invalid
                          move 0 to tot-ordforn
                          perform until 1 = 2
                             read rordforn next at end exit perform 
           end-read

                             if rof-cod-articolo not = tgia-cod-articolo
                                exit perform
                             end-if
                             if rof-qta-ord > rof-qta-evasa
                                move rof-chiave-testa to tof-chiave
                                read tordforn no lock invalid continue 
           end-read
                                if tof-inviato or
                                   tof-in-lavorazione
                                   set  cli-tipo-F   to true
                                   move tof-cod-forn to cli-codice
                                                        desf-codice
                                                        tgia-cod-CF
                                   read clienti no lock
                                   move cli-ragsoc-1 to tgia-ragsoc
                                   if tot-ordforn = 0
                                      |VALORIZZO IL CAMPO RAGSOC PER ORDINAMENTO
                                      rewrite tgia-rec
                                   end-if

                                   add 1 to tot-ordforn
                                   set  tgia-ordfor       to true
                                   move tgia-cod-articolo to 
           tgia-cod-articolo
                                   move rof-chiave        to 
           tgia-master-ordf
                                                             tgia-ordf
                                   compute tgia-qta = 
                                           rof-qta-ord - rof-qta-evasa

                                   move 0 to tgia-qta-p tgia-dt-arrivo
                                   move spaces to tgia-note
                                   move tof-chiave to sof-chiave-testa
                                   move rof-riga to sof-prog
                                   read sordforn no lock
                                        invalid 
                                        move 0      to sof-data-arr
                                        move 0      to sof-qta
                                        move spaces to sof-note
                                    not invalid 
                                        move sof-data-arr to 
           tgia-dt-arrivo
                                        move sof-note     to tgia-note
                                        move sof-qta      to tgia-qta-p
                                        add  sof-qta      to tot-qta-pre
                                   end-read

                                   |11/03: Walter: usare sempre i solleciti della riga
      *****                             move 0          to sof-prog
      *****                             read sordforn no lock
      *****                                  invalid continue
      *****                              not invalid
      *****                                  if sof-data-arr = 0
      *****                                     move tgia-dt-arrivo to sof-data-arr
      *****                                  end-if
      *****                             end-read
                                   if sof-data-arr > save-data-pre
                                      move sof-data-arr to save-data-pre
                                   end-if
                                   move sof-data-arr to tgia-dt-arrivo
                                   move sof-note     to tgia-note
                                   move tof-destino  to desf-prog
                                                        tgia-des-CF
                                   read destinif no lock
                                   if desf-tel-dir-ref-ord = spaces
                                      move desf-ragsoc-1 to tgia-destino
                                   else
                                      initialize tgia-destino
                                      inspect desf-tel-dir-ref-ord 
           replacing trailing spaces by low-value
                                      string  desf-tel-dir-ref-ord 
           delimited low-value
                                              " - "                
           delimited size
                                              desf-tel-dir-ref-ord 
           delimited size
                                              into tgia-destino
                                      end-string
                                   end-if
                                   write tgia-rec invalid continue 
           end-write
                                   if tot-ordforn = 1
                                      move tgia-dt-arrivo  to 
           save-dt-arrivo
                                      move tgia-note       to save-note
                                      move tgia-ragsoc     to 
           save-ragsoc
                                      move tgia-destino    to 
           save-destino
                                      move rof-chiave      to 
           save-master-ordf
                                      move tgia-qta-p      to save-qta-p
                                   end-if
                                end-if
                             end-if
                          end-perform
                          set tgia-articolo to true
                          read tmp-giang key tgia-k-articolo
                               invalid continue
                          end-read
                          move tot-ordforn to tgia-tot-ordfor
                          if tot-ordforn = 1
                             move save-master-ordf to tgia-ordf
                             move save-dt-arrivo   to tgia-dt-arrivo
                             move save-note        to tgia-note
                             move save-ragsoc      to tgia-ragsoc
                             move save-destino     to tgia-destino
                             move save-qta-p       to tgia-qta-p
                          else
                             move tot-qta-pre      to tgia-qta-p
                             move save-data-pre    to tgia-dt-arrivo
                          end-if

                          rewrite tgia-rec invalid continue end-rewrite

                          start tmp-giang key > tgia-k-articolo
                                invalid exit perform
                          end-start

                    end-start
                 end-perform
           end-start.
           
           move low-value to tgia-rec.
           set tgia-articolo to true.
           start tmp-giang key >= tgia-k-articolo
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-giang next at end    exit perform end-read
                    if tgia-ordfor or tgia-master exit perform end-if
                    if tgia-tot-ordfor = 0
                       move high-value to tgia-ragsoc
                       rewrite tgia-rec
                    end-if
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       VALORIZZA-ARRAY-CAUSALI.
      * <TOTEM:PARA. VALORIZZA-ARRAY-CAUSALI>
           set link-update-um      to true.
           set link-update-peso    to false.
           set link-update-valore  to false.
           move "0000000000000000" to link-array.
           move link-causale       to tca-codice.
           read tcaumag no lock invalid continue end-read.
           |In caso sia permessa la stampa della bolla
           |agisco sull'impegnato, altrimenti l'ordine
           |è da considerarsi già bollettato ed agisco
           |direttamente sulla giacenza e non sull'impegnato
           if tca-si-stampa 
              move 1 to multiplyer(2)
              set cli-tipo-C to true
              move mto-cod-cli to cli-codice
              read clienti no lock
              perform DIREZIONA-IMPEGNATO
           else
              move 1 to multiplyer(1)
              move 1 to multiplyer(15)
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           perform CONTROLLA-ESEGUIBILITA.

           set RecLocked to false.
           open i-o lockfile.
           perform DELETE-LOCKFILE.
           if RecLocked
              move 78-giang to lck-nome-pgm
              read lockfile  no lock invalid continue end-read
              display message "Funzione già in uso da: " 
           lck-utente-creazione
                        title titolo
                         icon 2
              perform GIANG-EV-AFTER-PROGRAM
              goback
           end-if.
           close lockfile.    

           accept GdoInUsoFlag from environment "GDO_IN_USO".

           initialize path-tmp-k-mtordini.
           accept como-ora  from time.
           accept como-data from century-date.
           accept  path-tmp-k-mtordini from environment "PATH_ST".
           inspect path-tmp-k-mtordini replacing trailing spaces by 
           low-value.
           string  path-tmp-k-mtordini delimited low-value
                   "tmp-k-mtordini_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
                   ".tmp"              delimited size
                   into path-tmp-k-mtordini
           end-string.
           open output tmp-k-mtordini.

           initialize path-tmp-k-mrordini.
           accept  path-tmp-k-mrordini from environment "PATH_ST".
           inspect path-tmp-k-mrordini replacing trailing spaces by 
           low-value.
           string  path-tmp-k-mrordini delimited low-value
                   "tmp-k-mrordini_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
                   ".tmp"              delimited size
                   into path-tmp-k-mrordini
           end-string.
           open output tmp-k-mrordini.

           initialize path-tmp-qta-eva.
           accept  path-tmp-qta-eva from environment "PATH_ST".
           inspect path-tmp-qta-eva replacing trailing spaces by 
           low-value.
           string  path-tmp-qta-eva delimited low-value
                   "tmp-qta-eva"    delimited size
                   como-data        delimited size
                   "_"              delimited size
                   como-ora         delimited size
                   ".tmp"           delimited size
                   into path-tmp-qta-eva
           end-string.
           open output tmp-qta-eva. 

           initialize path-tmp-qta-pren.
           accept  path-tmp-qta-pren from environment "PATH_ST".
           inspect path-tmp-qta-pren replacing trailing spaces by 
           low-value.
           string  path-tmp-qta-pren delimited low-value
                   "tmp-qta-pren"    delimited size
                   como-data         delimited size
                   "_"               delimited size
                   como-ora          delimited size
                   ".tmp"            delimited size
                   into path-tmp-qta-pren
           end-string.
           open output tmp-qta-pren.

           perform CALCOLA-COLORE-TRASPARENTE.

           copy resource "multi-s.bmp".
           call "W$BITMAP" using wbitmap-load, "multi-s.bmp"
                          giving multi-s-bmp.

           copy resource "bloccato.bmp".
           call "W$BITMAP" using wbitmap-load, "bloccato.bmp"
                          giving bloccato-bmp.
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       gd-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-Ev-Msg-Begin-Entry>
           set  CampiOrdF      to false.
           set  GestisciAzione to false.
           move event-data-2   to riga.
           if riga > 1
              inquire gd-2, cursor-y = riga, cursor-x in colonna
              evaluate colonna
              when 6
              when 7
              when 8
                   inquire gd-2(riga,  1), hidden-data gd-hidden
                   inquire gd-2(riga, 11), cell-data in col2-chiave-ordf
                   move col2-chiave-ordf to como-chiave-f
                   inspect como-num-f replacing leading x"20" by x"30"
                   move como-num-f  to LinkNumero of 
           gordfornvar-linkage tof-numero
                   move como-anno-f to LinkAnno   of 
           gordfornvar-linkage tof-anno
                   read tordforn no lock
                        invalid  continue
                    not invalid
                        perform READ-TORDFORN-LOCK
                        if tutto-ok
                           move hid-ordf to sof-chiave
                           read sordforn   no lock
                                invalid set CampiOrdF to true
                            not invalid
                                perform READ-SORDFORN-LOCK              
                                  
                                if tutto-ok
                                   set CampiOrdF to true
                                end-if
                           end-read
                        end-if
                   end-read
              when other
                   inquire gd-2, entry-reason in como-x
                   evaluate como-x
                   when X"00"|doppio click
                   when X"0D"|invio
                        inquire gd-2(riga, 1), hidden-data in gd-hidden
                        if event-data-1 = 11
                           if hid-figlio
                              inquire gd-2(riga, 11), cell-data in 
           col2-chiave-ordf
      *****                        evaluate col2-chiave-ordf 
      *****                        when "SOSTITUZIONE"
      *****                        when "RESTA IN ATTESA"
      *****                        when "TAGLIARE MERCE"
      *****                        when "TENERE SALDO"
      *****                             set ActionGrid     to true
      *****                             set GestisciAzione to true
      *****                        end-evaluate
                           end-if
                        end-if
                        if not GestisciAzione
                           inquire gd-2, cursor-y = riga, cursor-x in 
           colonna
                           evaluate colonna
                           when 1
                                if hid-close
                                   set hid-open   to true
                                   set ApriRighe  to true
                                   modify gd-2(riga, 1),
                                          bitmap        = multi-s-bmp,
                                          bitmap-number = 2,
                                          bitmap-width  = 16
                                   modify gd-2(riga, 1), hidden-data 
           gd-hidden
                                   set ActionGrid to true
                                else
                                   set hid-close  to true
                                   modify gd-2(riga, 1), hidden-data 
           gd-hidden
                                   set ApriRighe  to false
                                   set ActionGrid to true
                                end-if
                           when 3
                                inquire gd-2(riga, 3), cell-data in 
           col2-inevaso
                                move col2-inevaso to como-chiave-m
                                inspect como-num-m replacing leading x"2
      -    "0" by x"30"
                                move como-num-m  to LinkNumero of 
           gordcvar-linkage mto-numero
                                move como-anno-m to LinkAnno   of 
           gordcvar-linkage mto-anno
                                read mtordini no lock 
                                     invalid continue
                                 not invalid
                                     move 78-giang to LinkPgm    of 
           gordcvar-linkage
                                     modify scr-ordini-handle visible 
           false
                                     call   "ordinevar" using 
           lk-blockpgm, 
                                                              
           user-codi, 
                                                              1,
                                                              
           gordcvar-linkage
                                     cancel "ordinevar"
                                     modify scr-ordini-handle visible 
           true
                                end-read
                           when 11
                                inquire gd-2(riga, 11), cell-data in 
           col2-chiave-ordf
                                move col2-chiave-ordf to como-chiave-f
                                inspect como-num-f replacing leading x"2
      -    "0" by x"30"
                                move como-num-f  to LinkNumero of 
           gordfornvar-linkage tof-numero
                                move como-anno-f to LinkAnno   of 
           gordfornvar-linkage tof-anno
                                read tordforn no lock
                                     invalid continue
                                 not invalid
                                     move 78-giang to LinkPgm    of 
           gordfornvar-linkage
                                     modify scr-ordini-handle visible 
           false
                                     call   "gordfornvar" using 
           lk-blockpgm, 
                                                                
           user-codi, 
                                                                1,
                                                                
           gordfornvar-linkage
                                     cancel "gordfornvar"
                                     modify scr-ordini-handle visible 
           true
                                end-read
                           end-evaluate
                        end-if
                    end-evaluate
               end-evaluate
           end-if.
           if not CampiOrdF
              set event-action   to event-action-fail-terminate
           end-if 
           .
      * <TOTEM:END>
       gd-art2-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-art2-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-art2-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-art2-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-art2-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-art2-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-art2-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-art2-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-art2-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-art2-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-art2-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-art2-Ev-Msg-Finish-Entry>
           inquire gd-art2(event-data-2, 1), cell-data in art-codice.

           if art-codice = 0
              perform RIEMPI-TAB-ARTICOLI
              modify gd-art2, record-to-delete event-data-2
           else
              read articoli no lock 
                   invalid 
                   move spaces to art-descrizione
                   set event-action to event-action-fail
                   display message "Articolo non valido"
                             title tit-err
                              icon 2
               not invalid
                   perform RIEMPI-TAB-ARTICOLI
              end-read
              move art-descrizione to des-art
              modify gd-art2(event-data-2, 2), cell-data des-art
           end-if.

      ***---
       RIEMPI-TAB-ARTICOLI.
           initialize tab-articoli.
           move 0 to tot-idx-art idx-art.
           inquire gd-art2, last-row in tot-righe.
           perform varying riga from 2 by 1 until riga > tot-righe
              inquire gd-art2(riga, 1), cell-data in art-codice
              if art-codice not = 0
                 add 1 to idx-art
                 move art-codice to el-articolo(idx-art)
              end-if
           end-perform.
           move idx-art to tot-idx-art 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-GD1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-GD1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-GD1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-GD1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-GD1 
           .
      * <TOTEM:END>
       Screen2-Ef-1-BeforeProcedure.
      * <TOTEM:PARA. Screen2-Ef-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen2-Ef-1-AfterProcedure.
      * <TOTEM:PARA. Screen2-Ef-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       pb-applica-BeforeProcedure.
      * <TOTEM:PARA. pb-applica-BeforeProcedure>
           modify pb-applica, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-applica-AfterProcedure.
      * <TOTEM:PARA. pb-applica-AfterProcedure>
           modify pb-applica, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-applica-LinkTo.
      * <TOTEM:PARA. pb-applica-LinkTo>
           perform CANCELLA-COLORE.
           set tutto-ok to true.
           perform varying control-id from 78-ID-ef-gdo by 1
                     until control-id > 78-ID-ef-data
              perform CONTROLLO
              if errori
                 exit perform
              end-if
           end-perform.

           if tutto-ok
              perform SCR-ELAB-OPEN-ROUTINE
              if trovato-ordine-master
                 perform RIEMPI-GD-1
                 perform RIEMPI-GD-2
              else
                 perform RESET-GRIGLIE
              end-if
              set ActionGrid to false
           end-if.

           move 500 to control-id
           move   4 to accept-control.
           modify pb-applica, bitmap-number 2 
           .
      * <TOTEM:END>
       Screen2-Cm-1-BeforeProcedure.
      * <TOTEM:PARA. Screen2-Cm-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen2-Cm-1-AfterProcedure.
      * <TOTEM:PARA. Screen2-Cm-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       gd-art2-BeforeProcedure.
      * <TOTEM:PARA. gd-art2-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca 
           .
      * <TOTEM:END>
       gd-art2-AfterProcedure.
      * <TOTEM:PARA. gd-art2-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca 
           .
      * <TOTEM:END>
       ef-gdo-BeforeProcedure.
      * <TOTEM:PARA. ef-gdo-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-cli-BeforeProcedure.
      * <TOTEM:PARA. ef-cli-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-gdo-AfterProcedure.
      * <TOTEM:PARA. ef-gdo-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-cli-AfterProcedure.
      * <TOTEM:PARA. ef-cli-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled E-CERCA.
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       scr-azione-Rb-1-BeforeProcedure.
      * <TOTEM:PARA. scr-azione-Rb-1-BeforeProcedure>
           modify control-handle, color = colore-nu
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       scr-azione-Rb-1-AfterProcedure.
      * <TOTEM:PARA. scr-azione-Rb-1-AfterProcedure>
           modify control-handle, color = colore-or
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       scr-azione-Ef-1-BeforeProcedure.
      * <TOTEM:PARA. scr-azione-Ef-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca2.
           modify tool-cerca2, enabled e-cerca2 
           .
      * <TOTEM:END>
       scr-azione-Ef-1-AfterProcedure.
      * <TOTEM:PARA. scr-azione-Ef-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           inquire ef-art-sost, value in ef-art-sost-buf.
           if ef-art-sost-buf not = 0
              perform CONTROLLO-AZIONE
           end-if.
           move 0 to e-cerca2.
           modify tool-cerca2, enabled e-cerca2 
           .
      * <TOTEM:END>
       rb-sost-LinkTo.
      * <TOTEM:PARA. rb-sost-LinkTo>
           move 1 to v-sost.
           display ef-art-sost lab-art-sost.
           perform CANCELLA-COLORE.
           move 78-ID-ef-art-sost to control-id.
           move 4 to accept-control.
           move 2 to azione
           display rb-sost 
           .
      * <TOTEM:END>
       rb-attesa-LinkTo.
      * <TOTEM:PARA. rb-attesa-LinkTo>
           move 0      to v-sost.
           move 0      to ef-art-sost-buf 
           move spaces to lab-art-sost-buf.
           display ef-art-sost lab-art-sost.
           move 1 to azione
           display rb-attesa 
           .
      * <TOTEM:END>
       rb-saldo-LinkTo.
      * <TOTEM:PARA. rb-saldo-LinkTo>
           move 0      to v-sost.
           move 0      to ef-art-sost-buf 
           move spaces to lab-art-sost-buf.
           display ef-art-sost lab-art-sost.
           move 3 to azione
           display rb-saldo 
           .
      * <TOTEM:END>
       rb-tagliare-LinkTo.
      * <TOTEM:PARA. rb-tagliare-LinkTo>
           move 0      to v-sost.
           move 0      to ef-art-sost-buf 
           move spaces to lab-art-sost-buf.
           display ef-art-sost lab-art-sost.
           move 4 to azione.
           display rb-tagliare 
           .
      * <TOTEM:END>
       TOOL-CERCAa-LinkTo.
      * <TOTEM:PARA. TOOL-CERCAa-LinkTo>
           inquire tool-cerca2, enabled e-cerca2.
           if e-cerca2 = 1
              perform CERCA2
           end-if 
           .
      * <TOTEM:END>
       TOOL-SALVA2-LinkTo.
      * <TOTEM:PARA. TOOL-SALVA2-LinkTo>
           perform SALVA2 
           .
      * <TOTEM:END>
       giang-Ev-After-Program.
      * <TOTEM:PARA. giang-Ev-After-Program>
           unlock multigest all records.
           close  multigest.

           if path-tmp-giang not = spaces
              close       tmp-giang
              delete file tmp-giang
           end-if.
           if path-tmp-mrordini not = spaces
              close       tmp-mrordini
              delete file tmp-mrordini
           end-if.
           if path-tmp-mtordini not = spaces
              close       tmp-mtordini
              delete file tmp-mtordini
           end-if.
           if path-tmp-k-mtordini not = spaces
              close       tmp-k-mtordini
              delete file tmp-k-mtordini
              close       tmp-k-mrordini
              delete file tmp-k-mrordini
              close       tmp-qta-eva 
              delete file tmp-qta-eva 
              close       tmp-qta-pren
              delete file tmp-qta-pren
           end-if.
           call "W$BITMAP" using wbitmap-destroy, multi-s-bmp.
           call "W$BITMAP" using wbitmap-destroy, bloccato-bmp.
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       gd-2-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-2-Ev-Msg-Finish-Entry>
           set tutto-ok to true.
           evaluate event-data-1
           when 6
                inquire gd-2(riga, 6), cell-data in col2-qtap-dt-ord
                call "C$JUSTIFY" using col2-qtap-dt-ord, "R"
                inspect col2-qtap-dt-ord replacing leading x"20" by x"30
      -    ""
                if col2-qtap-dt-ord is not numeric
                   display message "Solo valori numerici"
                             title tit-err
                              icon 2
                   set errori to true
                   set event-action to event-action-fail
                else
                   move col2-qtap-dt-ord to como-qta-z
                   move como-qta-z to sof-qta
                end-if
           when 7
                inquire gd-2(riga, 7), cell-data in col2-dt-arr-cons
                call "C$JUSTIFY" using col2-dt-arr-cons, "R"
                inspect col2-dt-arr-cons replacing leading x"20" by x"30
      -    ""
                if col2-dt-arr-cons is not numeric
                   display message "Solo valori numerici GGMMAAAA"
                             title tit-err
                              icon 2
                   set errori to true
                   set event-action to event-action-fail
                else
                   move col2-dt-arr-cons to como-data
                   if como-data not = 0
                      perform DATE-FORMAT
                   end-if
                   initialize col2-dt-arr-cons
                   move como-data(1:2) to col2-dt-arr-cons(1:2)
                   move "/"            to col2-dt-arr-cons(3:1)
                   move como-data(3:2) to col2-dt-arr-cons(4:2)
                   move "/"            to col2-dt-arr-cons(6:1)
                   move como-data(5:4) to col2-dt-arr-cons(7:4)
                   modify gd-2(riga, 7), cell-data col2-dt-arr-cons
                   perform DATE-TO-FILE
                   move como-data to sof-data-arr
                end-if
           when 8
                inquire gd-2(riga, 8), cell-data in col2-note-promo
                move  col2-note-promo to sof-note
           end-evaluate.

           if tutto-ok
              write sof-rec 
                    invalid 
                    accept sof-data-ultima-modifica from century-date
                    accept sof-ora-ultima-modifica  from time
                    move user-codi to sof-utente-ultima-modifica 
                not invalid
                    |LO COMPLETO
                    accept sof-data-creazione from century-date
                    accept sof-ora-creazione  from time
                    move user-codi to sof-utente-creazione
              end-write
              rewrite sof-rec invalid continue end-rewrite

      *****        if event-data-1 = 7
      *****           |E LO SCRIVO ANCHE PER IL RECORD DI TESTA (SOLO LA DATA)
      *****           move 0 to sof-prog
      *****           read sordforn no lock 
      *****                invalid
      *****                accept sof-data-creazione from century-date
      *****                accept sof-ora-creazione  from time
      *****                move user-codi to sof-utente-creazione
      *****                initialize sof-data-ultima-modifica
      *****                           sof-ora-ultima-modifica
      *****                           sof-utente-ultima-modifica
      *****                           sof-qta
      *****                           sof-note
      *****            not invalid 
      *****                accept sof-data-ultima-modifica from century-date
      *****                accept sof-ora-ultima-modifica  from time
      *****                move user-codi to sof-utente-ultima-modifica
      *****           end-read
      *****           move como-data to sof-data-arr
      *****           write sof-rec invalid rewrite sof-rec end-write
      *****        end-if
      *****
      *****        if event-data-1 = 8
      *****           |E LO SCRIVO ANCHE PER IL RECORD DI TESTA (SOLO LA DATA)
      *****           move 0 to sof-prog
      *****           read sordforn no lock 
      *****                invalid
      *****                accept sof-data-creazione from century-date
      *****                accept sof-ora-creazione  from time
      *****                move user-codi to sof-utente-creazione
      *****                initialize sof-data-ultima-modifica
      *****                           sof-ora-ultima-modifica
      *****                           sof-utente-ultima-modifica
      *****                           sof-qta
      *****                           sof-note
      *****            not invalid 
      *****                accept sof-data-ultima-modifica from century-date
      *****                accept sof-ora-ultima-modifica  from time
      *****                move user-codi to sof-utente-ultima-modifica
      *****           end-read
      *****           move  col2-note-promo to sof-note
      *****           write sof-rec invalid rewrite sof-rec end-write
      *****        end-if

              unlock tordforn all records
              unlock sordforn all records
              
              move hid-cod-articolo to tgia-cod-articolo
              set  tgia-ordfor      to true
              move hid-master-ordf  to tgia-master-ordf
              read tmp-giang no lock invalid continue end-read
              move sof-qta      to tgia-qta-p
              move sof-data-arr to tgia-dt-arrivo
              move sof-note     to tgia-note
              rewrite tgia-rec invalid continue end-rewrite

           end-if 
           .
      * <TOTEM:END>
       gd-2-Ev-Msg-Cancel-Entry.
      * <TOTEM:PARA. gd-2-Ev-Msg-Cancel-Entry>
           evaluate event-data-1
           when 6
           when 7
           when 8
                unlock tordforn all records
                unlock sordforn all records
           end-evaluate 
           .
      * <TOTEM:END>
       TOOL-STAMPA-LinkTo.
      * <TOTEM:PARA. TOOL-STAMPA-LinkTo>
           perform STAMPA 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

