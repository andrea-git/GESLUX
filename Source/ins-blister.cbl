      *{TOTEM}PRG-COMMENT
      * ins-blister.Cbl
      * ins-blister.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          ins-blister.
       AUTHOR.              andre.
       DATE-WRITTEN.        martedì 25 giugno 2019 16:17:17.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:ins-blister, INIT:ins-blister, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "blister.sl".
           COPY "tmagaz.sl".
           COPY "articoli.sl".
           COPY "listini.sl".
           COPY "progmag.sl".
           COPY "clienti.sl".
           COPY "destini.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "blister.fd".
           COPY "tmagaz.fd".
           COPY "articoli.fd".
           COPY "listini.fd".
           COPY "progmag.fd".
           COPY "clienti.fd".
           COPY "destini.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "ACUGUI.DEF".
               COPY "ACUCOBOL.DEF".
               COPY "FONTS.DEF".
               COPY "CRTVARS.DEF".
               COPY "SHOWMSG.DEF".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       78 TITOLO VALUE IS "Inserimento Blister". 
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-NUOVO          PIC  9
                  VALUE IS 1.
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 Screen1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 78.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 ris
                  USAGE IS UNSIGNED-SHORT.
       77 des-imballo      PIC  x(50).
       77 qta-imballo      PIC  9(4).
       77 lab-udm-buf      PIC  X(20).
       77 lab1-buf         PIC  X(5)
                  VALUE IS "Colli".
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 multi-bmp        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-x           PIC  x.
       77 giacenza         PIC  s9(8).
       77 save-peso-utf    PIC  9(5)V9(3).
       77 tot-peso-utf     PIC  9(4)v999.
       01 hid-riga         PIC  x.
           88 hid-componente VALUE IS "C". 
           88 hid-blister VALUE IS "B". 
       01 FILLER           PIC  9.
           88 GridAction VALUE IS 1    WHEN SET TO FALSE  0. 
       77 STATUS-blister   PIC  X(2).
           88 Valid-STATUS-blister VALUE IS "00" THRU "09". 
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       01 rec-grid.
           05 col-nulla        PIC  x.
           05 col-art          PIC  z(6).
           05 col-des          PIC  X(50).
           05 col-qta          PIC  z(08).
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 hid-tipo         PIC  x.
           88 hid-chiuso VALUE IS "C". 
           88 hid-aperto VALUE IS "A". 
       77 ef-qta-buf       PIC  zz.zzz.zz9.
       77 STATUS-listini   PIC  X(2).
           88 Valid-STATUS-listini VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 ef-blister-buf   PIC  z(6).
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 STATUS-destini   PIC  X(2).
           88 Valid-STATUS-destini VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Screen1-FLAG-REFRESH PIC  9.
          88 Screen1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-blister-BUF     PIC X(2967).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-listini-BUF     PIC X(207).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-destini-BUF     PIC X(3386).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-blister-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-blister-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-blister-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-blister-KEY1-Asc  VALUE "A".
          88 DataSet1-blister-KEY1-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-listini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-listini-LOCK  VALUE "Y".
       77 DataSet1-listini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-listini-KEY-Asc  VALUE "A".
          88 DataSet1-listini-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-destini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destini-LOCK  VALUE "Y".
       77 DataSet1-destini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destini-KEY-Asc  VALUE "A".
          88 DataSet1-destini-KEY-Desc VALUE "D".

       77 blister-k-magaz-SPLITBUF  PIC X(10).
       77 blister-k-des-SPLITBUF  PIC X(51).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 listini-lst-k-articolo-SPLITBUF  PIC X(20).
       77 listini-lst-k-cod-art-cli-SPLITBUF  PIC X(29).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 destini-K1-SPLITBUF  PIC X(51).
       77 destini-k-localita-SPLITBUF  PIC X(36).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-gd1 VALUE 5001.
       78  78-ID-ef-qta VALUE 5002.
       78  78-ID-ef-blister VALUE 5003.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-INS-BLISTER.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Screen1, 
           BEFORE PROCEDURE Screen1-BeforeProcedure,
           .

      * GRID
       05
           gd1, 
           Grid, 
           COL 1,60, 
           LINE 3,56,
           LINES 18,78 ,
           SIZE 56,20 ,
           BOXED,
           DATA-COLUMNS (1, 2, 8, 58),
           ALIGNMENT ("C", "R", "U", "R"),
           SEPARATION (5, 5, 5, 5),
           DATA-TYPES ("3", "X", "X", "9(8)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 56,
           VPADDING 30,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * ENTRY FIELD
       05
           ef-qta, 
           Entry-Field, 
           COL 15,00, 
           LINE 23,00,
           LINES 1,33 ,
           SIZE 9,00 ,
           BOXED,
           COLOR IS 513,
           FONT IS Verdana12-Occidentale,
           ID IS 78-ID-ef-qta,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-qta-buf,
           AFTER PROCEDURE Screen1-Ef-1-AfterProcedure, 
           .

      * FRAME
       05
           Screen4-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 24,72,
           LINES 2,83 ,
           SIZE 57,50 ,
           LOWERED,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-ok, 
           Push-Button, 
           COL 42,50, 
           LINE 25,41,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-ok-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 200,
           AFTER PROCEDURE pb-ok-AfterProcedure, 
           BEFORE PROCEDURE pb-ok-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-annulla, 
           Push-Button, 
           COL 50,20, 
           LINE 25,41,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 201,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-annulla-AfterProcedure, 
           BEFORE PROCEDURE pb-annulla-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 6,75, 
           LINE 1,00,
           LINES 0,50 ,
           SIZE 3,00 ,
           FONT IS Default-Font,
           ID IS 82,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 5,90, 
           LINE 23,00,
           LINES 1,33 ,
           SIZE 8,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Quantità",
           .

      * ENTRY FIELD
       05
           ef-blister, 
           Entry-Field, 
           COL 15,00, 
           LINE 1,56,
           LINES 1,33 ,
           SIZE 9,00 ,
           BOXED,
           COLOR IS 513,
           FONT IS Verdana12-Occidentale,
           ID IS 78-ID-ef-blister,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 6,
           NUMERIC,
           VALUE ef-blister-buf,
           AFTER PROCEDURE ef-blister-AfterProcedure, 
           .

      * LABEL
       05
           Screen1-La-1a, 
           Label, 
           COL 1,90, 
           LINE 1,56,
           LINES 1,33 ,
           SIZE 12,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Ricerca Blister",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING ins-linkage.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:ins-blister, INIT:ins-blister, BeforeDeclarative>
      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ins-blister-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Screen1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:ins-blister, INIT:ins-blister, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-ok-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
      *    After-Program
           PERFORM ins-blister-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-ok
           COPY RESOURCE "BOTTONE-ok.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-ok.BMP", 
                   GIVING BOTTONE-ok-BMP.
      * pb-annulla
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-blister
           PERFORM OPEN-tmagaz
           PERFORM OPEN-articoli
           PERFORM OPEN-listini
           PERFORM OPEN-progmag
           PERFORM OPEN-clienti
           PERFORM OPEN-destini
      *    After Open
           .

       OPEN-blister.
      * <TOTEM:EPT. INIT:ins-blister, FD:blister, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT blister
           IF NOT Valid-STATUS-blister
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ins-blister, FD:blister, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:ins-blister, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ins-blister, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:ins-blister, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ins-blister, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-listini.
      * <TOTEM:EPT. INIT:ins-blister, FD:listini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT listini
           IF NOT Valid-STATUS-listini
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ins-blister, FD:listini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:ins-blister, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ins-blister, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:ins-blister, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ins-blister, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destini.
      * <TOTEM:EPT. INIT:ins-blister, FD:destini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destini
           IF NOT Valid-STATUS-destini
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ins-blister, FD:destini, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-blister
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-articoli
           PERFORM CLOSE-listini
           PERFORM CLOSE-progmag
           PERFORM CLOSE-clienti
           PERFORM CLOSE-destini
      *    After Close
           .

       CLOSE-blister.
      * <TOTEM:EPT. INIT:ins-blister, FD:blister, BeforeClose>
      * <TOTEM:END>
           CLOSE blister
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:ins-blister, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:ins-blister, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-listini.
      * <TOTEM:EPT. INIT:ins-blister, FD:listini, BeforeClose>
      * <TOTEM:END>
           CLOSE listini
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:ins-blister, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:ins-blister, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-destini.
      * <TOTEM:EPT. INIT:ins-blister, FD:destini, BeforeClose>
      * <TOTEM:END>
           CLOSE destini
           .

       blister-k-magaz-MERGE-SPLITBUF.
           INITIALIZE blister-k-magaz-SPLITBUF
           MOVE bli-magazzino(1:3) TO blister-k-magaz-SPLITBUF(1:3)
           MOVE bli-codice(1:6) TO blister-k-magaz-SPLITBUF(4:6)
           .

       blister-k-des-MERGE-SPLITBUF.
           INITIALIZE blister-k-des-SPLITBUF
           MOVE bli-descrizione(1:50) TO blister-k-des-SPLITBUF(1:50)
           .

       DataSet1-blister-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 MOVE Low-Value TO bli-chiave
              ELSE
                 MOVE High-Value TO bli-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-blister-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 MOVE High-Value TO bli-chiave
              ELSE
                 MOVE Low-Value TO bli-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-blister-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-blister-KEY1-ORDER
           END-EVALUATE
           .

      * blister
       DataSet1-blister-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 START blister KEY >= bli-chiave
              ELSE
                 START blister KEY <= bli-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-blister-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 START blister KEY <= bli-chiave
              ELSE
                 START blister KEY >= bli-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-blister-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 START blister KEY > bli-chiave
              ELSE
                 START blister KEY < bli-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-blister-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 START blister KEY < bli-chiave
              ELSE
                 START blister KEY > bli-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-blister-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-LOCK
                 READ blister WITH LOCK 
                 KEY bli-chiave
              ELSE
                 READ blister WITH NO LOCK 
                 KEY bli-chiave
              END-IF
           END-EVALUATE
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT 
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 IF DataSet1-blister-LOCK
                    READ blister NEXT WITH LOCK
                 ELSE
                    READ blister NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-blister-LOCK
                    READ blister PREVIOUS WITH LOCK
                 ELSE
                    READ blister PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-blister-KEY1-Asc
                 IF DataSet1-blister-LOCK
                    READ blister PREVIOUS WITH LOCK
                 ELSE
                    READ blister PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-blister-LOCK
                    READ blister NEXT WITH LOCK
                 ELSE
                    READ blister NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       listini-lst-k-articolo-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-articolo-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-articolo-SPLITBUF(1:5)
           MOVE lst-articolo OF listini(1:6) TO 
           listini-lst-k-articolo-SPLITBUF(6:6)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-articolo-SPLITBUF(12:8)
           .

       listini-lst-k-cod-art-cli-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-cod-art-cli-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(1:5)
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(6:15)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(21:8)
           .

       DataSet1-listini-INITSTART.
           IF DataSet1-listini-KEY-Asc
              MOVE Low-Value TO lst-chiave OF listini
           ELSE
              MOVE High-Value TO lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-INITEND.
           IF DataSet1-listini-KEY-Asc
              MOVE High-Value TO lst-chiave OF listini
           ELSE
              MOVE Low-Value TO lst-chiave OF listini
           END-IF
           .

      * listini
       DataSet1-listini-START.
           IF DataSet1-listini-KEY-Asc
              START listini KEY >= lst-chiave OF listini
           ELSE
              START listini KEY <= lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-START-NOTGREATER.
           IF DataSet1-listini-KEY-Asc
              START listini KEY <= lst-chiave OF listini
           ELSE
              START listini KEY >= lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-START-GREATER.
           IF DataSet1-listini-KEY-Asc
              START listini KEY > lst-chiave OF listini
           ELSE
              START listini KEY < lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-START-LESS.
           IF DataSet1-listini-KEY-Asc
              START listini KEY < lst-chiave OF listini
           ELSE
              START listini KEY > lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-listini-LOCK
              READ listini WITH LOCK 
              KEY lst-chiave OF listini
           ELSE
              READ listini WITH NO LOCK 
              KEY lst-chiave OF listini
           END-IF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT 
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-listini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-listini-KEY-Asc
              IF DataSet1-listini-LOCK
                 READ listini NEXT WITH LOCK
              ELSE
                 READ listini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-listini-LOCK
                 READ listini PREVIOUS WITH LOCK
              ELSE
                 READ listini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-listini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-listini-KEY-Asc
              IF DataSet1-listini-LOCK
                 READ listini PREVIOUS WITH LOCK
              ELSE
                 READ listini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-listini-LOCK
                 READ listini NEXT WITH LOCK
              ELSE
                 READ listini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       destini-K1-MERGE-SPLITBUF.
           INITIALIZE destini-K1-SPLITBUF
           MOVE des-ragsoc-1(1:40) TO destini-K1-SPLITBUF(1:40)
           MOVE des-codice(1:5) TO destini-K1-SPLITBUF(41:5)
           MOVE des-prog(1:5) TO destini-K1-SPLITBUF(46:5)
           .

       destini-k-localita-MERGE-SPLITBUF.
           INITIALIZE destini-k-localita-SPLITBUF
           MOVE des-localita(1:35) TO destini-k-localita-SPLITBUF(1:35)
           .

       DataSet1-destini-INITSTART.
           IF DataSet1-destini-KEY-Asc
              MOVE Low-Value TO des-chiave
           ELSE
              MOVE High-Value TO des-chiave
           END-IF
           .

       DataSet1-destini-INITEND.
           IF DataSet1-destini-KEY-Asc
              MOVE High-Value TO des-chiave
           ELSE
              MOVE Low-Value TO des-chiave
           END-IF
           .

      * destini
       DataSet1-destini-START.
           IF DataSet1-destini-KEY-Asc
              START destini KEY >= des-chiave
           ELSE
              START destini KEY <= des-chiave
           END-IF
           .

       DataSet1-destini-START-NOTGREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY <= des-chiave
           ELSE
              START destini KEY >= des-chiave
           END-IF
           .

       DataSet1-destini-START-GREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY > des-chiave
           ELSE
              START destini KEY < des-chiave
           END-IF
           .

       DataSet1-destini-START-LESS.
           IF DataSet1-destini-KEY-Asc
              START destini KEY < des-chiave
           ELSE
              START destini KEY > des-chiave
           END-IF
           .

       DataSet1-destini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destini-LOCK
              READ destini WITH LOCK 
              KEY des-chiave
           ELSE
              READ destini WITH NO LOCK 
              KEY des-chiave
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT 
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE bli-rec OF blister
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE art-rec OF articoli
           INITIALIZE lst-rec OF listini
           INITIALIZE prg-rec OF progmag
           INITIALIZE cli-rec OF clienti
           INITIALIZE des-rec OF destini
           .


      * GRID
       gd1-Content.
      * CELLS' SETTING
              MODIFY gd1, X = 2, Y = 1,
                CELL-DATA = "Codice",
      * CELLS' SETTING
              MODIFY gd1, X = 3, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd1, X = 4, Y = 1,
                CELL-DATA = "Qta",
           .

      * FD's Initialize Paragraph
       DataSet1-blister-INITREC.
           INITIALIZE bli-rec OF blister
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-listini-INITREC.
           INITIALIZE lst-rec OF listini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destini-INITREC.
           INITIALIZE des-rec OF destini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Screen1-Open-Routine.
           PERFORM Screen1-Scrn
           PERFORM Screen1-Proc
           .

       Screen1-Scrn.
           PERFORM Screen1-Create-Win
           PERFORM Screen1-Init-Value
           PERFORM Screen1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen1-DISPLAY
           .

       Screen1-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 26,56,
              SIZE 57,50,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS Screen1-Handle,
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen1 UPON Screen1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd1, DISPLAY-COLUMNS (1, 4, 12, 52)
           .

       Screen1-PROC.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeAccept>
           modify gd1, mass-update = 1.
           modify gd1, reset-grid  = 1.
           perform GD1-CONTENT.
           set trovato to false.
           move low-value to bli-rec.
           move ins-mag   to bli-magazzino.
           start blister key >= k-des
                 invalid continue
             not invalid
                 move 2 to riga
                 perform until 1 = 2
                    read blister next 
                       at end 
                          exit perform 
                    end-read
                    if bli-attivo
                       perform CONTROLLA-VALIDITA-COMPONENTI
                    end-if
                    if bli-attivo and bli-magazzino = ins-mag
                       |14/12: Richiesta di Walter:
                       |Abilitare TUTTI i blister
      *****                 if ins-gdo = spaces
                          move bli-codice      to col-art
                          move bli-descrizione to col-des
                          modify gd1, record-to-add = rec-grid
                          set hid-chiuso       to true
                          set hid-blister      to true
                          modify gd1(riga, 1), hidden-data hid-tipo
                          modify gd1(riga, 2), hidden-data hid-riga
                          modify gd1(riga, 1),
                                 bitmap        = multi-bmp
                                 bitmap-number = 3
                                 bitmap-width  = 16
                          add 1 to riga
                          set trovato to true
      *****                 else
      *****                    move low-value  to lst-data
      *****                    move ins-gdo    to lst-gdo
      *****                    move bli-codice to lst-articolo
      *****                    start listini key >= lst-k-articolo
      *****                       invalid 
      *****                          continue
      *****                       not invalid
      *****                          read listini next
      *****                          if lst-articolo = bli-codice
      *****                             move bli-codice      to col-art
      *****                             move bli-descrizione to col-des
      *****                             modify gd1, record-to-add = rec-grid
      *****                             set hid-chiuso       to true
      *****                             set hid-blister      to true
      *****                             modify gd1(riga, 1), hidden-data hid-tipo
      *****                             modify gd1(riga, 2), hidden-data hid-riga
      *****                             modify gd1(riga, 1),
      *****                                    bitmap        = multi-bmp
      *****                                    bitmap-number = 3
      *****                                    bitmap-width  = 16
      *****                             add 1 to riga
      *****                             set trovato to true
      *****                          end-if
      *****                    end-start
      *****                 end-if
                    end-if
                 end-perform
           end-start.
           modify gd1, mass-update = 0.
           move 78-ID-gd1  to control-id.
           move 4          to accept-control.
           move 2          to event-data-2.
           perform SPOSTAMENTO.
           set GridAction  to false.
           if not trovato
              display message "Nessun blister attivo o a listino"
                        title titolo
                         icon 2
              move 27 to key-status
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen1
                 ON EXCEPTION
                    PERFORM Screen1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterEndAccept>
           if GridAction
              set GridAction to false
              inquire gd1(riga, 1), hidden-data in hid-tipo
              if hid-chiuso
                 set hid-aperto       to true
                 modify gd1(riga, 1), hidden-data hid-tipo
                 inquire gd1(riga, 2), cell-data in col-art
                 modify gd1(riga, 1),
                        bitmap        = multi-bmp
                        bitmap-number = 2
                        bitmap-width  = 16
                 move col-art to bli-codice
                 read blister no lock invalid continue end-read
                 perform varying idx from 1 by 1 
                           until idx > 50
                    add 1 to riga
                    if bli-el-articolo(idx) = 0
                       exit perform
                    end-if
                    move bli-el-articolo(idx) to col-art art-codice
                    read articoli no lock 
                       invalid 
                          continue 
                    end-read
                    move bli-el-qta(idx) to col-qta
                    move art-descrizione to col-des
                    modify gd1, insertion-index riga,
                                record-to-add = rec-grid
                    set hid-aperto       to true
                    set hid-componente   to true
                    modify gd1(riga, 1), hidden-data hid-tipo
                    modify gd1(riga, 2), hidden-data hid-riga
                    modify gd1(riga, 1),
                           bitmap        = multi-bmp
                           bitmap-number = 4
                           bitmap-width  = 16
                 end-perform
              else
                 inquire gd1, last-row in tot-righe
                 inquire gd1(riga, 2), hidden-data in hid-riga
                 if hid-componente
                    perform varying riga from riga by -1
                              until riga < 2
                       inquire gd1(riga, 2), hidden-data in hid-riga
                       if hid-blister
                          exit perform
                       end-if
                    end-perform
                 end-if

                 move riga to store-riga
                 set hid-chiuso to true
                 modify gd1(riga, 1), hidden-data hid-tipo
                 modify gd1(riga, 1),
                        bitmap        = multi-bmp
                        bitmap-number = 3
                        bitmap-width  = 16
                 
                 add 1 to riga
                 perform varying riga from riga by 1
                           until riga > tot-righe
                    inquire gd1(riga, 2), hidden-data in hid-riga
                    if hid-blister
                       exit perform
                    end-if
                    modify gd1, record-to-delete = riga
                    subtract 1 from riga
                    subtract 1 from tot-righe
                 end-perform

                 move store-riga to riga event-data-2
                 perform SPOSTAMENTO
                 modify gd1, cursor-y riga

              end-if
           end-if

      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen1-Handle
           INITIALIZE Key-Status
           .

       Screen1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-ok-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen1-CLEAR.
           PERFORM Screen1-INIT-VALUE
           PERFORM Screen1-DISPLAY
           .

       Screen1-DISPLAY.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen1 UPON Screen1-Handle
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterDisplay>
      * <TOTEM:END>
           .

       Screen1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeExit>
           if errori
              move 0 to ins-codice
           end-if.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd1-Content
           .

       Screen1-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, SetDefault>
      * <TOTEM:END>
           PERFORM Screen1-FLD-TO-BUF
           .


       Screen1-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen1-SHOW-MSG-ROUTINE
           .

       Screen1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen1-DISPLAY-MESSAGE
           .

       Screen1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen1-Save-Status.
           .             

       Screen1-Restore-Status.
           .



       Screen1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5002 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5003 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5002 PERFORM Screen1-Ef-1-BeforeProcedure
           When 5003 PERFORM ef-blister-BeforeProcedure
           END-EVALUATE
           .

       Screen1-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    Screen1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    Screen1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    Screen1-Handle 
              PERFORM gd1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    Screen1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    Screen1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    Screen1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CONTROLLA-VALIDITA-COMPONENTI.
      * <TOTEM:PARA. CONTROLLA-VALIDITA-COMPONENTI>
           perform varying idx from 1 by 1 
                     until idx > 50
              if bli-el-articolo(idx) = 0 exit perform end-if
              move bli-el-articolo(idx) to art-codice
              read articoli no lock 
                   invalid continue 
              end-read
              if art-attivo            
                 set bli-bloccato to true
                 move low-value  to prg-chiave
                 move art-codice to prg-cod-articolo
                 move ins-mag    to prg-cod-magazzino
                 start progmag key >= prg-chiave
                       invalid continue
                   not invalid
                       perform until 1 = 2
                          read progmag next at end exit perform end-read
                          if prg-cod-articolo  not = art-codice or
                             prg-cod-magazzino not = ins-mag
                             exit perform
                          end-if
                          if prg-attivo
                             set bli-attivo to true
                             exit perform
                          end-if
                       end-perform
                 end-start
                 if bli-bloccato
                    exit perform
                 end-if
              else
                 set bli-bloccato to true
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

      * Paragrafo per la struttura dei controlli sulla screen Screen1
           evaluate control-id
           |78-ID-ef-des è l'ID del control ef-des
           when 78-ID-ef-qta
                inquire ef-qta, value in ins-qta
                if ins-qta = 0
                   set errori to true
                   display message "Inserimento quantità mancante"
                             title tit-err
                              icon 2
                   move 78-ID-ef-qta to control-id
                end-if
           when 78-ID-ef-blister
                perform CERCA-TESTO
      *          if ResultSearch = zero
      *             display message "Blister non trovato"
      *                       title tit-err
      *                        icon 2
      *          end-if

           end-evaluate.
      *
           if errori
              perform CANCELLA-COLORE
              move CONTROL-ID to store-id
              move 4          to ACCEPT-CONTROL
           end-if.


      ***---
       CERCA-TESTO.
           move 0 to ResultSearch

           inquire gd1, cursor-y in riga
           inquire gd1, search-options in grid-search-options
              
           |direzione di ricerca
           set GRID-SEARCH-FORWARDS to true
           set GRID-SEARCH-WRAP     to true

           set GRID-SEARCH-IGNORE-CASE to true

           |trova la parola nella cella
           set GRID-SEARCH-MATCH-ANY to true

           |ricerca nelle sole celle visible 
           |ignorando gli eventuali hidden-data
           set GRID-SEARCH-VISIBLE to true

           |non considerare quello su cui sono posizionato
           set GRID-SEARCH-SKIP-CURRENT   to true

           |si posiziona sulla cella trovata
           set GRID-SEARCH-MOVES-CURSOR   to true 

           |num colonna sulla quale fare la ricerca
           move 2 to GRID-SEARCH-COLUMN 

           modify gd1, search-options GRID-SEARCH-OPTIONS

           modify gd1(riga, 2), 
                  search-text ef-blister-buf |testo da ricercare
                       giving ResultSearch |1, 2 = trovato 0 = non trovato

           if ResultSearch = GRDSRCH-NOT-FOUND
              display message box MSG-Testo-non-trovato
                      title = titolo
           else
              inquire gd1, cursor-y in riga
              move riga to event-data-2
              perform SPOSTAMENTO
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy" 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire gd1, last-row in tot-righe.
           if event-data-2 < 2 
              move 2 to event-data-2 
           end-if.
           if event-data-2 > tot-righe 
              move tot-righe to event-data-2 
           end-if.

           modify gd1, start-y = event-data-2, y = event-data-2,
                       start-x = 1,            x = 4,
                       region-color = 481.

           inquire gd1(event-data-2, 2), CELL-DATA ef-blister-buf
           modify ef-blister, VALUE ef-blister-buf
           .
      * <TOTEM:END>

       VALORIZZA-MAGGIOR-GIACENZA.
      * <TOTEM:PARA. VALORIZZA-MAGGIOR-GIACENZA>
           |Valorizzo prg-chiave con il record avente > giacenza
           move 0 to giacenza.
           set trovato to false.
           move low-value                to prg-chiave.
           move bli-el-articolo(ins-idx) to prg-cod-articolo.
           move bli-magazzino            to prg-cod-magazzino.
           start progmag key >= prg-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read progmag next at end exit perform end-read
                    if prg-cod-articolo  not = bli-el-articolo(ins-idx) 
           or
                       prg-cod-magazzino not = bli-magazzino
                       exit perform
                    end-if
                    if not trovato
                       set trovato to true
                       |Se la prima ed unica volta ho una giacenza di -1
                       move prg-giacenza to giacenza
                       move prg-giacenza to giacenza
                       move prg-peso-utf to save-peso-utf
                    end-if
                    if prg-giacenza > giacenza
                       move prg-giacenza to giacenza
                       move prg-peso-utf to save-peso-utf
                    end-if
                 end-perform
           end-start 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       pb-annulla-BeforeProcedure.
      * <TOTEM:PARA. pb-annulla-BeforeProcedure>
           modify pb-annulla, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-annulla-AfterProcedure.
      * <TOTEM:PARA. pb-annulla-AfterProcedure>
           modify pb-annulla, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-ok-BeforeProcedure.
      * <TOTEM:PARA. pb-ok-BeforeProcedure>
           modify pb-ok, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-ok-AfterProcedure.
      * <TOTEM:PARA. pb-ok-AfterProcedure>
           modify pb-ok, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-ok-LinkTo.
      * <TOTEM:PARA. pb-ok-LinkTo>
           perform varying control-id from 78-ID-ef-qta by 1
                     until control-id  >   78-ID-ef-qta
              perform CONTROLLO
              if errori
                 exit perform
              end-if
           end-perform.

           if tutto-ok
              if ins-destino = 0
                 set cli-tipo-C   to true
                 move ins-cliente to cli-codice
                 read clienti no lock
                 move cli-utf to des-deposito-utf
              else
                 move ins-cliente to des-codice
                 move ins-destino to des-prog
                 read destini no lock
              end-if
              if des-deposito-utf not = "S"
                 move 0 to tot-peso-utf
                 inquire gd1, cursor-y in riga
                 inquire gd1(riga, 2), cell-data in ins-codice
                 move ef-qta-buf to ins-qta
                 move ins-codice to bli-codice
                 read blister no lock invalid continue end-read
                 perform varying ins-idx from 1 by 1 
                           until ins-idx > 999
                    if bli-el-articolo(ins-idx) = 0
                       subtract 1 from ins-idx
                       exit perform
                    end-if
                    move bli-el-articolo(ins-idx) to prg-cod-articolo
                    perform VALORIZZA-MAGGIOR-GIACENZA
                    compute tot-peso-utf =
                            tot-peso-utf + ins-qta * bli-el-qta(idx) * 
           save-peso-utf
                    if tot-peso-utf > 500
                       set errori to true
                       display message "Diminuire quantità scelta."
                                x"0d0a""Peso blister > 500 Kg UTF"
                                x"0d0a""Suddividere il blister in più ri
      -    "ghe."
                                 title tit-err
                                  icon 2
                       modify pb-ok, bitmap-number = 1
                       move 78-ID-ef-qta to control-id
                       move 4            to accept-control
                       exit perform
                    end-if
                 end-perform
              end-if
           end-if.

           if tutto-ok
              move ef-qta-buf to ins-qta
              inquire gd1, cursor-y in riga
              inquire gd1(riga, 2), cell-data in ins-codice
              move ins-codice to bli-codice
              read blister no lock invalid continue end-read
              perform varying ins-idx from 1 by 1 
                        until ins-idx > 999
                 if bli-el-articolo(ins-idx) = 0
                    subtract 1 from ins-idx
                    exit perform
                 end-if
              end-perform

              |Nel caso l'ultimo (o gli ultimi) elemento
              |sia OMAGGIO scalo di 1 il contatore 
              perform varying ins-idx from ins-idx by -1 
                        until ins-idx = 0
                 if bli-el-perce(ins-idx) not = 0
                    exit perform
                 end-if
              end-perform
              move 27 to key-status
           end-if 
           .
      * <TOTEM:END>
       Screen1-Ef-1-BeforeProcedure.
      * <TOTEM:PARA. Screen1-Ef-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen1-Ef-1-AfterProcedure.
      * <TOTEM:PARA. Screen1-Ef-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO 
           .
      * <TOTEM:END>
       ins-blister-Ev-Before-Program.
      * <TOTEM:PARA. ins-blister-Ev-Before-Program>
           copy resource "multi.bmp".
           call "W$BITMAP" using wbitmap-load "multi.bmp"
                          giving multi-bmp 
           .
      * <TOTEM:END>
       ins-blister-Ev-After-Program.
      * <TOTEM:PARA. ins-blister-Ev-After-Program>
           call "W$BITMAP" using wbitmap-destroy, multi-bmp 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail-terminate.
           inquire gd1, entry-reason in como-x.
           inquire gd1, cursor-y in riga.
           evaluate como-x
           when x"00"
                inquire gd1, cursor-x in colonna, 
                if colonna = 1
                   set GridAction to true
                end-if
           when x"0D"
                set GridAction to true
           end-evaluate 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       ef-blister-AfterProcedure.
      * <TOTEM:PARA. ef-blister-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO 
           .
      * <TOTEM:END>
       ef-blister-BeforeProcedure.
      * <TOTEM:PARA. ef-blister-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

