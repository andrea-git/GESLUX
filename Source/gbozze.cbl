      *{TOTEM}PRG-COMMENT
      * gbozze.Cbl
      * gbozze.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          gbozze.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        venerdì 12 maggio 2017 15:41:21.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:gbozze, INIT:gbozze, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "clienti.sl".
           COPY "articoli.sl".
           COPY "timballi.sl".
           COPY "timbalqta.sl".
           COPY "reva.sl".
           COPY "teva.sl".
           COPY "tparamge.sl".
           COPY "tmagaz.sl".
           COPY "timposte.sl".
           COPY "progmag.sl".
           COPY "tpiombo.sl".
           COPY "tmarche.sl".
           COPY "rordforn.sl".
           COPY "tordforn.sl".
           COPY "tmovmag.sl".
           COPY "rmovmag.sl".
           COPY "param.sl".
           COPY "impforn.sl".
           COPY "rlistini.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "clienti.fd".
           COPY "articoli.fd".
           COPY "timballi.fd".
           COPY "timbalqta.fd".
           COPY "reva.fd".
           COPY "teva.fd".
           COPY "tparamge.fd".
           COPY "tmagaz.fd".
           COPY "timposte.fd".
           COPY "progmag.fd".
           COPY "tpiombo.fd".
           COPY "tmarche.fd".
           COPY "rordforn.fd".
           COPY "tordforn.fd".
           COPY "tmovmag.fd".
           COPY "rmovmag.fd".
           COPY "param.fd".
           COPY "impforn.fd".
           COPY "rlistini.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
           COPY  "LINK-CHECK-EVA-F.DEF".
           COPY  "LINK-CAMBIA-RIF-ORD-REVA.DEF".
           COPY  "LINK-ST-ORDFORN.DEF".
           COPY  "LINK-ST-BOZZE.DEF".
           COPY  "LINK-GORDCVAR.DEF".
           COPY  "AGGIORNA-STATO-ORDF.DEF".
           COPY  "IMPOSTE.DEF".
           COPY  "LINK-WPROGMAG.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "TROVA-PARAMETRO.DEF".
       77 como-prz-finale  PIC  9(8)v99.
       77 como-qta         PIC  9(8).
       01 como-ordini.
           05 como-tof-chiave
                      OCCURS 100 TIMES.
               10 como-tof-anno    PIC  9(4).
               10 como-tof-numero  PIC  9(8).
       77 cont PIC  9(3).
       01 FILLER           PIC  9.
           88 no-righe VALUE IS 1    WHEN SET TO FALSE  zero. 
       77 reva-qta-old     PIC  9(8).
       77 como-valore      PIC  s9(12)v9999.
       78 78-colore-chiuso-man VALUE IS 40. 
       78 78-colore-qta-zero VALUE IS 176. 
       78 78-colore-normale VALUE IS 516. 
       77 como-giacenza    PIC  9(8)
                  VALUE IS 1.
       77 como-magazzino   PIC  x(3).
       77 como-articolo    PIC  9(6).
       01 save-prg-chiave.
           05 save-prg-cod-articolo        PIC  9(6).
           05 save-prg-cod-magazzino       PIC  X(3).
           05 save-prg-tipo-imballo        PIC  X(3).
           05 save-prg-peso    PIC  9(5)V9(3).
       01 gruppo-hidden.
           05 hid-chiave-ordf.
               10 hid-anno-ordf    PIC  9(4).
               10 hid-numero-ordf  PIC  9(8).
               10 hid-riga-ordf    PIC  9(5).
           05 hid-chiave.
               10 hid-anno         PIC  9(4).
               10 hid-numero       PIC  9(8).
               10 hid-riga         PIC  9(5).
           05 hid-stato-ordf   PIC  x.
               88 hid-tof-inserito VALUE IS "I". 
               88 hid-tof-inviato VALUE IS "S". 
               88 hid-tof-in-lavorazione VALUE IS "L". 
               88 hid-tof-chiuso VALUE IS "C". 
           05 hid-tipo-chiusura            PIC  x.
               88 hid-tof-chiusura-man VALUE IS "M". 
               88 hid-tof-chiusura-auto VALUE IS "A". 
       01 righe-non-cancellate.
           05 riga-non-canc    PIC  9(5)
                      OCCURS 10000 TIMES.
      *
      *
       77 messaggio        PIC  x(300).
       77 riga-ed          PIC  z(5).
       78 78-col-r-articolo VALUE IS 1. 
       78 78-col-r-mag VALUE IS 2. 
       78 78-col-r-imb VALUE IS 3. 
       78 78-col-r-peso VALUE IS 4. 
       78 78-col-r-descr VALUE IS 5. 
       78 78-col-r-qta VALUE IS 6. 
       78 78-col-r-prz VALUE IS 7. 
       78 78-col-r-cons VALUE IS 8. 
       78 78-col-r-cou VALUE IS 9. 
       78 78-col-r-add VALUE IS 10. 
       78 78-col-r-imponib VALUE IS 11. 
       77 QTA-EVA          PIC  9(8).
       77 QTA-MAX          PIC  9(8).
       01 tab-ordini.
           05 tab-tor-chiave
                      OCCURS 100 TIMES.
               10 tab-tof-anno     PIC  9(4).
               10 tab-tof-numero   PIC  9(8).
       77 save-riga        PIC  9(5).
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 como-tot-colli   PIC  9(10).
       77 PgmChiamante     PIC  x(20).
       01 tab-ordf.
           05 tab-chiave
                      OCCURS 1000 TIMES
                      INDEXED  idx-ordf.
               10 tab-anno         PIC  9(4).
               10 tab-numero       PIC  9(8).
       77 como-tot-pz      PIC  9(10).
       77 imballi-ed       PIC  z(4).
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 numero-z         PIC  z(8).
       77 numero-x         PIC  x(8).
       77 como-colli       PIC  9(8).
       77 anno PIC  9(4).
       77 numero           PIC  9(8).
       77 resto            PIC  9(8).
       77 como-x           PIC  x.
       77 como-prz         PIC  9(9)v99.
       01 FILLER           PIC  9.
           88 CallZoom VALUE IS 1    WHEN SET TO FALSE  0. 
       77 como-imp-merce   PIC  9(9)v99.
       78 titolo VALUE IS "GESLUX - Gestione bozze d'evasione". 
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-reva      PIC  X(2).
           88 Valid-STATUS-reva VALUE IS "00" THRU "09". 
       77 STATUS-teva      PIC  X(2).
           88 Valid-STATUS-teva VALUE IS "00" THRU "09". 
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 E-NUOVO          PIC  9
                  VALUE IS 0.
       77 E-CANCELLA       PIC  9
                  VALUE IS 0.
       77 E-SALVA          PIC  9
                  VALUE IS 0.
       77 E-ANTEPRIMA      PIC  9
                  VALUE IS 0.
       77 E-MODIFICA       PIC  9
                  VALUE IS 1.
       77 E-STAMPA         PIC  9
                  VALUE IS 1.
       01 gd-r-rec.
           05 col-r-articolo   PIC  9(6).
           05 col-r-mag        PIC  x(3).
           05 col-r-imb        PIC  x(3).
           05 col-r-peso       PIC  zz.zz9,999.
           05 col-r-descr      PIC  x(100).
           05 col-r-qta        PIC  zz.zzz.zz9.
           05 col-r-prz        PIC  zzz.zz9,99.
           05 col-r-cons       PIC  z.zz9,99.
           05 col-r-cou        PIC  z.zz9,99.
           05 col-r-add        PIC  z.zz9,99.
           05 col-r-imponib    PIC  zzz.zz9,99.
       77 v-ok PIC  9
                  VALUE IS 1.
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 lab-forn-buf     PIC  X(50).
       77 lab-mag-buf      PIC  X(50).
       77 como-imballo     PIC  X(50).
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       77 lab-pz-buf       PIC  zzz.zz9.
       77 lab-colli-buf    PIC  zzz.zz9.
       77 lab-stato-buf    PIC  x(50).
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 1001.
       77 anno-ordf        PIC  9(4)
                  VALUE IS 9999.
       77 numero-ordf      PIC  z(8).
       77 riga-ordf        PIC  z(5).
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 apri-chiudi-bmp  PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-rmovmag   PIC  X(2).
           88 Valid-STATUS-rmovmag VALUE IS "00" THRU "09". 
       77 STATUS-tmovmag   PIC  X(2).
           88 Valid-STATUS-tmovmag VALUE IS "00" THRU "09". 
       77 scr-movim-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 scr-movim-MN-1-HANDLE
                  USAGE IS HANDLE OF MENU.
       77 fatto-bmp        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 ef-num-buf       PIC  z(8).
       77 ef-anno-buf      PIC  z(4).
       77 cerca-bmp        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 lab-stato-ord-buf            PIC  X(30).
       77 e-cambia-rif     PIC  9
                  VALUE IS 1.
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-impforn   PIC  X(2).
           88 Valid-STATUS-impforn VALUE IS "00" THRU "09". 
       77 STATUS-rlistini  PIC  X(2).
           88 Valid-STATUS-rlistini VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-form1-FLAG-REFRESH PIC  9.
          88 form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
      * DATA CONTROL BUFFER
       01 form1-BUF.
      * Data.Label
              05 Screen2-DaLa-1-BUF PIC 9(4).
      * Data.Label
              05 Screen2-DaLa-1a-BUF PIC z(8).
      * Data.Label
              05 lab-data-BUF PIC 99/99/9999.
      * Data.Label
              05 Screen2-DaLa-1b-BUF PIC z(5).
      * Data.Label
              05 Screen2-DaLa-1ba-BUF PIC X(3).

       77 TMP-form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-form1-teva-RESTOREBUF  PIC X(199).
       77 TMP-form1-KEYIS  PIC 9(3) VALUE 1.
       77 form1-MULKEY-TMPBUF   PIC X(199).
       77 STATUS-scr-movim-FLAG-REFRESH PIC  9.
          88 scr-movim-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-reva-BUF     PIC X(260).
       77 TMP-DataSet1-teva-BUF     PIC X(199).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-timposte-BUF     PIC X(717).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(739).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-tmovmag-BUF     PIC X(256).
       77 TMP-DataSet1-rmovmag-BUF     PIC X(446).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-impforn-BUF     PIC X(220).
       77 TMP-DataSet1-rlistini-BUF     PIC X(448).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-reva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-reva-LOCK  VALUE "Y".
       77 DataSet1-reva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-reva-KEY-Asc  VALUE "A".
          88 DataSet1-reva-KEY-Desc VALUE "D".
       77 DataSet1-teva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-teva-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-teva-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-teva-KEY1-Asc  VALUE "A".
          88 DataSet1-teva-KEY1-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-tordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY-Desc VALUE "D".
       77 DataSet1-tmovmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmovmag-LOCK  VALUE "Y".
       77 DataSet1-tmovmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmovmag-KEY-Asc  VALUE "A".
          88 DataSet1-tmovmag-KEY-Desc VALUE "D".
       77 DataSet1-rmovmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rmovmag-LOCK  VALUE "Y".
       77 DataSet1-rmovmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rmovmag-KEY-Asc  VALUE "A".
          88 DataSet1-rmovmag-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-impforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-impforn-LOCK  VALUE "Y".
       77 DataSet1-impforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-impforn-KEY-Asc  VALUE "A".
          88 DataSet1-impforn-KEY-Desc VALUE "D".
       77 DataSet1-rlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rlistini-LOCK  VALUE "Y".
       77 DataSet1-rlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rlistini-KEY-Asc  VALUE "A".
          88 DataSet1-rlistini-KEY-Desc VALUE "D".

       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 reva-reva-k-articolo-SPLITBUF  PIC X(26).
       77 teva-teva-stato-SPLITBUF  PIC X(14).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 tmovmag-key01-SPLITBUF  PIC X(17).
       77 tmovmag-k2-SPLITBUF  PIC X(20).
       77 tmovmag-k-data-SPLITBUF  PIC X(17).
       77 rmovmag-k-articolo-SPLITBUF  PIC X(19).
       77 rmovmag-rmo-chiave-ricerca-SPLITBUF  PIC X(25).
       77 rmovmag-k-progmag-SPLITBUF  PIC X(21).
       77 rmovmag-k-art-data-SPLITBUF  PIC X(15).
       77 rlistini-rlis-k-art-SPLITBUF  PIC X(33).
       77 rlistini-rlis-k-descr-SPLITBUF  PIC X(66).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-gd-r VALUE 5001.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
           COPY  "LINK-GBOZZE.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           form1, 
           .

      * BAR
       05
           Screen2-Br-1a, 
           Bar,
           COL 1,00, 
           LINE 11,38,
           SIZE 124,88 ,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 1,
           .

      * BAR
       05
           Screen2-Br-1b, 
           Bar,
           COL 1,00, 
           LINE 38,19,
           SIZE 124,50 ,
           ID IS 502,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * GRID
       05
           gd-r, 
           Grid, 
           COL 2,25, 
           LINE 12,50,
           LINES 22,44 ,
           SIZE 122,38 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 7, 10, 13, 23, 123, 131, 141, 149, 157, 
           165),
           ALIGNMENT ("C", "C", "C", "R", "U", "R", "R", "R", "R", "R", 
           "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "X(3)", "X(3)", "9(7)", "X(100)", "9(8)"
           , "9(10)", "9(8)", "9(8)", "9(8)", "9(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 481
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-r,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 120,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE gd-r-Event-Proc,
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 5,38, 
           LINE 2,19,
           LINES 8,25 ,
           SIZE 116,13 ,
           FONT IS Verdana12-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Dati testata",
           TITLE-POSITION 2,
           .

      * LABEL
       05
           Screen2-La-1, 
           Label, 
           COL 7,38, 
           LINE 4,19,
           LINES 1,31 ,
           SIZE 11,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Anno",
           .

      * LABEL
       05
           Screen2-La-1a, 
           Label, 
           COL 28,38, 
           LINE 4,19,
           LINES 1,31 ,
           SIZE 8,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Numero",
           .

      * LABEL
       05
           Screen2-La-1aa, 
           Label, 
           COL 7,38, 
           LINE 6,19,
           LINES 1,31 ,
           SIZE 11,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Fornitore",
           .

      * LABEL
       05
           Screen2-La-1ab, 
           Label, 
           COL 7,38, 
           LINE 8,19,
           LINES 1,31 ,
           SIZE 11,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Magazzino",
           .

      * LABEL
       05
           Screen2-La-1ac, 
           Label, 
           COL 52,38, 
           LINE 4,07,
           LINES 1,31 ,
           SIZE 6,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Data",
           .

      * LABEL
       05
           Screen2-La-2, 
           Label, 
           COL 74,13, 
           LINE 4,07,
           LINES 1,31 ,
           SIZE 8,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Stato",
           .

      * LABEL
       05
           Screen2-La-2a, 
           Label, 
           COL 74,13, 
           LINE 6,65,
           LINES 1,31 ,
           SIZE 9,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Tot. Pz",
           .

      * DB_LABEL
       05
           Screen2-DaLa-1, 
           Label, 
           COL 19,38, 
           LINE 4,19,
           LINES 1,31 ,
           SIZE 7,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-1-BUF,
           RIGHT,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-1a, 
           Label, 
           COL 37,38, 
           LINE 4,07,
           LINES 1,31 ,
           SIZE 10,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-1a-BUF,
           RIGHT,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           lab-data, 
           Label, 
           COL 59,38, 
           LINE 4,07,
           LINES 1,31 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE lab-data-BUF,
           LEFT,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-1b, 
           Label, 
           COL 19,38, 
           LINE 6,19,
           LINES 1,31 ,
           SIZE 7,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-1b-BUF,
           RIGHT,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-1ba, 
           Label, 
           COL 19,38, 
           LINE 8,19,
           LINES 1,31 ,
           SIZE 7,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-1ba-BUF,
           RIGHT,
           TRANSPARENT,
           .

      * LABEL
       05
           lab-forn, 
           Label, 
           COL 28,38, 
           LINE 6,19,
           LINES 1,31 ,
           SIZE 44,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-forn-buf,
           .

      * LABEL
       05
           lab-mag, 
           Label, 
           COL 28,38, 
           LINE 8,07,
           LINES 1,31 ,
           SIZE 44,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-mag-buf,
           .

      * LABEL
       05
           Screen2-La-2aa, 
           Label, 
           COL 74,13, 
           LINE 8,50,
           LINES 1,31 ,
           SIZE 9,00 ,
           COLOR IS 1,
           FONT IS Verdana12-Occidentale,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Tot. colli",
           .

      * LABEL
       05
           lab-pz, 
           Label, 
           COL 84,76, 
           LINE 6,63,
           LINES 1,31 ,
           SIZE 9,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE lab-pz-buf,
           .

      * LABEL
       05
           lab-colli, 
           Label, 
           COL 84,76, 
           LINE 8,50,
           LINES 1,31 ,
           SIZE 9,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE lab-colli-buf,
           .

      * LABEL
       05
           lab-stato, 
           Label, 
           COL 84,76, 
           LINE 4,13,
           LINES 1,31 ,
           SIZE 26,13 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 20,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE lab-stato-buf,
           .

      * PUSH BUTTON
       05
           pb-stato, 
           Push-Button, 
           COL 111,88, 
           LINE 3,75,
           LINES 29,00 ,
           SIZE 67,00 ,
           BITMAP-HANDLE apri-chiudi-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 27,
           AFTER PROCEDURE pb-stato-AfterProcedure, 
           BEFORE PROCEDURE pb-stato-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-movim, 
           Push-Button, 
           COL 112,38, 
           LINE 6,07,
           LINES 1,88 ,
           SIZE 4,00 ,
           BITMAP-HANDLE CERCA-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001,
           FONT IS Small-Font,
           ID IS 28,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Visualizza il movimento",
           AFTER PROCEDURE pb-movim-AfterProcedure, 
           BEFORE PROCEDURE pb-movim-BeforeProcedure, 
           .

      * LABEL
       05
           Screen2-La-1b, 
           Label, 
           COL 3,00, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 18,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Ordine Fornitore:",
           .

      * LABEL
       05
           lab-anno-ordf, 
           Label, 
           COL 21,00, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 5,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 22,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE anno-ordf,
           .

      * LABEL
       05
           Screen2-La-4, 
           Label, 
           COL 26,75, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 1,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "-",
           .

      * LABEL
       05
           lab-num-ordf, 
           Label, 
           COL 28,50, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 10,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE numero-ordf,
           .

      * LABEL
       05
           lab-num-ordfa, 
           Label, 
           COL 39,75, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 5,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 25,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Riga:",
           .

      * LABEL
       05
           lab-riga-ordf, 
           Label, 
           COL 46,00, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 6,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 26,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE riga-ordf,
           .

      * PUSH BUTTON
       05
           pb-cambia-rif, 
           Push-Button, 
           COL 106,38, 
           LINE 38,56,
           LINES 1,88 ,
           SIZE 13,00 ,
           ENABLED e-cambia-rif,
           EXCEPTION-VALUE 1003,
           FONT IS Small-Font,
           ID IS 34,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Cambia Riferimento Ordine",
           MULTILINE
           .

      * PUSH BUTTON
       05
           pb-ordfor, 
           Push-Button, 
           COL 120,63, 
           LINE 38,56,
           LINES 1,88 ,
           SIZE 4,00 ,
           BITMAP-HANDLE CERCA-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002,
           FONT IS Small-Font,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Visualizza l'ordine fornitore",
           AFTER PROCEDURE pb-ordfor-AfterProcedure, 
           BEFORE PROCEDURE pb-ordfor-BeforeProcedure, 
           .

      * LABEL
       05
           lab-num-ordfaa, 
           Label, 
           COL 56,00, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 6,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Stato:",
           .

      * LABEL
       05
           lab-stato-ord, 
           Label, 
           COL 64,00, 
           LINE 38,81,
           LINES 1,31 ,
           SIZE 40,00 ,
           COLOR IS 2,
           FONT IS Verdana12-Occidentale,
           ID IS 31,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE lab-stato-ord-buf,
           .

      * LABEL
       05
           Screen2-La-3, 
           Label, 
           COL 2,25, 
           LINE 35,44,
           LINES 1,19 ,
           SIZE 112,25 ,
           COLOR IS 5,
           FONT IS Verdana10-Occidentale,
           ID IS 32,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "NOTE: Per cancellare una riga impostare le quantità a 
      -    "zero. Verranno colorate di rosso e cancellate al momento del
      -    " salvataggio.",
           .

      * LABEL
       05
           Screen2-La-3a, 
           Label, 
           COL 2,25, 
           LINE 36,63,
           LINES 1,25 ,
           SIZE 112,25 ,
           COLOR IS 5,
           FONT IS Verdana10-Occidentale,
           ID IS 33,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Le righe disabilitate fanno riferimento ad un ordine c
      -    "hiuso MANUALMENTE. Riaprire l'ordine per poterle modificare/
      -    "cancellare.",
           .

      * TOOLBAR
       01
           Form1-Tb-1,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCIa, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 110,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "Esci (Esc)",
           .

      * PUSH BUTTON
       05
           TOOL-NUOVO, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 23,
           FRAMED,
           SQUARE,
           ENABLED E-NUOVO,
           FLAT,
           ID IS 111,
           SELF-ACT,
           TITLE "Nuovo (F2)",
           .

      * PUSH BUTTON
       05
           TOOL-CANCELLA, 
           Push-Button, 
           COL 16,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           FRAMED,
           SQUARE,
           ENABLED E-CANCELLA,
           EXCEPTION-VALUE 4,
           FLAT,
           ID IS 112,
           SELF-ACT,
           TITLE "Cancella (F4)",
           BITMAP-NUMBER BitmapNumDelete
           .

      * PUSH BUTTON
       05
           TOOL-SALVA, 
           Push-Button, 
           COL 11,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           FRAMED,
           SQUARE,
           ENABLED E-SALVA,
           EXCEPTION-VALUE 3,
           FLAT,
           ID IS 75,
           SELF-ACT,
           TITLE "Salva (F3)",
           BITMAP-NUMBER BitmapNumSave
           .

      * PUSH BUTTON
       05
           TOOL-ANTEPRIMA, 
           Push-Button, 
           COL 26,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 17,
           FRAMED,
           SQUARE,
           ENABLED E-ANTEPRIMA,
           EXCEPTION-VALUE 6,
           FLAT,
           ID IS 76,
           SELF-ACT,
           TITLE "Anteprima (F6)",
           .

      * CHECK BOX
       05
           TOOL-MODIFICA, 
           Check-Box, 
           COL 21,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 5,
           FRAMED,
           SQUARE,
           ENABLED E-MODIFICA,
           EXCEPTION-VALUE 150
           FLAT,
           ID IS 77,
           SELF-ACT,
           TITLE "Modifica (F5)",
           BITMAP-NUMBER BitmapNumEdit
           AFTER PROCEDURE TOOL-MODIFICA-AfterProcedure,
           BEFORE PROCEDURE TOOL-MODIFICA-BeforeProcedure, 
           .
      * PUSH BUTTON
       05
           TOOL-STAMPA, 
           Push-Button, 
           COL 31,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 7,
           FRAMED,
           SQUARE,
           ENABLED E-STAMPA,
           EXCEPTION-VALUE 7,
           FLAT,
           ID IS 78,
           SELF-ACT,
           TITLE "Stampa (F7)",
           .

      * PUSH BUTTON
       05
           TOOL-CERCAa, 
           Push-Button, 
           COL 36,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           FRAMED,
           SQUARE,
           ENABLED E-CERCA,
           FLAT,
           ID IS 79,
           SELF-ACT,
           TITLE "Cerca (F8)",
           BITMAP-NUMBER BitmapNumZoom
           .

      * FORM
       01 
           scr-movim, 
           HELP-ID 1,
           .

      * ENTRY FIELD
       05
           ef-anno, 
           Entry-Field, 
           COL 10,70, 
           LINE 3,00,
           LINES 2,20 CELLS,
           SIZE 5,00 CELLS,
           BOXED,
           COLOR IS 513,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-anno-buf,
           AFTER PROCEDURE ef-anno-AfterProcedure, 
           BEFORE PROCEDURE ef-anno-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-num, 
           Entry-Field, 
           COL 10,70, 
           LINE 6,40,
           LINES 2,20 CELLS,
           SIZE 9,00 CELLS,
           BOXED,
           COLOR IS 513,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-num-buf,
           AFTER PROCEDURE ef-num-AfterProcedure, 
           BEFORE PROCEDURE ef-num-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-elenco, 
           Push-Button, 
           COL 20,40, 
           LINE 6,40,
           LINES 2,20 CELLS,
           SIZE 2,70 CELLS,
           EXCEPTION-VALUE 1001,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "...",
           .

      * PUSH BUTTON
       05
           pb-fatto, 
           Push-Button, 
           COL 8,80, 
           LINE 10,20,
           LINES 3,70 ,
           SIZE 8,10 ,
           BITMAP-HANDLE FATTO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           AFTER PROCEDURE pb-fatto-AfterProcedure, 
           BEFORE PROCEDURE pb-fatto-BeforeProcedure, 
           .

      * LABEL
       05
           scr-movim-La-1, 
           Label, 
           COL 3,00, 
           LINE 3,00,
           LINES 2,20 CELLS,
           SIZE 7,00 CELLS,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Anno",
           .

      * LABEL
       05
           scr-movim-La-1a, 
           Label, 
           COL 3,00, 
           LINE 6,40,
           LINES 2,20 CELLS,
           SIZE 7,00 CELLS,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Numero",
           .

      * LABEL
       05
           scr-movim-Custom1-1, 
           Label, 
           COL 21,50, 
           LINE 11,90,
           LINES 2,20 CELLS,
           SIZE 2,30 CELLS,
           FONT IS Default-Font,
           ID IS 7,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL, 
           gbozze-linkage.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:gbozze, INIT:gbozze, BeforeDeclarative>
       TEVA-ERR SECTION.
           use after error procedure on teva.
           evaluate status-teva
           when "35"
                display message "File [TEVA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TEVA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TEVA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       REVA-ERR SECTION.
           use after error procedure on reva.
           evaluate status-reva
           when "35"
                display message "File [REVA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [REVA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[REVA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       CLIENTI-ERR SECTION.
           use after error procedure on clienti.
           set tutto-ok  to true.
           evaluate status-clienti
           when "35"
                display message "File [CLIENTI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [CLIENTI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[CLIENTI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate. 

      ***---
       TORDFORN-ERR SECTION.
           use after error procedure on tordforn.
           set RecLocked to false.
           evaluate status-tordforn
           when "35"
                display message "File [TORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:gbozze, INIT:gbozze, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana10-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, apri-chiudi-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, CERCA-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, FATTO-BMP
      *    After-Program
           PERFORM accetordforn-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-stato
           COPY RESOURCE "APRI-CHIUDI.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "APRI-CHIUDI.BMP", 
                   GIVING apri-chiudi-bmp.
      * pb-movim
           COPY RESOURCE "CERCA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "CERCA.BMP", 
                   GIVING CERCA-BMP.
      * TOOL-ESCIa
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
      * pb-fatto
           COPY RESOURCE "FATTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "FATTO.BMP", 
                   GIVING FATTO-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-clienti
           PERFORM OPEN-articoli
           PERFORM OPEN-timballi
           PERFORM OPEN-timbalqta
           PERFORM OPEN-reva
           PERFORM OPEN-teva
           PERFORM OPEN-tparamge
           PERFORM OPEN-tmagaz
           PERFORM OPEN-timposte
           PERFORM OPEN-progmag
           PERFORM OPEN-tpiombo
           PERFORM OPEN-tmarche
           PERFORM OPEN-rordforn
           PERFORM OPEN-tordforn
           PERFORM OPEN-tmovmag
           PERFORM OPEN-rmovmag
           PERFORM OPEN-param
           PERFORM OPEN-impforn
           PERFORM OPEN-rlistini
      *    After Open
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:gbozze, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:gbozze, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:gbozze, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:gbozze, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-reva.
      * <TOTEM:EPT. INIT:gbozze, FD:reva, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O reva
           IF STATUS-reva = "35"
              OPEN OUTPUT reva
                IF Valid-STATUS-reva
                   CLOSE reva
                   OPEN I-O reva
                END-IF
           END-IF
           IF NOT Valid-STATUS-reva
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:reva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-teva.
      * <TOTEM:EPT. INIT:gbozze, FD:teva, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O teva
           IF STATUS-teva = "35"
              OPEN OUTPUT teva
                IF Valid-STATUS-teva
                   CLOSE teva
                   OPEN I-O teva
                END-IF
           END-IF
           IF NOT Valid-STATUS-teva
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:teva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:gbozze, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:gbozze, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:gbozze, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:gbozze, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:gbozze, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:gbozze, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:gbozze, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rordforn
           IF STATUS-rordforn = "35"
              OPEN OUTPUT rordforn
                IF Valid-STATUS-rordforn
                   CLOSE rordforn
                   OPEN I-O rordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-rordforn
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:gbozze, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordforn
           IF STATUS-tordforn = "35"
              OPEN OUTPUT tordforn
                IF Valid-STATUS-tordforn
                   CLOSE tordforn
                   OPEN I-O tordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordforn
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmovmag.
      * <TOTEM:EPT. INIT:gbozze, FD:tmovmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tmovmag
           IF STATUS-tmovmag = "35"
              OPEN OUTPUT tmovmag
                IF Valid-STATUS-tmovmag
                   CLOSE tmovmag
                   OPEN I-O tmovmag
                END-IF
           END-IF
           IF NOT Valid-STATUS-tmovmag
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:tmovmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rmovmag.
      * <TOTEM:EPT. INIT:gbozze, FD:rmovmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rmovmag
           IF STATUS-rmovmag = "35"
              OPEN OUTPUT rmovmag
                IF Valid-STATUS-rmovmag
                   CLOSE rmovmag
                   OPEN I-O rmovmag
                END-IF
           END-IF
           IF NOT Valid-STATUS-rmovmag
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:rmovmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:gbozze, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-impforn.
      * <TOTEM:EPT. INIT:gbozze, FD:impforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT impforn
           IF NOT Valid-STATUS-impforn
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:impforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rlistini.
      * <TOTEM:EPT. INIT:gbozze, FD:rlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rlistini
           IF NOT Valid-STATUS-rlistini
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gbozze, FD:rlistini, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-clienti
           PERFORM CLOSE-articoli
           PERFORM CLOSE-timballi
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-reva
           PERFORM CLOSE-teva
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-timposte
           PERFORM CLOSE-progmag
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-tmovmag
           PERFORM CLOSE-rmovmag
           PERFORM CLOSE-param
           PERFORM CLOSE-impforn
           PERFORM CLOSE-rlistini
      *    After Close
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:gbozze, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:gbozze, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:gbozze, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:gbozze, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-reva.
      * <TOTEM:EPT. INIT:gbozze, FD:reva, BeforeClose>
      * <TOTEM:END>
           CLOSE reva
           .

       CLOSE-teva.
      * <TOTEM:EPT. INIT:gbozze, FD:teva, BeforeClose>
      * <TOTEM:END>
           CLOSE teva
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:gbozze, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:gbozze, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:gbozze, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:gbozze, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:gbozze, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:gbozze, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:gbozze, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:gbozze, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-tmovmag.
      * <TOTEM:EPT. INIT:gbozze, FD:tmovmag, BeforeClose>
      * <TOTEM:END>
           CLOSE tmovmag
           .

       CLOSE-rmovmag.
      * <TOTEM:EPT. INIT:gbozze, FD:rmovmag, BeforeClose>
      * <TOTEM:END>
           CLOSE rmovmag
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:gbozze, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-impforn.
      * <TOTEM:EPT. INIT:gbozze, FD:impforn, BeforeClose>
      * <TOTEM:END>
           CLOSE impforn
           .

       CLOSE-rlistini.
      * <TOTEM:EPT. INIT:gbozze, FD:rlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE rlistini
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       reva-reva-k-articolo-MERGE-SPLITBUF.
           INITIALIZE reva-reva-k-articolo-SPLITBUF
           MOVE reva-qta OF reva(1:8) TO 
           reva-reva-k-articolo-SPLITBUF(1:8)
           MOVE reva-chiave OF reva(1:17) TO 
           reva-reva-k-articolo-SPLITBUF(9:17)
           .

       DataSet1-reva-INITSTART.
           IF DataSet1-reva-KEY-Asc
              MOVE Low-Value TO reva-chiave
           ELSE
              MOVE High-Value TO reva-chiave
           END-IF
           .

       DataSet1-reva-INITEND.
           IF DataSet1-reva-KEY-Asc
              MOVE High-Value TO reva-chiave
           ELSE
              MOVE Low-Value TO reva-chiave
           END-IF
           .

      * reva
       DataSet1-reva-START.
           IF DataSet1-reva-KEY-Asc
              START reva KEY >= reva-chiave
           ELSE
              START reva KEY <= reva-chiave
           END-IF
           .

       DataSet1-reva-START-NOTGREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY <= reva-chiave
           ELSE
              START reva KEY >= reva-chiave
           END-IF
           .

       DataSet1-reva-START-GREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY > reva-chiave
           ELSE
              START reva KEY < reva-chiave
           END-IF
           .

       DataSet1-reva-START-LESS.
           IF DataSet1-reva-KEY-Asc
              START reva KEY < reva-chiave
           ELSE
              START reva KEY > reva-chiave
           END-IF
           .

       DataSet1-reva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-reva-LOCK
              READ reva WITH LOCK 
              KEY reva-chiave
           ELSE
              READ reva WITH NO LOCK 
              KEY reva-chiave
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT 
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeWrite>
      * <TOTEM:END>
           WRITE reva-rec OF reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRewrite>
      * <TOTEM:END>
           REWRITE reva-rec OF reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeDelete>
      * <TOTEM:END>
           DELETE reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterDelete>
      * <TOTEM:END>
           .

       teva-teva-stato-MERGE-SPLITBUF.
           INITIALIZE teva-teva-stato-SPLITBUF
           MOVE teva-stato OF teva(1:1) TO teva-teva-stato-SPLITBUF(1:1)
           MOVE teva-chiave OF teva(1:12) TO 
           teva-teva-stato-SPLITBUF(2:12)
           .

       DataSet1-teva-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 MOVE Low-Value TO teva-chiave OF teva
              ELSE
                 MOVE High-Value TO teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 MOVE High-Value TO teva-chiave OF teva
              ELSE
                 MOVE Low-Value TO teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           .

      * teva
       DataSet1-teva-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY >= teva-chiave OF teva
              ELSE
                 START teva KEY <= teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY <= teva-chiave OF teva
              ELSE
                 START teva KEY >= teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY > teva-chiave OF teva
              ELSE
                 START teva KEY < teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY < teva-chiave OF teva
              ELSE
                 START teva KEY > teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-LOCK
                 READ teva WITH LOCK 
                 KEY teva-chiave OF teva
              ELSE
                 READ teva WITH NO LOCK 
                 KEY teva-chiave OF teva
              END-IF
           END-EVALUATE
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT 
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 IF DataSet1-teva-LOCK
                    READ teva NEXT WITH LOCK
                 ELSE
                    READ teva NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-teva-LOCK
                    READ teva PREVIOUS WITH LOCK
                 ELSE
                    READ teva PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 IF DataSet1-teva-LOCK
                    READ teva PREVIOUS WITH LOCK
                 ELSE
                    READ teva PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-teva-LOCK
                    READ teva NEXT WITH LOCK
                 ELSE
                    READ teva NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeWrite>
      * <TOTEM:END>
           WRITE teva-rec OF teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRewrite>
      * <TOTEM:END>
           REWRITE teva-rec OF teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeDelete>
      * <TOTEM:END>
           DELETE teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE rof-rec OF rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE rof-rec OF rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           IF DataSet1-tordforn-KEY-Asc
              MOVE Low-Value TO tof-chiave
           ELSE
              MOVE High-Value TO tof-chiave
           END-IF
           .

       DataSet1-tordforn-INITEND.
           IF DataSet1-tordforn-KEY-Asc
              MOVE High-Value TO tof-chiave
           ELSE
              MOVE Low-Value TO tof-chiave
           END-IF
           .

      * tordforn
       DataSet1-tordforn-START.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY >= tof-chiave
           ELSE
              START tordforn KEY <= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-NOTGREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY <= tof-chiave
           ELSE
              START tordforn KEY >= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-GREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY > tof-chiave
           ELSE
              START tordforn KEY < tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-LESS.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY < tof-chiave
           ELSE
              START tordforn KEY > tof-chiave
           END-IF
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordforn-LOCK
              READ tordforn WITH LOCK 
              KEY tof-chiave
           ELSE
              READ tordforn WITH NO LOCK 
              KEY tof-chiave
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       tmovmag-key01-MERGE-SPLITBUF.
           INITIALIZE tmovmag-key01-SPLITBUF
           MOVE tmo-anno(1:4) TO tmovmag-key01-SPLITBUF(1:4)
           MOVE tmo-causale(1:4) TO tmovmag-key01-SPLITBUF(5:4)
           MOVE tmo-numero(1:8) TO tmovmag-key01-SPLITBUF(9:8)
           .

       tmovmag-k2-MERGE-SPLITBUF.
           INITIALIZE tmovmag-k2-SPLITBUF
           MOVE tmo-tipo(1:1) TO tmovmag-k2-SPLITBUF(1:1)
           MOVE tmo-cod-clifor(1:5) TO tmovmag-k2-SPLITBUF(2:5)
           MOVE tmo-destino(1:5) TO tmovmag-k2-SPLITBUF(7:5)
           MOVE tmo-data-movim(1:8) TO tmovmag-k2-SPLITBUF(12:8)
           .

       tmovmag-k-data-MERGE-SPLITBUF.
           INITIALIZE tmovmag-k-data-SPLITBUF
           MOVE tmo-data-movim(1:8) TO tmovmag-k-data-SPLITBUF(1:8)
           MOVE tmo-numero(1:8) TO tmovmag-k-data-SPLITBUF(9:8)
           .

       DataSet1-tmovmag-INITSTART.
           IF DataSet1-tmovmag-KEY-Asc
              MOVE Low-Value TO tmo-chiave
           ELSE
              MOVE High-Value TO tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-INITEND.
           IF DataSet1-tmovmag-KEY-Asc
              MOVE High-Value TO tmo-chiave
           ELSE
              MOVE Low-Value TO tmo-chiave
           END-IF
           .

      * tmovmag
       DataSet1-tmovmag-START.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY >= tmo-chiave
           ELSE
              START tmovmag KEY <= tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-NOTGREATER.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY <= tmo-chiave
           ELSE
              START tmovmag KEY >= tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-GREATER.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY > tmo-chiave
           ELSE
              START tmovmag KEY < tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-LESS.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY < tmo-chiave
           ELSE
              START tmovmag KEY > tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmovmag-LOCK
              READ tmovmag WITH LOCK 
              KEY tmo-chiave
           ELSE
              READ tmovmag WITH NO LOCK 
              KEY tmo-chiave
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT 
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmovmag-KEY-Asc
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag NEXT WITH LOCK
              ELSE
                 READ tmovmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag PREVIOUS WITH LOCK
              ELSE
                 READ tmovmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmovmag-KEY-Asc
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag PREVIOUS WITH LOCK
              ELSE
                 READ tmovmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag NEXT WITH LOCK
              ELSE
                 READ tmovmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeWrite>
      * <TOTEM:END>
           WRITE tmo-rec OF tmovmag.
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tmo-rec OF tmovmag.
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeDelete>
      * <TOTEM:END>
           DELETE tmovmag.
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterDelete>
      * <TOTEM:END>
           .

       rmovmag-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-articolo-SPLITBUF
           MOVE rmo-anno OF rmovmag(1:4) TO 
           rmovmag-k-articolo-SPLITBUF(1:4)
           MOVE rmo-movim OF rmovmag(1:8) TO 
           rmovmag-k-articolo-SPLITBUF(5:8)
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-k-articolo-SPLITBUF(13:6)
           .

       rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE rmovmag-rmo-chiave-ricerca-SPLITBUF
           MOVE rmo-tipo OF rmovmag(1:1) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(1:1)
           MOVE rmo-cod-clifor OF rmovmag(1:5) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(2:5)
           MOVE rmo-causale OF rmovmag(1:4) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(7:4)
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(11:6)
           MOVE rmo-data-movim OF rmovmag(1:8) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(17:8)
           .

       rmovmag-k-progmag-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-progmag-SPLITBUF
           MOVE rmo-chiave-progmag OF rmovmag(1:20) TO 
           rmovmag-k-progmag-SPLITBUF(1:20)
           .

       rmovmag-k-art-data-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-art-data-SPLITBUF
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-k-art-data-SPLITBUF(1:6)
           MOVE rmo-data-movim OF rmovmag(1:8) TO 
           rmovmag-k-art-data-SPLITBUF(7:8)
           .

       DataSet1-rmovmag-INITSTART.
           IF DataSet1-rmovmag-KEY-Asc
              MOVE Low-Value TO rmo-chiave OF rmovmag
           ELSE
              MOVE High-Value TO rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-INITEND.
           IF DataSet1-rmovmag-KEY-Asc
              MOVE High-Value TO rmo-chiave OF rmovmag
           ELSE
              MOVE Low-Value TO rmo-chiave OF rmovmag
           END-IF
           .

      * rmovmag
       DataSet1-rmovmag-START.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY >= rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY <= rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-NOTGREATER.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY <= rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY >= rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-GREATER.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY > rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY < rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-LESS.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY < rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY > rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rmovmag-LOCK
              READ rmovmag WITH LOCK 
              KEY rmo-chiave OF rmovmag
           ELSE
              READ rmovmag WITH NO LOCK 
              KEY rmo-chiave OF rmovmag
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT 
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rmovmag-KEY-Asc
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag NEXT WITH LOCK
              ELSE
                 READ rmovmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag PREVIOUS WITH LOCK
              ELSE
                 READ rmovmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rmovmag-KEY-Asc
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag PREVIOUS WITH LOCK
              ELSE
                 READ rmovmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag NEXT WITH LOCK
              ELSE
                 READ rmovmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeWrite>
      * <TOTEM:END>
           WRITE rmo-rec OF rmovmag.
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRewrite>
      * <TOTEM:END>
           REWRITE rmo-rec OF rmovmag.
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeDelete>
      * <TOTEM:END>
           DELETE rmovmag.
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-impforn-INITSTART.
           IF DataSet1-impforn-KEY-Asc
              MOVE Low-Value TO imf-chiave OF impforn
           ELSE
              MOVE High-Value TO imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-INITEND.
           IF DataSet1-impforn-KEY-Asc
              MOVE High-Value TO imf-chiave OF impforn
           ELSE
              MOVE Low-Value TO imf-chiave OF impforn
           END-IF
           .

      * impforn
       DataSet1-impforn-START.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY >= imf-chiave OF impforn
           ELSE
              START impforn KEY <= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-NOTGREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY <= imf-chiave OF impforn
           ELSE
              START impforn KEY >= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-GREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY > imf-chiave OF impforn
           ELSE
              START impforn KEY < imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-LESS.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY < imf-chiave OF impforn
           ELSE
              START impforn KEY > imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-impforn-LOCK
              READ impforn WITH LOCK 
              KEY imf-chiave OF impforn
           ELSE
              READ impforn WITH NO LOCK 
              KEY imf-chiave OF impforn
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT 
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterDelete>
      * <TOTEM:END>
           .

       rlistini-rlis-k-art-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-art-SPLITBUF
           MOVE rlis-articolo OF rlistini(1:6) TO 
           rlistini-rlis-k-art-SPLITBUF(1:6)
           MOVE rlis-chiave-ricerca OF rlistini(1:26) TO 
           rlistini-rlis-k-art-SPLITBUF(7:26)
           .

       rlistini-rlis-k-descr-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-descr-SPLITBUF
           MOVE rlis-codice OF rlistini(1:15) TO 
           rlistini-rlis-k-descr-SPLITBUF(1:15)
           MOVE rlis-des-libera OF rlistini(1:50) TO 
           rlistini-rlis-k-descr-SPLITBUF(16:50)
           .

       DataSet1-rlistini-INITSTART.
           IF DataSet1-rlistini-KEY-Asc
              MOVE Low-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE High-Value TO rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-INITEND.
           IF DataSet1-rlistini-KEY-Asc
              MOVE High-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE Low-Value TO rlis-chiave OF rlistini
           END-IF
           .

      * rlistini
       DataSet1-rlistini-START.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY >= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY <= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-NOTGREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY <= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY >= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-GREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY > rlis-chiave OF rlistini
           ELSE
              START rlistini KEY < rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-LESS.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY < rlis-chiave OF rlistini
           ELSE
              START rlistini KEY > rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rlistini-LOCK
              READ rlistini WITH LOCK 
              KEY rlis-chiave OF rlistini
           ELSE
              READ rlistini WITH NO LOCK 
              KEY rlis-chiave OF rlistini
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT 
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE cli-rec OF clienti
           INITIALIZE art-rec OF articoli
           INITIALIZE imb-rec OF timballi
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE reva-rec OF reva
           INITIALIZE teva-rec OF teva
           INITIALIZE tge-rec OF tparamge
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE imp-rec OF timposte
           INITIALIZE prg-rec OF progmag
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE mar-rec OF tmarche
           INITIALIZE rof-rec OF rordforn
           INITIALIZE tof-rec OF tordforn
           INITIALIZE tmo-rec OF tmovmag
           INITIALIZE rmo-rec OF rmovmag
           INITIALIZE prm-rec OF param
           INITIALIZE imf-rec OF impforn
           INITIALIZE rlis-rec OF rlistini
           .


      * GRID
       gd-r-Content.
      * CELLS' SETTING
              MODIFY gd-r, X = 1, Y = 1,
                CELL-DATA = "Art",
      * CELLS' SETTING
              MODIFY gd-r, X = 2, Y = 1,
                CELL-DATA = "Mag",
      * CELLS' SETTING
              MODIFY gd-r, X = 3, Y = 1,
                CELL-DATA = "Imb",
      * CELLS' SETTING
              MODIFY gd-r, X = 4, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd-r, X = 5, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-r, X = 6, Y = 1,
                CELL-DATA = "Q.tà",
      * CELLS' SETTING
              MODIFY gd-r, X = 7, Y = 1,
                CELL-DATA = "Prz. Unit.",
      * CELLS' SETTING
              MODIFY gd-r, X = 8, Y = 1,
                CELL-DATA = "I. Cons.",
      * CELLS' SETTING
              MODIFY gd-r, X = 9, Y = 1,
                CELL-DATA = "Cou/Cob",
      * CELLS' SETTING
              MODIFY gd-r, X = 10, Y = 1,
                CELL-DATA = "Add Pb",
      * CELLS' SETTING
              MODIFY gd-r, X = 11, Y = 1,
                CELL-DATA = "I.Merce",
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-reva-INITREC.
           INITIALIZE reva-rec OF reva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-teva-INITREC.
           INITIALIZE teva-rec OF teva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmovmag-INITREC.
           INITIALIZE tmo-rec OF tmovmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rmovmag-INITREC.
           INITIALIZE rmo-rec OF rmovmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-impforn-INITREC.
           INITIALIZE imf-rec OF impforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rlistini-INITREC.
           INITIALIZE rlis-rec OF rlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM form1-Buf-To-Fld
           END-EVALUATE
           .

       form1-Open-Routine.
           PERFORM form1-Scrn
           PERFORM form1-Proc
           .

       form1-Scrn.
           PERFORM form1-Create-Win
           PERFORM form1-Init-Value
           PERFORM form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1
           PERFORM form1-DISPLAY
           .

       form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 40,00,
              SIZE 124,88,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Form1-Handle,
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,69,   
              HANDLE IN Form1-Tb-1-Handle
           DISPLAY Form1-Tb-1 UPON Form1-Tb-1-Handle

      * Status-bar
           DISPLAY form1 UPON Form1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-r, DISPLAY-COLUMNS (1, 7, 12, 17, 26, 66, 75, 
           86, 95, 104, 113)
           .

       form1-PROC.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeAccept>
           move 0 to mod.
           accept imp-data from century-date.

           start timposte key <= imp-chiave
                 invalid continue
             not invalid
                 read timposte previous
           end-start.

           set CallZoom to false.
           move 1 to v-ok.
           initialize teva-rec
                      reva-rec replacing numeric data by zeroes
                                    alphanumeric data by spaces.

           move LinkChiave of gbozze-linkage to teva-chiave.
           read teva no lock invalid continue end-read.
                                         
           move teva-cod-forn to cli-codice.
           set  cli-tipo-F   to true.
           read clienti invalid continue end-read.

           initialize lab-stato-buf.
           if teva-aperta
              move "APERTA" to lab-stato-buf
              move 1        to e-cambia-rif
           else
              move teva-num-movim to numero-z
              move numero-z       to numero-x
              inspect numero-x replacing leading x"30" by x"20"
              call "C$JUSTIFY" using numero-x
              string "CHIUSA: "      delimited size
                     teva-anno-movim delimited size
                     " - "           delimited size
                     numero-x        delimited size
                     into lab-stato-buf
              end-string
              move zero           to e-cambia-rif
           end-if.

           perform RIEMPI-GRID.
                                       
           set cli-tipo-F to true.
           move teva-cod-forn to cli-codice.
           read clienti no lock invalid continue end-read.
           move teva-mag to mag-codice.
           read tmagaz no lock invalid continue end-read.
           move cli-ragsoc-1    to lab-forn-buf.
           move mag-descrizione to lab-mag-buf.
           perform FORM1-IUD-DISPLAY.

           modify FORM1-Handle, visible true.

           move 2 to event-data-2.
           perform SPOSTAMENTO.

           if teva-chiusa
              move 1 to livello-abil
              modify pb-stato, bitmap-number 1
              modify pb-movim, visible 1
           else
              move 2 to livello-abil
              modify pb-stato, bitmap-number 3
              modify pb-movim, visible 0
           end-if.
           perform ABILITAZIONI.

           call "C$CALLEDBY" using PgmChiamante.
           if PgmChiamante not = "selbozze"
              modify pb-stato,  visible 0
              modify pb-ordfor, visible 0
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT form1
                 ON EXCEPTION
                    PERFORM form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterEndAccept>
           if CallZoom
              move low-value to prg-chiave
              set CallZoom to false
              move teva-mag to prg-cod-magazzino
              inquire gd-r, cursor-y in riga
              inquire gd-r(riga, 1), cell-data in prg-cod-articolo
              move prg-cod-articolo  to como-articolo
              move prg-cod-magazzino to como-magazzino
              move 0      to como-giacenza
              start progmag key is >=  key01
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read progmag next at end exit perform end-read
                    if prg-cod-articolo  not = como-articolo or
                       prg-cod-magazzino not = como-magazzino
                       exit perform
                    end-if
                    if prg-giacenza > como-giacenza  or
                                      como-giacenza = 0
                       move prg-chiave   to save-prg-chiave
                       move prg-giacenza to como-giacenza
                    end-if
                 end-perform
              end-start
              move save-prg-chiave to prg-chiave
      *****        inquire gd-r(rigariga, 3), cell-data in prg-tipo-imballo
      *****        inquire gd-r(riga, 4), cell-data in prg-peso
              move "prg-artico-sons" to como-file
              call "zoom-gt"   using como-file, prg-rec
                              giving stato-zoom
              cancel "zoom-gt"
              if stato-zoom = 0
                 inquire gd-r(riga, 7) cell-data como-prz
                 move prg-cod-articolo  to col-r-articolo art-codice
                 move prg-cod-magazzino to col-r-mag
                 move prg-tipo-imballo  to col-r-imb      imq-codice
                 move prg-peso          to col-r-peso
                 modify gd-r(riga, 1), cell-data col-r-articolo
                 modify gd-r(riga, 2), cell-data col-r-mag
                 modify gd-r(riga, 3), cell-data col-r-imb
                 modify gd-r(riga, 4), cell-data col-r-peso
                 perform DESCRIZIONE-ARTICOLO                   
                 set TrattamentoGDO to true
                 perform CALCOLA-IMPOSTE
                                         
                 move teva-data          to como-data-ordine tpb-data
                 move art-marca-prodotto to tpb-marca
                 move como-prz           to como-prz-unitario
                 move 0 to como-prm-cliente como-prm-destino
                 perform ADDIZIONALE-PIOMBO    
                 add imposta-cou to imposta-cobat 
                     giving risultato-imposte         
                 perform CALCOLA-IMPONIBILE
              end-if
           end-if

      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Form1-Handle
           INITIALIZE Key-Status
           .

       form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterAccept>
           evaluate key-status
           when 5 |modifica
                inquire tool-modifica, enabled in e-modifica
                if e-modifica = 1
                   if mod = zero move 1 to mod
                   else          move zero to mod
                   end-if
                   modify tool-modifica, value = mod
                   perform MODIFICA
                end-if
           end-evaluate.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-stato-LinkTo
              WHEN Key-Status = 1001
                 PERFORM pb-movim-LinkTo
              WHEN Key-Status = 1003
                 PERFORM pb-cambia-rif-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-ordfor-LinkTo
              WHEN Key-Status = 4
                 PERFORM TOOL-CANCELLA-LinkTo
              WHEN Key-Status = 3
                 PERFORM TOOL-SALVA-LinkTo
              WHEN Key-Status = 6
                 PERFORM ANTEPRIMA-LinkTo
              WHEN Key-Status = 150
                 PERFORM TOOL-MODIFICA-LinkTo
              WHEN Key-Status = 7
                 PERFORM STAMPA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form1-CLEAR.
           PERFORM form1-INIT-VALUE
           PERFORM form1-DISPLAY
           .

       form1-DISPLAY.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1
           DISPLAY form1 UPON Form1-Handle
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterDisplay>
      * <TOTEM:END>
           .

       form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeExit>
           unlock teva all records.       

           move teva-chiave to cke-chiave.
           call   "check-eva-f" using cke-linkage.
           cancel "check-eva-f".

           if cke-stato not = 0
              display message "ERRORE IMPOSTE ARTICOLO: " 
           cke-articolo(1)
                       x"0d0a""Uscire ugualmente?"
                         type mb-yes-no
                       giving scelta
                       default mb-no
                        title tit-err
                         icon 2
              if scelta = mb-no
                 move 26 to key-status
                 exit paragraph
              end-if
           end-if.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-r-Content
           .

       form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM form1-DataSet1-Update-Key
           .

       form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           PERFORM form1-DataSet1-Update-Key
           .

       form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           PERFORM form1-DataSet1-Update-Key
           .

       form1-DataSet1-Update-Key.
           MOVE teva-rec OF teva TO
                     form1-MULKEY-TMPBUF
           PERFORM form1-CLEAR
           PERFORM form1-INIT-DATA
           MOVE form1-MULKEY-TMPBUF TO
                     teva-rec OF teva
           PERFORM DataSet1-teva-Read
           PERFORM form1-DUPLICATE-MOVEKEY
           PERFORM form1-DUMMY-CURR
           PERFORM form1-IUD-Display
           .

       form1-DUPLICATE-MOVEKEY.
           .

       form1-First.
           PERFORM form1-DUMMY-FIRST
           PERFORM DataSet1-teva-INITSTART
           PERFORM DataSet1-teva-START
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Next
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterFirst>
      * <TOTEM:END>
           PERFORM form1-DUPLICATE-MOVEKEY.
           PERFORM form1-IUD-Display
           .

       form1-Previous.
              PERFORM form1-Buf-To-Fld
              PERFORM DataSet1-teva-START-LESS
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Prev
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM form1-DUPLICATE-MOVEKEY
           PERFORM form1-DUMMY-PREVIOUS
           PERFORM form1-IUD-Display
           .

       form1-Next.
              PERFORM form1-Buf-To-Fld
              PERFORM DataSet1-teva-START-GREATER
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Next
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterNext>
      * <TOTEM:END>
           PERFORM form1-DUPLICATE-MOVEKEY
           PERFORM form1-DUMMY-NEXT
           PERFORM form1-IUD-Display
           .
      
       form1-Last.
           PERFORM form1-DUMMY-LAST
           PERFORM DataSet1-teva-INITEND
           PERFORM DataSet1-teva-START-NOTGREATER
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Prev
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterLast>
      * <TOTEM:END>
           PERFORM form1-DUPLICATE-MOVEKEY.
           PERFORM form1-IUD-Display
           .

       form1-Curr.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM form1-Buf-To-Fld
           PERFORM DataSet1-teva-Read
           PERFORM form1-DUPLICATE-MOVEKEY
           PERFORM form1-DUMMY-CURR
           PERFORM form1-IUD-Display
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterCurrent>
      * <TOTEM:END>
           .

       form1-IUD-Display.
           IF Valid-STATUS-teva
              PERFORM form1-ALLGRID-RESET
              PERFORM form1-Fld-To-Buf
              PERFORM form1-NAVI-FOR-MASTERGRID
              PERFORM form1-DISPLAY
           ELSE
              IF form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM form1-Extended-File-Status
              END-IF
           END-IF
           .

       form1-Add.
           PERFORM form1-Buf-To-Fld
           PERFORM form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM form1-DUMMY-ADD
           PERFORM DataSet1-teva-INITREC
           PERFORM form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-teva-Rec-Write
           IF Valid-STATUS-teva
              PERFORM form1-RESUMMARY-INS
              PERFORM form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM form1-IUD-Display
           END-IF
           PERFORM form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterAdd>
      * <TOTEM:END>
           .
     
       form1-Update.
           PERFORM form1-Buf-To-Fld
           PERFORM DataSet1-teva-START              
           IF NOT Valid-STATUS-teva
              PERFORM form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-teva-Read
           PERFORM form1-Buf-To-Fld
           PERFORM form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM form1-DUMMY-UPDATE
           PERFORM form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-teva-Rec-Rewrite
           IF Valid-STATUS-teva
              PERFORM form1-RESUMMARY-DEL
              PERFORM form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM form1-IUD-Display
           END-IF
           PERFORM form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterUpdate>
      * <TOTEM:END>
           .

       form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM form1-DUMMY-DELETE
      * delete
           PERFORM form1-Buf-To-Fld
           PERFORM DataSet1-teva-Rec-Delete
           IF Valid-STATUS-teva
              PERFORM form1-CLEAR
              PERFORM form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-teva
           END-IF
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterDelete>
      * <TOTEM:END>
           PERFORM form1-ERR-CHECKING
           .

       form1-NAVI-FOR-MASTERGRID.
           .

       form1-ERR-CHECKING.
           IF Valid-STATUS-teva
              PERFORM form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM form1-Extended-File-Status
           END-IF
           .

       form1-RESUMMARY-INS.
           .

       form1-RESUMMARY-DEL.
           .


       form1-DUMMY-FIRST.
           .

       form1-DUMMY-PREVIOUS.
           .

       form1-DUMMY-NEXT.
           .

       form1-DUMMY-LAST.
           .

       form1-DUMMY-CURR.
           .

       form1-DUMMY-ADD.
           .

       form1-DUMMY-UPDATE.
           .

       form1-DUMMY-UPDATE-INIT.
           .

       form1-DUMMY-DELETE.
           .

       form1-DUMMY-DELETE-INIT.
           .

       form1-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
           INITIALIZE form1-BUF
      * FORM : form1
           PERFORM DataSet1-INIT-RECORD
      * DB_LABEL
              MOVE "9999" TO teva-anno
      * DB_LABEL
              MOVE "99999999" TO teva-numero
      * DB_LABEL
              MOVE "99/99/9999" TO teva-data
      * DB_LABEL
              MOVE "99999" TO teva-cod-forn
      * DB_LABEL
              MOVE "FDS" TO teva-mag
      * <TOTEM:EPT. FORM:form1, FORM:form1, SetDefault>
      * <TOTEM:END>
           PERFORM form1-FLD-TO-BUF
           .


       form1-ALLGRID-RESET.
           .

      * for Form's Validation
       form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterBufToFld>
      * <TOTEM:END>
           .

       form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeFldToBuf>
      * <TOTEM:END>
      * DB_LABEL : Screen2-DaLa-1
              MOVE teva-anno  TO Screen2-DaLa-1-BUF
      * DB_LABEL : Screen2-DaLa-1a
              MOVE teva-numero  TO Screen2-DaLa-1a-BUF
      * DB_LABEL : lab-data
              MOVE teva-data  TO lab-data-BUF
      * DB_LABEL : Screen2-DaLa-1b
              MOVE teva-cod-forn  TO Screen2-DaLa-1b-BUF
      * DB_LABEL : Screen2-DaLa-1ba
              MOVE teva-mag  TO Screen2-DaLa-1ba-BUF
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterFldToBuf>
           move teva-data to como-data.
           perform DATE-TO-SCREEN.
           move como-data to lab-data-buf.

           .
      * <TOTEM:END>
           .

       form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form1-SHOW-MSG-ROUTINE
           .

       form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form1-DISPLAY-MESSAGE
           .

       form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form1-Save-Status.
           MOVE DataSet1-teva-KEY1-ORDER TO TMP-form1-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-form1-KEYIS
           MOVE teva-rec OF teva TO 
              TMP-form1-teva-RESTOREBUF
           .             

       form1-Restore-Status.
           MOVE TMP-form1-KEY1-ORDER TO DataSet1-teva-KEY1-ORDER
           MOVE TMP-form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-form1-teva-RESTOREBUF TO
              teva-rec OF teva
           PERFORM DataSet1-teva-START
           IF Valid-STATUS-teva
              PERFORM DataSet1-teva-Read-Next
           ELSE
              PERFORM DataSet1-teva-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-teva OR
              (Valid-STATUS-teva AND
                 teva-rec OF teva = 
                   TMP-form1-teva-RESTOREBUF)
              PERFORM DataSet1-teva-Read-Next
           END-PERFORM
           .

       scr-movim-Open-Routine.
           PERFORM scr-movim-Scrn
           PERFORM scr-movim-Proc
           .

       scr-movim-Scrn.
           PERFORM scr-movim-Create-Win
           PERFORM scr-movim-Init-Value
           PERFORM scr-movim-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-movim-DISPLAY
           .

       scr-movim-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 13,90,
              SIZE 23,80,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              RESIZABLE,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-movim-SF-HANDLE,
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-movim UPON scr-movim-SF-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-movim-PROC.
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, BeforeAccept>
           move 0 to ef-anno-buf.
           move 0 to ef-num-buf.
           display ef-anno ef-num.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-movim
                 ON EXCEPTION
                    PERFORM scr-movim-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-movim-SF-HANDLE
           INITIALIZE Key-Status
           .

       scr-movim-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-movim-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-movim-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM pb-elenco-LinkTo
              WHEN Key-Status = 1000
                 PERFORM pb-fatto-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-movim-CLEAR.
           PERFORM scr-movim-INIT-VALUE
           PERFORM scr-movim-DISPLAY
           .

       scr-movim-DISPLAY.
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-movim UPON scr-movim-SF-HANDLE
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, AfterDisplay>
      * <TOTEM:END>
           .

       scr-movim-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-movim-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-movim-Init-Value.
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, SetDefault>
      * <TOTEM:END>
           PERFORM scr-movim-FLD-TO-BUF
           .


       scr-movim-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-movim-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-movim-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-movim-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-movim, FORM:scr-movim, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-movim-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-movim-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-movim-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-movim-SHOW-MSG-ROUTINE
           .

       scr-movim-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-movim-DISPLAY-MESSAGE
           .

       scr-movim-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-movim-Save-Status.
           .             

       scr-movim-Restore-Status.
           .



       Screen2-Event-Proc.
           .

       gd-r-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM gd-r-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM gd-r-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "abilita-toolbar.cpy".   
           copy "imposte.cpy".
           copy "addizionale-piombo.cpy".
           copy "aggiorna-stato-ordf.cpy".
           copy "trova-parametro.cpy" 
           .
      * <TOTEM:END>

       ABILITAZIONI.
      * <TOTEM:PARA. ABILITAZIONI>
           move BitmapSaveDisabled to BitmapNumSave.
           move 0 to e-salva.

           if livello-abil = 2
              move BitmapEditEnabled to BitmapNumEdit
              move 1 to e-modifica
           else
              move BitmapEditDisabled to BitmapNumEdit
              move 0 to e-modifica
           end-if.
           if mod = 1
              move BitmapDeleteEnabled to BitmapNumDelete
              move 1 to e-cancella
              if livello-abil = 2 
                 move BitmapSaveEnabled to BitmapNumSave
                 move 1 to e-salva
              end-if
           else
              move BitmapDeleteDisabled to BitmapNumDelete
              move 0 to e-cancella
           end-if.
           move BitmapNewDisabled to BitmapNumNew.
           move 0 to e-nuovo.
           modify tool-salva,    bitmap-number BitmapNumSave, 
                                 enabled e-salva.
           modify tool-nuovo,    bitmap-number BitmapNumNew.
           modify tool-cancella, bitmap-number BitmapNumDelete
                                 enabled e-cancella.
           modify tool-modifica, bitmap-number BitmapNumEdit
                                 enabled e-modifica.

           move 1   to e-stampa
           move BitmapPrintEnabled to BitmapNumPrint
           modify tool-stampa,    enabled = e-stampa 
           .
      * <TOTEM:END>

       AGGIORNA-ORDINI.
      * <TOTEM:PARA. AGGIORNA-ORDINI>
           perform varying cont from 1 by 1 until cont > 100
              if como-tof-numero(cont) = zero
                 exit perform
              end-if
              move como-tof-chiave(cont) to tof-chiave
              perform AGGIORNA-STATO-ORDF
           end-perform 
           .
      * <TOTEM:END>

       AGGIORNA-RIGA.
      * <TOTEM:PARA. AGGIORNA-RIGA>
      *    faccio il lock sull'ordine
           perform METTI-IN-LINEA-ORDINE.

      *    solo se è sbloccato proseguo con il salvataggio della riga
           if not RecLocked
              perform AGGIORNA-RIGA-2
           end-if.

           unlock tordforn all record.


      ***---
       AGGIORNA-RIGA-2.
           perform INQUIRE-PROGRESSIVO

      *    per prima cosa trasferisco i riferimenti sul nuovo progressivo
           if reva-chiave-progmag not = prg-chiave
              perform CAMBIA-PROGRESSIVO
           end-if


      *    aggiorno i dati di impegnato e ordinato al contrario pertendo
      *    dai dati base delle riga
           perform STORNO

           inquire gd-r(riga, 6), cell-data in reva-qta
           inquire gd-r(riga, 1),  cell-data col-r-articolo
           inquire gd-r(riga, 2),  cell-data col-r-mag
           inquire gd-r(riga, 3),  cell-data col-r-imb
           inquire gd-r(riga, 4),  cell-data col-r-peso
           inquire gd-r(riga, 6),  cell-data col-r-qta
           inquire gd-r(riga, 7),  cell-data col-r-prz
           inquire gd-r(riga, 8),  cell-data col-r-cons
           inquire gd-r(riga, 9),  cell-data col-r-cou
           inquire gd-r(riga, 10), cell-data col-r-add
           inquire gd-r(riga, 11), cell-data col-r-imponib
           move col-r-articolo to prg-cod-articolo
           move col-r-mag      to prg-cod-magazzino
           move col-r-imb      to prg-tipo-imballo
           move col-r-peso     to prg-peso
           perform SCRIVI-RORDFORN
           move prg-chiave    to reva-chiave-progmag
           move col-r-qta     to reva-qta
           move col-r-prz     to reva-prz-unit
           move col-r-cons    to reva-imp-cons
           move col-r-cou     to reva-coubat
           move col-r-add     to reva-add-pb
           move col-r-imponib to reva-netto
           accept reva-data-modifica from century-date
           accept reva-ora-modifica  from time 
           move user-codi to reva-utente-modifica
           rewrite reva-rec invalid continue end-rewrite

      *    se la qta della riga è zero la cancello
           if reva-qta = 0
              delete reva record invalid continue end-delete
           end-if.

      ***---
       STORNO.
      *    ripristino l'ordinato 
           move tof-causale      to link-causale.
           set link-update       to true.
           move rof-prg-chiave   to link-key.
           move tof-mese-rif     to link-mese-rif.
           move tof-chiave       to link-chiave-origine.
           move user-codi to link-user of link-wprogmag.

           move reva-qta          to link-valore.
           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.
              
           compute link-valore = rof-qta-ord - rof-qta-evasa.

           if link-valore > 0
              move "0000000000000000"   to link-array
              move -1 to multiplyer(3)
              call   "wprogmag" using link-wprogmag
              cancel "wprogmag"
           end-if
                                                        
      *    Dopodiché tolgo direttamente la qta alla giacenza in modo da 
      *    ripristinarla a prima della bozza
           move reva-chiave-progmag   to link-key.
           move reva-qta              to link-valore
                                         reva-qta-old.
           move "0000000000000000"    to link-array.
           move -1 to multiplyer(1).
           move -1 to multiplyer(15).
           call   "wprogmag"   using link-wprogmag.
           cancel "wprogmag".

      *    tolgo la vecchia qta dall'evaso del'ordine
           subtract reva-qta from rof-qta-evasa.


      ***---
       METTI-IN-LINEA-ORDINE.
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "tordforn" to geslock-nome-file.

           set tutto-ok to true.
           move hid-chiave-ordf    to rof-chiave.
           move rof-chiave-testa   to tof-chiave

           read tordforn lock key tof-chiave 
              invalid 
                 continue 
           end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova
                   read tordforn lock key tof-chiave
                      invalid 
                         continue
                   end-read
              end-evaluate
           end-perform.

           if not RecLocked
              read rordforn key rof-chiave 
                   invalid continue 
              end-read

              perform varying cont from 1 by 1 until cont > 100
                 if como-tof-chiave(cont) = tof-chiave
                    exit perform
                 end-if

                 if como-tof-numero(cont) = zero
                    move tof-chiave   to como-tof-chiave(cont)
                    exit perform
                 end-if
              end-perform
           end-if.

      ***---
       INQUIRE-PROGRESSIVO.
           inquire gd-r(riga, 1),  cell-data col-r-articolo
           inquire gd-r(riga, 2),  cell-data col-r-mag
           inquire gd-r(riga, 3),  cell-data col-r-imb
           inquire gd-r(riga, 4),  cell-data col-r-peso
           move col-r-articolo to prg-cod-articolo
           move col-r-mag      to prg-cod-magazzino
           move col-r-imb      to prg-tipo-imballo
           move col-r-peso     to prg-peso 
           .
      * <TOTEM:END>

       BEGIN-ENTRY-CODE.
      * <TOTEM:PARA. BEGIN-ENTRY-CODE>
           evaluate event-data-1
           when 78-col-r-articolo| 1
           when 78-col-r-mag| 2
           when 78-col-r-imb| 3
           when 78-col-r-peso| 4 
                inquire gd-r, entry-reason in como-x
                evaluate como-x
                when x"0D"|Invio
                when X"00"|doppio click
                     set event-action to event-action-fail-terminate
                     inquire gd-r, cursor-y = store-riga
                     set CallZoom to true
                when other
                     set event-action to event-action-fail
                end-evaluate 
           when 78-col-r-prz| 7
                set event-action to event-action-fail      
           when 78-col-r-qta| 6                            
                set environment "KEYSTROKE" to "DATA=44 46"
           |Se le imposte erano a zero significa che per qualche motivo 
           |(listino o manuale) non vanno impostate perciò
           |le lascio a zero   
           when 78-col-r-cons| 8                           
                inquire gd-r(event-data-2, 78-col-r-cons), 
                        cell-data in col-r-cons
                move col-r-cons to como-valore
                if como-valore = 0
                   set event-action to event-action-fail
                else
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if 
           when 78-col-r-cou| 9                            
                inquire gd-r(event-data-2, 78-col-r-cou), 
                        cell-data in col-r-cou
                move col-r-cou to como-valore
                if como-valore = 0
                   set event-action to event-action-fail
                else
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if     

           when 78-col-r-add|10                            
                inquire gd-r(event-data-2, 1), 
                        cell-data in col-r-articolo
                move col-r-articolo to art-codice
                read articoli no lock invalid continue end-read
                if art-no-cobat
                   set event-action to event-action-fail
                else                           
                   inquire gd-r(event-data-2, 78-col-r-add), 
                           cell-data in col-r-add
                   move col-r-add to como-valore
                   if como-valore = 0
                      set event-action to event-action-fail
                   else
                      set environment "KEYSTROKE" to "DATA=44 46"
                   end-if
                end-if
           when other 
                set event-action to event-action-fail
           end-evaluate     
           .
      * <TOTEM:END>

       CAMBIA-PROGRESSIVO.
      * <TOTEM:PARA. CAMBIA-PROGRESSIVO>
           perform STORNA-GIACENZA
           move prg-chiave              to reva-chiave-progmag
           unlock rordforn all records.

      ***---
      * Devo solamente spostare la giacenza
      * da un progressivo su un altro
       STORNA-GIACENZA.
           |Adesso devo stornare la giacenza
           move tof-causale         to link-causale.
           set  link-update         to true.
           move reva-chiave-progmag to link-key.
           move tof-mese-rif        to link-mese-rif.
           move tof-chiave          to link-chiave-origine.

           |Diminuisco il vecchio progressivo
           move user-codi to link-user of link-wprogmag.
           move reva-qta           to link-valore.
           set link-update-um      to true.
           set link-update-peso    to false.
           set link-update-valore  to false.
           move "0000000000000000" to link-array.
           move -1                 to multiplyer(1).
           move -1                 to multiplyer(15).
           call   "wprogmag"    using link-wprogmag.
           cancel "wprogmag".

      *     compute link-valore = rof-qta-ord - rof-qta-evasa.

      *    Luciano
      *    l'ordinato non lo devo più toccare visto che rimane sempre 
      *    sul progressivo dell'ordine originale
      *     move "000000000000000" to link-array.
      *     move -1                to multiplyer(3).
      *     call   "wprogmag"   using link-wprogmag.
      *     cancel "wprogmag".
      *    Luciano fine

           |ed aumento il nuovo
           move prg-chiave         to link-key.
           move reva-qta           to link-valore.
           set link-update-um      to true.
           set link-update-peso    to false.
           set link-update-valore  to false.
           move "1000000000000010" to link-array.
           call   "wprogmag"    using link-wprogmag.
           cancel "wprogmag".

      *     compute link-valore = rof-qta-ord - rof-qta-evasa.

      *    Luciano
      *    l'ordinato non lo devo più toccare visto che rimane sempre 
      *    sul progressivo dell'ordine originale
      *     move "000000000000000" to link-array.
      *     move 1                 to multiplyer(3).
      *     call   "wprogmag"   using link-wprogmag.
      *     cancel "wprogmag".
      *    Luciano Fine
           .
      * <TOTEM:END>

       CANCELLA.
      * <TOTEM:PARA. CANCELLA>
           display message "Cancella la bozza corrente?"
                     title titolo
                      icon 2
                      type mb-yes-no
                    giving scelta
                   default mb-no
           if scelta = mb-yes
              perform CANC-EFFETTIVA
           end-if.

      ***---
       CANC-EFFETTIVA.
           initialize righe-non-cancellate.
           set no-righe   to true
           move LinkChiave of gbozze-linkage to teva-chiave
           move low-value to reva-riga
           move teva-chiave to reva-chiave-testa
           start reva key >= reva-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read reva next at end exit perform end-read
                    if reva-chiave-testa not = teva-chiave
                       exit perform
                    end-if

                    move reva-chiave-ordf to rof-chiave
                    perform READ-RORDFORN-LOCK
                    move rof-chiave-testa to tof-chiave
                    read tordforn no lock invalid continue end-read

                    if not tof-chiusura-man
                       perform CANC-2-FASE
                    else
                       set no-righe   to false
                       perform varying cont from 1 by 1 
                                                     until cont > 10000
                          if riga-non-canc(cont) = zero
                             move reva-riga  to riga-non-canc(cont)
                             exit perform
                          end-if
                       end-perform

                    end-if
                 end-perform

                 if idx > 0
                    perform varying idx-ordf from 1 by 1 
                             until idx-ordf > idx
                       move tab-chiave(idx-ordf) to tof-chiave
                       perform AGGIORNA-STATO-ORDF
                    end-perform
                 end-if

           end-start

           if no-righe
              delete teva record invalid continue end-delete
              set HoSalvato to true
              display message "Cancellazione effettuata!"
                     title titolo
              move 27 to key-status
           else
              move 0 to mod
              modify tool-modifica, value = mod
              read teva no lock invalid continue end-read
              perform ABILITAZIONI
              perform RIEMPI-GRID
              perform MESSAGGIO-NON-CANC
           end-if

           set RicaricaGrid of gbozze-linkage  to true.

      ***---
       CANC-2-FASE.
      *    Luciano 
           move reva-chiave-ordf   to rof-chiave
           read rordforn
              invalid
                 continue
           end-read
      *    Luciano Fine                          
           delete reva record invalid continue end-delete.

           perform STORNA-GIACENZA-AUMENTA-ORDINATO
           rewrite rof-rec invalid continue end-rewrite
           unlock rordforn all record

           set trovato to false
           set idx-ordf to 1
           search tab-chiave
           when tab-chiave(idx-ordf) = reva-chiave-testa-ordf
                set trovato to true
           end-search
           if not trovato
              add 1 to idx
              move reva-chiave-testa-ordf to tab-chiave(idx)
           end-if.

      ***---
       STORNA-GIACENZA-AUMENTA-ORDINATO.
           move reva-chiave-testa-ordf to tof-chiave.
           read tordforn no lock invalid continue end-read.
           move tof-causale       to link-causale.
           set link-update        to true.
           move reva-chiave-progmag   to link-key.
           move tof-mese-rif      to link-mese-rif.
           move tof-chiave        to link-chiave-origine.

           move user-codi         to link-user of link-wprogmag.
           move reva-qta          to link-valore.
           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore  to false.
           move "0000000000000000" to link-array.
           move -1                 to multiplyer(1).
           move -1                 to multiplyer(15).
           call   "wprogmag"   using link-wprogmag.
           cancel "wprogmag".
                                                        
      *    Luciano
      *     move reva-chiave-progmag   to link-key.
           move rof-prg-chiave   to link-key.
      *    Luciano fine
           move user-codi         to link-user of link-wprogmag.
           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.

           compute link-valore = rof-qta-ord - rof-qta-evasa.

           if link-valore > 0
              move "0000000000000000"   to link-array
              move -1 to multiplyer(3)
              call   "wprogmag" using link-wprogmag
              cancel "wprogmag"
           end-if.

           subtract reva-qta from rof-qta-evasa.
           compute link-valore = rof-qta-ord - rof-qta-evasa.

           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.

           if link-valore > 0
              move "0000000000000000" to link-array
              move 1                  to multiplyer(3)
              call   "wprogmag" using link-wprogmag
              cancel "wprogmag"
           end-if.

      ***---
       MESSAGGIO-NON-CANC.
           display message 
                "Le righe non cancellate fanno riferimento ad un ordine"
                "chiuso MANUALMENTE. Pertanto occorre riaprire l'ordine"
                "indicato per poterle modificare/cancellare."
                     title titolo
                      type mb-yes-no
                      icon 2 
           .
      * <TOTEM:END>

       CALCOLA-IMPONIBILE.
      * <TOTEM:PARA. CALCOLA-IMPONIBILE>
           inquire gd-r(riga, 1) hidden-data gruppo-hidden

           move hid-chiave-ordf to rof-chiave.
           read rordforn no lock invalid continue end-read.

           set trovato to true.
           move rof-cod-listino  to rlis-codice.
           move rof-cod-articolo to rlis-articolo.
           read rlistini no lock
                invalid set trovato to false
            not invalid
                move rlis-tipo-tratt-imposte to imf-codice
                read impforn no lock
                     invalid set trovato to false
                end-read
           end-read.
           
           move hid-chiave to reva-chiave.
           read reva no lock
                invalid move 0 to reva-imp-cons reva-coubat reva-add-pb
           end-read.

           |Se erano a zero significa che per qualche motivo 
           |(listino o manuale) non vanno impostate perciò
           |le lascio a zero      
           if reva-imp-cons = 0
              move 0 to imposta-consumo
           end-if.
           if reva-coubat = 0
              move 0 to imposta-cou imposta-cobat risultato-imposte
           end-if.
           if reva-add-pb = 0
              move 0 to add-piombo
           end-if.
           move risultato-imposte to col-r-cou.
           move imposta-consumo   to col-r-cons.
           move add-piombo        to col-r-add .

           if como-prz-unitario < ( imposta-cou     +
                                    imposta-consumo +
                                    add-piombo )
              compute como-prz-unitario =
                      imposta-cou       +
                      imposta-consumo   +
                      add-piombo
           else
              if not trovato

                 compute como-imp-merce =
                         como-prz       -
                         add-piombo     -
                         imposta-cou    -
                         imposta-cobat  -
                         imposta-consumo
              else
              
                 inquire gd-r(riga, 78-col-r-imponib), cell-data in 
           col-r-imponib
                 move col-r-imponib to como-imp-merce
                 
                 if imf-prz-reale-utf-meno
                    compute como-imp-merce =
                            como-imp-merce + 
                            reva-imp-cons   -
                            imposta-consumo
                 end-if
                 if ImpostaCou
                    if imf-prz-reale-cou-meno
                       compute como-imp-merce =
                               como-imp-merce +
                               reva-coubat     -
                               imposta-cou
                    end-if
                 end-if
                 if ImpostaCobat
                    if imf-prz-reale-cobat-meno
                       compute como-imp-merce = 
                               como-imp-merce +
                               reva-coubat     -
                               imposta-cobat
                    end-if
                 end-if
                 if imf-prz-reale-pb-meno 
                    compute como-imp-merce = 
                            como-imp-merce +
                            reva-add-pb     -
                            add-piombo
                 end-if
                 compute como-prz-unitario = como-imp-merce + 
                                             imposta-cou     +
                                             imposta-cobat   +
                                             imposta-consumo +
                                             add-piombo
              end-if 
           end-if.
           move como-prz-unitario to col-r-prz como-prz.
           move como-imp-merce to col-r-imponib.
           modify gd-r(riga, 78-col-r-prz)     cell-data col-r-prz.
           modify gd-r(riga, 78-col-r-cons)    cell-data col-r-cons.
           modify gd-r(riga, 78-col-r-cou)     cell-data col-r-cou.
           modify gd-r(riga, 78-col-r-add)     cell-data col-r-add.
           modify gd-r(riga, 78-col-r-imponib) cell-data col-r-imponib.
           modify gd-r(riga, 78-col-r-descr),  cell-data col-r-descr.

           move 78-ID-gd-r to control-id.
           move          4 to accept-control.
           modify gd-r, cursor-y riga, cursor-x 1 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
      *     evaluate control-id
      *     when 78-ID-ef-num
      *          move "teva" to como-file
      *
      *          inquire ef-anno, value teva-anno
      *          inquire ef-num,  value teva-numero
      *          call "zoom-gt"   using como-file, teva-rec
      *                          giving stato-zoom
      *          cancel "zoom-gt"
      *          if stato-zoom = 0
      *             move teva-numero to numero
      *             display ef-num
      *          end-if                 
      *     end-evaluate 
           .
      * <TOTEM:END>

       CONTA-RIGHE.
      * <TOTEM:PARA. CONTA-RIGHE>
           set no-righe   to true

           move low-value   to reva-riga.
           move teva-chiave to reva-chiave-testa.
           start reva key >= reva-chiave
              invalid 
                 continue 
              not invalid
                 read reva next 
                    at end 
                       continue
                    not at end
                       if teva-chiave = reva-chiave-testa
                          set no-righe   to false
                       end-if
                 end-read
           end-start 
           .
      * <TOTEM:END>

       DESCRIZIONE-ARTICOLO.
      * <TOTEM:PARA. DESCRIZIONE-ARTICOLO>
           read articoli no lock invalid continue end-read.
           inspect art-descrizione replacing trailing 
                                   spaces by low-value.
           perform DESCRIZIONE-IMBALLO.
           initialize col-r-descr.

           string art-descrizione delimited low-value
                  " - "           delimited size
                  como-imballo    delimited size
                  into col-r-descr
           end-string 
           .
      * <TOTEM:END>

       DESCRIZIONE-IMBALLO.
      * <TOTEM:PARA. DESCRIZIONE-IMBALLO>
           read timbalqta
                invalid initialize imq-dati
           end-read.
      
           move imq-tipo to imb-codice.
           read timballi
                invalid initialize imb-dati
           end-read.
           inspect imb-descrizione replacing trailing 
                                   spaces by low-value.
           move imq-qta-imb  to imballi-ed.
           call "C$JUSTIFY"  using imballi-ed, "L".
           initialize como-imballo.
      
           string  imb-descrizione delimited by low-value
                   " da "          delimited by size
                   imballi-ed      delimited by spaces
                   " x "           delimited by size
                   art-udm-imballo delimited by size
                   into como-imballo
           end-string.

           inspect como-imballo replacing trailing spaces by low-value 
           .
      * <TOTEM:END>

       FINISH-ENTRY-CODE.
      * <TOTEM:PARA. FINISH-ENTRY-CODE>
           set tutto-ok to true.
      *    se sono sulla colonna delle qta controllo subito la qta max
           if event-data-1 = 78-col-r-qta
              perform RECUPERA-QTA-MAX
              inquire gd-r(event-data-2, 78-col-r-qta), 
                                         cell-data in reva-qta
              if reva-qta > qta-max 
                 set errori  to true
                 set event-action to event-action-fail
                 display message box "Qta maggiore dell'ordinata"
                         title titolo
              end-if
           end-if

           if tutto-ok
              perform FINISH-ENTRY-CODE-2
           end-if.

      ***---
       FINISH-ENTRY-CODE-2.
           inquire gd-r(event-data-2, 78-col-r-articolo), 
                                         cell-data in col-r-articolo.
           move col-r-articolo to art-codice.
           read articoli no lock.

           move event-data-2 to riga.
           inquire gd-r(event-data-2, 78-col-r-qta), 
                                         cell-data in col-r-qta.
           inquire gd-r(event-data-2, 78-col-r-prz), 
                                         cell-data in como-prz.
           inquire gd-r(event-data-2, 78-col-r-cons), 
                                         cell-data in imposta-consumo.
           if art-si-cobat
              move 0 to imposta-cou
              inquire gd-r(event-data-2, 78-col-r-cou), 
                                            cell-data in imposta-cobat
           else
              move 0 to imposta-cobat
              inquire gd-r(event-data-2, 78-col-r-cou), 
                                            cell-data in imposta-cou
           end-if.
           inquire gd-r(event-data-2, 78-col-r-add), 
                                         cell-data in add-piombo.
           inquire gd-r(event-data-2, 78-col-r-imponib), 
                                         cell-data in como-imp-merce.
           
           set environment "KEYSTROKE" to "DATA=44   44".
           set environment "KEYSTROKE" to "DATA=46   46".
           move como-prz to como-prz-unitario.
                                                      
           inquire gd-r(riga, 78-col-r-imb), cell-data imq-codice.
           perform DESCRIZIONE-ARTICOLO.


           compute risultato-imposte = imposta-cou + imposta-cobat.
           perform CALCOLA-IMPONIBILE.
           modify gd-r(event-data-2, 78-col-r-qta) cell-data col-r-qta.

           if event-data-1 = 78-col-r-qta
              move 0 to como-tot-pz como-tot-colli
              inquire gd-r, last-row in tot-righe
              perform varying riga from 1 by 1 
                        until riga > tot-righe
                 inquire gd-r(riga, 78-col-r-qta), cell-data reva-qta
                 read timbalqta invalid continue end-read
                 add reva-qta to como-tot-pz
                 if reva-qta = 0
                    move 0 to como-colli
                 else
                    if reva-qta <= imq-qta-imb
                       move 1 to como-colli
                    else
                       move 0 to resto
                       divide reva-qta by imq-qta-imb 
                                   giving como-colli
                                remainder resto
                       if resto not = 0
                          add 1 to como-colli
                       end-if
                    end-if
                 end-if
                 add como-colli to como-tot-colli
              end-perform
           end-if.

           if como-tot-pz = 0
              move BitmapSaveDisabled to BitmapNumSave
              move 0 to e-salva
           else
              move BitmapSaveEnabled to BitmapNumSave
              move 1 to e-salva
           end-if.

           modify tool-salva, bitmap-number BitmapNumSave,
                              enabled e-salva.

           move como-tot-pz    to lab-pz-buf.
           move como-tot-colli to lab-colli-buf.
           display lab-pz lab-colli.


           move col-r-qta to como-qta
           if como-qta = zero
              modify gd-r(event-data-2), row-color = 78-colore-qta-zero|176
           else      
      *    impossibile modificare una riga di un ordine chiuso manualmente
              modify gd-r(event-data-2), row-color = 78-colore-normale|516
           end-if.

      ***---
       RECUPERA-QTA-MAX.
           move zero to qta-eva
           move hid-chiave-ordf to reva-chiave-ordf

           start reva key not < reva-chiave-ordf
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read reva next no lock 
                         at end exit perform
                    end-read
                    if hid-chiave-ordf not = reva-chiave-ordf
                       exit perform
                    end-if
                    if hid-chiave not = reva-chiave
                       add reva-qta   to qta-eva
                    end-if
                 end-perform
           end-start.

           move hid-chiave-ordf to rof-chiave
           read rordforn no lock
                invalid continue
           end-read
           compute qta-max = rof-qta-ord - qta-eva 

           .
      * <TOTEM:END>

       METTI-IN-GRIGLIA.
      * <TOTEM:PARA. METTI-IN-GRIGLIA>
           move reva-articolo to col-r-articolo art-codice.
           move reva-codmag   to col-r-mag.
           move reva-imballo  to col-r-imb imq-codice.
           move reva-peso     to col-r-peso.

           perform DESCRIZIONE-ARTICOLO.

           move reva-qta      to col-r-qta.
           move reva-prz-unit to col-r-prz.
           move reva-netto    to col-r-imponib.
           move reva-imp-cons to col-r-cons.
           move reva-coubat   to col-r-cou.
           move reva-add-pb   to col-r-add.

           modify gd-r(riga, 1),  cell-data col-r-articolo.
           modify gd-r(riga, 2),  cell-data col-r-mag.
           modify gd-r(riga, 3),  cell-data col-r-imb.
           modify gd-r(riga, 4),  cell-data col-r-peso.
           modify gd-r(riga, 5),  cell-data col-r-descr.
           modify gd-r(riga, 6),  cell-data col-r-qta.
           modify gd-r(riga, 7),  cell-data col-r-prz.
           modify gd-r(riga, 8),  cell-data col-r-cons.
           modify gd-r(riga, 9),  cell-data col-r-cou.
           modify gd-r(riga, 10), cell-data col-r-add.
           modify gd-r(riga, 11), cell-data col-r-imponib.

           move reva-chiave-ordf   to hid-chiave-ordf.
           move reva-chiave        to hid-chiave.

           move hid-anno-ordf      to tof-anno
           move hid-numero-ordf    to tof-numero
           read tordforn no lock
                invalid continue
           end-read           

           move tof-stato          to hid-stato-ordf.
           move tof-tipo-chiusura  to hid-tipo-chiusura

           modify gd-r(riga, 1), hidden-data gruppo-hidden.

           if hid-tof-chiuso and hid-tof-chiusura-man
              modify gd-r(riga), ROW-COLOR = 78-colore-chiuso-man
           else
              modify gd-r(riga), ROW-COLOR = 78-colore-normale
           end-if

           add 1 to riga.

           add reva-qta to como-tot-pz.
           if reva-qta <= imq-qta-imb
              move 1 to como-colli
           else
              move 0 to resto
              divide reva-qta by imq-qta-imb 
                          giving como-colli
                       remainder resto
              if resto not = 0
                 add 1 to como-colli
              end-if
           end-if.

           add  como-colli to como-tot-colli 
           .
      * <TOTEM:END>

       MODIFICA.
      * <TOTEM:PARA. MODIFICA>
           move 5 to key-status.
           inquire tool-modifica, value in mod.
           set tutto-ok to true.

           if nuovo
              move 1 to mod
           else                         
      *  se l'utente e' abilitato puo' modificare un record
              if mod = 1
                 perform READ-RECORD-LOCK
                 if errori
                    move 0 to mod
                    read teva no lock invalid continue end-read
                 end-if
              else
                 read teva no lock invalid continue end-read
                 perform RIEMPI-GRID
              end-if
              perform ABILITAZIONI
           end-if.
           modify tool-modifica, value mod.

           if mod = 1
              move zero      to e-cambia-rif
           else
              if teva-aperta
                 move 1      to e-cambia-rif
              else
                 move zero   to e-cambia-rif
              end-if
           end-if
           modify pb-cambia-rif, ENABLED e-cambia-rif
           .
      * <TOTEM:END>

       READ-TMOVMAG-LOCK.
      * <TOTEM:PARA. READ-TMOVMAG-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "tmovmag" to geslock-nome-file.

           set tutto-ok to true.
           move teva-k-mov to tmo-chiave.
           read tmovmag lock key tmo-chiave 
                invalid set errori to true
           end-read.

           if tutto-ok
              perform until 1 = 2
                 if not RecLocked
                    exit perform
                 end-if
                 set RecLocked to false
                 move 1 to geslock-v-riprova
                 move 1 to geslock-v-ignora
                 move 0 to geslock-v-termina
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova 
                      read tmovmag lock key tmo-chiave 
                           invalid continue 
                      end-read
                 when ignora  
                      set errori to true
                      exit perform
                 end-evaluate
              end-perform

              if RecLocked
                 set errori to true
              end-if
           end-if 
           .
      * <TOTEM:END>

       READ-RECORD-LOCK.
      * <TOTEM:PARA. READ-RECORD-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "teva" to geslock-nome-file.

           set tutto-ok    to true.
           move LinkChiave of gbozze-linkage to teva-chiave.
           read teva lock key teva-chiave invalid continue end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read teva lock key teva-chiave
                        invalid continue 
                   end-read
              when ignora  exit perform
              end-evaluate
           end-perform.

           if RecLocked
              set errori to true
           end-if 
           .
      * <TOTEM:END>

       READ-RORDFORN-LOCK.
      * <TOTEM:PARA. READ-RORDFORN-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "rordforn" to geslock-nome-file.

           set tutto-ok to true.
           read rordforn lock key rof-chiave invalid continue end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read rordforn lock key rof-chiave
                        invalid continue 
                   end-read
              end-evaluate
           end-perform.

           if RecLocked
              set errori to true
           end-if 
           .
      * <TOTEM:END>

       RIEMPI-GRID.
      * <TOTEM:PARA. RIEMPI-GRID>
           move 0           to como-tot-pz como-tot-colli.
           move low-value   to reva-riga.
           move teva-chiave to reva-chiave-testa.
           start reva key >= reva-chiave
                 invalid continue 
             not invalid
                 modify gd-r, reset-grid 1
                 perform GD-R-CONTENT
                 move 2 to riga
                 perform until 1 = 2
                    read reva next no lock at end exit perform end-read
                    if reva-chiave-testa not = teva-chiave
                       exit perform
                    end-if
                    perform METTI-IN-GRIGLIA
                 end-perform
           end-start.
           move como-tot-pz    to lab-pz-buf.
           move como-tot-colli to lab-colli-buf.
           display lab-pz lab-colli 
           .
      * <TOTEM:END>

       SALVA.
      * <TOTEM:PARA. SALVA>
           initialize como-ordini.

           inquire gd-r, last-row in tot-righe.
           perform varying riga from 2 by 1 until riga > tot-righe
              inquire gd-r(riga, 1), hidden-data in gruppo-hidden
              move hid-chiave to reva-chiave
              read reva no lock
                   invalid
                   display message "ERRORE!!!"
                            x"0d0a""Chiave: " reva-chiave " non trovata"
                            x"0d0a""Contattare assistenza!"
                             title tit-err
                              icon 3
               not invalid
                  perform AGGIORNA-RIGA
              end-read
           end-perform.


           perform CONTA-RIGHE
           if no-righe
              perform CANC-EFFETTIVA
           else
              perform AGGIORNA-ORDINI
           end-if

           unlock teva     all records.
           unlock reva     all records.
           unlock rordforn all records.
           move 0 to mod.
           modify tool-modifica, value = mod.
           read teva no lock invalid continue end-read.
           perform ABILITAZIONI.

           perform RIEMPI-GRID.

           set RicaricaGrid of gbozze-linkage  to true
           if teva-aperta
              move 1      to e-cambia-rif
           else
              move zero   to e-cambia-rif
           end-if
           modify pb-cambia-rif, ENABLED e-cambia-rif
           set HoSalvato to true    
           .
      * <TOTEM:END>

       SCRIVI-RORDFORN.
      * <TOTEM:PARA. SCRIVI-RORDFORN>
      *     move reva-qta                 to rof-qta-evasa
           add reva-qta                 to rof-qta-evasa

           accept rof-data-ultima-modifica from century-date
           accept rof-ora-ultima-modifica  from time
           move user-codi to rof-utente-ultima-modifica
           rewrite rof-rec invalid continue end-rewrite
           unlock rordforn all records.


           |Adesso devo togliere dall'ordinato
           move tof-causale      to link-causale.
           set link-update       to true.
           move rof-prg-chiave   to link-key.
           move tof-mese-rif     to link-mese-rif.
           move tof-chiave       to link-chiave-origine.
           move user-codi to link-user of link-wprogmag.

           compute link-valore = rof-qta-ord - rof-qta-evasa.

           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.

           if link-valore > 0
              move "0000000000000000" to link-array
              move 1                  to multiplyer(3)
              call   "wprogmag" using link-wprogmag
              cancel "wprogmag"
           end-if
                                                        
      *    Dopodiché aumento direttamente la qta alla giacenza
           move reva-chiave-progmag to link-key.
           move reva-qta            to link-valore.
           move "1000000000000010"  to link-array.
      *     move 1 to multiplyer(1)
           call   "wprogmag"   using link-wprogmag.
           cancel "wprogmag" 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire gd-r, last-row in tot-righe.
           move event-data-2 to riga.
           if riga < 2 move 2 to riga end-if.
           if riga > tot-righe move tot-righe to riga end-if.
           modify gd-r, start-x = 1, x = 11,
                        start-y = riga, y = riga,
                        region-color = 144.
           inquire gd-r(riga, 1), hidden-data in gruppo-hidden.
           move hid-anno-ordf   to anno-ordf.
           move hid-numero-ordf to numero-ordf.
           move hid-riga-ordf   to riga-ordf.

           evaluate true
           when hid-tof-inserito
                move "Inserito" to lab-stato-ord-buf
           when hid-tof-inviato
                move "Inviato" to lab-stato-ord-buf
           when hid-tof-in-lavorazione
                move "In Lavorazione" to lab-stato-ord-buf
           when hid-tof-chiuso
                evaluate true 
                when hid-tof-chiusura-man
                     move "Chiuso Manualmente"      to lab-stato-ord-buf
                when hid-tof-chiusura-auto
                     move "Chiuso Automaticamente"  to lab-stato-ord-buf
                end-evaluate
           end-evaluate

           display lab-anno-ordf 
                   lab-num-ordf 
                   lab-riga-ordf 
                   lab-stato-ord 
           .
      * <TOTEM:END>

       STAMPA.
      * <TOTEM:PARA. STAMPA>
           move LinkChiave   of gbozze-linkage to stobz-da-teva-chiave.
           move LinkChiave   of gbozze-linkage to stobz-a-teva-chiave.
           call   "st-bozze" using st-bozze-linkage.
           cancel "st-bozze".


           display message box 
                          "Stampare anche i saldi ordini fornitori?"
                    type mb-yes-no
                    title titolo
                    giving scelta
           if scelta = mb-yes
              perform CARICA-ORDINI

              perform varying cont from 1 by 1 until cont > 100
                 if tab-tor-chiave(cont) = zero
                    exit perform
                 end-if
                 move tab-tor-chiave(cont) to stof-tof-chiave
                                              stof-tof-chiave-a
                 set stof-scegli-stampante to true
      *           move selprint-linkage     to stof-selprint-stampante
                 call   "st-ordforn" using st-ordforn-linkage
                 cancel "st-ordforn"
              end-perform
           end-if.


      ***---
       CARICA-ORDINI.
           initialize tab-ordini

           move teva-chiave  to reva-chiave-testa
           move low-value    to reva-riga
           start reva key not < reva-chiave
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read reva next no lock
                       at end
                          exit perform
                    end-read
                    if teva-chiave not = reva-chiave-testa
                       exit perform
                    end-if

                    perform varying cont from 1 by 1 until cont > 100
                       if tab-tor-chiave(cont) = reva-chiave-testa-ordf
                          exit perform
                       else
                          if tab-tor-chiave(cont) = zero
                             move reva-chiave-testa-ordf 
                                            to tab-tor-chiave(cont)
                             exit perform
                          end-if
                       end-if
                    end-perform
                 end-perform
           end-start 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           move spaces to tge-anno.
           open input tparamge.
           move spaces to tge-codice.
           read tparamge no lock invalid continue end-read.
           close tparamge 
           .
      * <TOTEM:END>
       accetordforn-Ev-After-Program.
      * <TOTEM:PARA. accetordforn-Ev-After-Program>
           if HoSalvato
              call   "tprev-elab" using user-codi
              cancel "tprev-elab"
           end-if 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Entry>
           if mod = 0
              set event-action to event-action-fail
           else
              if hid-tof-chiuso and hid-tof-chiusura-man 
                 set event-action to event-action-fail
              else
                 |09/04/2015: non modificare le imposte
                 if event-data-1 >= 8
                    set event-action to event-action-fail
                 else
                    perform BEGIN-ENTRY-CODE
                 end-if
              end-if
           end-if 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       TOOL-SALVA-LinkTo.
      * <TOTEM:PARA. TOOL-SALVA-LinkTo>
           inquire tool-salva, enabled e-salva.
           if e-salva = 1
              perform SALVA
           end-if 
           .
      * <TOTEM:END>
       ANTEPRIMA-LinkTo.
      * <TOTEM:PARA. ANTEPRIMA-LinkTo>
           .
      * <TOTEM:END>
       TOOL-MODIFICA-BeforeProcedure.
      * <TOTEM:PARA. TOOL-MODIFICA-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       TOOL-MODIFICA-AfterProcedure.
      * <TOTEM:PARA. TOOL-MODIFICA-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       TOOL-MODIFICA-LinkTo.
      * <TOTEM:PARA. TOOL-MODIFICA-LinkTo>
           INQUIRE TOOL-MODIFICA, ENABLED IN E-MODIFICA.

           IF E-MODIFICA = 1
              PERFORM MODIFICA
           END-IF 
           .
      * <TOTEM:END>
       STAMPA-LinkTo.
      * <TOTEM:PARA. STAMPA-LinkTo>
           perform STAMPA 
           .
      * <TOTEM:END>
       TOOL-CANCELLA-LinkTo.
      * <TOTEM:PARA. TOOL-CANCELLA-LinkTo>
           INQUIRE TOOL-CANCELLA, ENABLED IN E-CANCELLA.

           IF E-CANCELLA = 1
              PERFORM CANCELLA
           END-IF 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Finish-Entry>
           perform FINISH-ENTRY-CODE

           .
      * <TOTEM:END>
       pb-stato-BeforeProcedure.
      * <TOTEM:PARA. pb-stato-BeforeProcedure>
           if teva-aperta
              modify pb-stato, bitmap-number 4
           else
              modify pb-stato, bitmap-number 2
           end-if 
           .
      * <TOTEM:END>
       pb-stato-AfterProcedure.
      * <TOTEM:PARA. pb-stato-AfterProcedure>
           if teva-aperta
              modify pb-stato, bitmap-number 3
           else
              modify pb-stato, bitmap-number 1
           end-if 
           .
      * <TOTEM:END>
       pb-stato-LinkTo.
      * <TOTEM:PARA. pb-stato-LinkTo>
           if teva-aperta
              display message "Chiudere la bozza?"
                        title titolo
                         type mb-yes-no
                       giving scelta
              if scelta = mb-yes
                 set tutto-ok to true
                 perform READ-RECORD-LOCK
                 if RecLocked
                    set errori to true
                    display message "Chiusura NON effettuata"
                              title tit-err
                               icon 2
                 end-if
                 if tutto-ok
                    perform SCR-MOVIM-OPEN-ROUTINE
                    if anno = 0 or numero = 0
                       display message "Chiusura NON effettuata"
                                 title tit-err
                                  icon 2
                    else
                       move anno   to teva-anno-movim
                       move numero to teva-num-movim
                       set teva-chiusa  to true
                       accept teva-data-ch-man from century-date
                       move   user-codi to teva-utente-ch-man
                       rewrite teva-rec
                       unlock teva all records
                    end-if
                 end-if
              end-if
           else
              display message "Riaprire la bozza?"
                        title titolo
                         type mb-yes-no
                       giving scelta
              if scelta = mb-yes
                 set tutto-ok to true
                 perform READ-TMOVMAG-LOCK
                 if tutto-ok
                    move low-value  to rmo-rec
                    move tmo-chiave to rmo-chiave
                    start rmovmag key >= rmo-chiave
                          invalid continue
                      not invalid
                          perform until 1 = 2
                             read rmovmag next 
                                  at end exit perform 
                             end-read
                             if rmo-anno  not = tmo-anno or
                                rmo-movim not = tmo-numero
                                exit perform
                             end-if
                             if rmo-anno-eva = teva-anno and
                                rmo-num-eva  = teva-numero
                                initialize rmo-chiave-eva
                                rewrite rmo-rec
                             end-if
                          end-perform
                    end-start
                    initialize tmo-teva-chiave
                    rewrite tmo-rec
                    unlock tmovmag all records
                 end-if
                 if errori
                    display message "Chiusura NON effettuata"
                              title tit-err
                               icon 2
                 else
                    if mod = 0
                       perform READ-RECORD-LOCK
                       if RecLocked
                          set errori to true
                          display message "Chiusura NON effettuata"
                                    title tit-err
                                     icon 2
                       end-if
                    end-if
                    if tutto-ok
                       set teva-aperta to true
                       initialize teva-k-mov
                       rewrite teva-rec
                    end-if
                 end-if
              end-if
           end-if.

           if tutto-ok
              initialize lab-stato-buf
              if teva-aperta
                 move "APERTA" to lab-stato-buf
                 modify pb-stato, bitmap-number 4
                 move 1         to e-cambia-rif
              else
                 modify pb-stato, bitmap-number 2
                 move teva-num-movim to numero-z
                 move numero-z       to numero-x
                 inspect numero-x replacing leading x"30" by x"20"
                 call "C$JUSTIFY" using numero-x
                 string "CHIUSA: "      delimited size
                        teva-anno-movim delimited size
                        " - "           delimited size
                        numero-x        delimited size
                        into lab-stato-buf
                 end-string
                 move zero   to e-cambia-rif
              end-if

              if teva-chiusa
                 move 1 to livello-abil 
                 modify pb-movim, visible 1
              else
                 move 2 to livello-abil
                 modify pb-movim, visible 0
              end-if

              display lab-stato
              perform ABILITAZIONI
              unlock teva     all records
              unlock reva     all records
              unlock rordforn all records
              move 0 to mod
              modify tool-modifica, value = mod
              modify pb-cambia-rif, ENABLED e-cambia-rif
           end-if 
           .
      * <TOTEM:END>
       ef-anno-BeforeProcedure.
      * <TOTEM:PARA. ef-anno-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-num-BeforeProcedure.
      * <TOTEM:PARA. ef-num-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-anno-AfterProcedure.
      * <TOTEM:PARA. ef-anno-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-num-AfterProcedure.
      * <TOTEM:PARA. ef-num-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       pb-fatto-BeforeProcedure.
      * <TOTEM:PARA. pb-fatto-BeforeProcedure>
           modify pb-fatto, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-fatto-AfterProcedure.
      * <TOTEM:PARA. pb-fatto-AfterProcedure>
           modify pb-fatto, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-fatto-LinkTo.
      * <TOTEM:PARA. pb-fatto-LinkTo>
           inquire ef-anno, value in anno.
           inquire ef-num,  value in numero.
           if anno not = 0 and numero not = 0
              move anno   to tmo-anno
              move numero to tmo-numero
              read tmovmag no lock 
                   invalid
                   display message "Movimento inesistente"
                             title tit-err
                              icon 2
               not invalid
                   move 27 to key-status
              end-read
           else
              move 27 to key-status
           end-if 
           .
      * <TOTEM:END>
       pb-elenco-LinkTo.
      * <TOTEM:PARA. pb-elenco-LinkTo>
           display message "Elenco movimenti?"
                      title titolo
                       icon 2
                       type mb-yes-no
                     giving scelta
           if scelta = mb-yes
              move "tmovmag-clifor" to como-file

              set tmo-fornitore   to true
              call "zoom-gt"   using como-file, tmo-rec
                              giving stato-zoom
              cancel "zoom-gt"
              if stato-zoom = 0
                 move tmo-anno   to anno   ef-anno-buf
                 move tmo-numero to numero ef-num-buf
                 display ef-anno
                 display ef-num
              end-if
           end-if 
           .
      * <TOTEM:END>
       pb-movim-BeforeProcedure.
      * <TOTEM:PARA. pb-movim-BeforeProcedure>
           modify pb-movim, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-movim-AfterProcedure.
      * <TOTEM:PARA. pb-movim-AfterProcedure>
           modify pb-movim, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-movim-LinkTo.
      * <TOTEM:PARA. pb-movim-LinkTo>
           modify form1-handle, visible   false.
           move "gbozze"        to LinkPgm    of gordcvar-linkage.
           call   "gmovcvar" using lk-blockpgm, 
                                   user-codi,
                                   1,
                                   teva-k-mov,
                                   0.

           cancel "gmovcvar".
           modify form1-handle, visible true 
           .
      * <TOTEM:END>
       pb-ordfor-BeforeProcedure.
      * <TOTEM:PARA. pb-ordfor-BeforeProcedure>
           modify pb-ordfor, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-ordfor-AfterProcedure.
      * <TOTEM:PARA. pb-ordfor-AfterProcedure>
           modify pb-ordfor, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-ordfor-LinkTo.
      * <TOTEM:PARA. pb-ordfor-LinkTo>
           modify form1-handle, visible   false.
           move anno-ordf   to LinkAnno   of gordcvar-linkage.
           move numero-ordf to LinkNumero of gordcvar-linkage.
           move "gbozze"    to LinkPgm    of gordcvar-linkage.
           call   "gordfornvar" using lk-blockpgm, 
                                      user-codi,
                                      1,
                                      gordcvar-linkage.
           cancel "gordfornvar".
           modify form1-handle, visible true 
           .
      * <TOTEM:END>
       pb-cambia-rif-LinkTo.
      * <TOTEM:PARA. pb-cambia-rif-LinkTo>
           move hid-chiave   to cror-reva-chiave
           call "cambia-rif-ord-reva" using cambia-rif-ord-reva-linkage
                                            LK-BLOCKPGM
                                            USER-CODI
                                            LIVELLO-ABIL
           cancel "cambia-rif-ord-reva" 

           if cror-ricarica
              move riga      to save-riga
              perform RIEMPI-GRID
              move save-riga to event-data-2
              perform SPOSTAMENTO
              modify gd-r, CURSOR-X riga
                           cursor-y colonna
           end-if
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

