      *{TOTEM}PRG-COMMENT
      * gpgmexe.Cbl
      * gpgmexe.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          gpgmexe.
       AUTHOR.              andre.
       DATE-WRITTEN.        venerdì 24 novembre 2023 18:34:49.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:gpgmexe, INIT:gpgmexe, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "pgmexe.sl".
           COPY "USER.sl".
           COPY "pass.sl".
           COPY "fileseq.sl".
           COPY "PROG.sl".
           COPY "tmp-cpu.sl".
           COPY "tsetinvio.sl".
           COPY "lineseq-mail.sl".
           COPY "lineseq.sl".
           COPY "lineseq.sl"
                REPLACING ==lineseq== BY ==lineseq1==,
                          ==STATUS-lineseq== BY ==STATUS-lineseq1==
                .
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "pgmexe.fd".
           COPY "USER.fd".
           COPY "pass.fd".
           COPY "fileseq.fd".
           COPY "PROG.fd".
           COPY "tmp-cpu.fd".
           COPY "tsetinvio.fd".
           COPY "lineseq-mail.fd".
           COPY "lineseq.fd".
           COPY "lineseq.fd"
                REPLACING ==lineseq== BY ==lineseq1==,
                          ==STATUS-lineseq== BY ==STATUS-lineseq1==
                .
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Geslux - Elenco Programmi Aperti". 
           COPY  "LINK-PASSWD.DEF".
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0.
       77 messaggio        PIC  x(75).
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 rec-grid.
           05 col-nulla        PIC  X.
           05 col-pid          PIC  X(10).
           05 col-utente       PIC  x(10).
           05 col-nome         PIC  x(30).
           05 col-postazione   PIC  x(12).
           05 col-pgm          PIC  x(30).
           05 col-data         PIC  x(10).
           05 col-ora          PIC  x(5).
       77 v-screen         PIC  9
                  VALUE IS 0.
       77 form1-handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 font-evidenzia-griglia
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 STATUS-pgmexe    PIC  X(2).
           88 Valid-STATUS-pgmexe VALUE IS "00" THRU "09". 
       77 refresh-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-USER      PIC  X(2).
           88 Valid-STATUS-USER VALUE IS "00" THRU "09". 
       77 Verdana14BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 v-evadi          PIC  9
                  VALUE IS 1.
       77 path-txt         PIC  X(256).
       77 STATUS-pass      PIC  X(2).
           88 Valid-STATUS-pass VALUE IS "00" THRU "09". 
       77 ScreenPass-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 password         PIC  x(100).
       77 path-fileseq     PIC  X(256).
       77 STATUS-fileseq   PIC  X(2).
           88 Valid-STATUS-fileseq VALUE IS "00" THRU "09". 
       77 STRIP-GRID-GCLIENTI-BMP      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 mod-campi        PIC  9
                  VALUE IS 1.
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 elemento-bmp     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS ZERO.
       77 v-cancella       PIC  9
                  VALUE IS 1.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 bottone-elimina-bmp          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-password-bmp         PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 ScreenGestPass-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 new-password     PIC  x(15).
       77 conf-password    PIC  x(15).
       77 STAT-PROG        PIC  X(2).
           88 Valid-STAT-PROG VALUE IS "00" THRU "09". 
       77 path-tmp-cpu     PIC  X(256).
       77 STATUS-tmp-cpu   PIC  X(2).
           88 Valid-STATUS-tmp-cpu VALUE IS "00" THRU "09". 
       77 STATUS-tsetmerc  PIC  X(2).
           88 Valid-STATUS-tsetmerc VALUE IS "00" THRU "09". 
       77 STATUS-tsetinvio PIC  X(2).
           88 Valid-STATUS-tsetinvio VALUE IS "00" THRU "09". 
       77 path-lineseq-mail            PIC  X(256).
       77 STATUS-lineseq-mail          PIC  X(2).
           88 Valid-STATUS-lineseq-mail VALUE IS "00" THRU "09". 
       77 STATUS-lineseq1  PIC  X(2).
           88 VALID-STATUS-lineseq1 VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-form1-FLAG-REFRESH PIC  9.
          88 form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-ScreenPass-FLAG-REFRESH PIC  9.
          88 ScreenPass-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-ScreenGestPass-FLAG-REFRESH PIC  9.
          88 ScreenGestPass-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-pgmexe-BUF     PIC X(131).
       77 TMP-DataSet1-USER-BUF     PIC X(1015).
       77 TMP-DataSet1-pass-BUF     PIC X(1000).
       77 TMP-DataSet1-fileseq-BUF     PIC X(32000).
       77 TMP-DataSet1-PROG-BUF     PIC X(676).
       77 TMP-DataSet1-tmp-cpu-BUF     PIC X(33).
       77 TMP-DataSet1-tsetinvio-BUF     PIC X(1023).
       77 TMP-DataSet1-lineseq-mail-BUF     PIC X(1000).
       77 TMP-DataSet1-lineseq-BUF     PIC X(1000).
       77 TMP-DataSet1-lineseq1-BUF     PIC X(1000).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-pgmexe-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-pgmexe-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-pgmexe-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-pgmexe-KEY1-Asc  VALUE "A".
          88 DataSet1-pgmexe-KEY1-Desc VALUE "D".
       77 DataSet1-USER-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-USER-LOCK  VALUE "Y".
       77 DataSet1-USER-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-USER-KEY-Asc  VALUE "A".
          88 DataSet1-USER-KEY-Desc VALUE "D".
       77 DataSet1-pass-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-pass-LOCK  VALUE "Y".
       77 DataSet1-pass-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-pass-KEY-Asc  VALUE "A".
          88 DataSet1-pass-KEY-Desc VALUE "D".
       77 DataSet1-fileseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-fileseq-LOCK  VALUE "Y".
       77 DataSet1-fileseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-fileseq-KEY-Asc  VALUE "A".
          88 DataSet1-fileseq-KEY-Desc VALUE "D".
       77 DataSet1-PROG-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PROG-LOCK  VALUE "Y".
       77 DataSet1-PROG-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PROG-KEY-Asc  VALUE "A".
          88 DataSet1-PROG-KEY-Desc VALUE "D".
       77 DataSet1-tmp-cpu-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-cpu-LOCK  VALUE "Y".
       77 DataSet1-tmp-cpu-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-cpu-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-cpu-KEY-Desc VALUE "D".
       77 DataSet1-tsetinvio-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tsetinvio-LOCK  VALUE "Y".
       77 DataSet1-tsetinvio-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tsetinvio-KEY-Asc  VALUE "A".
          88 DataSet1-tsetinvio-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-mail-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-mail-LOCK  VALUE "Y".
       77 DataSet1-lineseq-mail-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-mail-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-mail-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-lineseq1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq1-LOCK  VALUE "Y".
       77 DataSet1-lineseq1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq1-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq1-KEY-Desc VALUE "D".


           copy "mail.def".
           COPY "link-killpid.def".
           copy "blockpgm.lks".

       01                          pic 9.
           88 si-blocchi           value 1 false zero.
       01                          pic 9.
           88 no-pgm               value 1 false zero.
       01                          pic 9.
           88 rec-ok               value 1 false zero.
       01                          pic 9.
           88 si-cancellazione     value 1 false zero.
       01                          pic 9.
           88 spostamento-frecce   value 1 false zero.
       01                          pic 9.
           88 si-gest-sessioni     value 1 false zero.
       01                          pic 9.
           88 called-by-menu       value 1 false zero.

       77  save-pwd             pic x(100).

       77  como-stringa   pic x(200).

       01  r-inizio pic x(25).
      *     05 filler      pic x(2)  value " [".
      *     05 r-user      pic x(10).
      *     05 filler      pic x(5)  value "] - [".
      *     05 r-data.
      *        10 r-gg     pic xx.
      *        10 filler   pic x     value "/".
      *        10 r-mm     pic xx.
      *        10 filler   pic x     value "/".
      *        10 r-aa     pic xx.
      *     05 filler      pic x(5)  value "] - [".
      *     05 r-ora.
      *        10 r-hh     pic xx.
      *        10 filler   pic x     value X"22".
      *        10 r-min    pic xx.
      *        10 filler   pic x     value "'".
      *        10 r-sec    pic xx.
      *     05 filler      pic x(2)  value "] ".


       01  operazione                    pic 9.
           88 pwd-errata                 value 1.
           88 pwd-corretta               value 2.
           88 record-cancellato          value 3.
           88 reset-pwd                  value 4.
           88 uscita-cacancellazione     value 5.
           88 aggiorna-elenco            value 6.
           88 invio-mail-fallito         value 7.
           88 pwd-changed                value 8.
           88 ingresso-cacancellazione   value 9.
           88 eliminazione-orfani        value 0.

       77  pid-sessione   pic 9(10).
       77  pid-sessione-x pic x(10).

       78  78-color-sessione value 481.
       78  78-color-1        value 513.
       78  78-color-2        value 257.

       01              pic 9.
           88 color-1  value 1.
           88 color-2  value 2.

       77  old-pid     pic 9(10).

       01  rec-pid.
           05 rp-nome-exe       pic x(50).
           05 rp-pid            pic x(50).

       77  path-kill            pic x(256).
       77  como-path-tasklist   pic x(256).
       77  comando              pic x(200).
       77 status-call           USAGE IS SIGNED-SHORT.

       77  1-riga-gruppo        pic 9(4).
       77  riga-gruppo          pic 9(4).
       77  riga-origine         pic 9(4).

       77  como-colore          pic 9(8).
       77  col-pid-ed           pic z(10).

       77  como-x               pic x.  

       01              pic x.
           88 avanti   value "A".
           88 indietro value "I".

       78  78-nome-pgm-menu value "gestsessioni".
       77  CALLING-PROGRAM   pic x(20).

       01 file-info.
           05 file-size        PIC  X(8) COMP-X.
           05 file-date        PIC  9(8) COMP-X.
           05 file-time        PIC  9(8) COMP-X.

       77  status-code  signed-short.
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-pass VALUE 5001.
       78  78-ID-ef-old-pass VALUE 5001.
       78  78-ID-ef-new-pass VALUE 5002.
       78  78-ID-ef-conf-pass VALUE 5003.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-GPGMEXE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           form1, 
           HELP-ID 1,
           .

      * FRAME
       05
           Screen1-Fr-2a, 
           Frame, 
           COL 1,00, 
           LINE 42,50,
           LINES 4,90 CELLS,
           SIZE 92,00 CELLS,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUI, 
           Push-Button, 
           COL 76,80, 
           LINE 43,60,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           VISIBLE v-evadi,
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           PB-CANCEL, 
           Push-Button, 
           COL 84,60, 
           LINE 43,60,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Cancel",
           AFTER PROCEDURE Form1-Pb-2-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2-BeforeProcedure, 
           .

      * GRID
       05
           form1-gd-1, 
           Grid, 
           COL 2,10, 
           LINE 2,00,
           LINES 35,50 CELLS,
           SIZE 90,00 CELLS,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 2, 12, 22, 52, 64, 94, 104),
           ALIGNMENT ("U", "C", "L", "L", "L", "L", "C", "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 261,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS Verdana12B-Occidentale,
           HSCROLL,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE scr-visua-Gd-1-Event-Proc,
           .

      * LABEL
       05
           scr-visua-La-1, 
           Label, 
           COL 2,10, 
           LINE 39,00,
           LINES 3,10 CELLS,
           SIZE 90,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana14BI-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "ATTENDERE LA CHIUSURA DELLE SESSIONI",
           VISIBLE v-evadi,
           .

      * PUSH BUTTON
       05
           pb-grid-elimina, 
           Push-Button, 
           COL 80,00, 
           LINE 39,00,
           LINES 3,70 ,
           SIZE 8,10 ,
           BITMAP-HANDLE BOTTONE-ELIMINA-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1005,
           FLAT,
           ID IS 1001,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           TITLE "&Elimina la riga selezionata",
           VISIBLE v-cancella,
           AFTER PROCEDURE pb-grid-elimina-AfterProcedure, 
           BEFORE PROCEDURE pb-grid-elimina-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-reset, 
           Push-Button, 
           COL 88,30, 
           LINE 39,00,
           LINES 30,00 ,
           SIZE 30,00 ,
           BITMAP-HANDLE REFRESH-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 5,
           FLAT,
           ID IS 502,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "&Aggiorna l'elenco delle sessioni",
           .

      * PUSH BUTTON
       05
           pb-gestpwd, 
           Push-Button, 
           COL 2,10, 
           LINE 39,00,
           LINES 3,70 ,
           SIZE 8,10 ,
           BITMAP-HANDLE BOTTONE-PASSWORD-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1006,
           FLAT,
           FONT IS Small-Font,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Gestione password",
           VISIBLE 0,
           AFTER PROCEDURE pb-gestpwd-AfterProcedure, 
           BEFORE PROCEDURE pb-gestpwd-BeforeProcedure, 
           .

      * FORM
       01 
           ScreenPass, 
           BEFORE PROCEDURE ScreenPass-BeforeProcedure,
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 1,50, 
           LINE 1,38,
           LINES 3,00 ,
           SIZE 38,00 ,
           RAISED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * ENTRY FIELD
       05
           ef-pass, 
           Entry-Field, 
           COL 11,50, 
           LINE 2,38,
           LINES 1,50 ,
           SIZE 26,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-pass,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SECURE,
           VALUE password,
           AFTER PROCEDURE ef-pass-AfterProcedure, 
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 2,50, 
           LINE 2,38,
           LINES 1,31 ,
           SIZE 8,00 ,
           COLOR IS 5,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Password",
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 5,90, 
           LINE 4,67,
           LINES 0,94 ,
           SIZE 2,00 ,
           ID IS 9,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * FRAME
       05
           Screen1-Fr-2, 
           Frame, 
           COL 1,00, 
           LINE 5,06,
           LINES 2,78 ,
           SIZE 38,80 ,
           LOWERED,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-conferma, 
           Push-Button, 
           COL 23,90, 
           LINE 5,73,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 13,
           FLAT,
           ID IS 6,
           SELF-ACT,
           OK-BUTTON,
           TITLE "&Ok",
           AFTER PROCEDURE pb-conferma-AfterProcedure, 
           BEFORE PROCEDURE pb-conferma-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-esci, 
           Push-Button, 
           COL 31,70, 
           LINE 5,73,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 7,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci (Esc)",
           AFTER PROCEDURE pb-esci-AfterProcedure, 
           BEFORE PROCEDURE pb-esci-BeforeProcedure, 
           .

      * FORM
       01 
           ScreenGestPass, 
           BEFORE PROCEDURE ScreenGestPass-BeforeProcedure,
           .

      * FRAME
       05
           Screen1-Fr-1a, 
           Frame, 
           COL 1,50, 
           LINE 1,39,
           LINES 9,00 ,
           SIZE 38,00 ,
           RAISED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * ENTRY FIELD
       05
           ef-old-pass, 
           Entry-Field, 
           COL 11,50, 
           LINE 2,39,
           LINES 1,50 ,
           SIZE 26,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-old-pass,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SECURE,
           VALUE password,
           AFTER PROCEDURE ef-pass-AfterProcedure, 
           .

      * LABEL
       05
           Screen1-La-1a, 
           Label, 
           COL 2,50, 
           LINE 2,19,
           LINES 2,00 ,
           SIZE 8,00 ,
           COLOR IS 5,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Vecchia Password",
           .

      * LABEL
       05
           Screen1-La-1aa, 
           Label, 
           COL 2,50, 
           LINE 5,19,
           LINES 2,00 ,
           SIZE 8,00 ,
           COLOR IS 5,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Nuova Password",
           .

      * ENTRY FIELD
       05
           ef-new-pass, 
           Entry-Field, 
           COL 11,50, 
           LINE 5,39,
           LINES 1,50 ,
           SIZE 26,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-new-pass,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SECURE,
           VALUE new-password,
           AFTER PROCEDURE ef-pass-AfterProcedure, 
           .

      * LABEL
       05
           Screen1-La-1aaa, 
           Label, 
           COL 2,50, 
           LINE 8,19,
           LINES 2,00 ,
           SIZE 8,00 ,
           COLOR IS 5,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Conferma Password",
           .

      * ENTRY FIELD
       05
           ef-conf-pass, 
           Entry-Field, 
           COL 11,50, 
           LINE 8,39,
           LINES 1,50 ,
           SIZE 26,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-conf-pass,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SECURE,
           VALUE conf-password,
           AFTER PROCEDURE ef-pass-AfterProcedure, 
           .

      * FRAME
       05
           Screen1-Fr-2b, 
           Frame, 
           COL 1,00, 
           LINE 11,00,
           LINES 2,78 ,
           SIZE 38,80 ,
           LOWERED,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-conf-pwd, 
           Push-Button, 
           COL 23,90, 
           LINE 11,67,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 8,
           SELF-ACT,
           TITLE "&Ok",
           AFTER PROCEDURE pb-conf-pwd-AfterProcedure, 
           BEFORE PROCEDURE pb-conf-pwd-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-canc-pwd, 
           Push-Button, 
           COL 31,70, 
           LINE 11,67,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 9,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci (Esc)",
           AFTER PROCEDURE pb-canc-pwd-AfterProcedure, 
           BEFORE PROCEDURE pb-canc-pwd-BeforeProcedure, 
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING gpgmexe-linkage.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:gpgmexe, INIT:gpgmexe, BeforeDeclarative>

       copy "mail-decl.cpy".

      ***---
       LINESEQ-ERR SECTION.
           use after error procedure on lineseq.
           continue.
           
      ***---
       PGMEXE-ERR SECTION.
           use after error procedure on PGMEXE.
           set tutto-ok  to true.
           evaluate status-pgmexe
           when "35"
                display message "File [PGMEXE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PGMEXE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PGMEXE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
       PASS-ERR SECTION.
           use after error procedure on pass.
           set RecLocked to false.
           evaluate status-pass
           when "35"
                set errori to true
           when "39"
                display message "File [PASS] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PASS] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      ***---
       FILESEQ-ERR SECTION.
           use after error procedure on FILESEQ.
           set RecLocked to false.
           evaluate STATUS-fileseq
           when "35"
      *    durante il programma apro in extend il file, se non eiste lo 
      *    devo creare
                open output fileseq
           when "39"
                display message "File [PASS] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PASS] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM stbolle-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:gpgmexe, INIT:gpgmexe, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana14BI-Occidentale
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-ELIMINA-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, REFRESH-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-PASSWORD-BMP
      *    After-Program
           PERFORM stbolle-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana14BI-Occidentale
           INITIALIZE WFONT-DATA Verdana14BI-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana14BI-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * PB-ESEGUI
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * PB-CANCEL
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * pb-grid-elimina
           COPY RESOURCE "BOTTONE-ELIMINA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-ELIMINA.BMP", 
                   GIVING BOTTONE-ELIMINA-BMP.
      * pb-reset
           COPY RESOURCE "REFRESH.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "REFRESH.BMP", 
                   GIVING REFRESH-BMP.
      * pb-gestpwd
           COPY RESOURCE "BOTTONE-PASSWORD.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-PASSWORD.BMP", 
                   GIVING BOTTONE-PASSWORD-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-pgmexe
      *    USER OPEN MODE IS FALSE
      *    PERFORM OPEN-USER
      *    pass OPEN MODE IS FALSE
      *    PERFORM OPEN-pass
      *    fileseq OPEN MODE IS FALSE
      *    PERFORM OPEN-fileseq
      *    PROG OPEN MODE IS FALSE
      *    PERFORM OPEN-PROG
      *    tmp-cpu OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-cpu
      *    tsetinvio OPEN MODE IS FALSE
      *    PERFORM OPEN-tsetinvio
      *    lineseq-mail OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq-mail
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    lineseq1 OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq1
      *    After Open
           .

       OPEN-pgmexe.
      * <TOTEM:EPT. INIT:gpgmexe, FD:pgmexe, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O pgmexe
           IF STATUS-pgmexe = "35"
              OPEN OUTPUT pgmexe
                IF Valid-STATUS-pgmexe
                   CLOSE pgmexe
                   OPEN I-O pgmexe
                END-IF
           END-IF
           IF NOT Valid-STATUS-pgmexe
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:pgmexe, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-USER.
      * <TOTEM:EPT. INIT:gpgmexe, FD:USER, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT USER
           IF NOT Valid-STATUS-USER
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:USER, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-pass.
      * <TOTEM:EPT. INIT:gpgmexe, FD:pass, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT pass
           IF NOT Valid-STATUS-pass
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:pass, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-fileseq.
      * <TOTEM:EPT. INIT:gpgmexe, FD:fileseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  EXTEND fileseq
           IF NOT Valid-STATUS-fileseq
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:fileseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PROG.
      * <TOTEM:EPT. INIT:gpgmexe, FD:PROG, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT PROG
           IF NOT Valid-STAT-PROG
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:PROG, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-cpu.
      * <TOTEM:EPT. INIT:gpgmexe, FD:tmp-cpu, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tmp-cpu
           IF STATUS-tmp-cpu = "35"
              OPEN OUTPUT tmp-cpu
                IF Valid-STATUS-tmp-cpu
                   CLOSE tmp-cpu
                   OPEN I-O tmp-cpu
                END-IF
           END-IF
           IF NOT Valid-STATUS-tmp-cpu
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:tmp-cpu, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tsetinvio.
      * <TOTEM:EPT. INIT:gpgmexe, FD:tsetinvio, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tsetinvio
           IF STATUS-tsetinvio = "35"
              OPEN OUTPUT tsetinvio
                IF Valid-STATUS-tsetinvio
                   CLOSE tsetinvio
                   OPEN I-O tsetinvio
                END-IF
           END-IF
           IF NOT Valid-STATUS-tsetinvio
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:tsetinvio, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq-mail.
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq-mail, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq-mail
           IF NOT Valid-STATUS-lineseq-mail
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq-mail, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  EXTEND lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq1.
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq1, BeforeOpen>
      * <TOTEM:END>
           OPEN  EXTEND lineseq1
           IF NOT VALID-STATUS-lineseq1
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq1, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-pgmexe
      *    USER CLOSE MODE IS FALSE
      *    PERFORM CLOSE-USER
      *    pass CLOSE MODE IS FALSE
      *    PERFORM CLOSE-pass
      *    fileseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-fileseq
      *    PROG CLOSE MODE IS FALSE
      *    PERFORM CLOSE-PROG
      *    tmp-cpu CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-cpu
      *    tsetinvio CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tsetinvio
      *    lineseq-mail CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq-mail
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    lineseq1 CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq1
      *    After Close
           .

       CLOSE-pgmexe.
      * <TOTEM:EPT. INIT:gpgmexe, FD:pgmexe, BeforeClose>
      * <TOTEM:END>
           CLOSE pgmexe
           .

       CLOSE-USER.
      * <TOTEM:EPT. INIT:gpgmexe, FD:USER, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-pass.
      * <TOTEM:EPT. INIT:gpgmexe, FD:pass, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-fileseq.
      * <TOTEM:EPT. INIT:gpgmexe, FD:fileseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-PROG.
      * <TOTEM:EPT. INIT:gpgmexe, FD:PROG, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-cpu.
      * <TOTEM:EPT. INIT:gpgmexe, FD:tmp-cpu, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tsetinvio.
      * <TOTEM:EPT. INIT:gpgmexe, FD:tsetinvio, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq-mail.
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq-mail, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq1.
      * <TOTEM:EPT. INIT:gpgmexe, FD:lineseq1, BeforeClose>
      * <TOTEM:END>
           .

       DataSet1-pgmexe-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 MOVE Low-Value TO pge-chiave
              ELSE
                 MOVE High-Value TO pge-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-pgmexe-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 MOVE High-Value TO pge-chiave
              ELSE
                 MOVE Low-Value TO pge-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-pgmexe-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-pgmexe-KEY1-ORDER
           END-EVALUATE
           .

      * pgmexe
       DataSet1-pgmexe-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 START pgmexe KEY >= pge-chiave
              ELSE
                 START pgmexe KEY <= pge-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-pgmexe-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 START pgmexe KEY <= pge-chiave
              ELSE
                 START pgmexe KEY >= pge-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-pgmexe-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 START pgmexe KEY > pge-chiave
              ELSE
                 START pgmexe KEY < pge-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-pgmexe-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 START pgmexe KEY < pge-chiave
              ELSE
                 START pgmexe KEY > pge-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-pgmexe-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-LOCK
                 READ pgmexe WITH LOCK 
                 KEY pge-chiave
              ELSE
                 READ pgmexe WITH NO LOCK 
                 KEY pge-chiave
              END-IF
           END-EVALUATE
           MOVE STATUS-pgmexe TO TOTEM-ERR-STAT 
           MOVE "pgmexe" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-pgmexe-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 IF DataSet1-pgmexe-LOCK
                    READ pgmexe NEXT WITH LOCK
                 ELSE
                    READ pgmexe NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-pgmexe-LOCK
                    READ pgmexe PREVIOUS WITH LOCK
                 ELSE
                    READ pgmexe PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-pgmexe TO TOTEM-ERR-STAT
           MOVE "pgmexe" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-pgmexe-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-pgmexe-KEY1-Asc
                 IF DataSet1-pgmexe-LOCK
                    READ pgmexe PREVIOUS WITH LOCK
                 ELSE
                    READ pgmexe PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-pgmexe-LOCK
                    READ pgmexe NEXT WITH LOCK
                 ELSE
                    READ pgmexe NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-pgmexe TO TOTEM-ERR-STAT
           MOVE "pgmexe" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-pgmexe-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeWrite>
      * <TOTEM:END>
           WRITE pge-rec OF pgmexe.
           MOVE STATUS-pgmexe TO TOTEM-ERR-STAT
           MOVE "pgmexe" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-pgmexe-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeRewrite>
      * <TOTEM:END>
           REWRITE pge-rec OF pgmexe.
           MOVE STATUS-pgmexe TO TOTEM-ERR-STAT
           MOVE "pgmexe" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-pgmexe-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, BeforeDelete>
      * <TOTEM:END>
           DELETE pgmexe.
           MOVE STATUS-pgmexe TO TOTEM-ERR-STAT
           MOVE "pgmexe" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pgmexe, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-USER-INITSTART.
           IF DataSet1-USER-KEY-Asc
              MOVE Low-Value TO user-chiave
           ELSE
              MOVE High-Value TO user-chiave
           END-IF
           .

       DataSet1-USER-INITEND.
           IF DataSet1-USER-KEY-Asc
              MOVE High-Value TO user-chiave
           ELSE
              MOVE Low-Value TO user-chiave
           END-IF
           .

      * USER
       DataSet1-USER-START.
           IF DataSet1-USER-KEY-Asc
              START USER KEY >= user-chiave
           ELSE
              START USER KEY <= user-chiave
           END-IF
           .

       DataSet1-USER-START-NOTGREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY <= user-chiave
           ELSE
              START USER KEY >= user-chiave
           END-IF
           .

       DataSet1-USER-START-GREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY > user-chiave
           ELSE
              START USER KEY < user-chiave
           END-IF
           .

       DataSet1-USER-START-LESS.
           IF DataSet1-USER-KEY-Asc
              START USER KEY < user-chiave
           ELSE
              START USER KEY > user-chiave
           END-IF
           .

       DataSet1-USER-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-USER-LOCK
              READ USER WITH LOCK 
              KEY user-chiave
           ELSE
              READ USER WITH NO LOCK 
              KEY user-chiave
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT 
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-pass-INITSTART.
           .

       DataSet1-pass-INITEND.
           .

       DataSet1-pass-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-pass-LOCK
              READ pass WITH LOCK 
           ELSE
              READ pass WITH NO LOCK 
           END-IF
           MOVE STATUS-pass TO TOTEM-ERR-STAT 
           MOVE "pass" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-pass-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-pass-KEY-Asc
              IF DataSet1-pass-LOCK
                 READ pass NEXT WITH LOCK
              ELSE
                 READ pass NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-pass TO TOTEM-ERR-STAT
           MOVE "pass" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-pass-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-pass-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-pass TO TOTEM-ERR-STAT
           MOVE "pass" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-pass-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-pass TO TOTEM-ERR-STAT
           MOVE "pass" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-pass-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:pass, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-pass TO TOTEM-ERR-STAT
           MOVE "pass" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:pass, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-fileseq-INITSTART.
           .

       DataSet1-fileseq-INITEND.
           .

       DataSet1-fileseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeWrite>
      * <TOTEM:END>
           WRITE rec-stampa OF fileseq.
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-fileseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-fileseq TO TOTEM-ERR-STAT
           MOVE "fileseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:fileseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-PROG-INITSTART.
           IF DataSet1-PROG-KEY-Asc
              MOVE Low-Value TO PROG-KEY OF PROG
           ELSE
              MOVE High-Value TO PROG-KEY OF PROG
           END-IF
           .

       DataSet1-PROG-INITEND.
           IF DataSet1-PROG-KEY-Asc
              MOVE High-Value TO PROG-KEY OF PROG
           ELSE
              MOVE Low-Value TO PROG-KEY OF PROG
           END-IF
           .

      * PROG
       DataSet1-PROG-START.
           IF DataSet1-PROG-KEY-Asc
              START PROG KEY >= PROG-KEY OF PROG
           ELSE
              START PROG KEY <= PROG-KEY OF PROG
           END-IF
           .

       DataSet1-PROG-START-NOTGREATER.
           IF DataSet1-PROG-KEY-Asc
              START PROG KEY <= PROG-KEY OF PROG
           ELSE
              START PROG KEY >= PROG-KEY OF PROG
           END-IF
           .

       DataSet1-PROG-START-GREATER.
           IF DataSet1-PROG-KEY-Asc
              START PROG KEY > PROG-KEY OF PROG
           ELSE
              START PROG KEY < PROG-KEY OF PROG
           END-IF
           .

       DataSet1-PROG-START-LESS.
           IF DataSet1-PROG-KEY-Asc
              START PROG KEY < PROG-KEY OF PROG
           ELSE
              START PROG KEY > PROG-KEY OF PROG
           END-IF
           .

       DataSet1-PROG-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PROG-LOCK
              READ PROG WITH LOCK 
              KEY PROG-KEY OF PROG
           ELSE
              READ PROG WITH NO LOCK 
              KEY PROG-KEY OF PROG
           END-IF
           MOVE STAT-PROG TO TOTEM-ERR-STAT 
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PROG-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PROG-KEY-Asc
              IF DataSet1-PROG-LOCK
                 READ PROG NEXT WITH LOCK
              ELSE
                 READ PROG NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PROG-LOCK
                 READ PROG PREVIOUS WITH LOCK
              ELSE
                 READ PROG PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PROG-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PROG-KEY-Asc
              IF DataSet1-PROG-LOCK
                 READ PROG PREVIOUS WITH LOCK
              ELSE
                 READ PROG PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PROG-LOCK
                 READ PROG NEXT WITH LOCK
              ELSE
                 READ PROG NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PROG-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeWrite>
      * <TOTEM:END>
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PROG-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRewrite>
      * <TOTEM:END>
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PROG-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeDelete>
      * <TOTEM:END>
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-cpu-INITSTART.
           IF DataSet1-tmp-cpu-KEY-Asc
              MOVE Low-Value TO cpu-chiave
           ELSE
              MOVE High-Value TO cpu-chiave
           END-IF
           .

       DataSet1-tmp-cpu-INITEND.
           IF DataSet1-tmp-cpu-KEY-Asc
              MOVE High-Value TO cpu-chiave
           ELSE
              MOVE Low-Value TO cpu-chiave
           END-IF
           .

      * tmp-cpu
       DataSet1-tmp-cpu-START.
           IF DataSet1-tmp-cpu-KEY-Asc
              START tmp-cpu KEY >= cpu-chiave
           ELSE
              START tmp-cpu KEY <= cpu-chiave
           END-IF
           .

       DataSet1-tmp-cpu-START-NOTGREATER.
           IF DataSet1-tmp-cpu-KEY-Asc
              START tmp-cpu KEY <= cpu-chiave
           ELSE
              START tmp-cpu KEY >= cpu-chiave
           END-IF
           .

       DataSet1-tmp-cpu-START-GREATER.
           IF DataSet1-tmp-cpu-KEY-Asc
              START tmp-cpu KEY > cpu-chiave
           ELSE
              START tmp-cpu KEY < cpu-chiave
           END-IF
           .

       DataSet1-tmp-cpu-START-LESS.
           IF DataSet1-tmp-cpu-KEY-Asc
              START tmp-cpu KEY < cpu-chiave
           ELSE
              START tmp-cpu KEY > cpu-chiave
           END-IF
           .

       DataSet1-tmp-cpu-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmp-cpu-LOCK
              READ tmp-cpu WITH LOCK 
              KEY cpu-chiave
           ELSE
              READ tmp-cpu WITH NO LOCK 
              KEY cpu-chiave
           END-IF
           MOVE STATUS-tmp-cpu TO TOTEM-ERR-STAT 
           MOVE "tmp-cpu" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-cpu-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmp-cpu-KEY-Asc
              IF DataSet1-tmp-cpu-LOCK
                 READ tmp-cpu NEXT WITH LOCK
              ELSE
                 READ tmp-cpu NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-cpu-LOCK
                 READ tmp-cpu PREVIOUS WITH LOCK
              ELSE
                 READ tmp-cpu PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmp-cpu TO TOTEM-ERR-STAT
           MOVE "tmp-cpu" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-cpu-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmp-cpu-KEY-Asc
              IF DataSet1-tmp-cpu-LOCK
                 READ tmp-cpu PREVIOUS WITH LOCK
              ELSE
                 READ tmp-cpu PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-cpu-LOCK
                 READ tmp-cpu NEXT WITH LOCK
              ELSE
                 READ tmp-cpu NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmp-cpu TO TOTEM-ERR-STAT
           MOVE "tmp-cpu" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-cpu-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeWrite>
      * <TOTEM:END>
           WRITE cpu-rec OF tmp-cpu.
           MOVE STATUS-tmp-cpu TO TOTEM-ERR-STAT
           MOVE "tmp-cpu" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-cpu-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeRewrite>
      * <TOTEM:END>
           REWRITE cpu-rec OF tmp-cpu.
           MOVE STATUS-tmp-cpu TO TOTEM-ERR-STAT
           MOVE "tmp-cpu" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-cpu-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, BeforeDelete>
      * <TOTEM:END>
           DELETE tmp-cpu.
           MOVE STATUS-tmp-cpu TO TOTEM-ERR-STAT
           MOVE "tmp-cpu" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-cpu, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-INITSTART.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE Low-Value TO tsi-chiave
           ELSE
              MOVE High-Value TO tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-INITEND.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE High-Value TO tsi-chiave
           ELSE
              MOVE Low-Value TO tsi-chiave
           END-IF
           .

      * tsetinvio
       DataSet1-tsetinvio-START.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY >= tsi-chiave
           ELSE
              START tsetinvio KEY <= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-NOTGREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY <= tsi-chiave
           ELSE
              START tsetinvio KEY >= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-GREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY > tsi-chiave
           ELSE
              START tsetinvio KEY < tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-LESS.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY < tsi-chiave
           ELSE
              START tsetinvio KEY > tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-LOCK
              READ tsetinvio WITH LOCK 
              KEY tsi-chiave
           ELSE
              READ tsetinvio WITH NO LOCK 
              KEY tsi-chiave
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT 
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeWrite>
      * <TOTEM:END>
           WRITE tsi-rec OF tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tsi-rec OF tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeDelete>
      * <TOTEM:END>
           DELETE tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-INITSTART.
           .

       DataSet1-lineseq-mail-INITEND.
           .

       DataSet1-lineseq-mail-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga-mail OF lineseq-mail.
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq.
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-INITSTART.
           .

       DataSet1-lineseq1-INITEND.
           .

       DataSet1-lineseq1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq1.
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq1 TO TOTEM-ERR-STAT
           MOVE "lineseq1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq1, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE pge-rec OF pgmexe
           INITIALIZE user-rec OF USER
           INITIALIZE pass-rec OF pass
           INITIALIZE rec-stampa OF fileseq
           INITIALIZE PROG-R OF PROG
           INITIALIZE cpu-rec OF tmp-cpu
           INITIALIZE tsi-rec OF tsetinvio
           INITIALIZE line-riga-mail OF lineseq-mail
           INITIALIZE line-riga OF lineseq
           INITIALIZE line-riga OF lineseq1
           .


      * GRID
       form1-gd-1-Content.
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 2, Y = 1,
                CELL-DATA = "PID",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 3, Y = 1,
                CELL-DATA = "Utente",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 4, Y = 1,
                CELL-DATA = "Nome",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 5, Y = 1,
                CELL-DATA = "Postazione",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 6, Y = 1,
                CELL-DATA = "Programma",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 7, Y = 1,
                CELL-DATA = "Data",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 8, Y = 1,
                CELL-DATA = "Ora",
           .

      * FD's Initialize Paragraph
       DataSet1-pgmexe-INITREC.
           INITIALIZE pge-rec OF pgmexe
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-USER-INITREC.
           INITIALIZE user-rec OF USER
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-pass-INITREC.
           INITIALIZE pass-rec OF pass
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-fileseq-INITREC.
           INITIALIZE rec-stampa OF fileseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PROG-INITREC.
           INITIALIZE PROG-R OF PROG
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-cpu-INITREC.
           INITIALIZE cpu-rec OF tmp-cpu
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tsetinvio-INITREC.
           INITIALIZE tsi-rec OF tsetinvio
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-mail-INITREC.
           INITIALIZE line-riga-mail OF lineseq-mail
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq1-INITREC.
           INITIALIZE line-riga OF lineseq1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       form1-Open-Routine.
           PERFORM form1-Scrn
           PERFORM form1-Proc
           .

       form1-Scrn.
           PERFORM form1-Create-Win
           PERFORM form1-Init-Value
           PERFORM form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form1-DISPLAY
           .

       form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 46,40,
              SIZE 92,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE v-screen,
              USER-WHITE,
              No WRAP,
              HANDLE IS form1-handle,
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterCreateWin>
           if pgme-cancellazione and called-by-menu
              SET LK-BL-SCRITTURA     TO TRUE
      *        MOVE 78-nome-pgm-menu   TO LK-BL-PROG-ID
              MOVE FORM1-HANDLE       TO LK-HND-WIN
              CALL "BLOCKPGM"  USING LK-BLOCKPGM
              CANCEL "BLOCKPGM"
           end-if.

           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form1 UPON form1-handle
      * DISPLAY-COLUMNS settings
              MODIFY form1-gd-1, DISPLAY-COLUMNS (1, 4, 12, 22, 37, 52, 
           67, 79)
           .

       form1-PROC.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeAccept>
           set tutto-ok   to true
      * se sono in cancellazione richiamo la pwd
           if pgme-cancellazione
      *        set errori to true
      *        perform SCREENPASS-OPEN-ROUTINE

      *        set AccessConfirmed to true
              move 8 to Passwd-password
              call   "passwd" using Passwd-linkage
              cancel "passwd"

              if not Passwd-StatusOk
                 set pwd-errata to true
                 set errori to true
              else
                 set pwd-corretta  to true
              end-if

              perform SCRIVI-LOG
           end-if.

           if tutto-ok
              perform CARICA-GRIGLIA

              evaluate true 
              when pgme-cancellazione
                   move 1   to v-screen
                   modify form1-handle, visible v-screen

              when pgme-RichiamoBatch-evasione
                   perform FORM1-EXIT

              when pgme-evasione
                   if no-pgm
                      perform FORM1-EXIT
                   else
                      move 1   to v-screen
                      modify form1-handle, visible v-screen
                      set pgme-pgm-attivi  to true
                   end-if
              end-evaluate
           
           else
              perform FORM1-EXIT
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT form1
                 ON EXCEPTION
                    PERFORM form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-handle
           INITIALIZE Key-Status
           .

       form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM PB-ESEGUIa-LinkTo
              WHEN Key-Status = 1005
                 PERFORM pb-grid-elimina-LinkTo
              WHEN Key-Status = 5
                 PERFORM pb-reset-LinkTo
              WHEN Key-Status = 1006
                 PERFORM pb-gestpwd-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form1-CLEAR.
           PERFORM form1-INIT-VALUE
           PERFORM form1-DISPLAY
           .

       form1-DISPLAY.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form1 UPON form1-handle
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterDisplay>
      * <TOTEM:END>
           .

       form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeExit>
           evaluate true

           when pgme-evasione
      *    prima di uscire controllo se per caso non siano state 
      *    attivate delle altre sessioni o se per caso sono uscito con
      *    l'ESC
                perform CARICA-GRIGLIA
                if no-pgm
                   set pgme-ok          to true
                else
                   set pgme-pgm-attivi  to true
                end-if
           when pgme-cancellazione
      *    prima di uscire se ho effettuato la cancellazione resetto la 
      *    pwd per la cacancellazione
      *          if si-cancellazione
      *             perform RESET-PWD
      *          end-if
                set uscita-cacancellazione  to true
                perform SCRIVI-LOG
           end-evaluate

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM form1-gd-1-Content
           .

       form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:form1, FORM:form1, SetDefault>
      * <TOTEM:END>
           PERFORM form1-FLD-TO-BUF
           .


       form1-ALLGRID-RESET.
           .

      * for Form's Validation
       form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterBufToFld>
      * <TOTEM:END>
           .

       form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form1-SHOW-MSG-ROUTINE
           .

       form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form1-DISPLAY-MESSAGE
           .

       form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form1-Save-Status.
           .             

       form1-Restore-Status.
           .

       ScreenPass-Open-Routine.
           PERFORM ScreenPass-Scrn
           PERFORM ScreenPass-Proc
           .

       ScreenPass-Scrn.
           PERFORM ScreenPass-Create-Win
           PERFORM ScreenPass-Init-Value
           PERFORM ScreenPass-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM ScreenPass-DISPLAY
           .

       ScreenPass-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 6,83,
              SIZE 38,90,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS ScreenPass-Handle,
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY ScreenPass UPON ScreenPass-Handle
      * DISPLAY-COLUMNS settings
           .

       ScreenPass-PROC.
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, BeforeAccept>
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT ScreenPass
                 ON EXCEPTION
                    PERFORM ScreenPass-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY ScreenPass-Handle
           INITIALIZE Key-Status
           .

       ScreenPass-Evaluate-Func.
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM ScreenPass-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM ScreenPass-Exit
                 END-IF
              WHEN Key-Status = 13
                 PERFORM pb-disattiva-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       ScreenPass-CLEAR.
           PERFORM ScreenPass-INIT-VALUE
           PERFORM ScreenPass-DISPLAY
           .

       ScreenPass-DISPLAY.
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY ScreenPass UPON ScreenPass-Handle
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, AfterDisplay>
      * <TOTEM:END>
           .

       ScreenPass-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       ScreenPass-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       ScreenPass-Init-Value.
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, SetDefault>
      * <TOTEM:END>
           PERFORM ScreenPass-FLD-TO-BUF
           .


       ScreenPass-ALLGRID-RESET.
           .

      * for Form's Validation
       ScreenPass-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       ScreenPass-Buf-To-Fld.
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, AfterBufToFld>
      * <TOTEM:END>
           .

       ScreenPass-Fld-To-Buf.
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:ScreenPass, FORM:ScreenPass, AfterFldToBuf>
      * <TOTEM:END>
           .

       ScreenPass-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform ScreenPass-BUF-TO-FLD.
           move 0 to scelta.
           .
       ScreenPass-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM ScreenPass-SHOW-MSG-ROUTINE
           .

       ScreenPass-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM ScreenPass-DISPLAY-MESSAGE
           .

       ScreenPass-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       ScreenPass-Save-Status.
           .             

       ScreenPass-Restore-Status.
           .

       ScreenGestPass-Open-Routine.
           PERFORM ScreenGestPass-Scrn
           PERFORM ScreenGestPass-Proc
           .

       ScreenGestPass-Scrn.
           PERFORM ScreenGestPass-Create-Win
           PERFORM ScreenGestPass-Init-Value
           PERFORM ScreenGestPass-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM ScreenGestPass-DISPLAY
           .

       ScreenGestPass-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 12,78,
              SIZE 38,90,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS ScreenGestPass-Handle,
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY ScreenGestPass UPON ScreenGestPass-Handle
      * DISPLAY-COLUMNS settings
           .

       ScreenGestPass-PROC.
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, BeforeAccept>
           perform LEGGI-PWD

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT ScreenGestPass
                 ON EXCEPTION
                    PERFORM ScreenGestPass-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY ScreenGestPass-Handle
           INITIALIZE Key-Status
           .

       ScreenGestPass-Evaluate-Func.
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM ScreenGestPass-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM ScreenGestPass-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-conf-pwd-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       ScreenGestPass-CLEAR.
           PERFORM ScreenGestPass-INIT-VALUE
           PERFORM ScreenGestPass-DISPLAY
           .

       ScreenGestPass-DISPLAY.
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY ScreenGestPass UPON ScreenGestPass-Handle
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, AfterDisplay>
      * <TOTEM:END>
           .

       ScreenGestPass-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       ScreenGestPass-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       ScreenGestPass-Init-Value.
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, SetDefault>
           initialize password 
                      new-password
                      conf-password

           .
      * <TOTEM:END>
           PERFORM ScreenGestPass-FLD-TO-BUF
           .


       ScreenGestPass-ALLGRID-RESET.
           .

      * for Form's Validation
       ScreenGestPass-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       ScreenGestPass-Buf-To-Fld.
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, AfterBufToFld>
      * <TOTEM:END>
           .

       ScreenGestPass-Fld-To-Buf.
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:ScreenGestPass, FORM:ScreenGestPass, AfterFldToBuf>
      * <TOTEM:END>
           .

       ScreenGestPass-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform ScreenGestPass-BUF-TO-FLD.
           move 0 to scelta.
           .
       ScreenGestPass-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM ScreenGestPass-SHOW-MSG-ROUTINE
           .

       ScreenGestPass-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM ScreenGestPass-DISPLAY-MESSAGE
           .

       ScreenGestPass-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       ScreenGestPass-Save-Status.
           .             

       ScreenGestPass-Restore-Status.
           .



       ScreenPass-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM ef-pass-BeforeProcedure
           END-EVALUATE
           .

       ScreenGestPass-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5002 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5003 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM ef-pass-BeforeProcedure
           When 5002 PERFORM ef-pass-BeforeProcedure
           When 5003 PERFORM ef-pass-BeforeProcedure
           END-EVALUATE
           .

       scr-visua-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       Screen1-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       RESET-GRIGLIA.
      * <TOTEM:PARA. RESET-GRIGLIA>
           modify form1-gd-1, reset-grid = 1.
           perform FORM1-GD-1-CONTENT 
           .
      * <TOTEM:END>

       INGRESSO.
      * <TOTEM:PARA. INGRESSO>
           open i-o pgmexe.
           open input USER.
           open input PROG

           perform VERIFICA-BLOCCHI

           if si-blocchi
              if pgme-utente not = "BOSS"
                 perform MSG-EVASIONE-IN-CORSO
                 set pgme-evacli-attivo  to true
              end-if
           else
              initialize pge-rec
              move pid-sessione    to pge-pid
              move pgme-utente     to pge-utente
                                      user-cod
      *        move station-id      to pge-postazione
              move USER-ID         to pge-postazione
              move pgme-pgm        to pge-pgm
                                      PROG-ID
              accept pge-data      from century-date
              accept pge-ora       from time
              read USER no lock
                   invalid initialize user-name
              end-read
              move user-name    to pge-nome-utente

              read PROG no lock key is prog-id
                   invalid initialize PROG-S-DESC
              end-read
              move PROG-S-DESC  to pge-nome-pgm

              write pge-rec
                    invalid rewrite pge-rec
              end-write
           end-if.

           close pgmexe.
           close USER.
           close PROG.

      ***---
       MSG-EVASIONE-IN-CORSO.
           initialize messaggio

           inspect pge-nome-utente replacing trailing space by low-value
           string "EVASIONE CLIENTI IN CORSO DA " delimited by size
                  pge-nome-utente                 delimited by low-value
                  "."                             delimited by size
                  x"0D0A"
                  "Impossibile procedere"         delimited by size
                  into messaggio
      
           inspect messaggio replacing trailing space by low-value
           display message box messaggio
                           title = tit-err
                           icon MB-WARNING-ICON            
           .
      * <TOTEM:END>

       USCITA.
      * <TOTEM:PARA. USCITA>
           open i-o pgmexe.

           move pid-sessione    to pge-pid
           move pgme-utente     to pge-utente
           move station-id      to pge-postazione
           move pgme-pgm        to pge-pgm
           move low-value       to pge-data
                                   pge-ora

           start pgmexe key not < pge-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read pgmexe next no lock
                         at end exit perform
                    end-read
                    if pid-sessione not = pge-pid or
                       pgme-pgm     not = pge-pgm
                       exit perform
                    end-if
                    delete pgmexe record
                           invalid continue
                    end-delete
                    exit perform
                 end-perform
           end-start.

           close pgmexe 
           .
      * <TOTEM:END>

       VERIFICA-BLOCCHI.
      * <TOTEM:PARA. VERIFICA-BLOCCHI>
      *    mettere qui l'elenco dei programmi che devono partire sempre
      *    anche se ho attiva l'evasione
           evaluate pgme-pgm
           when "killproc"
           when "gestsessioni"
                set si-blocchi to false
           when other
                set si-blocchi to false
                move low-value to pge-chiave
           
                start pgmexe  key >= pge-chiave
                      invalid continue
                   not invalid
                      perform until 1 = 2
                         read pgmexe next no lock
                           at end exit perform
                         end-read
                         evaluate pge-pgm
                         when "evacli"
                         |inserire qui eventuali futuri blocchi
                              set si-blocchi  to true
                              exit perform
                         end-evaluate
                      end-perform
                end-start
           end-evaluate 
           .
      * <TOTEM:END>

       CARICA-GRIGLIA.
      * <TOTEM:PARA. CARICA-GRIGLIA>
           move zero   to old-pid
           set color-2 to true
           modify form1-gd-1, mass-update = 1
           move 1  to riga
           set no-pgm  to true
           perform RESET-GRIGLIA.

           move low-value to pge-chiave
           start pgmexe  key >= pge-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read pgmexe next no lock
                      at end exit perform
                    end-read
      *             scarto il record relativo al pgm evacli se 
      *             sono nella verifica delle evasioni
                    set rec-ok  to true
                    if pgme-evasione and pge-pgm = "evacli"
                       set rec-ok  to false
                    end-if
                    evaluate pge-pgm
                    when "gestsessioni"
                         set rec-ok   to false
                    end-evaluate

                    if pgme-RichiamoBatch-evasione
                       set rec-ok to false
                       |Solo un'altra evasione puà bloccare il batch
                       if pge-pgm = "evacli"
                          set rec-ok to true
                       end-if
                    end-if

                    if rec-ok
                       perform METTI-IN-GRIGLIA
                    end-if
                 end-perform
           end-start.

           if riga > 1    

              if pgme-RichiamoBatch-evasione
                 set pgme-evacli-attivo to true
              end-if

              move zero   to riga
              modify form1-gd-1, CURSOR-X 2, CURSOR-Y 2
              move 2   to event-data-2
              perform SPOSTAMENTO
           end-if

           modify form1-gd-1, MASS-UPDATE = zero.

      ***---
       METTI-IN-GRIGLIA.
           add 1 to riga
           initialize rec-grid.

           if old-pid not = pge-pid
              move pge-pid         to col-pid-ed
                                      old-pid
              move col-pid-ed      to col-pid
              call "C$JUSTIFY" using col-pid, "L"
              move pge-utente      to col-utente
              move pge-nome-utente to col-nome
              move pge-postazione  to col-postazione
              evaluate true
              when color-1
                   set color-2  to true
              when color-2
                   set color-1  to true
              end-evaluate
              move riga         to 1-riga-gruppo
           end-if

           move pge-pgm         to col-pgm

           string pge-data(7:2) delimited by size
                  "/"           delimited by size
                  pge-data(5:2) delimited by size
                  "/"           delimited by size
                  pge-data(1:4) delimited by size
                  into col-data
           string pge-ora(1:2)  delimited by size
                  ":"           delimited by size
                  pge-ora(3:2)  delimited by size
                  into col-ora

           modify form1-gd-1, RECORD-TO-ADD rec-grid
           modify form1-gd-1(riga, 1), HIDDEN-DATA pge-chiave.
           modify form1-gd-1(riga, 2), HIDDEN-DATA 1-riga-gruppo.

           if pge-pid = pid-sessione
              move 78-color-sessione  to como-colore
           else
              evaluate true
              when color-1
                   move 78-color-1 to como-colore
              when color-2
                   move 78-color-2 to como-colore
              end-evaluate
           end-if
           modify form1-gd-1(riga), ROW-COLOR como-colore

           set no-pgm  to false 
           .
      * <TOTEM:END>

       INIT-CANCELLAZIONE.
      * <TOTEM:PARA. INIT-CANCELLAZIONE>
           call "C$CALLEDBY"  using calling-program
           if calling-program = 78-nome-pgm-menu
              set called-by-menu   to true
              accept LK-BLOCKPGM from environment "BLOCK_GESTSESSIONI"
           else
              set called-by-menu   to false
           end-if
           set si-cancellazione to false
           accept path-txt from environment "PATH_ISOLATA".

           set ingresso-cacancellazione  to true
           perform SCRIVI-LOG
           move zero      to v-evadi
           move 1         to v-cancella
           .
      * <TOTEM:END>

       SCRIVI-LOG.
      * <TOTEM:PARA. SCRIVI-LOG>
           evaluate true
           when pwd-errata
                move "Inserimento Pasword errata"    to como-stringa
           when pwd-corretta
                move "Inserimento Pasword Corretta"  to como-stringa
           when record-cancellato
                inspect pge-utente replacing trailing space by low-value
                inspect pge-postazione 
                                   replacing trailing space by low-value
                inspect pge-pgm replacing trailing space by low-value
                move pge-pid to col-pid-ed
                call "C$JUSTIFY"    using col-pid-ed, "L"
                inspect col-pid-ed replacing trailing space by low-value
                initialize como-stringa
                string "Cancellata la sessione: utente "
                                                  delimited by size
                       pge-utente                 delimited by low-value
                       " PID "                    delimited by size
                       col-pid-ed                 delimited by low-value
                       " postazione "             delimited by size
                       pge-postazione             delimited by low-value
                       " programma "              delimited by size
                       pge-pgm                    delimited by low-value
                       " lanciata il "            delimited by size
                       pge-data(7:2)              delimited by size
                       "/"                        delimited by size
                       pge-data(5:2)              delimited by size
                       "/"                        delimited by size
                       pge-data(1:4)              delimited by size
                       " alle "                   delimited by size
                       pge-ora(1:2)               delimited by size
                       ":"                        delimited by size
                       pge-ora(3:2)               delimited by size
                       into como-stringa
           when eliminazione-orfani
                inspect pge-utente replacing trailing space by low-value
                inspect pge-postazione 
                                   replacing trailing space by low-value
                inspect pge-pgm replacing trailing space by low-value
                move pge-pid to col-pid-ed
                call "C$JUSTIFY"    using col-pid-ed, "L"
                inspect col-pid-ed replacing trailing space by low-value
                initialize como-stringa
                string "Cancellata la sessione orfana: utente "
                                                  delimited by size
                       pge-utente                 delimited by low-value
                       " PID "                    delimited by size
                       col-pid-ed                 delimited by low-value
                       " postazione "             delimited by size
                       pge-postazione             delimited by low-value
                       " programma "              delimited by size
                       pge-pgm                    delimited by low-value
                       " lanciata il "            delimited by size
                       pge-data(7:2)              delimited by size
                       "/"                        delimited by size
                       pge-data(5:2)              delimited by size
                       "/"                        delimited by size
                       pge-data(1:4)              delimited by size
                       " alle "                   delimited by size
                       pge-ora(1:2)               delimited by size
                       ":"                        delimited by size
                       pge-ora(3:2)               delimited by size
                       into como-stringa

           when reset-pwd
                move "Password disabilitata"         to como-stringa
           when uscita-cacancellazione
                move "Uscita dalla funzione di cancellazione"
                                                     to como-stringa
           when ingresso-cacancellazione
                move "Ingresso nella funzione di cancellazione"
                                                     to como-stringa
           when aggiorna-elenco
                move "Aggiornamento elenco sessioni" to como-stringa
           when invio-mail-fallito
                move "Invio mail di segnalazione fallito"
                                                     to como-stringa
           when pwd-changed
                move "Password Modificata"           to como-stringa
           end-evaluate

           open extend fileseq

           if ingresso-cacancellazione
              write rec-stampa from spaces
           end-if.

           initialize rec-stampa.
           perform SETTA-INIZIO-RIGA.
      *     move pgme-utente     to r-user.
           string r-inizio      delimited size
                  como-stringa  delimited size
                  into rec-stampa
           end-string.
           write rec-stampa.

           close fileseq 
           .
      * <TOTEM:END>

       RESET-PWD.
      * <TOTEM:PARA. RESET-PWD>
           perform INVIO-MAIL
           open output pass
           close pass


           set reset-pwd  to true
           perform SCRIVI-LOG.

           copy "mail.cpy".

      ***---
       INVIO-MAIL.
           accept LinkSubject from environment "MAIL_ISOLATA_SUBJECT"
           accept LinkBody    from environment "MAIL_ISOLATA_BODY"
           accept LinkAddress from environment "MAIL_ISOLATA_ADDRESSES".

           set errori to true.
           move "gpgmexe" to NomeProgramma.
           move 5 to tentativi-mail.
           perform CICLO-SEND-MAIL.

           if mail-ko
              set invio-mail-fallito  to true
              perform SCRIVI-LOG
           end-if
           delete file lineseq.

      ***---
       AFTER-SEND-MAIL 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           set event-action to event-action-fail

           inquire form1-gd-1, last-row in tot-righe.
           if event-data-2 < 2 
              move 2 to event-data-2 
           end-if.
           if event-data-2 > tot-righe 
              move tot-righe to event-data-2 
           end-if.

           if event-data-2 not = riga
              perform CAMBIA-FONT-RIGA
           end-if.

      ***---
       CAMBIA-FONT-RIGA.
      *    tolgo da tutte le righe il grassetto
           move riga   to riga-origine

           inquire form1-gd-1(riga, 2), HIDDEN-DATA = 1-riga-gruppo
           move 1-riga-gruppo   to riga
                                   riga-gruppo

           modify form1-gd-1(riga, 1),
                  bitmap        = elemento-bmp,
                  bitmap-number = 1,
                  bitmap-width  = 16.

      *    ciclo per togliere da tutte le righe del gruppo il grassetto
           perform until 1 = 2
              if riga > tot-righe
                 exit perform
              end-if
              inquire form1-gd-1(riga, 2), HIDDEN-DATA = 1-riga-gruppo
              if 1-riga-gruppo not = riga-gruppo
                 exit perform
              end-if
              modify form1-gd-1(riga), ROW-FONT = Verdana12-Occidentale
              add 1 to riga
           end-perform.

      *    se sto spostandomi con i testi freccia mi sposto di blocco in
      *    blocco andando a cercare il blocco relativo
           if spostamento-frecce
              perform DETERMINA-EVENTDATA-2
           end-if

      *    ciclo per mettere il grassetto
           move event-data-2 to riga
           inquire form1-gd-1(riga, 2), HIDDEN-DATA = 1-riga-gruppo
           move 1-riga-gruppo   to riga
                                   riga-gruppo
           perform until 1 = 2
              if riga > tot-righe
                 exit perform
              end-if
              inquire form1-gd-1(riga, 2), HIDDEN-DATA = 1-riga-gruppo
              if 1-riga-gruppo not = riga-gruppo
                 exit perform
              end-if
              modify form1-gd-1(riga), ROW-FONT = font-evidenzia-griglia
              add 1 to riga
           end-perform.

           move riga-gruppo to riga
           modify form1-gd-1, CURSOR-Y = riga, cursor-X = 2
           modify form1-gd-1, (riga, 1),
                  bitmap        = elemento-bmp,
                  bitmap-number = 2,
                  bitmap-width  = 16.

      ***---
      *    se mi sposto tramite le frecce faccio in modo di passare da 
      *    un gruppo all'altro
       DETERMINA-EVENTDATA-2.
           move riga-origine to riga
           if event-data-2 >= riga
              set avanti  to true
           else
              set indietro to true
           end-if

           inquire form1-gd-1(riga, 2), HIDDEN-DATA = 1-riga-gruppo
           move 1-riga-gruppo   to riga-gruppo

           evaluate true
           when indietro
                perform until 1 = 2
                   if riga = 2
                      exit perform
                   end-if
                   inquire form1-gd-1(riga, 2), 
                          HIDDEN-DATA = 1-riga-gruppo
                   if 1-riga-gruppo = riga-gruppo
                      subtract 1 from riga
                   else
                      exit perform
                   end-if
                end-perform
           when avanti
                perform until 1 = 2
                   if riga = tot-righe
                      exit perform
                   end-if
                   inquire form1-gd-1(riga, 2), 
                          HIDDEN-DATA = 1-riga-gruppo
                   if 1-riga-gruppo = riga-gruppo
                      add 1 to riga
                   else
                      exit perform
                   end-if
                end-perform
           end-evaluate
           move riga   to event-data-2 
           .
      * <TOTEM:END>

       INIT-GRIGLIA.
      * <TOTEM:PARA. INIT-GRIGLIA>
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA, font-evidenzia-griglia
           MOVE 12                TO WFONT-SIZE
           MOVE "Verdana"         TO WFONT-NAME
           SET WFONT-BOLD         TO true
           SET WFONT-ITALIC       TO true
           SET WFONT-UNDERLINE    TO FALSE
           SET WFONT-STRIKEOUT    TO FALSE
           SET WFONT-FIXED-PITCH  TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     font-evidenzia-griglia, WFONT-DATA

           copy resource "elemento.bmp".
           call "W$BITMAP" using wbitmap-load, "elemento.bmp"
                          giving elemento-bmp 
           .
      * <TOTEM:END>

       AGGIORNA-PASSWORD.
      * <TOTEM:PARA. AGGIORNA-PASSWORD>
           open output pass
           move new-password to pass-rec
           write pass-rec
           close pass

           set pwd-changed  to true
           perform SCRIVI-LOG 
           .
      * <TOTEM:END>

       LEGGI-PWD.
      * <TOTEM:PARA. LEGGI-PWD>
           set tutto-ok   to true
           open input pass.
           if errori
              initialize pass-rec
           end-if
           if tutto-ok
              initialize pass-rec
              read pass next
                 at end
                    continue
              end-read
           end-if
           move pass-rec  to save-pwd
           close pass
           .
      * <TOTEM:END>

       AZZERA-SESSIONE.
      * <TOTEM:PARA. AZZERA-SESSIONE>
           open i-o pgmexe.

           move pid-sessione to pge-pid
           move low-value    to pge-pgm

           start pgmexe key not < pge-chiave
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read pgmexe next no lock
                       at end
                          exit perform
                    end-read
                    if pge-pid not = pid-sessione
                       exit perform
                    end-if
                    delete pgmexe record
                       invalid
                          continue
                    end-delete
                 end-perform
           end-start.

           close pgmexe 
           .
      * <TOTEM:END>

       CANCELLA-ORFANI.
      * <TOTEM:PARA. CANCELLA-ORFANI>
           perform INIT-LOG
           if tutto-ok
              open i-o pgmexe
              move low-value to pge-chiave
              start pgmexe key >= pge-chiave
                    invalid continue
                not invalid
                    perform CARICA-TMP
                    perform until 1 = 2
                       read pgmexe next no lock
                          at end exit perform
                       end-read
                       move pge-pid   to cpu-pid
                       read tmp-cpu
                          invalid
                          delete pgmexe record invalid continue 
           end-delete
                          set eliminazione-orfani to true
                          perform SCRIVI-LOG
                       end-read
                    end-perform
                    close tmp-cpu
                    delete file tmp-cpu
              end-start
              
              close pgmexe
           end-if.

      ***---
       CARICA-TMP.
           initialize path-kill comando status-call wstampa.
           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  path-kill from environment "PATH_KILL".
           inspect path-kill replacing trailing spaces by low-value.

           initialize como-path-tasklist
           string  path-kill delimited low-value
                   "tasklist"   delimited size
                   "_"          delimited size
                   como-data    delimited size
                   "_"          delimited size
                   como-ora     delimited size
                   ".txt"       delimited size
                   into como-path-tasklist
           end-string.

           string  "tasklist "        delimited by size
      *    filtro sul runtime
                   " /FI "            delimited by size
                   x"22"              delimited by size
                   "IMAGENAME eq wrun32.exe" delimited by size
                   x"22"              delimited by size
                   " "                delimited by size
      *    fine filtro
                   "/FO "             delimited by size
                   x"22"              delimited by size
                   "CSV"              delimited by size
                   x"22"              delimited by size
                   " /NH"             delimited by size
                   " >"               delimited size
                   como-path-tasklist delimited low-value
                   into comando
           end-string.
           inspect como-path-tasklist
                                replacing trailing low-value by spaces.

           call "C$SYSTEM" using comando, 96
                          giving status-call.

           initialize path-tmp-cpu
           string  path-kill  delimited low-value
                   "tmp_cpu"  delimited size
                   "_"        delimited size
                   como-data  delimited size
                   "_"        delimited size
                   como-ora   delimited size
              into path-tmp-cpu
           end-string.
           open output tmp-cpu
           close       tmp-cpu
           open i-o    tmp-cpu


           move como-path-tasklist  to wstampa
           |Resto in attesa che il file sia completo
           perform until 1 = 2
              call "C$FILEINFO" using wstampa, file-info
              if file-size > 0
                 open input lineseq
                 if status-lineseq = "00"
                    exit perform
                 end-if
              end-if
           end-perform.

           perform until 1 = 2
              move spaces to line-riga of lineseq
              read lineseq next 
                 at end 
                    exit perform 
              end-read
              perform PREPARA-RECORD
           end-perform
           close       lineseq.
           delete file lineseq.

      ***---
       PREPARA-RECORD.
           initialize rec-pid.

           unstring line-riga of lineseq delimited by ","
               into rp-nome-exe
                    rp-pid.

           move rp-pid    to cpu-pid convert

           if cpu-pid not = 0
              write cpu-rec invalid rewrite cpu-rec end-write
           end-if 
           .
      * <TOTEM:END>

       CANCELLAZIONE-GRIGLIA.
      * <TOTEM:PARA. CANCELLAZIONE-GRIGLIA>
           inquire form1-gd-1(riga, 1), hidden-data pge-chiave
           move pge-pid   to killpid-pid-pgm
           move low-value to pge-pgm
           start pgmexe  key >= pge-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read pgmexe next no lock
                       at end exit perform
                    end-read
                    if pge-pid not = killpid-pid-pgm
                       exit perform
                    end-if

                    delete pgmexe record invalid continue end-delete

                    set record-cancellato   to true
                    perform SCRIVI-LOG
                 end-perform
           end-start
       
           call   "killpid" using killpid-linkage
           cancel "killpid"

           set si-cancellazione to true
                 
           perform CARICA-GRIGLIA
           set aggiorna-elenco  to true
           perform SCRIVI-LOG
           .
      * <TOTEM:END>

       INIT-LOG.
      * <TOTEM:PARA. INIT-LOG>
           set tutto-ok   to true
      *    verifico in entrata di poter scrivere il log
           accept path-fileseq from environment "PATH_LOG_ISOLATA"
           if path-fileseq = space
              set errori  to true
              display message box 
                          "Prima di procedere settare il file di log"
                          x"0D0A"
                          "per la cancellazione delle sessioni."
                      title "Geslux - Evasione Isalota"
                      icon 2
           end-if
           .
      * <TOTEM:END>

       ABILITA-GESTIONE.
      * <TOTEM:PARA. ABILITA-GESTIONE>
           set si-gest-sessioni to false

           accept como-stringa from environment "GESTIONE_SESSIONI"
           CALL "C$TOUPPER" USING como-stringa, VALUE 200
           evaluate como-stringa
           when "S"
           when "SI"
           when "Y"
           when "YES"
                set si-gest-sessioni  to true
           end-evaluate
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "setta-inizio-riga.cpy" 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       stbolle-Ev-Before-Program.
      * <TOTEM:PARA. stbolle-Ev-Before-Program>
           perform ABILITA-GESTIONE
           if not si-gest-sessioni
              set pgme-ok to true
              goback
           end-if
           set pgme-ok to true
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
           accept pid-sessione-x  from environment "PID_SESSIONE"
           move pid-sessione-x  to pid-sessione convert

           evaluate true
           when pgme-ingresso
      *          perform CANCELLA-ORFANI
                perform INGRESSO
                goback
           when pgme-uscita
                perform USCITA
                goback
           when pgme-azzera-sessione
                perform AZZERA-SESSIONE
                goback
           when pgme-canc-orfani
                perform CANCELLA-ORFANI
                goback
           when pgme-cancellazione
                perform CANCELLA-ORFANI
                if tutto-ok
                   perform INIT-GRIGLIA
                end-if
                if tutto-ok
                   perform INIT-CANCELLAZIONE
                end-if
                if errori
                   goback
                end-if
           when pgme-evasione
                perform CANCELLA-ORFANI
                perform INIT-GRIGLIA
                move 1    to v-evadi
                move zero to v-cancella
           end-evaluate 
           .
      * <TOTEM:END>
       stbolle-Ev-After-Program.
      * <TOTEM:PARA. stbolle-Ev-After-Program>
           evaluate true
           when pgme-cancellazione
           when pgme-evasione
                DESTROY font-evidenzia-griglia
                call "W$BITMAP" using wbitmap-destroy, elemento-bmp
           end-evaluate

           if pgme-cancellazione and called-by-menu
              SET LK-BL-CANCELLAZIONE TO TRUE
      *        move 78-nome-pgm-menu   TO LK-BL-PROG-ID
              CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           end-if 

           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify PB-ESEGUI, bitmap-number 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify PB-ESEGUI, bitmap-number 1 
           .
      * <TOTEM:END>
       Form1-Pb-2-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2-BeforeProcedure>
           modify PB-CANCEL, bitmap-number 2 
           .
      * <TOTEM:END>
       Form1-Pb-2-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2-AfterProcedure>
           modify PB-CANCEL, bitmap-number 1 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Mouse>
           set spostamento-frecce  to false
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Entry>
           set spostamento-frecce  to false
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       PB-ESEGUIa-LinkTo.
      * <TOTEM:PARA. PB-ESEGUIa-LinkTo>
           inquire form1-gd-1, LAST-ROW = riga
           if riga < 2
              set pgme-ok to true
              perform form1-Exit
           else
              perform CARICA-GRIGLIA
           end-if 
           .
      * <TOTEM:END>
       pb-reset-LinkTo.
      * <TOTEM:PARA. pb-reset-LinkTo>
           perform CARICA-GRIGLIA
           if pgme-cancellazione
              set aggiorna-elenco  to true
              perform SCRIVI-LOG
           end-if
           .
      * <TOTEM:END>
       ef-pass-BeforeProcedure.
      * <TOTEM:PARA. ef-pass-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-pass-AfterProcedure.
      * <TOTEM:PARA. ef-pass-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       pb-conferma-BeforeProcedure.
      * <TOTEM:PARA. pb-conferma-BeforeProcedure>
           modify pb-conferma, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-conferma-AfterProcedure.
      * <TOTEM:PARA. pb-conferma-AfterProcedure>
           modify pb-conferma, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-disattiva-LinkTo.
      * <TOTEM:PARA. pb-disattiva-LinkTo>
           inquire ef-pass, value in password.

           if password = spaces
              move 78-id-ef-pass to control-id
              move   4 to accept-control
              set pwd-errata to true
              perform SCRIVI-LOG
           else
              if password not = save-pwd
                 display message box "Password errata!"
                         title = tit-err
                         icon 2
                 move 78-id-ef-pass   to control-id
                 move   4 to accept-control
                 modify pb-conferma, bitmap-number = 1
                 modify pb-esci,     bitmap-number = 1
                 set pwd-errata to true
                 perform SCRIVI-LOG
              else
                 set tutto-ok   to true
                 move 27 to key-status
              end-if
           end-if 
           .
      * <TOTEM:END>
       pb-esci-BeforeProcedure.
      * <TOTEM:PARA. pb-esci-BeforeProcedure>
           modify pb-esci, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-esci-AfterProcedure.
      * <TOTEM:PARA. pb-esci-AfterProcedure>
           modify pb-esci, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-grid-elimina-BeforeProcedure.
      * <TOTEM:PARA. pb-grid-elimina-BeforeProcedure>
           modify pb-grid-elimina, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-grid-elimina-AfterProcedure.
      * <TOTEM:PARA. pb-grid-elimina-AfterProcedure>
           modify pb-grid-elimina, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-grid-elimina-LinkTo.
      * <TOTEM:PARA. pb-grid-elimina-LinkTo>
      *     perform LEGGI-PWD
      *     if pass-rec = space
      *        set errori  to true
      *        display message box 
      *                    "Prima di procedere attivare la password"
      *                    x"0D0A"
      *                    "per la cancellazione delle sessioni."
      *                title "Geslux - Evasione Isalota"
      *                icon 2
      *     end-if
      *
      ** se sono in cancellazione richiamo la pwd
      *     if tutto-ok
      *        set errori to true
      *        initialize password
      *        perform SCREENPASS-OPEN-ROUTINE
      *     end-if.
      *
      *     if tutto-ok

              inquire form1-gd-1(riga, 2), CELL-DATA = col-pid
              move col-pid   to pge-pid convert
              if pge-pid = pid-sessione
                 display message "Impossibile cancellare." x"0D0A"
                                 "Questa è la sessione in uso."
                         title titolo


              else
                 display message "Cancellare la sessione selezionata?"
                         title titolo
                         type mb-yes-no
                         giving scelta
                 if scelta = mb-yes
                    perform CANCELLAZIONE-GRIGLIA
                 end-if
              end-if
      *     end-if 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Drag>
           set spostamento-frecce  to false
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-End-Drag>
           set spostamento-frecce  to false
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell>
           set spostamento-frecce  to true
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Drag>
           set spostamento-frecce  to false
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       pb-gestpwd-BeforeProcedure.
      * <TOTEM:PARA. pb-gestpwd-BeforeProcedure>
           modify pb-gestpwd, BITMAP-NUMBER 2
           .
      * <TOTEM:END>
       pb-gestpwd-AfterProcedure.
      * <TOTEM:PARA. pb-gestpwd-AfterProcedure>
           modify pb-gestpwd, BITMAP-NUMBER 1
           .
      * <TOTEM:END>
       pb-conf-pwd-LinkTo.
      * <TOTEM:PARA. pb-conf-pwd-LinkTo>
           inquire ef-old-pass, value password.
           inquire ef-new-pass, value new-password
           inquire ef-conf-pass value conf-password

           if password not = save-pwd
              display message box "Password errata!"
                      title = tit-err
                      icon 2
              move 78-id-ef-old-pass to control-id
              move   4 to accept-control
           else
              if new-password = conf-password
                 if new-password = space
                    display message box "Nuova Password non valida!"
                            title = tit-err
                            icon 2
                    move 78-id-ef-new-pass to control-id
                    move   4 to accept-control
                 else
                    perform AGGIORNA-PASSWORD
                    perform SCREENGESTPASS-EXIT
                 end-if
              else
                 display message box "Le Password non coincidono!"
                         title = tit-err
                         icon 2
                 move 78-id-ef-new-pass to control-id
                 move   4 to accept-control
              end-if
           end-if
           .
      * <TOTEM:END>
       pb-conf-pwd-BeforeProcedure.
      * <TOTEM:PARA. pb-conf-pwd-BeforeProcedure>
           modify pb-conf-pwd, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-conf-pwd-AfterProcedure.
      * <TOTEM:PARA. pb-conf-pwd-AfterProcedure>
           modify pb-conf-pwd, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-canc-pwd-BeforeProcedure.
      * <TOTEM:PARA. pb-canc-pwd-BeforeProcedure>
           modify pb-canc-pwd, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-canc-pwd-AfterProcedure.
      * <TOTEM:PARA. pb-canc-pwd-AfterProcedure>
           modify pb-canc-pwd, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-gestpwd-LinkTo.
      * <TOTEM:PARA. pb-gestpwd-LinkTo>
           perform SCREENGESTPASS-OPEN-ROUTINE
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

