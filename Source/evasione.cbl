      *{TOTEM}PRG-COMMENT
      * evasione.Cbl
      * evasione.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          evasione.
       AUTHOR.              andre.
       DATE-WRITTEN.        lunedì 24 gennaio 2022 14:55:54.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:evasione, INIT:evasione, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "clienti.sl".
           COPY "articoli.sl".
           COPY "tordforn.sl".
           COPY "rordforn.sl".
           COPY "timballi.sl".
           COPY "tmagaz.sl".
           COPY "timbalqta.sl".
           COPY "tmp-eva.sl".
           COPY "reva.sl".
           COPY "teva.sl".
           COPY "progmag.sl".
           COPY "timposte.sl".
           COPY "tmarche.sl".
           COPY "tpiombo.sl".
           COPY "art-ordforn.sl".
           COPY "tparamge.sl".
           COPY "tcaumag.sl".
           COPY "destinif.sl".
           COPY "sordforn.sl".
           COPY "param.sl".
           COPY "impforn.sl".
           COPY "rlistini.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "clienti.fd".
           COPY "articoli.fd".
           COPY "tordforn.fd".
           COPY "rordforn.fd".
           COPY "timballi.fd".
           COPY "tmagaz.fd".
           COPY "timbalqta.fd".
           COPY "tmp-eva.fd".
           COPY "reva.fd".
           COPY "teva.fd".
           COPY "progmag.fd".
           COPY "timposte.fd".
           COPY "tmarche.fd".
           COPY "tpiombo.fd".
           COPY "art-ordforn.fd".
           COPY "tparamge.fd".
           COPY "tcaumag.fd".
           COPY "destinif.fd".
           COPY "sordforn.fd".
           COPY "param.fd".
           COPY "impforn.fd".
           COPY "rlistini.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
           COPY  "LINK-CHECK-EVA-F.DEF".
           COPY  "AGGIORNA-STATO-ORDF.DEF".
           COPY  "LINK-ST-BOZZE.DEF".
           COPY  "LINK-NAMBAR.DEF".
           COPY  "LINK-WPROGMAG.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "IMPOSTE.DEF".
           COPY  "LINK-ST-ORDFORN.DEF".
           COPY  "SELPRINT.LKS".
           COPY  "TROVA-PARAMETRO.DEF".
       78 titolo VALUE IS "GESLUX - Evasione Ordini Fornitori". 
       77 forn-z           PIC  z(5).
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 resto            PIC  9(5).
       77 como-prz-4dec    PIC  s9(12)v9999.
       77 imposta-consumo-4dec         PIC  s9(12)v9999.
       77 imposta-cou-4dec PIC  s9(12)v9999.
       77 add-piombo-4dec  PIC  s9(12)v9999.
       77 como-imp-merce-4dec          PIC  s9(12)v9999.
       77 orig-imp-cons    PIC  s9(12)v9999.
       77 orig-coubat      PIC  s9(12)v9999.
       77 como-imponibile  PIC  s9(12)v9999.
       77 como-magazzino   PIC  x(3).
       77 como-articolo    PIC  9(6).
       77 orig-add-pb      PIC  s9(12)v9999.
       01 tab-ordf.
           05 tab-chiave
                      OCCURS 1000 TIMES
                      INDEXED  idx-ordf.
               10 tab-anno         PIC  9(4).
               10 tab-numero       PIC  9(8).
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 imballi-ed       PIC  z(4).
       77 max-qta          PIC  9(8).
       77 como-giacenza-2  PIC  9(8).
       01 FILLER           PIC  9.
           88 rec-ok VALUE IS 1    WHEN SET TO FALSE  0. 
       77 riga-t           PIC  999
                  VALUE IS 0.
       77 como-peso-utf    PIC  9(5)v999
                  VALUE IS 0.
       01 gruppo-hidden.
           05 hid-chiave.
               10 hid-chiave-testa.
                   15 hid-anno         PIC  9(4).
                   15 hid-numero       PIC  9(8).
               10 hid-prg          PIC  9(5).
           05 hid-data-ordine  PIC  9(8).
           05 hid-saldo        PIC  9(8).
           05 hid-cod-listino  PIC  9(10).
           05 hid-chiave-ordf.
               10 hid-chiave-testa-ordf.
                   15 hid-anno-ordf    PIC  9(4).
                   15 hid-numero-ordf  PIC  9(8).
               10 hid-rigaordf     PIC  9(5).
           05 hid-tipo         PIC  x.
               88 hid-ordf VALUE IS "O". 
               88 hid-articolo VALUE IS "A". 
           05 hid-prg-chiave.
               10 hid-prg-articolo PIC  9(6).
               10 hid-codmag       PIC  x(3).
               10 hid-imballo      PIC  x(3).
               10 hid-peso         PIC  9(5)V9(3).
       77 prog-ins         PIC  9(10).
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       01 FILLER           PIC  9.
           88 CallZoom VALUE IS 1    WHEN SET TO FALSE  0. 
       77 CANCEL-73X21-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-imballo     PIC  x(30).
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       01 filler           PIC  9.
           88 record-ok VALUE IS 1,    WHEN SET TO FALSE  0. 
       77 STATUS-tnomen    PIC  X(2).
           88 Valid-STATUS-tnomen VALUE IS "00" THRU "09". 
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-nordforn  PIC  X(2).
           88 Valid-STATUS-nordforn VALUE IS "00" THRU "09". 
       77 STATUS-rlistini  PIC  X(2).
           88 Valid-STATUS-rlistini VALUE IS "00" THRU "09". 
       77 ef-mag-buf       PIC  x(3).
       77 ef-forn-buf      PIC  9(5).
       77 lab-mag-buf      PIC  x(50).
       77 lab-forn-buf     PIC  x(50).
       77 como-x           PIC  x.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 1003.
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 gd-r-rec.
           05 col-r-articolo   PIC  z(6).
           05 col-r-mag        PIC  x(3).
           05 col-r-imb        PIC  x(3).
           05 col-r-peso       PIC  zz.zz9,999
                      BLANK WHEN ZERO.
           05 col-r-descr      PIC  x(100).
           05 col-r-saldo      PIC  zz.zzz.zz9.
           05 col-r-qta        PIC  zz.zzz.zz9.
           05 col-r-prz        PIC  zzz.zz9,9999.
           05 col-r-cons       PIC  zzz.zz9,9999.
           05 col-r-cou        PIC  zzz.zz9,9999.
           05 col-r-add        PIC  zzz.zz9,9999.
           05 col-r-imponib    PIC  zzz.zz9,9999.
       77 path-tmp-eva     PIC  X(256).
       77 como-prz         PIC  9(9)v9999.
       77 como-imp-merce   PIC  9(9)v9999.
       77 STATUS-tmp-eva   PIC  X(2).
           88 Valid-STATUS-tmp-eva VALUE IS "00" THRU "09". 
       77 STATUS-reva      PIC  X(2).
           88 Valid-STATUS-reva VALUE IS "00" THRU "09". 
       77 STATUS-teva      PIC  X(2).
           88 Valid-STATUS-teva VALUE IS "00" THRU "09". 
       77 lab-fornitore-buf            PIC  x(100).
       77 lab-magazzino-buf            PIC  x(100).
       77 ALTERNATIVI-BMP  PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 mod-campi        PIC  9
                  VALUE IS 1.
       77 v-codici         PIC  9
                  VALUE IS 1.
       77 como-giacenza    PIC  s9(8)
                  VALUE IS 1.
       01 save-prg-chiave.
           05 save-prg-cod-articolo        PIC  9(6).
           05 save-prg-cod-magazzino       PIC  X(3).
           05 save-prg-tipo-imballo        PIC  X(3).
           05 save-prg-peso    PIC  9(5)V9(3).
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-tpromo    PIC  X(2).
           88 Valid-STATUS-tpromo VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 STATUS-art-ordforn           PIC  X(2).
           88 Valid-STATUS-art-ordforn VALUE IS "00" THRU "09". 
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 ef-dest-buf      PIC  9(5).
       77 lab-dest-buf     PIC  x(50)
                  VALUE IS "<< HELP >> 0 = TUTTI I DESTINI".
       77 STATUS-destinif  PIC  X(2).
           88 Valid-STATUS-destinif VALUE IS "00" THRU "09". 
       77 lab-destino-buf  PIC  x(100).
       01 gd-t-rec.
           05 col-t-anno       PIC  9(4).
           05 col-t-num        PIC  9(8).
           05 col-dest         PIC  z(5).
           05 col-ragsoc-dest  PIC  x(40).
           05 col-t-data-o     PIC  99/99/9999.
           05 col-t-data-c     PIC  99/99/9999.
           05 col-t-mese       PIC  99.
           05 col-t-stato      PIC  x(15).
       77 lbl-utf-buf      PIC  zz.zz9,999.
       77 STATUS-sordforn  PIC  X(2).
           88 Valid-STATUS-sordforn VALUE IS "00" THRU "09". 
       77 STATUS-brnotacr  PIC  X(2).
           88 Valid-STATUS-brnotacr VALUE IS "00" THRU "09". 
       77 STATUS-btnotacr  PIC  X(2).
           88 Valid-STATUS-btnotacr VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-impforn   PIC  X(2).
           88 Valid-STATUS-impforn VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-Screen2-FLAG-REFRESH PIC  9.
          88 Screen2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Screen2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Screen2-tordforn-RESTOREBUF  PIC X(556).
       77 TMP-Screen2-KEYIS  PIC 9(3) VALUE 1.
       77 Screen2-MULKEY-TMPBUF   PIC X(556).
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-tmp-eva-BUF     PIC X(252).
       77 TMP-DataSet1-reva-BUF     PIC X(260).
       77 TMP-DataSet1-teva-BUF     PIC X(199).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-timposte-BUF     PIC X(717).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(739).
       77 TMP-DataSet1-art-ordforn-BUF     PIC X(302).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-destinif-BUF     PIC X(1322).
       77 TMP-DataSet1-sordforn-BUF     PIC X(1139).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-impforn-BUF     PIC X(220).
       77 TMP-DataSet1-rlistini-BUF     PIC X(448).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tordforn-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY1-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY1-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-tmp-eva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-eva-LOCK  VALUE "Y".
       77 DataSet1-tmp-eva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-eva-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-eva-KEY-Desc VALUE "D".
       77 DataSet1-reva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-reva-LOCK  VALUE "Y".
       77 DataSet1-reva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-reva-KEY-Asc  VALUE "A".
          88 DataSet1-reva-KEY-Desc VALUE "D".
       77 DataSet1-teva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-teva-LOCK  VALUE "Y".
       77 DataSet1-teva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-teva-KEY-Asc  VALUE "A".
          88 DataSet1-teva-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-art-ordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-art-ordforn-LOCK  VALUE "Y".
       77 DataSet1-art-ordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-art-ordforn-KEY-Asc  VALUE "A".
          88 DataSet1-art-ordforn-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-destinif-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destinif-LOCK  VALUE "Y".
       77 DataSet1-destinif-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destinif-KEY-Asc  VALUE "A".
          88 DataSet1-destinif-KEY-Desc VALUE "D".
       77 DataSet1-sordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-sordforn-LOCK  VALUE "Y".
       77 DataSet1-sordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-sordforn-KEY-Asc  VALUE "A".
          88 DataSet1-sordforn-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-impforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-impforn-LOCK  VALUE "Y".
       77 DataSet1-impforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-impforn-KEY-Asc  VALUE "A".
          88 DataSet1-impforn-KEY-Desc VALUE "D".
       77 DataSet1-rlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rlistini-LOCK  VALUE "Y".
       77 DataSet1-rlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rlistini-KEY-Asc  VALUE "A".
          88 DataSet1-rlistini-KEY-Desc VALUE "D".

       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 tordforn-tof-k-consegna-SPLITBUF  PIC X(21).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 tmp-eva-k-prog-SPLITBUF  PIC X(11).
       77 tmp-eva-k-qta-SPLITBUF  PIC X(9).
       77 reva-reva-k-articolo-SPLITBUF  PIC X(26).
       77 teva-teva-stato-SPLITBUF  PIC X(14).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 destinif-K1-SPLITBUF  PIC X(51).
       77 destinif-desf-k2-SPLITBUF  PIC X(51).
       77 rlistini-rlis-k-art-SPLITBUF  PIC X(33).
       77 rlistini-rlis-k-descr-SPLITBUF  PIC X(66).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-forn VALUE 5001.
       78  78-ID-ef-dest VALUE 5002.
       78  78-ID-ef-mag VALUE 5003.
       78  78-ID-gd-t VALUE 5001.
       78  78-ID-gd-r VALUE 5002.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * ENTRY FIELD
       05
           ef-forn, 
           Entry-Field, 
           COL 13,00, 
           LINE 2,00,
           LINES 1,33 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-forn,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-forn-buf,
           AFTER PROCEDURE ef-anno-AfterProcedure, 
           BEFORE PROCEDURE ef-anno-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-dest, 
           Entry-Field, 
           COL 13,00, 
           LINE 4,50,
           LINES 1,33 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-dest,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-dest-buf,
           AFTER PROCEDURE ef-dest-AfterProcedure, 
           BEFORE PROCEDURE ef-dest-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-mag, 
           Entry-Field, 
           COL 13,00, 
           LINE 7,00,
           LINES 1,33 ,
           SIZE 6,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-mag,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 3,
           VALUE ef-mag-buf,
           AFTER PROCEDURE ef-num-AfterProcedure, 
           BEFORE PROCEDURE ef-num-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 2,10, 
           LINE 1,17,
           LINES 0,89 ,
           SIZE 1,60 ,
           FONT IS Default-Font,
           ID IS 5,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 2,00, 
           LINE 2,00,
           LINES 1,33 ,
           SIZE 9,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Fornitore",
           .

      * LABEL
       05
           Screen1-La-2, 
           Label, 
           COL 2,00, 
           LINE 7,00,
           LINES 1,31 ,
           SIZE 9,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Magazzino",
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 9,50,
           LINES 2,78 ,
           SIZE 54,60 ,
           LOWERED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUI, 
           Push-Button, 
           COL 39,30, 
           LINE 10,17,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-cancel, 
           Push-Button, 
           COL 47,30, 
           LINE 10,17,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-blockpgm-1, 
           Label, 
           COL 6,10, 
           LINE 1,00,
           LINES 0,44 ,
           SIZE 4,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           lab-mag, 
           Label, 
           COL 20,00, 
           LINE 7,00,
           LINES 2,00 ,
           SIZE 35,00 ,
           COLOR IS 5,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-mag-buf,
           .

      * LABEL
       05
           lab-forn, 
           Label, 
           COL 20,00, 
           LINE 2,00,
           LINES 2,00 ,
           SIZE 35,00 ,
           COLOR IS 5,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-forn-buf,
           .

      * LABEL
       05
           Screen1-La-1a, 
           Label, 
           COL 2,00, 
           LINE 4,50,
           LINES 1,33 ,
           SIZE 9,00 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Destino",
           .

      * LABEL
       05
           lab-dest, 
           Label, 
           COL 20,00, 
           LINE 4,50,
           LINES 2,00 ,
           SIZE 35,00 ,
           COLOR IS 5,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-dest-buf,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 11,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 12,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           Screen2, 
           .

      * GRID
       05
           gd-t, 
           Grid, 
           COL 16,75, 
           LINE 11,00,
           LINES 10,63 ,
           SIZE 95,00 ,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 5, 13, 18, 58, 68, 78, 80),
           ALIGNMENT ("C", "R", "R", "U", "C", "C", "C", "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(4)", "9(8)", "9(5)", "x(40)", "X(10)", "X(10)"
           , "9(2)", "9(7)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-t,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 92,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-codici, 
           Push-Button, 
           COL 1,38, 
           LINE 19,38,
           LINES 2,25 ,
           SIZE 10,13 ,
           BITMAP-HANDLE ALTERNATIVI-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED mod-campi,
           EXCEPTION-VALUE 1004,
           FLAT,
           FONT IS Small-Font,
           ID IS 87,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           SELF-ACT,
           TITLE "Creazione Codici Alternativi",
           AFTER PROCEDURE pb-codici-AfterProcedure, 
           BEFORE PROCEDURE pb-codici-BeforeProcedure, 
           .

      * GRID
       05
           gd-r, 
           Grid, 
           COL 1,13, 
           LINE 23,00,
           LINES 17,19 ,
           SIZE 126,38 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 7, 10, 13, 23, 123, 131, 139, 151, 163, 
           175, 187),
           ALIGNMENT ("R", "C", "C", "R", "L", "R", "R", "R", "R", "R", 
           "R", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "X(3)", "X(3)", "9(7)", "X(100)", "9(8)"
           , "9(8)", "9(10)", "9(8)", "9(8)", "9(8)", "9(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 481
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-r,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 124,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE gd-r-Event-Proc,
           .

      * PUSH BUTTON
       05
           PB-ESEGUIa, 
           Push-Button, 
           COL 107,13, 
           LINE 43,50,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUIa-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUIa-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           Form1-Pb-2a, 
           Push-Button, 
           COL 117,13, 
           LINE 43,50,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           NO-AUTO-DEFAULT,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2a-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2a-BeforeProcedure, 
           .

      * BAR
       05
           Screen2-Br-1, 
           Bar,
           COL 1,00, 
           LINE 22,50,
           SIZE 126,63 ,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 1,
           .

      * BAR
       05
           Screen2-Br-1a, 
           Bar,
           COL 1,00, 
           LINE 10,50,
           SIZE 126,63 ,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 1,
           .

      * BAR
       05
           Screen2-Br-1b, 
           Bar,
           COL 1,00, 
           LINE 43,31,
           SIZE 126,63 ,
           ID IS 502,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 16,75, 
           LINE 1,69,
           LINES 7,94 ,
           SIZE 95,00 ,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Selezione dati",
           TITLE-POSITION 2,
           .

      * LABEL
       05
           lab-magazzino, 
           Label, 
           COL 19,25, 
           LINE 7,19,
           LINES 1,31 ,
           SIZE 90,00 ,
           COLOR IS 5,
           FONT IS Verdana12-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-magazzino-buf,
           .

      * LABEL
       05
           lab-fornitore, 
           Label, 
           COL 19,25, 
           LINE 3,19,
           LINES 1,31 ,
           SIZE 90,00 ,
           COLOR IS 5,
           FONT IS Verdana12-Occidentale,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-fornitore-buf,
           .

      * LABEL
       05
           lab-destino, 
           Label, 
           COL 19,25, 
           LINE 5,19,
           LINES 1,31 ,
           SIZE 90,00 ,
           COLOR IS 5,
           FONT IS Verdana12-Occidentale,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-destino-buf,
           .

      * LABEL
       05
           Screen2-blockpgm-1, 
           Label, 
           COL 4,38, 
           LINE 1,63,
           LINES 1,00 ,
           SIZE 1,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen2-Custom1-1, 
           Label, 
           COL 6,13, 
           LINE 5,06,
           LINES 1,69 ,
           SIZE 5,25 ,
           FONT IS Default-Font,
           ID IS 9,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen2-La-1, 
           Label, 
           COL 27,50, 
           LINE 43,38,
           LINES 1,31 ,
           SIZE 73,63 ,
           COLOR IS 5,
           FONT IS Verdana12-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "NOTE: Verranno considerate solamente le righe con qta 
      -    "valorizzata!!!",
           .

      * LABEL
       05
           Screen2-La-1a, 
           Label, 
           COL 50,75, 
           LINE 41,00,
           LINES 1,31 ,
           SIZE 14,00 ,
           COLOR IS 5,
           FONT IS Verdana12-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "totale kg. utf",
           .

      * LABEL
       05
           lbl-utf, 
           Label, 
           COL 65,75, 
           LINE 41,00,
           LINES 1,31 ,
           SIZE 12,00 ,
           COLOR IS 5,
           FONT IS Verdana12-Occidentale,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE lbl-utf-buf,
           .

      * LABEL
       05
           Screen2-La-1b, 
           Label, 
           COL 28,75, 
           LINE 44,63,
           LINES 1,31 ,
           SIZE 73,63 ,
           COLOR IS 5,
           FONT IS Verdana12-Occidentale,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "I valori decimali verranno arrotondati alla 2^ cifra!!
      -    "!",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:evasione, INIT:evasione, BeforeDeclarative>
       TORDFORN-ERR SECTION.
           use after error procedure on TORDFORN.
           evaluate status-TORDFORN
           when "35"
                display message "File [TORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       RORDFORN-ERR SECTION.
           use after error procedure on RORDFORN.
           set tutto-ok  to true.
           evaluate status-RORDFORN
           when "35"
                display message "File [RORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [RORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[RORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       CLIENTI-ERR SECTION.
           use after error procedure on clienti.
           set tutto-ok  to true.
           evaluate status-clienti
           when "35"
                display message "File [CLIENTI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [CLIENTI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[CLIENTI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:evasione, INIT:evasione, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana10-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, ALTERNATIVI-BMP
      *    After-Program
           PERFORM accetordforn-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA

      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * PB-ESEGUI
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-cancel
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
      * pb-codici
           COPY RESOURCE "ALTERNATIVI.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "ALTERNATIVI.BMP", 
                   GIVING ALTERNATIVI-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-clienti
           PERFORM OPEN-articoli
           PERFORM OPEN-tordforn
           PERFORM OPEN-rordforn
           PERFORM OPEN-timballi
           PERFORM OPEN-tmagaz
           PERFORM OPEN-timbalqta
      *    tmp-eva OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-eva
           PERFORM OPEN-reva
           PERFORM OPEN-teva
           PERFORM OPEN-progmag
           PERFORM OPEN-timposte
           PERFORM OPEN-tmarche
           PERFORM OPEN-tpiombo
           PERFORM OPEN-art-ordforn
           PERFORM OPEN-tparamge
           PERFORM OPEN-tcaumag
           PERFORM OPEN-destinif
           PERFORM OPEN-sordforn
           PERFORM OPEN-param
           PERFORM OPEN-impforn
           PERFORM OPEN-rlistini
      *    After Open
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:evasione, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:evasione, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:evasione, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordforn
           IF STATUS-tordforn = "35"
              OPEN OUTPUT tordforn
                IF Valid-STATUS-tordforn
                   CLOSE tordforn
                   OPEN I-O tordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:evasione, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rordforn
           IF STATUS-rordforn = "35"
              OPEN OUTPUT rordforn
                IF Valid-STATUS-rordforn
                   CLOSE rordforn
                   OPEN I-O rordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-rordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:evasione, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:evasione, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:evasione, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-eva.
      * <TOTEM:EPT. INIT:evasione, FD:tmp-eva, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-eva
           IF NOT Valid-STATUS-tmp-eva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:tmp-eva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-reva.
      * <TOTEM:EPT. INIT:evasione, FD:reva, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O reva
           IF STATUS-reva = "35"
              OPEN OUTPUT reva
                IF Valid-STATUS-reva
                   CLOSE reva
                   OPEN I-O reva
                END-IF
           END-IF
           IF NOT Valid-STATUS-reva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:reva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-teva.
      * <TOTEM:EPT. INIT:evasione, FD:teva, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O teva
           IF STATUS-teva = "35"
              OPEN OUTPUT teva
                IF Valid-STATUS-teva
                   CLOSE teva
                   OPEN I-O teva
                END-IF
           END-IF
           IF NOT Valid-STATUS-teva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:teva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:evasione, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:evasione, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:evasione, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:evasione, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-art-ordforn.
      * <TOTEM:EPT. INIT:evasione, FD:art-ordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O art-ordforn
           IF STATUS-art-ordforn = "35"
              OPEN OUTPUT art-ordforn
                IF Valid-STATUS-art-ordforn
                   CLOSE art-ordforn
                   OPEN I-O art-ordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-art-ordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:art-ordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:evasione, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:evasione, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destinif.
      * <TOTEM:EPT. INIT:evasione, FD:destinif, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destinif
           IF NOT Valid-STATUS-destinif
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:destinif, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-sordforn.
      * <TOTEM:EPT. INIT:evasione, FD:sordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O sordforn
           IF STATUS-sordforn = "35"
              OPEN OUTPUT sordforn
                IF Valid-STATUS-sordforn
                   CLOSE sordforn
                   OPEN I-O sordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-sordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:sordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:evasione, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-impforn.
      * <TOTEM:EPT. INIT:evasione, FD:impforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT impforn
           IF NOT Valid-STATUS-impforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:impforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rlistini.
      * <TOTEM:EPT. INIT:evasione, FD:rlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rlistini
           IF NOT Valid-STATUS-rlistini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evasione, FD:rlistini, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-clienti
           PERFORM CLOSE-articoli
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-timballi
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-timbalqta
      *    tmp-eva CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-eva
           PERFORM CLOSE-reva
           PERFORM CLOSE-teva
           PERFORM CLOSE-progmag
           PERFORM CLOSE-timposte
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-art-ordforn
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-destinif
           PERFORM CLOSE-sordforn
           PERFORM CLOSE-param
           PERFORM CLOSE-impforn
           PERFORM CLOSE-rlistini
      *    After Close
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:evasione, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:evasione, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:evasione, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:evasione, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:evasione, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:evasione, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:evasione, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-tmp-eva.
      * <TOTEM:EPT. INIT:evasione, FD:tmp-eva, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-reva.
      * <TOTEM:EPT. INIT:evasione, FD:reva, BeforeClose>
      * <TOTEM:END>
           CLOSE reva
           .

       CLOSE-teva.
      * <TOTEM:EPT. INIT:evasione, FD:teva, BeforeClose>
      * <TOTEM:END>
           CLOSE teva
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:evasione, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:evasione, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:evasione, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:evasione, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-art-ordforn.
      * <TOTEM:EPT. INIT:evasione, FD:art-ordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE art-ordforn
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:evasione, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:evasione, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-destinif.
      * <TOTEM:EPT. INIT:evasione, FD:destinif, BeforeClose>
      * <TOTEM:END>
           CLOSE destinif
           .

       CLOSE-sordforn.
      * <TOTEM:EPT. INIT:evasione, FD:sordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE sordforn
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:evasione, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-impforn.
      * <TOTEM:EPT. INIT:evasione, FD:impforn, BeforeClose>
      * <TOTEM:END>
           CLOSE impforn
           .

       CLOSE-rlistini.
      * <TOTEM:EPT. INIT:evasione, FD:rlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE rlistini
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       tordforn-tof-k-consegna-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-consegna-SPLITBUF
           MOVE tof-data-consegna OF tordforn(1:8) TO 
           tordforn-tof-k-consegna-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-consegna-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE Low-Value TO tof-chiave
              ELSE
                 MOVE High-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE High-Value TO tof-chiave
              ELSE
                 MOVE Low-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

      * tordforn
       DataSet1-tordforn-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY >= tof-chiave
              ELSE
                 START tordforn KEY <= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY <= tof-chiave
              ELSE
                 START tordforn KEY >= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY > tof-chiave
              ELSE
                 START tordforn KEY < tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY < tof-chiave
              ELSE
                 START tordforn KEY > tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-LOCK
                 READ tordforn WITH LOCK 
                 KEY tof-chiave
              ELSE
                 READ tordforn WITH NO LOCK 
                 KEY tof-chiave
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE rof-rec OF rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE rof-rec OF rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       tmp-eva-k-prog-MERGE-SPLITBUF.
           INITIALIZE tmp-eva-k-prog-SPLITBUF
           MOVE tmp-eva-prog(1:10) TO tmp-eva-k-prog-SPLITBUF(1:10)
           .

       tmp-eva-k-qta-MERGE-SPLITBUF.
           INITIALIZE tmp-eva-k-qta-SPLITBUF
           MOVE tmp-eva-qta(1:8) TO tmp-eva-k-qta-SPLITBUF(1:8)
           .

       DataSet1-tmp-eva-INITSTART.
           IF DataSet1-tmp-eva-KEY-Asc
              MOVE Low-Value TO tmp-eva-chiave
           ELSE
              MOVE High-Value TO tmp-eva-chiave
           END-IF
           .

       DataSet1-tmp-eva-INITEND.
           IF DataSet1-tmp-eva-KEY-Asc
              MOVE High-Value TO tmp-eva-chiave
           ELSE
              MOVE Low-Value TO tmp-eva-chiave
           END-IF
           .

      * tmp-eva
       DataSet1-tmp-eva-START.
           IF DataSet1-tmp-eva-KEY-Asc
              START tmp-eva KEY >= tmp-eva-chiave
           ELSE
              START tmp-eva KEY <= tmp-eva-chiave
           END-IF
           .

       DataSet1-tmp-eva-START-NOTGREATER.
           IF DataSet1-tmp-eva-KEY-Asc
              START tmp-eva KEY <= tmp-eva-chiave
           ELSE
              START tmp-eva KEY >= tmp-eva-chiave
           END-IF
           .

       DataSet1-tmp-eva-START-GREATER.
           IF DataSet1-tmp-eva-KEY-Asc
              START tmp-eva KEY > tmp-eva-chiave
           ELSE
              START tmp-eva KEY < tmp-eva-chiave
           END-IF
           .

       DataSet1-tmp-eva-START-LESS.
           IF DataSet1-tmp-eva-KEY-Asc
              START tmp-eva KEY < tmp-eva-chiave
           ELSE
              START tmp-eva KEY > tmp-eva-chiave
           END-IF
           .

       DataSet1-tmp-eva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeWrite>
      * <TOTEM:END>
           WRITE tmp-eva-rec OF tmp-eva.
           MOVE STATUS-tmp-eva TO TOTEM-ERR-STAT
           MOVE "tmp-eva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-eva TO TOTEM-ERR-STAT
           MOVE "tmp-eva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-eva TO TOTEM-ERR-STAT
           MOVE "tmp-eva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva, AfterDelete>
      * <TOTEM:END>
           .

       reva-reva-k-articolo-MERGE-SPLITBUF.
           INITIALIZE reva-reva-k-articolo-SPLITBUF
           MOVE reva-qta OF reva(1:8) TO 
           reva-reva-k-articolo-SPLITBUF(1:8)
           MOVE reva-chiave OF reva(1:17) TO 
           reva-reva-k-articolo-SPLITBUF(9:17)
           .

       DataSet1-reva-INITSTART.
           IF DataSet1-reva-KEY-Asc
              MOVE Low-Value TO reva-chiave
           ELSE
              MOVE High-Value TO reva-chiave
           END-IF
           .

       DataSet1-reva-INITEND.
           IF DataSet1-reva-KEY-Asc
              MOVE High-Value TO reva-chiave
           ELSE
              MOVE Low-Value TO reva-chiave
           END-IF
           .

      * reva
       DataSet1-reva-START.
           IF DataSet1-reva-KEY-Asc
              START reva KEY >= reva-chiave
           ELSE
              START reva KEY <= reva-chiave
           END-IF
           .

       DataSet1-reva-START-NOTGREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY <= reva-chiave
           ELSE
              START reva KEY >= reva-chiave
           END-IF
           .

       DataSet1-reva-START-GREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY > reva-chiave
           ELSE
              START reva KEY < reva-chiave
           END-IF
           .

       DataSet1-reva-START-LESS.
           IF DataSet1-reva-KEY-Asc
              START reva KEY < reva-chiave
           ELSE
              START reva KEY > reva-chiave
           END-IF
           .

       DataSet1-reva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-reva-LOCK
              READ reva WITH LOCK 
              KEY reva-chiave
           ELSE
              READ reva WITH NO LOCK 
              KEY reva-chiave
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT 
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeWrite>
      * <TOTEM:END>
           WRITE reva-rec OF reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRewrite>
      * <TOTEM:END>
           REWRITE reva-rec OF reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeDelete>
      * <TOTEM:END>
           DELETE reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterDelete>
      * <TOTEM:END>
           .

       teva-teva-stato-MERGE-SPLITBUF.
           INITIALIZE teva-teva-stato-SPLITBUF
           MOVE teva-stato OF teva(1:1) TO teva-teva-stato-SPLITBUF(1:1)
           MOVE teva-chiave OF teva(1:12) TO 
           teva-teva-stato-SPLITBUF(2:12)
           .

       DataSet1-teva-INITSTART.
           IF DataSet1-teva-KEY-Asc
              MOVE Low-Value TO teva-chiave OF teva
           ELSE
              MOVE High-Value TO teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-INITEND.
           IF DataSet1-teva-KEY-Asc
              MOVE High-Value TO teva-chiave OF teva
           ELSE
              MOVE Low-Value TO teva-chiave OF teva
           END-IF
           .

      * teva
       DataSet1-teva-START.
           IF DataSet1-teva-KEY-Asc
              START teva KEY >= teva-chiave OF teva
           ELSE
              START teva KEY <= teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-START-NOTGREATER.
           IF DataSet1-teva-KEY-Asc
              START teva KEY <= teva-chiave OF teva
           ELSE
              START teva KEY >= teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-START-GREATER.
           IF DataSet1-teva-KEY-Asc
              START teva KEY > teva-chiave OF teva
           ELSE
              START teva KEY < teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-START-LESS.
           IF DataSet1-teva-KEY-Asc
              START teva KEY < teva-chiave OF teva
           ELSE
              START teva KEY > teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-teva-LOCK
              READ teva WITH LOCK 
              KEY teva-chiave OF teva
           ELSE
              READ teva WITH NO LOCK 
              KEY teva-chiave OF teva
           END-IF
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT 
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-teva-KEY-Asc
              IF DataSet1-teva-LOCK
                 READ teva NEXT WITH LOCK
              ELSE
                 READ teva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-teva-LOCK
                 READ teva PREVIOUS WITH LOCK
              ELSE
                 READ teva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-teva-KEY-Asc
              IF DataSet1-teva-LOCK
                 READ teva PREVIOUS WITH LOCK
              ELSE
                 READ teva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-teva-LOCK
                 READ teva NEXT WITH LOCK
              ELSE
                 READ teva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeWrite>
      * <TOTEM:END>
           WRITE teva-rec OF teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRewrite>
      * <TOTEM:END>
           REWRITE teva-rec OF teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeDelete>
      * <TOTEM:END>
           DELETE teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-INITSTART.
           IF DataSet1-art-ordforn-KEY-Asc
              MOVE Low-Value TO aor-chiave
           ELSE
              MOVE High-Value TO aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-INITEND.
           IF DataSet1-art-ordforn-KEY-Asc
              MOVE High-Value TO aor-chiave
           ELSE
              MOVE Low-Value TO aor-chiave
           END-IF
           .

      * art-ordforn
       DataSet1-art-ordforn-START.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY >= aor-chiave
           ELSE
              START art-ordforn KEY <= aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-START-NOTGREATER.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY <= aor-chiave
           ELSE
              START art-ordforn KEY >= aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-START-GREATER.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY > aor-chiave
           ELSE
              START art-ordforn KEY < aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-START-LESS.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY < aor-chiave
           ELSE
              START art-ordforn KEY > aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-art-ordforn-LOCK
              READ art-ordforn WITH LOCK 
              KEY aor-chiave
           ELSE
              READ art-ordforn WITH NO LOCK 
              KEY aor-chiave
           END-IF
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT 
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-art-ordforn-KEY-Asc
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn NEXT WITH LOCK
              ELSE
                 READ art-ordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn PREVIOUS WITH LOCK
              ELSE
                 READ art-ordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-art-ordforn-KEY-Asc
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn PREVIOUS WITH LOCK
              ELSE
                 READ art-ordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn NEXT WITH LOCK
              ELSE
                 READ art-ordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE aor-rec OF art-ordforn.
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE aor-rec OF art-ordforn.
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE art-ordforn.
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       destinif-K1-MERGE-SPLITBUF.
           INITIALIZE destinif-K1-SPLITBUF
           MOVE desf-ragsoc-1(1:40) TO destinif-K1-SPLITBUF(1:40)
           MOVE desf-codice(1:5) TO destinif-K1-SPLITBUF(41:5)
           MOVE desf-prog(1:5) TO destinif-K1-SPLITBUF(46:5)
           .

       destinif-desf-k2-MERGE-SPLITBUF.
           INITIALIZE destinif-desf-k2-SPLITBUF
           MOVE desf-codice(1:5) TO destinif-desf-k2-SPLITBUF(1:5)
           MOVE desf-ragsoc-1(1:40) TO destinif-desf-k2-SPLITBUF(6:40)
           MOVE desf-prog(1:5) TO destinif-desf-k2-SPLITBUF(46:5)
           .

       DataSet1-destinif-INITSTART.
           IF DataSet1-destinif-KEY-Asc
              MOVE Low-Value TO desf-chiave
           ELSE
              MOVE High-Value TO desf-chiave
           END-IF
           .

       DataSet1-destinif-INITEND.
           IF DataSet1-destinif-KEY-Asc
              MOVE High-Value TO desf-chiave
           ELSE
              MOVE Low-Value TO desf-chiave
           END-IF
           .

      * destinif
       DataSet1-destinif-START.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY >= desf-chiave
           ELSE
              START destinif KEY <= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-NOTGREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY <= desf-chiave
           ELSE
              START destinif KEY >= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-GREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY > desf-chiave
           ELSE
              START destinif KEY < desf-chiave
           END-IF
           .

       DataSet1-destinif-START-LESS.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY < desf-chiave
           ELSE
              START destinif KEY > desf-chiave
           END-IF
           .

       DataSet1-destinif-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destinif-LOCK
              READ destinif WITH LOCK 
              KEY desf-chiave
           ELSE
              READ destinif WITH NO LOCK 
              KEY desf-chiave
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT 
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-sordforn-INITSTART.
           IF DataSet1-sordforn-KEY-Asc
              MOVE Low-Value TO sof-chiave OF sordforn
           ELSE
              MOVE High-Value TO sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-INITEND.
           IF DataSet1-sordforn-KEY-Asc
              MOVE High-Value TO sof-chiave OF sordforn
           ELSE
              MOVE Low-Value TO sof-chiave OF sordforn
           END-IF
           .

      * sordforn
       DataSet1-sordforn-START.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY >= sof-chiave OF sordforn
           ELSE
              START sordforn KEY <= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-NOTGREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY <= sof-chiave OF sordforn
           ELSE
              START sordforn KEY >= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-GREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY > sof-chiave OF sordforn
           ELSE
              START sordforn KEY < sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-LESS.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY < sof-chiave OF sordforn
           ELSE
              START sordforn KEY > sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-sordforn-LOCK
              READ sordforn WITH LOCK 
              KEY sof-chiave OF sordforn
           ELSE
              READ sordforn WITH NO LOCK 
              KEY sof-chiave OF sordforn
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT 
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-impforn-INITSTART.
           IF DataSet1-impforn-KEY-Asc
              MOVE Low-Value TO imf-chiave OF impforn
           ELSE
              MOVE High-Value TO imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-INITEND.
           IF DataSet1-impforn-KEY-Asc
              MOVE High-Value TO imf-chiave OF impforn
           ELSE
              MOVE Low-Value TO imf-chiave OF impforn
           END-IF
           .

      * impforn
       DataSet1-impforn-START.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY >= imf-chiave OF impforn
           ELSE
              START impforn KEY <= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-NOTGREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY <= imf-chiave OF impforn
           ELSE
              START impforn KEY >= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-GREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY > imf-chiave OF impforn
           ELSE
              START impforn KEY < imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-LESS.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY < imf-chiave OF impforn
           ELSE
              START impforn KEY > imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-impforn-LOCK
              READ impforn WITH LOCK 
              KEY imf-chiave OF impforn
           ELSE
              READ impforn WITH NO LOCK 
              KEY imf-chiave OF impforn
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT 
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterDelete>
      * <TOTEM:END>
           .

       rlistini-rlis-k-art-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-art-SPLITBUF
           MOVE rlis-articolo OF rlistini(1:6) TO 
           rlistini-rlis-k-art-SPLITBUF(1:6)
           MOVE rlis-chiave-ricerca OF rlistini(1:26) TO 
           rlistini-rlis-k-art-SPLITBUF(7:26)
           .

       rlistini-rlis-k-descr-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-descr-SPLITBUF
           MOVE rlis-codice OF rlistini(1:15) TO 
           rlistini-rlis-k-descr-SPLITBUF(1:15)
           MOVE rlis-des-libera OF rlistini(1:50) TO 
           rlistini-rlis-k-descr-SPLITBUF(16:50)
           .

       DataSet1-rlistini-INITSTART.
           IF DataSet1-rlistini-KEY-Asc
              MOVE Low-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE High-Value TO rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-INITEND.
           IF DataSet1-rlistini-KEY-Asc
              MOVE High-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE Low-Value TO rlis-chiave OF rlistini
           END-IF
           .

      * rlistini
       DataSet1-rlistini-START.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY >= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY <= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-NOTGREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY <= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY >= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-GREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY > rlis-chiave OF rlistini
           ELSE
              START rlistini KEY < rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-LESS.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY < rlis-chiave OF rlistini
           ELSE
              START rlistini KEY > rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rlistini-LOCK
              READ rlistini WITH LOCK 
              KEY rlis-chiave OF rlistini
           ELSE
              READ rlistini WITH NO LOCK 
              KEY rlis-chiave OF rlistini
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT 
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE cli-rec OF clienti
           INITIALIZE art-rec OF articoli
           INITIALIZE tof-rec OF tordforn
           INITIALIZE rof-rec OF rordforn
           INITIALIZE imb-rec OF timballi
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE tmp-eva-rec OF tmp-eva
           INITIALIZE reva-rec OF reva
           INITIALIZE teva-rec OF teva
           INITIALIZE prg-rec OF progmag
           INITIALIZE imp-rec OF timposte
           INITIALIZE mar-rec OF tmarche
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE aor-rec OF art-ordforn
           INITIALIZE tge-rec OF tparamge
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE desf-rec OF destinif
           INITIALIZE sof-rec OF sordforn
           INITIALIZE prm-rec OF param
           INITIALIZE imf-rec OF impforn
           INITIALIZE rlis-rec OF rlistini
           .


      * GRID
       gd-t-Content.
      * CELLS' SETTING
              MODIFY gd-t, X = 1, Y = 1,
                CELL-DATA = "Anno",
      * CELLS' SETTING
              MODIFY gd-t, X = 2, Y = 1,
                CELL-DATA = "Numero",
      * CELLS' SETTING
              MODIFY gd-t, X = 3, Y = 1,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd-t, X = 5, Y = 1,
                CELL-DATA = "Ordine",
      * CELLS' SETTING
              MODIFY gd-t, X = 6, Y = 1,
                CELL-DATA = "Consegna",
      * CELLS' SETTING
              MODIFY gd-t, X = 7, Y = 1,
                CELL-DATA = "Mese",
      * CELLS' SETTING
              MODIFY gd-t, X = 8, Y = 1,
                CELL-DATA = "Stato",
           .

      * GRID
       gd-r-Content.
      * CELLS' SETTING
              MODIFY gd-r, X = 1, Y = 1,
                CELL-DATA = "Art",
      * CELLS' SETTING
              MODIFY gd-r, X = 2, Y = 1,
                CELL-DATA = "Mag",
      * CELLS' SETTING
              MODIFY gd-r, X = 3, Y = 1,
                CELL-DATA = "Imb",
      * CELLS' SETTING
              MODIFY gd-r, X = 4, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd-r, X = 5, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-r, X = 6, Y = 1,
                CELL-DATA = "Saldo",
      * CELLS' SETTING
              MODIFY gd-r, X = 7, Y = 1,
                CELL-DATA = "Q.tà",
      * CELLS' SETTING
              MODIFY gd-r, X = 8, Y = 1,
                CELL-DATA = "Prz. Fin.",
      * CELLS' SETTING
              MODIFY gd-r, X = 9, Y = 1,
                CELL-DATA = "I. Cons.",
      * CELLS' SETTING
              MODIFY gd-r, X = 10, Y = 1,
                CELL-DATA = "Cou/Cob",
      * CELLS' SETTING
              MODIFY gd-r, X = 11, Y = 1,
                CELL-DATA = "Add Pb",
      * CELLS' SETTING
              MODIFY gd-r, X = 12, Y = 1,
                CELL-DATA = "I. Merce",
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-eva-INITREC.
           INITIALIZE tmp-eva-rec OF tmp-eva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-reva-INITREC.
           INITIALIZE reva-rec OF reva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-teva-INITREC.
           INITIALIZE teva-rec OF teva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-art-ordforn-INITREC.
           INITIALIZE aor-rec OF art-ordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destinif-INITREC.
           INITIALIZE desf-rec OF destinif
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-sordforn-INITREC.
           INITIALIZE sof-rec OF sordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-impforn-INITREC.
           INITIALIZE imf-rec OF impforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rlistini-INITREC.
           INITIALIZE rlis-rec OF rlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 2 ALSO 0
                  PERFORM Screen2-Buf-To-Fld
           END-EVALUATE
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 11,28,
              SIZE 54,60,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS Form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Form1 UPON Form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM PB-ESEGUI-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Form1 UPON Form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>

      *<<** Customized_Default, SP-G, Screen1-blockpgm-1, Disable **>>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
           move 0 to ef-dest-buf

           .
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .

       Screen2-Open-Routine.
           PERFORM Screen2-Scrn
           PERFORM Screen2-Proc
           .

       Screen2-Scrn.
           PERFORM Screen2-Create-Win
           PERFORM Screen2-Init-Value
           PERFORM Screen2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen2-DISPLAY
           .

       Screen2-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 44,94,
              SIZE 126,63,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 1,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Screen2-Handle,
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen2 UPON Screen2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-t, DISPLAY-COLUMNS (1, 7, 17, 25, 45, 57, 69, 
           75)
              MODIFY gd-r, DISPLAY-COLUMNS (1, 7, 12, 17, 26, 62, 68, 
           74, 85, 95, 105, 115)
           .

       Screen2-PROC.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAccept>
           move 0 to prog-ins.

           set  cli-tipo-F  to true.
           move ef-forn-buf to cli-codice.
           read clienti no lock.

           move spaces to tge-chiave.
           read tparamge no lock.

           move 0 to riga-t.
           accept imp-data from century-date.
           start timposte key <= imp-chiave
                 invalid continue
             not invalid
                 read timposte previous
           end-start.

           set CallZoom to false.
           modify gd-t, reset-grid = 1.
           perform GD-T-CONTENT.
           modify gd-r, reset-grid = 1.
           perform GD-R-CONTENT.
           initialize lab-fornitore-buf.
           move ef-forn-buf to forn-z.
           string forn-z       delimited size
                  " - "        delimited size
                  lab-forn-buf delimited size
                  into lab-fornitore-buf
           end-string.

           initialize lab-destino-buf.
           move ef-dest-buf to forn-z.
           string forn-z       delimited size
                  " - "        delimited size
                  lab-dest-buf delimited size
                  into lab-destino-buf
           end-string.

           initialize lab-magazzino-buf.
           string ef-mag-buf  delimited size
                  " - "       delimited size
                  lab-mag-buf delimited size
                  into lab-magazzino-buf
           end-string.

           move low-value to tmp-eva-rec.
           start tmp-eva key >= tmp-eva-chiave 
                 invalid continue 
           end-start.
           move 2 to riga
           perform until 1 = 2
              read tmp-eva next at end exit perform end-read
              if tmp-eva-chiave-testa not = tof-chiave
                 move tmp-eva-chiave  to tof-chiave
                 read tordforn no lock invalid continue end-read
                 move tmp-eva-anno    to col-t-anno
                 move tmp-eva-numero  to col-t-num
                 move tmp-eva-data-c  to como-data
                 perform DATE-TO-SCREEN
                 move como-data       to col-t-data-c
                 move tmp-eva-data-o  to como-data
                 perform DATE-TO-SCREEN
                 move como-data       to col-t-data-o
                 move tmp-eva-mese    to col-t-mese  
                 move tmp-eva-stato   to col-t-stato
                 move tof-destino     to col-dest
                                         desf-prog
                 move tof-cod-forn    to desf-codice
                 read destinif invalid continue end-read
                 move desf-ragsoc-1   to col-ragsoc-dest
                 
                 modify gd-t(riga, 1), cell-data col-t-anno   
                 modify gd-t(riga, 2), cell-data col-t-num 
                 modify gd-t(riga, 3), cell-data col-dest
                 modify gd-t(riga, 4), cell-data col-ragsoc-dest
                 modify gd-t(riga, 5), cell-data col-t-data-o
                 modify gd-t(riga, 6), cell-data col-t-data-c 
                 modify gd-t(riga, 7), cell-data col-t-mese   
                 modify gd-t(riga, 8), cell-data col-t-stato
                 add 1 to riga
              end-if
           end-perform.
           display lab-fornitore lab-destino lab-magazzino.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen2
                 ON EXCEPTION
                    PERFORM Screen2-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen2-Handle
           INITIALIZE Key-Status
           .

       Screen2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAccept>
           if CallZoom
              move low-value to prg-rec
              set CallZoom to false
              inquire gd-r(store-riga, 1) hidden-data gruppo-hidden
              perform VALORIZZA-ORIG
              move ef-mag-buf to prg-cod-magazzino
              inquire gd-r(store-riga, 1), cell-data in prg-cod-articolo
              move prg-cod-articolo  to como-articolo
              move prg-cod-magazzino to como-magazzino
              move 0      to como-giacenza
              initialize save-prg-chiave replacing numeric data by 
           zeroes
                                              alphanumeric data by 
           spaces
              start progmag key is >=  key01
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read progmag next at end exit perform end-read
                    if prg-cod-articolo  not = como-articolo or
                       prg-cod-magazzino not = como-magazzino
                       exit perform
                    end-if
                    if prg-giacenza > como-giacenza  or
                                      como-giacenza = 0
                       move prg-chiave   to save-prg-chiave
                       move prg-giacenza to como-giacenza
                    end-if
                 end-perform
              end-start
              move save-prg-chiave to prg-chiave

              if hid-ordf
      *****           inquire gd-r(store-riga, 3), cell-data in prg-tipo-imballo
      *****           inquire gd-r(store-riga, 4), cell-data in prg-peso
                 move   "prg-artico-sons" to como-file
                 call   "zoom-gt"      using como-file, prg-rec
                                      giving stato-zoom
                 cancel "zoom-gt"
                 perform CONTROLLA-SCELTA-ZOOM
              else
                 move   "prg-tmagaz" to como-file
                 call   "zoom-gt" using como-file, prg-rec
                                 giving stato-zoom
                 cancel "zoom-gt"
                 perform CONTROLLA-SCELTA-ZOOM
              end-if
              if stato-zoom = 0
                 inquire gd-r(store-riga, 8) cell-data como-prz
                 move prg-cod-articolo  to col-r-articolo art-codice
                 move prg-cod-magazzino to col-r-mag      
                 move prg-tipo-imballo  to col-r-imb      imq-codice
                 move prg-peso          to col-r-peso
                 modify gd-r(store-riga, 1), cell-data col-r-articolo   
                         
                 modify gd-r(store-riga, 2), cell-data col-r-mag        
                    
                 modify gd-r(store-riga, 3), cell-data col-r-imb        
                    
                 modify gd-r(store-riga, 4), cell-data col-r-peso
                 perform DESCRIZIONE-ARTICOLO
                 modify gd-r(store-riga, 12),  cell-data col-r-imponib

                 modify gd-r(store-riga, 5),  cell-data col-r-descr
                 move hid-chiave to tmp-eva-chiave
                 read tmp-eva no lock
                      invalid
                      display message "Chiave " hid-chiave " non trovata
      -    ""
                               x"0d0a""Contattare assistenza!"
                                title tit-err
                                 icon 3
                   not invalid
                       perform TROVA-IMPOSTE
                 end-read
                 perform ARROTONDA-DA-4-A-2
                 move como-prz         to col-r-prz
                 move imposta-consumo  to col-r-cons
                 move imposta-cou      to col-r-cou
                 move add-piombo       to col-r-add
                 move como-imp-merce   to col-r-imponib

                 modify gd-r(event-data-2,  6), cell-data col-r-saldo
                 modify gd-r(event-data-2,  7), cell-data col-r-qta
                 modify gd-r(event-data-2,  8), cell-data col-r-prz
                 modify gd-r(event-data-2,  9), cell-data col-r-cons
                 modify gd-r(event-data-2, 10), cell-data col-r-cou
                 modify gd-r(event-data-2, 11), cell-data col-r-add
                 modify gd-r(event-data-2, 12), cell-data col-r-imponib
                 move 78-ID-gd-r to control-id
                 move          4 to accept-control
                 modify gd-r, cursor-y store-riga, cursor-x 1
              end-if           
           end-if.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen2-Exit
                 END-IF
              WHEN Key-Status = 1004
                 PERFORM pb-codici-LinkTo
              WHEN Key-Status = 1000
                 PERFORM PB-ESEGUIa-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen2-CLEAR.
           PERFORM Screen2-INIT-VALUE
           PERFORM Screen2-DISPLAY
           .

       Screen2-DISPLAY.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen2 UPON Screen2-Handle
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen1-blockpgm-1, Disable **>>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Screen2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen2-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-t-Content
      * GRID
           PERFORM gd-r-Content
           .

       Screen2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Update-Key.
           MOVE tof-rec OF tordforn TO
                     Screen2-MULKEY-TMPBUF
           PERFORM Screen2-CLEAR
           PERFORM Screen2-INIT-DATA
           MOVE Screen2-MULKEY-TMPBUF TO
                     tof-rec OF tordforn
           PERFORM DataSet1-tordforn-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
           .

       Screen2-DUPLICATE-MOVEKEY.
           .

       Screen2-First.
           PERFORM Screen2-DUMMY-FIRST
           PERFORM DataSet1-tordforn-INITSTART
           PERFORM DataSet1-tordforn-START
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Next
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFirst>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Previous.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tordforn-START-LESS
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Prev
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-PREVIOUS
           PERFORM Screen2-IUD-Display
           .

       Screen2-Next.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tordforn-START-GREATER
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Next
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterNext>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-NEXT
           PERFORM Screen2-IUD-Display
           .
      
       Screen2-Last.
           PERFORM Screen2-DUMMY-LAST
           PERFORM DataSet1-tordforn-INITEND
           PERFORM DataSet1-tordforn-START-NOTGREATER
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Prev
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterLast>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Curr.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordforn-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCurrent>
      * <TOTEM:END>
           .

       Screen2-IUD-Display.
           IF Valid-STATUS-tordforn
              PERFORM Screen2-ALLGRID-RESET
              PERFORM Screen2-Fld-To-Buf
              PERFORM Screen2-NAVI-FOR-MASTERGRID
              PERFORM Screen2-DISPLAY
           ELSE
              IF Screen2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Screen2-Extended-File-Status
              END-IF
           END-IF
           .

       Screen2-Add.
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-ADD
           PERFORM DataSet1-tordforn-INITREC
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordforn-Rec-Write
           IF Valid-STATUS-tordforn
              PERFORM Screen2-RESUMMARY-INS
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAdd>
      * <TOTEM:END>
           .
     
       Screen2-Update.
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordforn-START              
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-tordforn-Read
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-UPDATE
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordforn-Rec-Rewrite
           IF Valid-STATUS-tordforn
              PERFORM Screen2-RESUMMARY-DEL
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterUpdate>
      * <TOTEM:END>
           .

       Screen2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Screen2-DUMMY-DELETE
      * delete
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordforn-Rec-Delete
           IF Valid-STATUS-tordforn
              PERFORM Screen2-CLEAR
              PERFORM Screen2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-tordforn
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDelete>
      * <TOTEM:END>
           PERFORM Screen2-ERR-CHECKING
           .

       Screen2-NAVI-FOR-MASTERGRID.
           .

       Screen2-ERR-CHECKING.
           IF Valid-STATUS-tordforn
              PERFORM Screen2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Screen2-Extended-File-Status
           END-IF
           .

       Screen2-RESUMMARY-INS.
           .

       Screen2-RESUMMARY-DEL.
           .


       Screen2-DUMMY-FIRST.
           .

       Screen2-DUMMY-PREVIOUS.
           .

       Screen2-DUMMY-NEXT.
           .

       Screen2-DUMMY-LAST.
           .

       Screen2-DUMMY-CURR.
           .

       Screen2-DUMMY-ADD.
           .

       Screen2-DUMMY-UPDATE.
           .

       Screen2-DUMMY-UPDATE-INIT.
           .

       Screen2-DUMMY-DELETE.
           .

       Screen2-DUMMY-DELETE-INIT.
           .

       Screen2-Init-Value.
      * FORM : Screen2
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, SetDefault>
      * <TOTEM:END>
           PERFORM Screen2-FLD-TO-BUF
           .


       Screen2-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen2-SHOW-MSG-ROUTINE
           .

       Screen2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen2-DISPLAY-MESSAGE
           .

       Screen2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen2-Save-Status.
           MOVE DataSet1-tordforn-KEY1-ORDER TO TMP-Screen2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Screen2-KEYIS
           MOVE tof-rec OF tordforn TO 
              TMP-Screen2-tordforn-RESTOREBUF
           .             

       Screen2-Restore-Status.
           MOVE TMP-Screen2-KEY1-ORDER TO DataSet1-tordforn-KEY1-ORDER
           MOVE TMP-Screen2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Screen2-tordforn-RESTOREBUF TO
              tof-rec OF tordforn
           PERFORM DataSet1-tordforn-START
           IF Valid-STATUS-tordforn
              PERFORM DataSet1-tordforn-Read-Next
           ELSE
              PERFORM DataSet1-tordforn-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-tordforn OR
              (Valid-STATUS-tordforn AND
                 tof-rec OF tordforn = 
                   TMP-Screen2-tordforn-RESTOREBUF)
              PERFORM DataSet1-tordforn-Read-Next
           END-PERFORM
           .



       Screen1-Event-Proc.
           .

       Screen2-Event-Proc.
           .

       Screen2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       gd-r-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5002 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5002 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5002 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5002 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5002 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5002 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5002 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       ARROTONDA-DA-4-A-2.
      * <TOTEM:PARA. ARROTONDA-DA-4-A-2>
           inquire gd-r(event-data-2,  8), cell-data in como-prz-4dec.
           inquire gd-r(event-data-2,  9), cell-data in 
           imposta-consumo-4dec.
           inquire gd-r(event-data-2, 10), cell-data in 
           imposta-cou-4dec.
           inquire gd-r(event-data-2, 11), cell-data in add-piombo-4dec.
           inquire gd-r(event-data-2, 12), cell-data in 
           como-imp-merce-4dec.

           add 0,005 to como-prz-4dec        giving como-prz.
           move 00   to como-prz(12:2).
           add 0,005 to imposta-consumo-4dec giving imposta-consumo.
           move 00   to imposta-consumo(12:2).
           add 0,005 to imposta-cou-4dec     giving imposta-cou.
           move 00   to imposta-cou(12:2).
           add 0,005 to add-piombo-4dec      giving add-piombo.
           move 00   to add-piombo(12:2).
           add 0,005 to como-imp-merce-4dec  giving como-imp-merce.
           move 00   to como-imp-merce(12:2) 
           .
      * <TOTEM:END>

       ARTICOLI-DA-CONFERMARE.
      * <TOTEM:PARA. ARTICOLI-DA-CONFERMARE>
           move tof-chiave to aor-chiave-testa.
           start art-ordforn key >= aor-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read art-ordforn next at end exit perform end-read
                    if aor-chiave-testa not = tof-chiave
                       exit perform
                    end-if
                    add 1 to tmp-eva-prg
                    move tof-data-consegna   to tmp-eva-data-c
                    move tof-data-ordine     to tmp-eva-data-o
                    move tof-mese-rif        to tmp-eva-mese
                    if tof-inviato
                       move "INVIATO"        to tmp-eva-stato
                    else
                       move "IN LAVORAZIONE" to tmp-eva-stato
                    end-if
                    move aor-chiave-progmag  to tmp-eva-chiave-progmag
                    move aor-qta             to tmp-eva-saldo
                    move aor-descrizione     to tmp-eva-descrizione
                    move aor-prz-unit        to tmp-eva-prz-unit
                    compute tmp-eva-netto =  aor-netto + aor-costi-agg
                    move aor-imp-cons        to tmp-eva-imp-cons
                    move aor-coubat          to tmp-eva-coubat
                    move aor-add-pb          to tmp-eva-add-pb
                    move aor-chiave          to tmp-eva-chiave-ordf
                    set  tmp-eva-art         to true
                    move 0                   to tmp-eva-peso-utf
                    write tmp-eva-rec
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       CALCOLA-PESO-UTF.
      * <TOTEM:PARA. CALCOLA-PESO-UTF>
           move 0 to como-peso-utf

           move low-value to tmp-eva-chiave.
           start tmp-eva key >= tmp-eva-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-eva next at end exit perform end-read

                    compute como-peso-utf = 
                            como-peso-utf + 
                          ( tmp-eva-qta * tmp-eva-peso-utf )
                 end-perform
           end-start.

           move como-peso-utf to lbl-utf-buf
           modify lbl-utf  title lbl-utf-buf 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-ID-ef-forn
                set cli-tipo-F    to true
                move "clienti-CF" to como-file

                inquire ef-forn, value in cli-codice
                call "zoom-gt"   using como-file, cli-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move cli-codice   to ef-forn-buf
                   move cli-ragsoc-1 to lab-forn-buf
                   display ef-forn lab-forn       
                end-if

           when 78-ID-ef-dest
                move "destinif-forn" to como-file
                inquire ef-forn, value in desf-codice
                inquire ef-dest, value in desf-prog
                call "zoom-gt"   using como-file, desf-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move desf-prog     to ef-dest-buf
                   move desf-ragsoc-1 to lab-dest-buf
                   display ef-dest lab-dest
                end-if

           when 78-ID-ef-mag 
                move "tmagaz" to como-file

                inquire ef-mag, value in mag-codice
                call "zoom-gt"   using como-file, mag-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move mag-codice      to ef-mag-buf
                   move mag-descrizione to lab-mag-buf
                   display ef-mag lab-mag
                end-if                 
           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLA-SCELTA-ZOOM.
      * <TOTEM:PARA. CONTROLLA-SCELTA-ZOOM>
           if stato-zoom = 0
              move prg-cod-articolo to art-codice
              read articoli no lock invalid continue end-read
              if art-attivo
                 continue
              else
                 display message "Articolo NON attivo"
                           title tit-err
                            icon 2
                 move -1 to stato-zoom
              end-if
              if prg-attivo
                 continue
              else
                 display message "Progressivo NON attivo"
                           title tit-err
                            icon 2
                 move -1 to stato-zoom
              end-if
           end-if 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.
           evaluate control-id
           when 78-ID-ef-forn
                inquire ef-forn, value in cli-codice
                set cli-tipo-F to true
                read clienti no lock 
                     invalid
                     move spaces to cli-ragsoc-1
                     set errori to true
                     display message "Fornitore non valido"
                               title tit-err
                                icon 2
                end-read
                move cli-ragsoc-1 to lab-forn-buf
                display lab-forn
           when 78-ID-ef-dest
                inquire ef-forn, value in desf-codice
                inquire ef-dest, value in desf-prog
                if desf-prog = 0
                   move "Tutti i destini"   to desf-ragsoc-1
                else
                   read destinif no lock 
                        invalid
                        move spaces to desf-ragsoc-1
                        set errori to true
                        display message "Destino non valido"
                                  title tit-err
                                  icon 2
                   end-read
                end-if
                move desf-ragsoc-1 to lab-dest-buf
                display lab-dest
           when 78-ID-ef-mag
                inquire ef-mag, value in mag-codice
                read tmagaz no lock 
                     invalid
                     move spaces to mag-descrizione
                     set errori to true
                     display message "Magazzino non valido"
                               title tit-err
                               icon 2
                end-read
                move mag-descrizione to lab-mag-buf
                display lab-mag
           end-evaluate.

           if errori
              perform CANCELLA-COLORE
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       DESCRIZIONE-ARTICOLO.
      * <TOTEM:PARA. DESCRIZIONE-ARTICOLO>
           read articoli no lock invalid continue end-read.
           inspect art-descrizione replacing trailing 
                                   spaces by low-value.
           perform DESCRIZIONE-IMBALLO.
           initialize col-r-descr.

           string art-descrizione delimited low-value
                  " - "           delimited size
                  como-imballo    delimited size
                  into col-r-descr
           end-string 
           .
      * <TOTEM:END>

       DESCRIZIONE-IMBALLO.
      * <TOTEM:PARA. DESCRIZIONE-IMBALLO>
           read timbalqta invalid initialize imq-dati end-read.
      
           move imq-tipo to imb-codice.
           read timballi invalid initialize imb-dati end-read.

           inspect imb-descrizione replacing trailing spaces by 
           low-value.
           move imq-qta-imb     to imballi-ed.
           call "C$JUSTIFY"  using imballi-ed, "L".
           initialize como-imballo.
      
           string  imb-descrizione delimited by low-value
                   " da "          delimited by size
                   imballi-ed      delimited by spaces
                   " x "           delimited by size
                   art-udm-imballo delimited by size
                   into como-imballo
           end-string.

           inspect como-imballo replacing trailing spaces by low-value 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "imposte.cpy".
           copy "addizionale-piombo.cpy".
           copy "aggiorna-stato-ordf.cpy".
           copy "accessoxx.cpy".
           copy "trova-parametro.cpy" 
           .
      * <TOTEM:END>

       RIEMPI-GRID-R.
      * <TOTEM:PARA. RIEMPI-GRID-R>
           move low-value to tmp-eva-rec.
           inquire gd-t(riga, 1), cell-data in tof-anno.
           inquire gd-t(riga, 2), cell-data in tof-numero.
           move tof-anno   to tmp-eva-anno.
           move tof-numero to tmp-eva-numero.
           start tmp-eva key >= tmp-eva-chiave 
                 invalid continue 
           end-start.
           modify gd-r, reset-grid = 1.
           perform GD-R-CONTENT.
           move 1 to riga
           perform until 1= 2
              read tmp-eva next at end exit perform end-read
              if tmp-eva-chiave-testa not = tof-chiave
                 exit perform
              end-if
              add 1 to riga
              move tmp-eva-articolo to col-r-articolo
              move tmp-eva-codmag   to col-r-mag
              move tmp-eva-imballo  to col-r-imb
              move tmp-eva-peso     to col-r-peso
                                      
              move tmp-eva-articolo to art-codice           
              move tmp-eva-imballo  to imq-codice

              if art-codice = 0
                 move tmp-eva-descrizione to col-r-descr
              else
                 perform DESCRIZIONE-ARTICOLO
              end-if

              move tmp-eva-saldo    to col-r-saldo   
              move tmp-eva-qta      to col-r-qta     
              move tmp-eva-prz-unit to col-r-prz
              move tmp-eva-netto    to col-r-imponib
              move tmp-eva-imp-cons to col-r-cons
              move tmp-eva-coubat   to col-r-cou
              move tmp-eva-add-pb   to col-r-add

              modify gd-r(riga, 1),  cell-data col-r-articolo
              modify gd-r(riga, 2),  cell-data col-r-mag     
              modify gd-r(riga, 3),  cell-data col-r-imb     
              modify gd-r(riga, 4),  cell-data col-r-peso    
              modify gd-r(riga, 5),  cell-data col-r-descr   
              modify gd-r(riga, 6),  cell-data col-r-saldo   
              modify gd-r(riga, 7),  cell-data col-r-qta     
              modify gd-r(riga, 8),  cell-data col-r-prz     
              modify gd-r(riga, 9),  cell-data col-r-cons    
              modify gd-r(riga, 10), cell-data col-r-cou     
              modify gd-r(riga, 11), cell-data col-r-add     
              modify gd-r(riga, 12), cell-data col-r-imponib 

              move tmp-eva-chiave-ordf to hid-chiave-ordf
              move tmp-eva-chiave      to hid-chiave
              move tmp-eva-data-o      to hid-data-ordine
              move tmp-eva-saldo       to hid-saldo
              move tmp-eva-tipo        to hid-tipo
              move tmp-eva-cod-listino to hid-cod-listino
              move tmp-eva-chiave      to rof-chiave
              read rordforn no lock invalid continue end-read
              move rof-prg-chiave      to hid-prg-chiave
              modify gd-r(riga,  1),   hidden-data gruppo-hidden
           end-perform 
           .
      * <TOTEM:END>

       SCRIVI-RORDFORN.
      * <TOTEM:PARA. SCRIVI-RORDFORN>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "rordforn" to geslock-nome-file.

           set tutto-ok to true.
           move tmp-eva-chiave-ordf to rof-chiave.
           read rordforn lock key rof-chiave 
                invalid continue 
           end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read rordforn lock key rof-chiave
                        invalid continue 
                   end-read
              when ignora  exit perform
              end-evaluate
           end-perform.

           if not RecLocked
              perform STORNA-ORDINATO-AUMENTA-GIACENZA
              add  tmp-eva-qta             to rof-qta-evasa

      *    Luciano
      *        move tmp-eva-chiave-progmag  to rof-prg-chiave prg-chiave
      *        read progmag no lock invalid continue end-read
      *        move prg-peso-utf            to rof-peso-utf
      *        move prg-peso-non-utf        to rof-peso-non-utf
              move tmp-eva-chiave-progmag  to prg-chiave
              read progmag no lock invalid continue end-read
      *    Luciano fine
              move tmp-eva-imballo         to rof-imb-ordinato

              accept rof-data-ultima-modifica from century-date
              accept rof-ora-ultima-modifica  from time
              move user-codi to rof-utente-ultima-modifica
              rewrite rof-rec invalid continue end-rewrite
              unlock rordforn all records

      *****        if rof-qta-evasa >= rof-qta-ord
      *****           move rof-chiave to sof-chiave
      *****           delete sordforn record invalid continue end-delete
      *****        end-if
           end-if.

      ***---
       STORNA-ORDINATO-AUMENTA-GIACENZA.
           |Adesso devo stornare l'ordinato
           move rof-chiave-testa to tof-chiave.
           read tordforn no lock invalid continue end-read.
           move tof-causale      to link-causale.
           set link-update       to true.
           move rof-prg-chiave   to link-key.
           move tof-mese-rif     to link-mese-rif.
           move tof-chiave       to link-chiave-origine.

           move user-codi to link-user of link-wprogmag.
      *    Lo tolgo dal vecchio progressivo
           move tmp-eva-qta       to link-valore.
           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.

           |Se è scoperto (non ho ancora scritto)
           if rof-qta-ord > rof-qta-evasa
              if tmp-eva-qta > rof-qta-ord - rof-qta-evasa
                 compute link-valore = rof-qta-ord - rof-qta-evasa
              else
                 move tmp-eva-qta to link-valore
              end-if
           end-if.

           if link-valore > 0
              move "0000000000000000"   to link-array
              move -1 to multiplyer(3)
              call   "wprogmag" using link-wprogmag
              cancel "wprogmag"
           end-if.

      *    Dopodiché aggiungo direttamente la qta alla giacenza
           move tmp-eva-chiave-progmag to link-key.
           move tmp-eva-qta            to link-valore.
           move "1000000000000010"     to link-array.
           call   "wprogmag"        using link-wprogmag.
           cancel "wprogmag" 
           .
      * <TOTEM:END>

       SPOSTAMENTO-R.
      * <TOTEM:PARA. SPOSTAMENTO-R>
           inquire gd-r, last-row in tot-righe.
           move event-data-2 to riga.
           if riga < 2 move 2 to riga end-if.
           if riga > tot-righe move tot-righe to riga end-if.
           modify gd-r, start-x = 1, x = 12,
                        start-y = riga, y = riga,
                        region-color = 144.
           inquire gd-r(riga,  1),  cell-data in col-r-articolo.
           inquire gd-r(riga,  2),  cell-data in col-r-mag.
           inquire gd-r(riga,  3),  cell-data in col-r-imb.
           inquire gd-r(riga,  4),  cell-data in col-r-peso.
           inquire gd-r(riga,  5),  cell-data in col-r-descr.
           inquire gd-r(riga,  6),  cell-data in col-r-saldo.
           inquire gd-r(riga,  7),  cell-data in col-r-qta.
           inquire gd-r(riga,  8),  cell-data in col-r-prz.
           inquire gd-r(riga,  9),  cell-data in col-r-cons.
           inquire gd-r(riga, 10),  cell-data in col-r-cou.
           inquire gd-r(riga, 11),  cell-data in col-r-add.
           inquire gd-r(riga, 12),  cell-data in col-r-imponib.
           inquire gd-r(riga, 1), hidden-data in gruppo-hidden 
           .
      * <TOTEM:END>

       SPOSTAMENTO-T.
      * <TOTEM:PARA. SPOSTAMENTO-T>
           inquire gd-t, last-row in tot-righe.
           move event-data-2 to riga.
           if riga < 2 move 2 to riga end-if.
           if riga > tot-righe move tot-righe to riga end-if.
           modify gd-t, start-x = 1, x = 8,
                        start-y = riga, y = riga,
                        region-color = 144.

           if riga not = riga-t
              move riga to riga-t
              perform RIEMPI-GRID-R
           end-if 
           .
      * <TOTEM:END>

       STAMPE.
      * <TOTEM:PARA. STAMPE>
           move spaces to selprint-stampante.
           accept selprint-stampante from environment "STAMPANTE_EVASION
      -    "I_F".
           if selprint-stampante = spaces
              call   "selprint" using selprint-linkage
              cancel "selprint"
           end-if.

           if selprint-stampante not = space
              move selprint-linkage to st-bozze-selprint-linkage
              move teva-chiave      to stobz-da-teva-chiave
              move teva-chiave      to stobz-a-teva-chiave
              call   "st-bozze"  using st-bozze-linkage
              cancel "st-bozze"
              exit paragraph
              perform varying idx-ordf from 1 by 1 until idx-ordf > idx
                 move tab-chiave(idx-ordf) to stof-tof-chiave
                                              stof-tof-chiave-a
                 set stof-normale          to true
                 set stof-scegli-stampante to true
                 move selprint-linkage     to stof-selprint-stampante
                 call   "st-ordforn" using st-ordforn-linkage
                 cancel "st-ordforn"
              end-perform
           end-if
           .
      * <TOTEM:END>

       TROVA-IMPOSTE.
      * <TOTEM:PARA. TROVA-IMPOSTE>
           move prg-chiave to tmp-eva-chiave-progmag
                              prg-chiave.
           read progmag no lock
                invalid move 0 to prg-peso-utf
           end-read.
           move prg-peso-utf to tmp-eva-peso-utf.
           rewrite tmp-eva-rec.
           perform CALCOLA-PESO-UTF.
           set TrattamentoGDO to true.
           accept como-data-ordine from century-date.
           move art-marca-prodotto to tpb-marca.
           move como-data-ordine   to tpb-data.
           move 0 to como-prm-cliente como-prm-destino.
           inquire gd-r(riga, 8), cell-data como-prz-unitario.

           if como-prz-unitario not = 0
              perform CALCOLA-IMPOSTE
              perform ADDIZIONALE-PIOMBO
              |Se erano a zero significa che per qualche motivo
              |(listino o manuale) non vanno impostate perciò
              |le lascio a zero 
              if orig-imp-cons = 0
                 move 0 to imposta-consumo
              end-if
              if orig-coubat = 0
                 if ImpostaCou
                    move 0 to imposta-cou 
                 end-if
                 if ImpostaCobat
                    move 0 to imposta-cobat
                 end-if
              end-if
              if orig-add-pb = 0
                 move 0 to add-piombo
              end-if
              if como-prz-unitario < ( imposta-cou     + 
                                       imposta-cobat   +
                                       imposta-consumo + 
                                       add-piombo )
                 compute como-prz-unitario = 
                         imposta-cou       +
                         imposta-cobat     +
                         imposta-consumo   +
                         add-piombo
                 move 0 to como-imponibile
                 move como-prz-unitario to col-r-prz como-prz
                 modify gd-r(riga,  8), cell-data col-r-prz
              else   
                 if not trovato |articolo non a listino
                    compute como-imponibile = como-prz-unitario - 
                                              imposta-cou       -
                                              imposta-cobat     -
                                              imposta-consumo   -
                                              add-piombo
                 else
                    inquire gd-r(riga, 12), cell-data in col-r-imponib
                    move col-r-imponib to como-imponibile
                    
                    if imf-prz-reale-utf-meno
                       compute como-imponibile =
                               como-imponibile + 
                               orig-imp-cons   -
                               imposta-consumo
                    end-if
                    if imf-prz-reale-cou-meno
                       compute como-imponibile =
                               como-imponibile +
                               orig-coubat    -
                               imposta-cou
                    end-if
                    if imf-prz-reale-cobat-meno
                       compute como-imponibile = 
                               como-imponibile +
                               orig-coubat     -
                               imposta-cobat
                    end-if
                    if imf-prz-reale-pb-meno 
                       compute como-imponibile = 
                               como-imponibile +
                               orig-add-pb     -
                               add-piombo
                    end-if
                    compute como-prz-unitario = como-imponibile + 
                                                imposta-cou     +
                                                imposta-cobat   +
                                                imposta-consumo +
                                                add-piombo
                 end-if
   
              end-if
              move como-imponibile to col-r-imponib

              move imposta-consumo to col-r-cons
              add imposta-cou      to imposta-cobat
              move imposta-cobat   to col-r-cou
              move add-piombo      to col-r-add
           else
              move 0 to imposta-consumo col-r-cons
                        imposta-cou     col-r-cou
                        add-piombo      col-r-add col-r-imponib
           end-if.
           modify gd-r(riga,  9), cell-data col-r-cons.
           modify gd-r(riga, 10), cell-data col-r-cou.
           modify gd-r(riga, 11), cell-data col-r-add.
           modify gd-r(riga, 12), cell-data col-r-imponib.    

           move hid-chiave to tmp-eva-chiave.
           read tmp-eva no lock.

           move col-r-cons      to tmp-eva-imp-cons.
           move col-r-cou       to tmp-eva-coubat.
           move col-r-add       to tmp-eva-add-pb.
           move col-r-imponib   to tmp-eva-netto.

           rewrite tmp-eva-rec 
           .
      * <TOTEM:END>

       VALORIZZA-NUMERO.
      * <TOTEM:PARA. VALORIZZA-NUMERO>
           set tutto-ok to true.

           accept esercizio-x from environment "ESERCIZIO".
           move   esercizio-x to esercizio.

           move esercizio     to link-anno.

           set  link-evasione to true.
           set  link-crea     to true.

           call   "nambar" using link-nambar.
           cancel "nambar".
           
           if link-status-nambar = -1 set errori       to true
           else                       move link-numero to teva-numero
           end-if 
           .
      * <TOTEM:END>

       VALORIZZA-ORIG.
      * <TOTEM:PARA. VALORIZZA-ORIG>
           set trovato to true.
           move hid-chiave to tmp-eva-chiave.
           read tmp-eva no lock invalid continue end-read.
           move tmp-eva-imp-cons to orig-imp-cons.
           move tmp-eva-coubat   to orig-coubat.
           move tmp-eva-add-pb   to orig-add-pb.
           move tmp-eva-chiave-ordf to rof-chiave.
           read rordforn no lock
                invalid
                set trovato to false
            not invalid
                move rof-cod-listino  to rlis-codice
                move rof-cod-articolo to rlis-articolo
                read rlistini no lock
                     invalid set trovato to false
                 not invalid
                     move rlis-tipo-tratt-imposte to imf-codice
                     read impforn no lock
                          invalid set trovato to false
                     end-read
                end-read
           end-read 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-T 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-T 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-T 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-T 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-T 
           .
      * <TOTEM:END>
       ef-anno-BeforeProcedure.
      * <TOTEM:PARA. ef-anno-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-anno-AfterProcedure.
      * <TOTEM:PARA. ef-anno-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-num-BeforeProcedure.
      * <TOTEM:PARA. ef-num-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-num-AfterProcedure.
      * <TOTEM:PARA. ef-num-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       PB-ESEGUIa-LinkTo.
      * <TOTEM:PARA. PB-ESEGUIa-LinkTo>
           move high-value to tmp-eva-rec.
           start tmp-eva key <= k-qta invalid continue end-start.
           read  tmp-eva previous.
           if tmp-eva-qta not = 0
              display message "Confermi l'evasione?"
                        title titolo
                         type 2
                      default mb-no
                       giving scelta
              if scelta = mb-yes   
                 perform CREA-EVASIONE
                 perform STAMPE

                 call   "tprev-elab" using user-codi
                 cancel "tprev-elab"

                 move 27 to key-status
              end-if
           else
              display message "Nessuna quantità impostata!"
                        title titolo
           end-if.

      ***---
       CREA-EVASIONE.
           initialize teva-rec replacing numeric data by zeroes
                                    alphanumeric data by spaces.
           perform VALORIZZA-NUMERO.
           if tutto-ok  
              set SaveXX to true
              perform ACCESSOXX

              move 0 to idx
              initialize tab-ordf
              move link-anno   to teva-anno
              move link-numero to teva-numero
              accept teva-data from century-date
              move "F"         to teva-tipo-F
              move ef-forn-buf to teva-cod-forn
              move ef-mag-buf  to teva-mag
              set  teva-aperta to true
              accept teva-data-creazione from century-date
              accept teva-ora-creazione  from time
              move user-codi to teva-utente-creazione
              write teva-rec invalid continue end-write
              move low-value to tmp-eva-rec
              move 1 to tmp-eva-prog
              start tmp-eva key >= k-prog
                    invalid continue
              end-start
              initialize reva-rec replacing numeric data by zeroes
                                       alphanumeric data by spaces
              perform until 1 = 2

                 read tmp-eva next at end exit perform end-read
                 if tmp-eva-qta not = 0

                    set trovato to false
                    set idx-ordf to 1
                    search tab-chiave
                    when tab-chiave(idx-ordf) = 
           tmp-eva-chiave-testa-ordf
                         set trovato to true
                    end-search
                    if not trovato
                       add 1 to idx
                       move tmp-eva-chiave-testa-ordf to tab-chiave(idx)
                    end-if

                    if tmp-eva-art
                       perform CONFERMA-ARTICOLO
                    end-if
                    
                    move teva-chiave to reva-chiave-testa
                    add 1 to reva-riga
                    move tmp-eva-chiave-progmag to reva-chiave-progmag
                    move tmp-eva-qta            to reva-qta
                    
                    add 0,0005 to tmp-eva-prz-unit
                    add 0,005  to tmp-eva-prz-unit
                    move tmp-eva-prz-unit to reva-prz-unit
                    
                    add 0,0005 to tmp-eva-imp-cons
                    add 0,005  to tmp-eva-imp-cons
                    move tmp-eva-imp-cons to reva-imp-cons
                    
                    add 0,0005 to tmp-eva-coubat
                    add 0,005  to tmp-eva-coubat
                    move tmp-eva-coubat to reva-coubat

                    add 0,0005 to tmp-eva-add-pb
                    add 0,005  to tmp-eva-add-pb
                    move tmp-eva-add-pb to reva-add-pb
                    
                    compute reva-netto = reva-prz-unit -
                                         reva-imp-cons -
                                         reva-coubat   -
                                         reva-add-pb
                       
                    move tmp-eva-chiave-ordf    to reva-chiave-ordf
                    perform SCRIVI-RORDFORN
                    set  reva-attivo to true
                    accept reva-data-creazione from century-date
                    accept reva-ora-creazione  from time
                    move user-codi to reva-utente-creazione
                    write reva-rec invalid continue end-write
                 end-if
              end-perform

              if idx > 0
                 perform varying idx-ordf from 1 by 1 
                           until idx-ordf > idx
                    move tab-chiave(idx-ordf) to tof-chiave
                    perform AGGIORNA-STATO-ORDF
                 end-perform
              end-if

               move teva-chiave to cke-chiave
               call   "check-eva-f" using cke-linkage
               cancel "check-eva-f"

               if cke-stato not = 0
                  perform 3 times
                     display message "ERRORE IMPOSTE ! "
                           title tit-err
                            icon 2
                   end-perform
                end-if

              perform DESTROYXX
           end-if.

      ***---
       CONFERMA-ARTICOLO.
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "tordforn" to geslock-nome-file.

           set tutto-ok to true.
           move tmp-eva-chiave-testa-ordf to tof-chiave.
           read tordforn lock key tof-chiave invalid continue end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova
                   read tordforn lock key tof-chiave
                        invalid continue
                   end-read
              end-evaluate
           end-perform.

           if not RecLocked
              move high-value to rof-rec
              move tmp-eva-chiave-testa-ordf to rof-chiave-testa
              start rordforn key <= rof-chiave
                    invalid continue
                not invalid
                    read rordforn previous
                    if rof-chiave-testa not = tof-chiave
                       move tof-chiave to rof-chiave-testa
                       move 0 to rof-riga
                    end-if

                    initialize rof-dati replacing numeric data by zeroes
                                             alphanumeric data by spaces
                    add 1 to rof-riga
                    move tmp-eva-chiave-ordf to aor-chiave
                    read art-ordforn no lock
                         invalid
                         display message "Errore: ART-ORDFORN NON TROVAT
      -    "O"
                                  x"0d0a""Contattare assistenza"
                                   title tit-err
                                    icon 3
                     not invalid
                         delete art-ordforn record
                                invalid continue
                         end-delete
                    end-read

                    move tmp-eva-chiave-progmag  to rof-prg-chiave 
           prg-chiave
                    read progmag no lock invalid continue end-read

                    move tmp-eva-imballo    to rof-imb-ordinato
                    move aor-qta            to rof-qta-ord

                    move tmp-eva-prz-unit   to rof-prz-unitario
                    move tmp-eva-netto      to rof-imponib-merce
                    move tmp-eva-imp-cons   to rof-imp-consumo
                    move tmp-eva-coubat     to rof-imp-cou-cobat
                    move tmp-eva-add-pb     to rof-add-piombo

                    if rof-prz-unitario = 0
                       move tge-cod-iva-omag to rof-cod-iva
                    else
                       if cli-iva-ese = spaces
                          move tge-cod-iva-std to rof-cod-iva
                       else
                          move cli-iva-ese to rof-cod-iva
                       end-if
                    end-if

                    move prg-peso-utf     to rof-peso-utf
                    move prg-peso-non-utf to rof-peso-non-utf

                    accept rof-data-creazione from century-date
                    accept rof-ora-creazione  from time
                    move user-codi  to rof-utente-creazione
                    write rof-rec invalid continue end-write

      *****              move rof-chiave to sof-chiave
      *****              delete sordforn record invalid continue end-delete

                    |Riassegno la chiave di collegamento evasione - ordine
                    move rof-chiave to tmp-eva-chiave-ordf
                    rewrite tmp-eva-rec

                    if rof-qta-ord > rof-qta-evasa
                       |Adesso devo stornare l'ordinato
                       move rof-chiave-testa to tof-chiave
                       read tordforn no lock invalid continue end-read
                       move tof-causale      to link-causale
                       set link-update       to true
                       move rof-prg-chiave   to link-key
                       move tof-mese-rif     to link-mese-rif
                       move tof-chiave       to link-chiave-origine

                       move user-codi to link-user of link-wprogmag
      *                Lo tolgo dal vecchio progressivo

                       move rof-qta-ord to link-valore

                       set link-update-um     to true
                       set link-update-peso   to false
                       set link-update-valore to false

                       move "0010000000000000" to link-array
                       call   "wprogmag"    using link-wprogmag
                       cancel "wprogmag"
                    end-if

              end-start

              set tof-da-confermare-no to true
              move low-value  to aor-rec
              move tof-chiave to aor-chiave-testa
              start art-ordforn key >= aor-chiave
                    invalid continue
                not invalid
                    read art-ordforn next 
                    if aor-chiave-testa = tof-chiave
                       set tof-da-confermare-si to true
                    end-if
              end-start
              rewrite tof-rec invalid continue end-rewrite
              unlock tordforn all record

           end-if 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       PB-ESEGUIa-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-BeforeProcedure>
           modify PB-ESEGUIa, bitmap-number 2
           .
      * <TOTEM:END>
       PB-ESEGUIa-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-AfterProcedure>
           modify PB-ESEGUIa, bitmap-number 1
           .
      * <TOTEM:END>
       Form1-Pb-2a-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-BeforeProcedure>
           modify Form1-Pb-2a, bitmap-number 2
           .
      * <TOTEM:END>
       Form1-Pb-2a-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-AfterProcedure>
           modify Form1-Pb-2a, bitmap-number 1
           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify PB-ESEGUI, bitmap-number 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify PB-ESEGUI, bitmap-number 1 
           .
      * <TOTEM:END>
       PB-ESEGUI-LinkTo.
      * <TOTEM:PARA. PB-ESEGUI-LinkTo>
           perform varying control-id from 78-ID-ef-forn by 1
                     until control-id > 78-ID-ef-mag
              perform CONTROLLO
              if errori
                 exit perform
              end-if
           end-perform.

           if tutto-ok
      *        inquire ef-forn, VALUE ef-forn-buf
      *        inquire ef-dest, VALUE ef-dest-buf
      *        inquire ef-mag,  VALUE ef-mag-buf

              modify form1-handle, visible false
              initialize path-tmp-eva
              accept path-tmp-eva from environment "PATH_ST"
              accept como-data    from century-date
              accept como-ora     from time
              inspect path-tmp-eva replacing trailing spaces by 
           low-value
              string  path-tmp-eva delimited low-value
                      "TMP_EVA_"   delimited size
                      como-data    delimited size
                      "_"          delimited size
                      como-ora     delimited size
                      ".tmp"       delimited size
                      into path-tmp-eva
              end-string
              open output tmp-eva
              close       tmp-eva
              open i-o    tmp-eva
              perform RIEMPI-TMP
              if trovato
                 perform SCREEN2-OPEN-ROUTINE
              else
                 display message "Nessun ordine fornitore trovato"
                           title tit-err
                            icon 2
              end-if
              close       tmp-eva
              delete file tmp-eva
              perform CANCELLA-COLORE
              move 78-ID-ef-forn to control-id
              move 4             to accept-control
              modify form1-handle, visible true
           end-if.

           perform CANCELLA-COLORE.
           modify pb-esegui, bitmap-number = 1.
           modify pb-cancel, bitmap-number = 1.

      ***---
       RIEMPI-TMP.
           set trovato to false.
           move low-value         to tof-rec.
           set tof-in-lavorazione to true.
           move ef-forn-buf       to tof-cod-forn.

           if ef-dest-buf = 0
              move low-value      to tof-destino
           else
              move ef-dest-buf    to tof-destino
           end-if.
           start tordforn key >= k-fornitore
                 invalid continue
             not invalid
                 perform until 1 = 2
                    set rec-ok  to true
                    read tordforn next at end exit perform end-read
                    initialize tmp-eva-rec
                               replacing numeric data by zeroes
                                    alphanumeric data by spaces
                    if tof-cod-forn  not = ef-forn-buf 
                       exit perform
                    end-if

      *    faccio il controllo diverso a seconda del destino
                    if ef-dest-buf = 0
                       if tof-inserito  or
                          |tof-accettato or
                          tof-chiuso
                          set rec-ok  to false
                       end-if
                    else
                       if tof-destino not = ef-dest-buf
                          exit perform
                       end-if
              
                       if tof-inserito  or
                          |tof-accettato or
                          tof-chiuso
                          exit perform
                       end-if
                    end-if

                    if rec-ok
                       perform RIEMPI-TMP-2
                    end-if
                 end-perform
           end-start.

      ***---
       RIEMPI-TMP-2.
           move tof-causale to tca-codice
           read tcaumag no lock 
                invalid continue 
           end-read
      *     if tca-cod-magaz = ef-mag-buf
              set  trovato    to true
              move tof-anno   to tmp-eva-anno
              move tof-numero to tmp-eva-numero
              move tof-chiave to rof-chiave-testa
              move 0          to rof-riga
              start rordforn key >= rof-chiave
                    invalid continue
                not invalid
                    move 0 to tmp-eva-prg
                    perform until 1 = 2
                       read rordforn next 
                            at end 
                            exit perform 
                       end-read
                       if rof-chiave-testa not = tof-chiave
                          exit perform
                       end-if
                       move rof-chiave        to tmp-eva-chiave
                       move tof-data-consegna to tmp-eva-data-c
                       move tof-data-ordine   to tmp-eva-data-o
                       move tof-mese-rif      to tmp-eva-mese
                       if tof-inviato
                          move "INVIATO"        to tmp-eva-stato
                       else
                          move "IN LAVORAZIONE" to tmp-eva-stato
                       end-if
      *    Luciano
      *                 move rof-prg-chiave  to tmp-eva-chiave-progmag
                       perform RECUPERA-PROGRESSIVO
      *    Luciano fine
                       if rof-qta-evasa < rof-qta-ord
                          compute tmp-eva-saldo = 
                                  rof-qta-ord - rof-qta-evasa
                       else
                          move 0 to tmp-eva-saldo
                       end-if
      *****                 move rof-prz-unitario     to tmp-eva-prz-unit
                       move rof-imponib-merce    to tmp-eva-netto
                       move rof-imp-consumo      to tmp-eva-imp-cons
                       move rof-imp-cou-cobat    to tmp-eva-coubat
                       move rof-add-piombo       to tmp-eva-add-pb
                       compute tmp-eva-prz-unit =   tmp-eva-netto    +
                                                    tmp-eva-imp-cons +
                                                    tmp-eva-coubat   +
                                                    tmp-eva-add-pb
                       move rof-chiave           to tmp-eva-chiave-ordf
                       move rof-cod-listino      to tmp-eva-cod-listino
                       set  tmp-eva-ordf         to true
                       move rof-peso-utf         to tmp-eva-peso-utf
                       write tmp-eva-rec
                    end-perform
              end-start
              if tof-da-confermare-si
                 perform ARTICOLI-DA-CONFERMARE
              end-if.
      *     end-if.

      ***---
       RECUPERA-PROGRESSIVO.
           if rof-cod-magazzino = ef-mag-buf
              move rof-prg-chiave  to tmp-eva-chiave-progmag
           else
              perform RECUPERA-PROGMAG
           end-if.

      *                 move ef-mag-buf            to tmp-eva-codmag


      ***---
       RECUPERA-PROGMAG.
           move rof-cod-articolo   to prg-cod-articolo.
           move ef-mag-buf         to prg-cod-magazzino.
           move low-value          to prg-tipo-imballo
                                      prg-peso.

           initialize tmp-eva-chiave-progmag.
           move 0 to max-qta.
           start PROGMAG key >= prg-chiave
              invalid 
                 continue
              not invalid
                 perform until 1 = 2
                    read PROGMAG next no lock 
                       at end 
                          exit perform
                    end-read
                    if prg-cod-articolo  not = rof-cod-articolo or
                       prg-cod-magazzino not = ef-mag-buf
                       exit perform
                    end-if
                    if prg-cod-magazzino not = space
      *    luciano inizio                       
                       if prg-attivo or prg-disattivo
      *    luciano fine
                          move prg-giacenza to como-giacenza-2
                          if como-giacenza-2 > max-qta
                             move prg-chiave   to tmp-eva-chiave-progmag
                             move como-giacenza-2 to max-qta
                          else
                             if max-qta = zero
                                move prg-chiave   
                                               to tmp-eva-chiave-progmag
                                move como-giacenza-2 to max-qta
                             end-if
                          end-if
                        end-if
                    end-if
                 end-perform
           end-start.

           if tmp-eva-articolo = zero
              move rof-cod-articolo   to tmp-eva-articolo
           end-if.

      *     move tmp-eva-chiave-progmag to prg-chiave
      *     read progmag no lock invalid continue end-read.
      *
      *     move prg-tipo-imballo   to ef-imb-ord-buf
      *     modify ef-imb-ord value ef-imb-ord-buf 
           .
      * <TOTEM:END>
       Form1-Pb-2-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2-BeforeProcedure>
           modify pb-cancel, bitmap-number 2 
           .
      * <TOTEM:END>
       Form1-Pb-2-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2-AfterProcedure>
           modify pb-cancel, bitmap-number 1 
           .
      * <TOTEM:END>
       accetordforn-Ev-After-Program.
      * <TOTEM:PARA. accetordforn-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           set environment "KEYSTROKE" to "DATA=46   46".
           set environment "KEYSTROKE" to "DATA=44   44" 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Entry>
           evaluate event-data-1
           when  1
           when  2
           when  3
           when  4 
                inquire gd-r, entry-reason in como-x
                evaluate como-x
                when x"0D"|Invio
                when X"00"|doppio click
                     set event-action to event-action-fail-terminate
                     inquire gd-r, cursor-y = store-riga
                     set CallZoom to true
                when other
                     set event-action to event-action-fail
                end-evaluate 

           when  7 
                 inquire gd-r(event-data-2, 2), cell-data in col-r-mag
                 if col-r-mag not = ef-mag-buf
                    display message "Assegnare un magazzino corretto"
                              title tit-err
                               icon 2
                    set event-action to event-action-fail
                 else
                    inquire gd-r(event-data-2, 1), cell-data in 
           prg-cod-articolo
                    inquire gd-r(event-data-2, 2), cell-data in 
           prg-cod-magazzino
                    inquire gd-r(event-data-2, 3), cell-data in 
           prg-tipo-imballo
                    inquire gd-r(event-data-2, 4), cell-data in prg-peso
                    read progmag no lock
                         invalid
                         display message "Progressivo inesistente, asseg
      -    "nare un progressivo corretto"
                                   title tit-err
                                    icon 2
                         set event-action to event-action-fail
                     not invalid
                         if prg-attivo
                            continue
                         else
                            display message "Progressivo non attivo, ass
      -    "egnare un progressivo corretto"
                                      title tit-err
                                       icon 2
                            set event-action to event-action-fail
                         end-if
                    end-read       
                 end-if
           when  8
      *****          inquire gd-r(event-data-2, 1), hidden-data in gruppo-hidden
      *****          if hid-cod-listino = 0
      *****             set environment "KEYSTROKE" to "DATA=44 46"
      *****          else
      *****             display message "Valori da listino!"
      *****                       title titolo
      *****                        icon 2
                   set event-action to event-action-fail
      *****          end-if

           when  9
           when 10 
                inquire gd-r(event-data-2, 1), hidden-data in 
           gruppo-hidden
                if hid-cod-listino = 0
                   inquire gd-r(event-data-2, 8), cell-data in como-prz
                   if como-prz = 0
                      set event-action to event-action-fail
                   else
                      set environment "KEYSTROKE" to "DATA=44 46"
                   end-if
                else
                   display message "Valori da listino!"
                             title titolo
                              icon 2
                   set event-action to event-action-fail
                end-if

           when 11 
                inquire gd-r(event-data-2, 1), hidden-data in 
           gruppo-hidden
                if hid-cod-listino = 0
                   inquire gd-r(event-data-2, 8), cell-data in como-prz
                   if como-prz = 0
                      set event-action to event-action-fail
                   else
                      set environment "KEYSTROKE" to "DATA=44 46"
                      inquire gd-r(event-data-2, 1), cell-data in 
           col-r-articolo
                      move col-r-articolo to art-codice
                      read articoli no lock invalid continue end-read
                      if art-no-cobat
                         set event-action to event-action-fail
                      end-if
                   end-if
                else
                   display message "Valori da listino!"
                             title titolo
                              icon 2
                   set event-action to event-action-fail
                end-if
           when other 
                set event-action to event-action-fail
           end-evaluate.

           inquire gd-r(event-data-2, 1), cell-data in art-codice.
           inquire gd-r(event-data-2, 2), cell-data in 
           prg-cod-magazzino.
           inquire gd-r(event-data-2, 3), cell-data in prg-tipo-imballo.
           inquire gd-r(event-data-2, 4), cell-data in prg-peso.
           move art-codice to prg-cod-articolo.

           read articoli no lock.
           read progmag  no lock 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       pb-codici-BeforeProcedure.
      * <TOTEM:PARA. pb-codici-BeforeProcedure>
           modify pb-codici, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-codici-AfterProcedure.
      * <TOTEM:PARA. pb-codici-AfterProcedure>
           modify pb-codici, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-codici-LinkTo.
      * <TOTEM:PARA. pb-codici-LinkTo>
           initialize link-wprogmag replacing numeric data by zeroes
                                         alphanumeric data by spaces.

           set link-accept      to true.
           move col-r-articolo  to link-articolo.
           move ef-mag-buf      to link-magazzino.
           move hid-imballo     to link-imballo.
           move hid-peso        to link-peso.
           move user-codi       to link-user of link-wprogmag.
           call   "wprogmag" using link-wprogmag.
           cancel "wprogmag" 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Finish-Entry>
           move 0 to como-prz.       
           move 0 to imposta-consumo.
           move 0 to imposta-cou.    
           move 0 to add-piombo.     
           move 0 to como-imp-merce. 

           set tutto-ok to true.
           inquire gd-r, cursor-y in riga.
           inquire gd-r(riga,  1), hidden-data in gruppo-hidden.

           perform VALORIZZA-ORIG.

           inquire gd-r(riga,  6), cell-data in col-r-saldo.
           inquire gd-r(riga,  7), cell-data in col-r-qta.
           perform ARROTONDA-DA-4-A-2.

           move col-r-qta   to tmp-eva-qta.
      *    luciano
      *     if hid-saldo >= tmp-eva-qta
      *        compute tmp-eva-saldo = hid-saldo - tmp-eva-qta
      *     else
      *        move 0 to tmp-eva-saldo
      *     end-if.
           if tmp-eva-qta > hid-saldo
              set errori to true
              set event-action to event-action-fail
              display message "Impossibile evadere più di quanto ordinat
      -    "o"
                        title tit-err
                         icon 2
           else
              if hid-saldo >= tmp-eva-qta
                 compute tmp-eva-saldo = hid-saldo - tmp-eva-qta
              else
                 move 0 to tmp-eva-saldo
              end-if
              move tmp-eva-saldo to col-r-saldo
           end-if.

      *    luciano fine
           if tutto-ok
              if  como-prz < ( imposta-consumo + imposta-cou + 
           add-piombo )
              and como-prz not = 0
                 set errori to true
                 set event-action to event-action-fail
                 display message "Valore errato"
                           title tit-err
                            icon 2  
              else
                 evaluate event-data-1
                 when 7
                      perform TROVA-IMPOSTE
                 when 8
                      if imposta-consumo = 0 or
                         imposta-cou     = 0 or
                         add-piombo      = 0 and hid-articolo
                         move como-prz to como-prz-unitario
                         perform TROVA-IMPOSTE
                      end-if 
                 end-evaluate
                 if como-prz = 0
                    move 0 to imposta-consumo
                              imposta-cou
                              add-piombo
                 end-if
                 compute como-imp-merce  =
                         como-prz        -
                         imposta-consumo -
                         imposta-cou     -
                         add-piombo
                 set environment "KEYSTROKE" to "DATA=44   44"
                 set environment "KEYSTROKE" to "DATA=46   46"
              end-if

              move como-prz         to col-r-prz
              move imposta-consumo  to col-r-cons
              move imposta-cou      to col-r-cou
              move add-piombo       to col-r-add
              move como-imp-merce   to col-r-imponib

              modify gd-r(riga,  6), cell-data col-r-saldo
              modify gd-r(riga,  7), cell-data col-r-qta
              modify gd-r(riga,  8), cell-data col-r-prz
              modify gd-r(riga,  9), cell-data col-r-cons
              modify gd-r(riga, 10), cell-data col-r-cou
              modify gd-r(riga, 11), cell-data col-r-add
              modify gd-r(riga, 12), cell-data col-r-imponib
           end-if.

           if tutto-ok
              move hid-chiave to tmp-eva-chiave
              read tmp-eva no lock
                   invalid
                   display message "Chiave " hid-chiave " non trovata"
                            x"0d0a""Contattare assistenza!"
                             title tit-err
                              icon 3
               not invalid
                   move col-r-saldo     to tmp-eva-saldo
                   move col-r-qta       to tmp-eva-qta
                   move col-r-prz       to tmp-eva-prz-unit
                   move col-r-cons      to tmp-eva-imp-cons
                   move col-r-cou       to tmp-eva-coubat
                   move col-r-add       to tmp-eva-add-pb
                   move col-r-imponib   to tmp-eva-netto

                   if tmp-eva-qta not = 0
                      if tmp-eva-prog = 0
                         add 1 to prog-ins
                         move prog-ins to tmp-eva-prog
                      end-if
                   else
                      move 0 to tmp-eva-prog
                   end-if

                   rewrite tmp-eva-rec
                   perform CALCOLA-PESO-UTF
              end-read
           end-if 
           .
      * <TOTEM:END>
       ef-dest-BeforeProcedure.
      * <TOTEM:PARA. ef-dest-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-dest-AfterProcedure.
      * <TOTEM:PARA. ef-dest-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

