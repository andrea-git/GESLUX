      *{TOTEM}PRG-COMMENT
      * art-ordforn.Cbl
      * art-ordforn.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          art-ordforn.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        lunedì 2 febbraio 2015 11:24:24.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:art-ordforn, INIT:art-ordforn, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "articoli.sl".
           COPY "tmagaz.sl".
           COPY "progmag.sl".
           COPY "timposte.sl".
           COPY "art-ordforn.sl".
           COPY "tcaumag.sl".
           COPY "tpiombo.sl".
           COPY "tmarche.sl".
           COPY "rlistini.sl".
           COPY "impforn.sl".
           COPY "distinteb.sl".
           COPY "param.sl".
           COPY "clienti.sl".
           COPY "tscorte.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "articoli.fd".
           COPY "tmagaz.fd".
           COPY "progmag.fd".
           COPY "timposte.fd".
           COPY "art-ordforn.fd".
           COPY "tcaumag.fd".
           COPY "tpiombo.fd".
           COPY "tmarche.fd".
           COPY "rlistini.fd".
           COPY "impforn.fd".
           COPY "distinteb.fd".
           COPY "param.fd".
           COPY "clienti.fd".
           COPY "tscorte.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       78 titolo VALUE IS "GESLUX - Conferma articoli". 
           COPY  "IMPOSTE-FORNITORE.DEF".
           COPY  "PRZ-FINITO-FORN.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "LINK-NAMBAR.DEF".
           COPY  "COSTO-MEDIO.DEF".
           COPY  "TROVA-PARAMETRO.DEF".
       77 DESF-PERCE-PREMI-FINE-ANNO   PIC  9(3)v99.
       77 calcolo-piombo   PIC  x.
           88 nuovo-calcolo-piombo VALUE IS "N". 
       01 desf-premio-netto            PIC  x.
           88 desf-premio-netto-no VALUE IS " " "N". 
           88 desf-premio-netto-si VALUE IS "S". 
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 imballi-ed       PIC  z(4).
       01 gruppo-hidden.
           05 hid-chiave.
               10 hid-chiave-testa.
                   15 hid-anno         PIC  9(4).
                   15 hid-numero       PIC  9(8).
               10 hid-prg          PIC  9(10).
               10 hid-tipo         PIC  x.
                   88 hid-articolo VALUE IS "A". 
                   88 hid-listino VALUE IS "L". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       01 FILLER           PIC  9.
           88 CallZoom VALUE IS 1    WHEN SET TO FALSE  0. 
       77 CANCEL-73X21-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-imballo     PIC  x(30).
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       01 filler           PIC  9.
           88 record-ok VALUE IS 1,    WHEN SET TO FALSE  0. 
       77 STATUS-tnomen    PIC  X(2).
           88 Valid-STATUS-tnomen VALUE IS "00" THRU "09". 
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-nordforn  PIC  X(2).
           88 Valid-STATUS-nordforn VALUE IS "00" THRU "09". 
       77 STATUS-rlistini  PIC  X(2).
           88 Valid-STATUS-rlistini VALUE IS "00" THRU "09". 
       77 ef-mag-buf       PIC  x(3).
       77 ef-forn-buf      PIC  9(5).
       77 lab-mag-buf      PIC  x(50).
       77 lab-forn-buf     PIC  x(50).
       77 como-x           PIC  x.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 1001.
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 gd-r-rec.
           05 col-r-articolo   PIC  z(6).
           05 col-r-mag        PIC  x(3).
           05 col-r-imb        PIC  x(3).
           05 col-r-peso       PIC  zz9,999
                      BLANK WHEN ZERO.
           05 col-r-descr      PIC  x(100).
           05 col-r-qta        PIC  zz.zzz.zz9.
           05 col-r-prz        PIC  zzz.zz9,9999.
           05 col-r-cons       PIC  z.zz9,9999.
           05 col-r-cou        PIC  z.zz9,9999.
           05 col-r-add        PIC  z.zz9,9999.
           05 col-r-costi      PIC  zzz.zz9,9999.
           05 col-r-imponib    PIC  zzz.zz9,9999.
       77 path-tmp-eva     PIC  X(256).
       77 como-prz         PIC  9(9)v9999.
       77 como-riga        PIC  9(5).
       77 como-imp-merce   PIC  9(9)v9999.
       77 como-costi       PIC  9(9)v9999.
       77 STATUS-tmp-eva   PIC  X(2).
           88 Valid-STATUS-tmp-eva VALUE IS "00" THRU "09". 
       77 STATUS-reva      PIC  X(2).
           88 Valid-STATUS-reva VALUE IS "00" THRU "09". 
       77 STATUS-teva      PIC  X(2).
           88 Valid-STATUS-teva VALUE IS "00" THRU "09". 
       77 lab-fornitore-buf            PIC  x(100).
       77 lab-magazzino-buf            PIC  x(100).
       77 ALTERNATIVI-BMP  PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 mod-campi        PIC  9
                  VALUE IS 1.
       77 v-codici         PIC  9
                  VALUE IS 1.
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-tpromo    PIC  X(2).
           88 Valid-STATUS-tpromo VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 STATUS-art-ordforn           PIC  X(2).
           88 Valid-STATUS-art-ordforn VALUE IS "00" THRU "09". 
       77 STRIP-GRID-GCLIENTI-BMP      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 v-manuale        PIC  9
                  VALUE IS 1.
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-impforn   PIC  X(2).
           88 Valid-STATUS-impforn VALUE IS "00" THRU "09". 
       77 STATUS-distinteb PIC  X(2).
           88 Valid-STATUS-distinteb VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-tscorte   PIC  X(2).
           88 Valid-STATUS-tscorte VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Screen2-FLAG-REFRESH PIC  9.
          88 Screen2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Screen2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Screen2-art-ordforn-RESTOREBUF  PIC X(302).
       77 TMP-Screen2-KEYIS  PIC 9(3) VALUE 1.
       77 Screen2-MULKEY-TMPBUF   PIC X(302).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-timposte-BUF     PIC X(277).
       77 TMP-DataSet1-art-ordforn-BUF     PIC X(302).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(179).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-rlistini-BUF     PIC X(448).
       77 TMP-DataSet1-impforn-BUF     PIC X(220).
       77 TMP-DataSet1-distinteb-BUF     PIC X(672).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-tscorte-BUF     PIC X(205).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-art-ordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-art-ordforn-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-art-ordforn-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-art-ordforn-KEY1-Asc  VALUE "A".
          88 DataSet1-art-ordforn-KEY1-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-rlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rlistini-LOCK  VALUE "Y".
       77 DataSet1-rlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rlistini-KEY-Asc  VALUE "A".
          88 DataSet1-rlistini-KEY-Desc VALUE "D".
       77 DataSet1-impforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-impforn-LOCK  VALUE "Y".
       77 DataSet1-impforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-impforn-KEY-Asc  VALUE "A".
          88 DataSet1-impforn-KEY-Desc VALUE "D".
       77 DataSet1-distinteb-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-distinteb-LOCK  VALUE "Y".
       77 DataSet1-distinteb-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-distinteb-KEY-Asc  VALUE "A".
          88 DataSet1-distinteb-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-tscorte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tscorte-LOCK  VALUE "Y".
       77 DataSet1-tscorte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tscorte-KEY-Asc  VALUE "A".
          88 DataSet1-tscorte-KEY-Desc VALUE "D".

       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 rlistini-rlis-k-art-SPLITBUF  PIC X(33).
       77 rlistini-rlis-k-descr-SPLITBUF  PIC X(66).
       77 distinteb-k-articolo-SPLITBUF  PIC X(12).
       77 distinteb-k-progmag-SPLITBUF  PIC X(21).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-gd-r VALUE 5001.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-ART-ORDFORN.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Screen2, 
           .

      * GRID
       05
           gd-r, 
           Grid, 
           COL 1,75, 
           LINE 2,38,
           LINES 17,19 ,
           SIZE 122,38 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 7, 10, 13, 20, 120, 128, 140, 150, 160, 
           170, 182),
           ALIGNMENT ("C", "C", "C", "R", "C", "R", "R", "R", "R", "R", 
           "R", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "X(3)", "X(3)", "9(7)", "X(100)", "9(8)"
           , "9(10)", "9(8)", "9(8)", "9(8)", "9(10)", "9(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 481
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 78-ID-gd-r,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 120,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE gd-r-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-grid-nuovo, 
           Push-Button, 
           COL 1,13, 
           LINE 20,25,
           LINES 21,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE STRIP_GRID_GCLIENTI-BMP,
           BITMAP-NUMBER 5,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002,
           FLAT,
           FONT IS Small-Font,
           ID IS 64,
           SELF-ACT,
           TITLE "Aggi&unge una riga all'ordine",
           VISIBLE art-ordforn-mod,
           AFTER PROCEDURE pb-grid-nuovo-AfterProcedure, 
           BEFORE PROCEDURE pb-grid-nuovo-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-grid-elimina, 
           Push-Button, 
           COL 11,38, 
           LINE 20,25,
           LINES 21,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE STRIP_GRID_GCLIENTI-BMP,
           BITMAP-NUMBER 4,
           UNFRAMED,
           SQUARE,
           ENABLED mod-campi,
           EXCEPTION-VALUE 1005,
           FLAT,
           FONT IS Small-Font,
           ID IS 1001,
           SELF-ACT,
           TITLE "&Elimina la riga selezionata",
           VISIBLE art-ordforn-mod,
           AFTER PROCEDURE pb-grid-elimina-AfterProcedure, 
           BEFORE PROCEDURE pb-grid-elimina-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           PB-ESEGUIa, 
           Push-Button, 
           COL 104,25, 
           LINE 22,81,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           VISIBLE art-ordforn-mod,
           AFTER PROCEDURE PB-ESEGUIa-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUIa-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           Form1-Pb-2a, 
           Push-Button, 
           COL 114,25, 
           LINE 22,81,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           NO-AUTO-DEFAULT,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2a-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2a-BeforeProcedure, 
           .

      * BAR
       05
           Screen2-Br-1b, 
           Bar,
           COL 1,00, 
           LINE 22,56,
           SIZE 123,88 ,
           ID IS 502,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           Screen2-Custom1-1, 
           Label, 
           COL 9,13, 
           LINE 23,06,
           LINES 1,19 ,
           SIZE 5,25 ,
           FONT IS Default-Font,
           ID IS 9,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING art-ordforn-linkage.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:art-ordforn, INIT:art-ordforn, BeforeDeclarative>
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Screen2-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:art-ordforn, INIT:art-ordforn, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, 
           STRIP_GRID_GCLIENTI-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
      *    After-Program
           PERFORM accetordforn-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-grid-nuovo
           COPY RESOURCE "STRIP_GRID_GCLIENTI.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "STRIP_GRID_GCLIENTI.BMP"
           , 
                   GIVING STRIP_GRID_GCLIENTI-BMP.
      * PB-ESEGUIa
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * Form1-Pb-2a
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-articoli
           PERFORM OPEN-tmagaz
           PERFORM OPEN-progmag
           PERFORM OPEN-timposte
           PERFORM OPEN-art-ordforn
           PERFORM OPEN-tcaumag
           PERFORM OPEN-tpiombo
           PERFORM OPEN-tmarche
           PERFORM OPEN-rlistini
           PERFORM OPEN-impforn
           PERFORM OPEN-distinteb
           PERFORM OPEN-param
           PERFORM OPEN-clienti
           PERFORM OPEN-tscorte
      *    After Open
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:art-ordforn, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:art-ordforn, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:art-ordforn, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-art-ordforn.
      * <TOTEM:EPT. INIT:art-ordforn, FD:art-ordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O art-ordforn
           IF STATUS-art-ordforn = "35"
              OPEN OUTPUT art-ordforn
                IF Valid-STATUS-art-ordforn
                   CLOSE art-ordforn
                   OPEN I-O art-ordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-art-ordforn
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:art-ordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rlistini.
      * <TOTEM:EPT. INIT:art-ordforn, FD:rlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rlistini
           IF NOT Valid-STATUS-rlistini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:rlistini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-impforn.
      * <TOTEM:EPT. INIT:art-ordforn, FD:impforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT impforn
           IF NOT Valid-STATUS-impforn
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:impforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-distinteb.
      * <TOTEM:EPT. INIT:art-ordforn, FD:distinteb, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT distinteb
           IF NOT Valid-STATUS-distinteb
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:distinteb, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:art-ordforn, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:art-ordforn, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tscorte.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tscorte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tscorte
           IF NOT Valid-STATUS-tscorte
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:art-ordforn, FD:tscorte, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-articoli
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-progmag
           PERFORM CLOSE-timposte
           PERFORM CLOSE-art-ordforn
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-rlistini
           PERFORM CLOSE-impforn
           PERFORM CLOSE-distinteb
           PERFORM CLOSE-param
           PERFORM CLOSE-clienti
           PERFORM CLOSE-tscorte
      *    After Close
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:art-ordforn, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:art-ordforn, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:art-ordforn, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-art-ordforn.
      * <TOTEM:EPT. INIT:art-ordforn, FD:art-ordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE art-ordforn
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-rlistini.
      * <TOTEM:EPT. INIT:art-ordforn, FD:rlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE rlistini
           .

       CLOSE-impforn.
      * <TOTEM:EPT. INIT:art-ordforn, FD:impforn, BeforeClose>
      * <TOTEM:END>
           CLOSE impforn
           .

       CLOSE-distinteb.
      * <TOTEM:EPT. INIT:art-ordforn, FD:distinteb, BeforeClose>
      * <TOTEM:END>
           CLOSE distinteb
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:art-ordforn, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:art-ordforn, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-tscorte.
      * <TOTEM:EPT. INIT:art-ordforn, FD:tscorte, BeforeClose>
      * <TOTEM:END>
           CLOSE tscorte
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 MOVE Low-Value TO aor-chiave
              ELSE
                 MOVE High-Value TO aor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-art-ordforn-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 MOVE High-Value TO aor-chiave
              ELSE
                 MOVE Low-Value TO aor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-art-ordforn-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-art-ordforn-KEY1-ORDER
           END-EVALUATE
           .

      * art-ordforn
       DataSet1-art-ordforn-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 START art-ordforn KEY >= aor-chiave
              ELSE
                 START art-ordforn KEY <= aor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-art-ordforn-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 START art-ordforn KEY <= aor-chiave
              ELSE
                 START art-ordforn KEY >= aor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-art-ordforn-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 START art-ordforn KEY > aor-chiave
              ELSE
                 START art-ordforn KEY < aor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-art-ordforn-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 START art-ordforn KEY < aor-chiave
              ELSE
                 START art-ordforn KEY > aor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-art-ordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn WITH LOCK 
                 KEY aor-chiave
              ELSE
                 READ art-ordforn WITH NO LOCK 
                 KEY aor-chiave
              END-IF
           END-EVALUATE
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT 
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 IF DataSet1-art-ordforn-LOCK
                    READ art-ordforn NEXT WITH LOCK
                 ELSE
                    READ art-ordforn NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-art-ordforn-LOCK
                    READ art-ordforn PREVIOUS WITH LOCK
                 ELSE
                    READ art-ordforn PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-art-ordforn-KEY1-Asc
                 IF DataSet1-art-ordforn-LOCK
                    READ art-ordforn PREVIOUS WITH LOCK
                 ELSE
                    READ art-ordforn PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-art-ordforn-LOCK
                    READ art-ordforn NEXT WITH LOCK
                 ELSE
                    READ art-ordforn NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE aor-rec OF art-ordforn.
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE aor-rec OF art-ordforn.
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE art-ordforn.
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       rlistini-rlis-k-art-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-art-SPLITBUF
           MOVE rlis-articolo OF rlistini(1:6) TO 
           rlistini-rlis-k-art-SPLITBUF(1:6)
           MOVE rlis-chiave-ricerca OF rlistini(1:26) TO 
           rlistini-rlis-k-art-SPLITBUF(7:26)
           .

       rlistini-rlis-k-descr-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-descr-SPLITBUF
           MOVE rlis-codice OF rlistini(1:15) TO 
           rlistini-rlis-k-descr-SPLITBUF(1:15)
           MOVE rlis-des-libera OF rlistini(1:50) TO 
           rlistini-rlis-k-descr-SPLITBUF(16:50)
           .

       DataSet1-rlistini-INITSTART.
           IF DataSet1-rlistini-KEY-Asc
              MOVE Low-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE High-Value TO rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-INITEND.
           IF DataSet1-rlistini-KEY-Asc
              MOVE High-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE Low-Value TO rlis-chiave OF rlistini
           END-IF
           .

      * rlistini
       DataSet1-rlistini-START.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY >= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY <= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-NOTGREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY <= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY >= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-GREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY > rlis-chiave OF rlistini
           ELSE
              START rlistini KEY < rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-LESS.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY < rlis-chiave OF rlistini
           ELSE
              START rlistini KEY > rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rlistini-LOCK
              READ rlistini WITH LOCK 
              KEY rlis-chiave OF rlistini
           ELSE
              READ rlistini WITH NO LOCK 
              KEY rlis-chiave OF rlistini
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT 
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-impforn-INITSTART.
           IF DataSet1-impforn-KEY-Asc
              MOVE Low-Value TO imf-chiave OF impforn
           ELSE
              MOVE High-Value TO imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-INITEND.
           IF DataSet1-impforn-KEY-Asc
              MOVE High-Value TO imf-chiave OF impforn
           ELSE
              MOVE Low-Value TO imf-chiave OF impforn
           END-IF
           .

      * impforn
       DataSet1-impforn-START.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY >= imf-chiave OF impforn
           ELSE
              START impforn KEY <= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-NOTGREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY <= imf-chiave OF impforn
           ELSE
              START impforn KEY >= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-GREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY > imf-chiave OF impforn
           ELSE
              START impforn KEY < imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-LESS.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY < imf-chiave OF impforn
           ELSE
              START impforn KEY > imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-impforn-LOCK
              READ impforn WITH LOCK 
              KEY imf-chiave OF impforn
           ELSE
              READ impforn WITH NO LOCK 
              KEY imf-chiave OF impforn
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT 
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterDelete>
      * <TOTEM:END>
           .

       distinteb-k-articolo-MERGE-SPLITBUF.
           INITIALIZE distinteb-k-articolo-SPLITBUF
           MOVE dis-articolo-finale(1:6) TO 
           distinteb-k-articolo-SPLITBUF(1:6)
           MOVE dis-chiave(1:5) TO distinteb-k-articolo-SPLITBUF(7:5)
           .

       distinteb-k-progmag-MERGE-SPLITBUF.
           INITIALIZE distinteb-k-progmag-SPLITBUF
           MOVE dis-chiave-progmag(1:20) TO 
           distinteb-k-progmag-SPLITBUF(1:20)
           .

       DataSet1-distinteb-INITSTART.
           IF DataSet1-distinteb-KEY-Asc
              MOVE Low-Value TO dis-chiave
           ELSE
              MOVE High-Value TO dis-chiave
           END-IF
           .

       DataSet1-distinteb-INITEND.
           IF DataSet1-distinteb-KEY-Asc
              MOVE High-Value TO dis-chiave
           ELSE
              MOVE Low-Value TO dis-chiave
           END-IF
           .

      * distinteb
       DataSet1-distinteb-START.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY >= dis-chiave
           ELSE
              START distinteb KEY <= dis-chiave
           END-IF
           .

       DataSet1-distinteb-START-NOTGREATER.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY <= dis-chiave
           ELSE
              START distinteb KEY >= dis-chiave
           END-IF
           .

       DataSet1-distinteb-START-GREATER.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY > dis-chiave
           ELSE
              START distinteb KEY < dis-chiave
           END-IF
           .

       DataSet1-distinteb-START-LESS.
           IF DataSet1-distinteb-KEY-Asc
              START distinteb KEY < dis-chiave
           ELSE
              START distinteb KEY > dis-chiave
           END-IF
           .

       DataSet1-distinteb-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-distinteb-LOCK
              READ distinteb WITH LOCK 
              KEY dis-chiave
           ELSE
              READ distinteb WITH NO LOCK 
              KEY dis-chiave
           END-IF
           PERFORM distinteb-k-articolo-MERGE-SPLITBUF
           PERFORM distinteb-k-progmag-MERGE-SPLITBUF
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT 
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-distinteb-KEY-Asc
              IF DataSet1-distinteb-LOCK
                 READ distinteb NEXT WITH LOCK
              ELSE
                 READ distinteb NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-distinteb-LOCK
                 READ distinteb PREVIOUS WITH LOCK
              ELSE
                 READ distinteb PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM distinteb-k-articolo-MERGE-SPLITBUF
           PERFORM distinteb-k-progmag-MERGE-SPLITBUF
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-distinteb-KEY-Asc
              IF DataSet1-distinteb-LOCK
                 READ distinteb PREVIOUS WITH LOCK
              ELSE
                 READ distinteb PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-distinteb-LOCK
                 READ distinteb NEXT WITH LOCK
              ELSE
                 READ distinteb NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM distinteb-k-articolo-MERGE-SPLITBUF
           PERFORM distinteb-k-progmag-MERGE-SPLITBUF
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-distinteb-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-distinteb TO TOTEM-ERR-STAT
           MOVE "distinteb" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:distinteb, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tscorte-INITSTART.
           IF DataSet1-tscorte-KEY-Asc
              MOVE Low-Value TO sco-chiave
           ELSE
              MOVE High-Value TO sco-chiave
           END-IF
           .

       DataSet1-tscorte-INITEND.
           IF DataSet1-tscorte-KEY-Asc
              MOVE High-Value TO sco-chiave
           ELSE
              MOVE Low-Value TO sco-chiave
           END-IF
           .

      * tscorte
       DataSet1-tscorte-START.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY >= sco-chiave
           ELSE
              START tscorte KEY <= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-NOTGREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY <= sco-chiave
           ELSE
              START tscorte KEY >= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-GREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY > sco-chiave
           ELSE
              START tscorte KEY < sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-LESS.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY < sco-chiave
           ELSE
              START tscorte KEY > sco-chiave
           END-IF
           .

       DataSet1-tscorte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tscorte-LOCK
              READ tscorte WITH LOCK 
              KEY sco-chiave
           ELSE
              READ tscorte WITH NO LOCK 
              KEY sco-chiave
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT 
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE art-rec OF articoli
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE prg-rec OF progmag
           INITIALIZE imp-rec OF timposte
           INITIALIZE aor-rec OF art-ordforn
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE mar-rec OF tmarche
           INITIALIZE rlis-rec OF rlistini
           INITIALIZE imf-rec OF impforn
           INITIALIZE dis-rec OF distinteb
           INITIALIZE prm-rec OF param
           INITIALIZE cli-rec OF clienti
           INITIALIZE sco-rec OF tscorte
           .


      * GRID
       gd-r-Content.
      * CELLS' SETTING
              MODIFY gd-r, X = 1, Y = 1,
                CELL-DATA = "Art",
      * CELLS' SETTING
              MODIFY gd-r, X = 2, Y = 1,
                CELL-DATA = "Mag",
      * CELLS' SETTING
              MODIFY gd-r, X = 3, Y = 1,
                CELL-DATA = "Imb",
      * CELLS' SETTING
              MODIFY gd-r, X = 4, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd-r, X = 5, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-r, X = 6, Y = 1,
                CELL-DATA = "Q.tà",
      * CELLS' SETTING
              MODIFY gd-r, X = 7, Y = 1,
                CELL-DATA = "Prz. Unit.",
      * CELLS' SETTING
              MODIFY gd-r, X = 8, Y = 1,
                CELL-DATA = "I. Cons.",
      * CELLS' SETTING
              MODIFY gd-r, X = 9, Y = 1,
                CELL-DATA = "Cou/Cob",
      * CELLS' SETTING
              MODIFY gd-r, X = 10, Y = 1,
                CELL-DATA = "Add Pb",
      * CELLS' SETTING
              MODIFY gd-r, X = 11, Y = 1,
                CELL-DATA = "Costi A.",
      * CELLS' SETTING
              MODIFY gd-r, X = 12, Y = 1,
                CELL-DATA = "I. Merce",
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-art-ordforn-INITREC.
           INITIALIZE aor-rec OF art-ordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rlistini-INITREC.
           INITIALIZE rlis-rec OF rlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-impforn-INITREC.
           INITIALIZE imf-rec OF impforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-distinteb-INITREC.
           INITIALIZE dis-rec OF distinteb
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tscorte-INITREC.
           INITIALIZE sco-rec OF tscorte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Screen2-Buf-To-Fld
           END-EVALUATE
           .

       Screen2-Open-Routine.
           PERFORM Screen2-Scrn
           PERFORM Screen2-Proc
           .

       Screen2-Scrn.
           PERFORM Screen2-Create-Win
           PERFORM Screen2-Init-Value
           PERFORM Screen2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen2-DISPLAY
           .

       Screen2-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 24,25,
              SIZE 123,88,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 1,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Screen2-Handle,
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen2 UPON Screen2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-r, DISPLAY-COLUMNS (1, 6, 12, 17, 25, 65, 73, 
           81, 89, 97, 105, 113)
           .

       Screen2-PROC.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAccept>
           accept imp-data from century-date.
           start timposte key <= imp-chiave
                 invalid continue
             not invalid
                 read timposte previous
           end-start.
           set CallZoom to false.
           modify gd-r, reset-grid = 1.
           perform GD-R-CONTENT.

           move art-ordforn-causale to tca-codice.
           read tcaumag no lock invalid continue end-read.
                        
           move 2 to riga.
           move low-value to aor-rec.
           move art-ordforn-chiave to aor-chiave.
           start art-ordforn key >= aor-chiave
                 invalid continue 
             not invalid
                 perform until 1 = 2
                    read art-ordforn next no lock at end exit perform 
           end-read
                    if aor-chiave-testa not = art-ordforn-chiave
                       exit perform
                    end-if
                    if aor-articolo not = 0
                       move aor-articolo to col-r-articolo art-codice
                       move aor-codmag   to col-r-mag
                       move aor-imballo  to col-r-imb
                       move aor-peso     to col-r-peso
                    
                       perform DESCRIZIONE-ARTICOLO
                    else
                       move aor-descrizione to col-r-descr
                    end-if

                    move aor-qta       to col-r-qta     
                    move aor-prz-unit  to col-r-prz
                    move aor-costi-agg to col-r-costi
                    move aor-netto     to col-r-imponib
                    move aor-imp-cons  to col-r-cons
                    move aor-coubat    to col-r-cou
                    move aor-add-pb    to col-r-add
                    
                    modify gd-r(riga, 1),  cell-data col-r-articolo
                    modify gd-r(riga, 2),  cell-data col-r-mag     
                    modify gd-r(riga, 3),  cell-data col-r-imb     
                    modify gd-r(riga, 4),  cell-data col-r-peso    
                    modify gd-r(riga, 5),  cell-data col-r-descr   
                    modify gd-r(riga, 6),  cell-data col-r-qta     
                    modify gd-r(riga, 7),  cell-data col-r-prz     
                    modify gd-r(riga, 8),  cell-data col-r-cons    
                    modify gd-r(riga, 9),  cell-data col-r-cou     
                    modify gd-r(riga, 10), cell-data col-r-add     
                    modify gd-r(riga, 11), cell-data col-r-costi
                    modify gd-r(riga, 12), cell-data col-r-imponib 

                    move aor-chiave  to hid-chiave
                    set hid-articolo to true
                    modify gd-r(riga,  1), hidden-data gruppo-hidden
                    add 1 to riga
                 end-perform
           end-start.

           move low-value           to rlis-rec.
           move art-ordforn-listino to rlis-codice.
           move 90001               to rlis-articolo.
           start rlistini key >= rlis-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read rlistini next at end exit perform end-read
                    if rlis-fornitore not = art-ordforn-forn
                       exit perform 
                    end-if
                    if art-ordforn-dest not = 0 and
                       art-ordforn-dest not = art-ordforn-dest
                       exit perform
                    end-if
                    if rlis-ini-val > art-ordforn-data
                       exit perform
                    end-if
                    perform TROVA-RIGA
                    if not trovato
                       move rlis-des-libera to col-r-descr
                    
                       move 0 to col-r-qta     

                       perform CALCOLA-PRZ-FINITO
                       move prz-reale to col-r-prz
                       subtract costi-agg from prz-reale giving 
           como-imp-merce
                       move como-imp-merce to col-r-imponib
                       move costi-agg to col-r-costi

                       move 0 to col-r-cons
                       move 0 to col-r-cou
                       move 0 to col-r-add

                       move 0 to col-r-articolo
                       move spaces to col-r-mag     
                       move spaces to col-r-imb
                       move 0 to col-r-peso

                       modify gd-r(riga, 1),  cell-data col-r-articolo
                       modify gd-r(riga, 2),  cell-data col-r-mag     
                       modify gd-r(riga, 3),  cell-data col-r-imb     
                       modify gd-r(riga, 4),  cell-data col-r-peso    
                       modify gd-r(riga, 5),  cell-data col-r-descr   
                       modify gd-r(riga, 6),  cell-data col-r-qta     
                       modify gd-r(riga, 7),  cell-data col-r-prz     
                       modify gd-r(riga, 8),  cell-data col-r-cons    
                       modify gd-r(riga, 9),  cell-data col-r-cou     
                       modify gd-r(riga, 10), cell-data col-r-add     
                       modify gd-r(riga, 11), cell-data col-r-costi
                       modify gd-r(riga, 12), cell-data col-r-imponib 
                       set hid-listino to true
                       modify gd-r(riga,  1), hidden-data gruppo-hidden
                    
                       add 1 to riga
                    end-if
                 end-perform
           end-start.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen2
                 ON EXCEPTION
                    PERFORM Screen2-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen2-Handle
           INITIALIZE Key-Status
           .

       Screen2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAccept>
      *****     if CallZoom
      *****        set CallZoom to false
      *****        move tca-cod-magaz to prg-cod-magazzino
      *****        move "prg-tmagaz"   to como-file
      *****        call "zoom-gt"   using como-file, prg-rec
      *****                        giving stato-zoom
      *****        cancel "zoom-gt"
      *****        if stato-zoom = 0
      *****           move prg-cod-articolo  to art-codice
      *****           read articoli no lock 
      *****           if art-attivo
      *****              move prg-cod-articolo  to col-r-articolo art-codice
      *****              move prg-cod-magazzino to col-r-mag
      *****              move prg-tipo-imballo  to col-r-imb
      *****              move prg-peso          to col-r-peso
      *****              modify gd-r(store-riga, 1), cell-data col-r-articolo                 
      *****              modify gd-r(store-riga, 2), cell-data col-r-mag                 
      *****              modify gd-r(store-riga, 3), cell-data col-r-imb                 
      *****              modify gd-r(store-riga, 4), cell-data col-r-peso
      *****              perform DESCRIZIONE-ARTICOLO
      **********              set TrattamentoGDO to true
      *****              perform CALCOLA-IMPOSTE
      *****              add imposta-cou to imposta-cobat 
      *****                  giving risultato-imposte
      *****              move risultato-imposte  to col-r-cou
      *****              move imposta-consumo    to col-r-cons
      *****              move art-ordforn-data   to como-data-ordine tpb-data
      *****              move art-marca-prodotto to tpb-marca
      *****              move como-prz           to como-prz-unitario
      *****              perform ADDIZIONALE-PIOMBO
      *****              move add-piombo         to col-r-add
      *****              modify gd-r(store-riga,  9), cell-data col-r-cons
      *****              modify gd-r(store-riga, 10), cell-data col-r-cou
      *****              modify gd-r(store-riga, 11), cell-data col-r-add
      *****              
      *****              compute como-imp-merce = 
      *****                      como-prz       - 
      *****                      add-piombo     -
      *****                      imposta-cou    - 
      *****                      imposta-cobat  -
      *****                      imposta-consumo
      *****              
      *****              move como-imp-merce to col-r-imponib
      *****              modify gd-r(store-riga, 12),  cell-data col-r-imponib
      *****              
      *****              modify gd-r(store-riga, 5),  cell-data col-r-descr
      *****              move 78-ID-gd-r to control-id
      *****              move          4 to accept-control
      *****              modify gd-r, cursor-y store-riga, cursor-x 1
      *****              move 0 to riga-nuova
      *****
      *****              inquire gd-r(store-riga, 1),  hidden-data in gruppo-hidden
      *****              set hid-articolo to true
      *****              modify gd-r(store-riga, 1),  hidden-data gruppo-hidden
      *****           else
      *****              display message "Articolo non attivo"
      *****                        title tit-err
      *****                         icon 2
      *****           end-if
      *****        end-if           
      *****     end-if.

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen2-Exit
                 END-IF
              WHEN Key-Status = 1002
                 PERFORM pb-grid-nuovo-LinkTo
              WHEN Key-Status = 1005
                 PERFORM pb-grid-elimina-LinkTo
              WHEN Key-Status = 1000
                 PERFORM PB-ESEGUIa-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen2-CLEAR.
           PERFORM Screen2-INIT-VALUE
           PERFORM Screen2-DISPLAY
           .

       Screen2-DISPLAY.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen2 UPON Screen2-Handle
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDisplay>
      * <TOTEM:END>
           .

       Screen2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen2-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-r-Content
           .

       Screen2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-art-ordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-art-ordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Update-Key.
           MOVE aor-rec OF art-ordforn TO
                     Screen2-MULKEY-TMPBUF
           PERFORM Screen2-CLEAR
           PERFORM Screen2-INIT-DATA
           MOVE Screen2-MULKEY-TMPBUF TO
                     aor-rec OF art-ordforn
           PERFORM DataSet1-art-ordforn-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
           .

       Screen2-DUPLICATE-MOVEKEY.
           .

       Screen2-First.
           PERFORM Screen2-DUMMY-FIRST
           PERFORM DataSet1-art-ordforn-INITSTART
           PERFORM DataSet1-art-ordforn-START
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-art-ordforn-Read-Next
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFirst>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Previous.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-art-ordforn-START-LESS
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-art-ordforn-Read-Prev
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-PREVIOUS
           PERFORM Screen2-IUD-Display
           .

       Screen2-Next.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-art-ordforn-START-GREATER
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-art-ordforn-Read-Next
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterNext>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-NEXT
           PERFORM Screen2-IUD-Display
           .
      
       Screen2-Last.
           PERFORM Screen2-DUMMY-LAST
           PERFORM DataSet1-art-ordforn-INITEND
           PERFORM DataSet1-art-ordforn-START-NOTGREATER
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-art-ordforn-Read-Prev
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterLast>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Curr.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-art-ordforn-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCurrent>
      * <TOTEM:END>
           .

       Screen2-IUD-Display.
           IF Valid-STATUS-art-ordforn
              PERFORM Screen2-ALLGRID-RESET
              PERFORM Screen2-Fld-To-Buf
              PERFORM Screen2-NAVI-FOR-MASTERGRID
              PERFORM Screen2-DISPLAY
           ELSE
              IF Screen2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Screen2-Extended-File-Status
              END-IF
           END-IF
           .

       Screen2-Add.
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-ADD
           PERFORM DataSet1-art-ordforn-INITREC
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-art-ordforn-Rec-Write
           IF Valid-STATUS-art-ordforn
              PERFORM Screen2-RESUMMARY-INS
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAdd>
      * <TOTEM:END>
           .
     
       Screen2-Update.
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-art-ordforn-START              
           IF NOT Valid-STATUS-art-ordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-art-ordforn-Read
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-UPDATE
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-art-ordforn-Rec-Rewrite
           IF Valid-STATUS-art-ordforn
              PERFORM Screen2-RESUMMARY-DEL
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterUpdate>
      * <TOTEM:END>
           .

       Screen2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Screen2-DUMMY-DELETE
      * delete
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-art-ordforn-Rec-Delete
           IF Valid-STATUS-art-ordforn
              PERFORM Screen2-CLEAR
              PERFORM Screen2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-art-ordforn
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDelete>
      * <TOTEM:END>
           PERFORM Screen2-ERR-CHECKING
           .

       Screen2-NAVI-FOR-MASTERGRID.
           .

       Screen2-ERR-CHECKING.
           IF Valid-STATUS-art-ordforn
              PERFORM Screen2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Screen2-Extended-File-Status
           END-IF
           .

       Screen2-RESUMMARY-INS.
           .

       Screen2-RESUMMARY-DEL.
           .


       Screen2-DUMMY-FIRST.
           .

       Screen2-DUMMY-PREVIOUS.
           .

       Screen2-DUMMY-NEXT.
           .

       Screen2-DUMMY-LAST.
           .

       Screen2-DUMMY-CURR.
           .

       Screen2-DUMMY-ADD.
           .

       Screen2-DUMMY-UPDATE.
           .

       Screen2-DUMMY-UPDATE-INIT.
           .

       Screen2-DUMMY-DELETE.
           .

       Screen2-DUMMY-DELETE-INIT.
           .

       Screen2-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * FORM : Screen2
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, SetDefault>
      * <TOTEM:END>
           PERFORM Screen2-FLD-TO-BUF
           .


       Screen2-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen2-SHOW-MSG-ROUTINE
           .

       Screen2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen2-DISPLAY-MESSAGE
           .

       Screen2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen2-Save-Status.
           MOVE DataSet1-art-ordforn-KEY1-ORDER TO 
           TMP-Screen2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Screen2-KEYIS
           MOVE aor-rec OF art-ordforn TO 
              TMP-Screen2-art-ordforn-RESTOREBUF
           .             

       Screen2-Restore-Status.
           MOVE TMP-Screen2-KEY1-ORDER TO 
           DataSet1-art-ordforn-KEY1-ORDER
           MOVE TMP-Screen2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Screen2-art-ordforn-RESTOREBUF TO
              aor-rec OF art-ordforn
           PERFORM DataSet1-art-ordforn-START
           IF Valid-STATUS-art-ordforn
              PERFORM DataSet1-art-ordforn-Read-Next
           ELSE
              PERFORM DataSet1-art-ordforn-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-art-ordforn OR
              (Valid-STATUS-art-ordforn AND
                 aor-rec OF art-ordforn = 
                   TMP-Screen2-art-ordforn-RESTOREBUF)
              PERFORM DataSet1-art-ordforn-Read-Next
           END-PERFORM
           .



       Screen2-Event-Proc.
           .

       gd-r-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CONTROLLO-PREZZO.
      * <TOTEM:PARA. CONTROLLO-PREZZO>
           inquire gd-r(event-data-2,  6), cell-data in col-r-qta.
           inquire gd-r(event-data-2,  7), cell-data in como-prz.
           inquire gd-r(event-data-2,  8), cell-data in imposta-consumo.
           inquire gd-r(event-data-2,  9), cell-data in imposta-cou.
           inquire gd-r(event-data-2, 10), cell-data in add-piombo.
           inquire gd-r(event-data-2, 11), cell-data in como-costi.
           inquire gd-r(event-data-2, 12), cell-data in como-imp-merce.

           if como-prz + imposta-consumo + imposta-cou + add-piombo > 0
              if como-prz <= ( imposta-consumo + imposta-cou + 
           add-piombo + como-costi )
                 set errori to true
                 set event-action to event-action-fail
                 display message "Valore errato"
                           title tit-err
                            icon 2
              else
                 compute como-imp-merce  =
                         como-prz        - 
                         imposta-consumo - 
                         imposta-cou     -
                         add-piombo      -
                         como-costi
                 set environment "KEYSTROKE" to "DATA=44   44"
                 set environment "KEYSTROKE" to "DATA=46   46"
              end-if
           end-if.
                                                        
           move como-prz        to col-r-prz.
           move imposta-consumo to col-r-cons.
           move imposta-cou     to col-r-cou.
           move add-piombo      to col-r-add.
           move como-costi      to col-r-costi.
           move como-imp-merce  to col-r-imponib.

           modify gd-r(event-data-2,  6), cell-data col-r-qta.
           modify gd-r(event-data-2,  7), cell-data col-r-prz.
           modify gd-r(event-data-2,  8), cell-data col-r-cons.
           modify gd-r(event-data-2,  9), cell-data col-r-cou.
           modify gd-r(event-data-2, 10), cell-data col-r-add.
           modify gd-r(event-data-2, 11), cell-data col-r-costi.
           modify gd-r(event-data-2, 12), cell-data col-r-imponib 
           .
      * <TOTEM:END>

       CONTROLLO-RIGA.
      * <TOTEM:PARA. CONTROLLO-RIGA>
           set tutto-ok to true.

           perform VALORE-RIGA.
           evaluate colonna
           when 1
                if prg-cod-articolo not = 0
                   read progmag no lock
                        invalid
                        set errori to true
                        display message "Progressivo inesistente"
                                  title tit-err
                                   icon 2
                    not invalid
                        move aor-articolo to art-codice

                        perform DESCRIZIONE-ARTICOLO
                        modify gd-r(riga, 5),  cell-data col-r-descr
                        move 0 to riga-nuova
                    end-read
                 end-if

           when 5
                if col-r-descr = spaces
                   set errori to true
                   display message "Descrizione obbligatoria"
                            title tit-err
                             icon 2
                end-if

           when 6
                if aor-qta = 0
                   if hid-articolo
                      set errori to true
                      display message "Quantità obbligatoria"
                               title tit-err
                                icon 2
                   end-if
                else
                   set hid-articolo to true
                   modify gd-r(riga, 1), hidden-data gruppo-hidden
                end-if

           when  7
           when  8
           when  9
           when 10
           when 11
                if aor-prz-unit = 0
                   move 0 to col-r-cons
                   move 0 to col-r-cou
                   move 0 to col-r-add
                   move 0 to col-r-imponib
                   modify gd-r(riga, 8),  cell-data col-r-cons
                   modify gd-r(riga, 9),  cell-data col-r-cou
                   modify gd-r(riga, 10), cell-data col-r-add
                   modify gd-r(riga, 11), cell-data col-r-costi
                   modify gd-r(riga, 12), cell-data col-r-imponib
                else
                   perform CONTROLLO-PREZZO
                end-if
           end-evaluate 
           .
      * <TOTEM:END>

       DESCRIZIONE-ARTICOLO.
      * <TOTEM:PARA. DESCRIZIONE-ARTICOLO>
           read articoli no lock invalid continue end-read.
           move art-descrizione to col-r-descr 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "prz-finito-forn.cpy".
           copy "imposte-fornitore.cpy".
           copy "addizionale-piombo-fornitore.cpy".
           copy "costo-medio.cpy".
           copy "trova-parametro.cpy".

      ***---
       CALCOLA-TRASPORTO.

      ***---
       RECUPERO-ANAGRAFICA 
           .
      * <TOTEM:END>

       SPOSTAMENTO-R.
      * <TOTEM:PARA. SPOSTAMENTO-R>
           set tutto-ok to true.
           inquire gd-r, last-row in tot-righe, cursor-y in riga.

           if event-data-2 > tot-righe and
              event-data-2 > riga
              move tot-righe to event-data-2 
           end-if.
           if event-data-2 < 2 
              move 2 to event-data-2 
           end-if.

           if riga-nuova = 0
              if tot-righe > 1
                 if event-data-2 not = riga
                    perform varying colonna from 1 by 1 
                              until colonna > 12
                       perform CONTROLLO-RIGA
                       if errori
                          modify gd-r, cursor-y riga, cursor-x colonna
                          move 78-ID-gd-r to control-id
                          move 4          to accept-control
                          modify pb-grid-nuovo, bitmap-number = 5
                          exit perform
                       end-if
                    end-perform
                 end-if
              end-if
           else
              if event-data-2 not = riga
                 modify gd-r, record-to-delete riga
                 move 0 to riga-nuova
              end-if
           end-if.

           if errori
              move riga     to event-data-2
              move colonna  to event-data-1
              set event-action to event-action-fail
           end-if.
           modify gd-r, start-x = 1, x = 12,
                        start-y = event-data-2, y = event-data-2,
                        region-color = 144.
           modify gd-r, cursor-y event-data-2, cursor-x event-data-1 
           .
      * <TOTEM:END>

       TROVA-RIGA.
      * <TOTEM:PARA. TROVA-RIGA>
           set trovato to false.
           inquire gd-r, last-row in tot-righe.
           perform varying como-riga from 2 by 1 
                     until como-riga > tot-righe
              inquire gd-r(como-riga, 5), cell-data in col-r-descr
              if rlis-des-libera = col-r-descr
                 set trovato to true
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       VALORE-RIGA.
      * <TOTEM:PARA. VALORE-RIGA>
           inquire gd-r(riga, 1),  cell-data col-r-articolo.
           inquire gd-r(riga, 2),  cell-data col-r-mag.
           inquire gd-r(riga, 3),  cell-data col-r-imb.
           inquire gd-r(riga, 4),  cell-data col-r-peso.
           inquire gd-r(riga, 5),  cell-data col-r-descr.
           inquire gd-r(riga, 6),  cell-data col-r-qta.
           inquire gd-r(riga, 7),  cell-data col-r-prz.
           inquire gd-r(riga, 8),  cell-data col-r-cons.
           inquire gd-r(riga, 9),  cell-data col-r-cou.
           inquire gd-r(riga, 10), cell-data col-r-add.
           inquire gd-r(riga, 11), cell-data col-r-costi.
           inquire gd-r(riga, 12), cell-data col-r-imponib.

           inquire gd-r(riga,  1), hidden-data gruppo-hidden

           move col-r-articolo to prg-cod-articolo.
           move col-r-mag      to prg-cod-magazzino.
           move col-r-imb      to prg-tipo-imballo.
           move col-r-peso     to prg-peso.
           move col-r-qta      to aor-qta.
           move col-r-prz      to aor-prz-unit.
           move col-r-cons     to aor-imp-cons.
           move col-r-cou      to aor-coubat.
           move col-r-add      to aor-add-pb.
           move col-r-costi    to aor-costi-agg.
           move col-r-imponib  to aor-netto.

           move prg-chiave to aor-chiave-progmag 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           .
      * <TOTEM:END>
       PB-ESEGUIa-LinkTo.
      * <TOTEM:PARA. PB-ESEGUIa-LinkTo>
           set tutto-ok to true.
           inquire gd-r, last-row in tot-righe, cursor-y in riga.
           if tot-righe > 1
              perform varying colonna from 1 by 1 
                        until colonna > 12
                 perform CONTROLLO-RIGA
                 if errori
                    modify gd-r, cursor-y riga, cursor-x colonna
                    move 78-ID-gd-r to control-id
                    move 4          to accept-control
                    modify pb-grid-nuovo, bitmap-number = 5
                    exit perform
                 end-if
              end-perform
           end-if.

           if tutto-ok
              move low-value to aor-rec
              move art-ordforn-chiave to aor-chiave-testa
              start art-ordforn key >= aor-chiave
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read art-ordforn next no lock
                            at end exit perform 
                       end-read
                       if aor-chiave-testa not = art-ordforn-chiave
                          exit perform
                       end-if
                       delete art-ordforn record 
                              invalid continue 
                       end-delete
                    end-perform
              end-start
              
              perform varying riga from 2 by 1
                       until riga > tot-righe
                 perform VALORE-RIGA
                 if hid-articolo
                    move col-r-descr to aor-descrizione
                    move art-ordforn-chiave to aor-chiave-testa
                    accept aor-data-creazione from century-date
                    accept aor-ora-creazione  from time
                    move art-ordforn-user to aor-utente-creazione
                    subtract 1 from riga giving aor-prog
                    write aor-rec invalid rewrite aor-rec end-write
                    if aor-articolo not = 0
                       move 1 to art-ordforn-status
                    end-if
                 end-if
              end-perform
              move 27 to key-status
           end-if 
           .
      * <TOTEM:END>
       PB-ESEGUIa-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-BeforeProcedure>
           modify PB-ESEGUIa, bitmap-number 2
           .
      * <TOTEM:END>
       PB-ESEGUIa-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-AfterProcedure>
           modify PB-ESEGUIa, bitmap-number 1
           .
      * <TOTEM:END>
       Form1-Pb-2a-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-BeforeProcedure>
           modify Form1-Pb-2a, bitmap-number 2
           .
      * <TOTEM:END>
       Form1-Pb-2a-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-AfterProcedure>
           modify Form1-Pb-2a, bitmap-number 1
           .
      * <TOTEM:END>
       accetordforn-Ev-After-Program.
      * <TOTEM:PARA. accetordforn-Ev-After-Program>
           set environment "KEYSTROKE" to "DATA=46   46".
           set environment "KEYSTROKE" to "DATA=44   44" 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Entry>
           if art-ordforn-mod = 0
              move 12 to event-data-1
           end-if.
           evaluate event-data-1
           when  1
           when  2
           when  3
           when  4
                inquire gd-r, entry-reason in como-x
                evaluate como-x
                when x"0D"|Invio
                when X"00"|doppio click
                     set event-action to event-action-fail-terminate
                     inquire gd-r, cursor-y = store-riga
                     set CallZoom to true
                when other
                     set event-action to event-action-fail
                end-evaluate 
           when  5
                inquire gd-r(event-data-2, 1), cell-data in aor-articolo
                if aor-articolo not = 0
                   set event-action to event-action-fail
                end-if

           when  6
                continue
                  
           when  7
           when  8
           when  9
           when 10
           when 11 
                set environment "KEYSTROKE" to "DATA=44 46"

           when 12
                set event-action to event-action-fail
           end-evaluate 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Finish-Entry>
           set tutto-ok to true.
           move event-data-1 to colonna.
           perform CONTROLLO-RIGA.

           if errori
              set event-action to event-action-fail
           else 
                set environment "KEYSTROKE" to "DATA=44 44"
           end-if

           evaluate colonna
           when  7
                inquire gd-r(riga, colonna), cell-data col-r-prz
                modify  gd-r(riga, colonna), cell-data col-r-prz
           when  8 
                inquire gd-r(riga, colonna), cell-data col-r-cons
                modify  gd-r(riga, colonna), cell-data col-r-cons
           when  9 
                inquire gd-r(riga, colonna), cell-data col-r-cou
                modify  gd-r(riga, colonna), cell-data col-r-cou
           when 10 
                inquire gd-r(riga, colonna), cell-data col-r-add
                modify  gd-r(riga, colonna), cell-data col-r-add
           when 101
                inquire gd-r(riga, colonna), cell-data col-r-costi
                modify  gd-r(riga, colonna), cell-data col-r-costi
           end-evaluate 
           .
      * <TOTEM:END>
       pb-grid-nuovo-BeforeProcedure.
      * <TOTEM:PARA. pb-grid-nuovo-BeforeProcedure>
           modify pb-grid-nuovo, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-grid-nuovo-AfterProcedure.
      * <TOTEM:PARA. pb-grid-nuovo-AfterProcedure>
           modify pb-grid-nuovo, bitmap-number = 5 
           .
      * <TOTEM:END>
       pb-grid-nuovo-LinkTo.
      * <TOTEM:PARA. pb-grid-nuovo-LinkTo>
           inquire gd-r, last-row in tot-righe, cursor-y in riga.
           if tot-righe > 1
              perform varying colonna from 1 by 1 
                        until colonna > 12
                 perform CONTROLLO-RIGA
                 if errori
                    modify gd-r, cursor-y riga, cursor-x colonna
                    move 78-ID-gd-r to control-id
                    move 4          to accept-control
                    modify pb-grid-nuovo, bitmap-number = 5
                    exit perform
                 end-if
              end-perform
           else
              set tutto-ok to true
           end-if.

           if riga-nuova = 0 and tutto-ok
              modify gd-r, insert-rows = 1
              add 1 to tot-righe giving event-data-2
              modify gd-r, cursor-y event-data-2, cursor-x 1
              move 78-ID-gd-r to control-id
              move 4          to accept-control
              move 1 to riga-nuova
              modify pb-grid-nuovo, bitmap-number = 5
              modify gd-r, start-x = 1, x = 12,
                           start-y = event-data-2, y = event-data-2,
                           region-color = 144
           end-if 
           .
      * <TOTEM:END>
       pb-grid-elimina-BeforeProcedure.
      * <TOTEM:PARA. pb-grid-elimina-BeforeProcedure>
           modify pb-grid-elimina, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-grid-elimina-AfterProcedure.
      * <TOTEM:PARA. pb-grid-elimina-AfterProcedure>
           modify pb-grid-elimina, bitmap-number = 4 
           .
      * <TOTEM:END>
       pb-grid-elimina-LinkTo.
      * <TOTEM:PARA. pb-grid-elimina-LinkTo>
           inquire gd-r, last-row in tot-righe, cursor-y riga.
           if tot-righe > 1
              display message "Cancellare la riga?"
                        title titolo
                         type mb-yes-no
                       giving scelta
              if scelta = mb-yes
                 modify gd-r, record-to-delete riga
                 subtract 1 from tot-righe
                 if riga > tot-righe
                    modify gd-r, cursor-y = tot-righe
                    perform SPOSTAMENTO-R
                 end-if
              end-if
           end-if 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

