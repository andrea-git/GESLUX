      *{TOTEM}PRG-COMMENT
      * evaord.Cbl
      * evaord.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          evaord.
       AUTHOR.              andre.
       DATE-WRITTEN.        lunedì 16 ottobre 2023 17:12:33.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:evaord, INIT:evaord, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "articoli.sl".
           COPY "timballi.sl".
           COPY "tmagaz.sl".
           COPY "timbalqta.sl".
           COPY "progmag.sl".
           COPY "timposte.sl".
           COPY "tmarche.sl".
           COPY "tpiombo.sl".
           COPY "tordini.sl".
           COPY "rordini.sl".
           COPY "clienti.sl".
           COPY "mrordini.sl".
           COPY "mtordini.sl".
           COPY "recapiti.sl".
           COPY "tcaumag.sl".
           COPY "tparamge.sl".
           COPY "destini.sl".
           COPY "ttipocli.sl".
           COPY "blister.sl".
           COPY "param.sl".
           COPY "tcontat.sl".
           COPY "paramSHI.sl".
           COPY "listini.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "articoli.fd".
           COPY "timballi.fd".
           COPY "tmagaz.fd".
           COPY "timbalqta.fd".
           COPY "progmag.fd".
           COPY "timposte.fd".
           COPY "tmarche.fd".
           COPY "tpiombo.fd".
           COPY "tordini.fd".
           COPY "rordini.fd".
           COPY "clienti.fd".
           COPY "mrordini.fd".
           COPY "mtordini.fd".
           COPY "recapiti.fd".
           COPY "tcaumag.fd".
           COPY "tparamge.fd".
           COPY "destini.fd".
           COPY "ttipocli.fd".
           COPY "blister.fd".
           COPY "param.fd".
           COPY "tcontat.fd".
           COPY "paramSHI.fd".
           COPY "listini.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "GESLUX - Evasione Ordini Clienti". 
           COPY  "LINK-IMBALLO.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "LINK-NAMBAR.DEF".
           COPY  "IMPOSTE.DEF".
           COPY  "LINK-STORDCP.DEF".
           COPY  "LINK-WPROGMAG.DEF".
           COPY  "VERSIONE-EVASIONE.DEF".
           COPY  "TROVA-PARAMETRO.DEF".
       77 forn-z           PIC  z(5).
       77 eva-new          PIC  s9(8).
       01 FILLER           PIC  9.
           88 omaggio VALUE IS 1    WHEN SET TO FALSE  0. 
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       01 GdoInUsoFlag     PIC  x.
           88 GdoInUso VALUE IS "S". 
           88 GdoNonInUso VALUE IS " ". 
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 numero-edit      PIC  z(8).
       77 utf-riga         PIC  9(8)v999.
       77 resto            PIC  9(8).
       77 ris  PIC  9(8).
       77 numero-ed        PIC  z(8).
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 tot-peso-edit    PIC  zz9.999,999.
       77 como-giacenza    PIC  s9(8).
       77 como-qta-e       PIC  s9(8).
       77 old-qta-e        PIC  s9(8).
       77 colli            PIC  s9(8).
       77 link-valore-meno PIC  s9(8).
       77 link-valore-piu  PIC  s9(8).
       01 tab-ordini.
           05 el-chiave
                      OCCURS 100 TIMES.
               10 el-anno          PIC  9(4).
               10 el-numero        PIC  9(8).
       77 tot-qta          PIC  9(8).
       77 tot-idx          PIC  999.
       77 riga-compon      PIC  999.
       77 qta-rimanente    PIC  9(8).
       01 save-mro-chiave.
           10 save-mro-chiave-testa.
               15 save-mro-anno    PIC  9(4).
               15 save-mro-numero  PIC  9(8).
           10 save-mro-riga    PIC  9(5).
       01 hid-blister.
           10 hid-peso-utf     PIC  9(4)v999.
           10 hid-num-articoli PIC  9(4).
           10 hid-qta-imballi  PIC  9(4).
       01 hid-chiave.
           10 hid-chiave-testa.
               15 hid-anno         PIC  9(4).
               15 hid-numero       PIC  9(8).
           10 hid-progr        PIC  9(5).
       77 giacenza         PIC  s9(8).
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 imballi-ed       PIC  z(3)9.
       77 saldo            PIC  s9(8).
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 CANCEL-73X21-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-imballo     PIC  x(30).
       77 como-qta         PIC  9(8).
       77 como-peso        PIC  9(8)v999.
       77 tot-peso         PIC  9(8)v999.
       77 tot-kg           PIC  9(8)v999.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       01 filler           PIC  9.
           88 record-ok VALUE IS 1,    WHEN SET TO FALSE  0. 
       77 STATUS-tnomen    PIC  X(2).
           88 Valid-STATUS-tnomen VALUE IS "00" THRU "09". 
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 ef-mag-buf       PIC  x(3).
       77 ef-forn-buf      PIC  9(5).
       77 lab-mag-buf      PIC  x(50).
       77 lab-forn-buf     PIC  x(50).
       77 como-x           PIC  x.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 1001.
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 gd-r-rec.
           05 col-r-articolo   PIC  9(6).
           05 col-r-mag        PIC  x(3).
           05 col-r-imb        PIC  x(3).
           05 col-r-peso       PIC  zz.zz9,999.
           05 col-r-descr      PIC  x(100).
           05 col-r-saldo      PIC  ---.---.--9.
           05 col-r-qta        PIC  zz.zzz.zz9.
           05 col-r-prz        PIC  zzz.zz9,99.
           05 col-r-cons       PIC  z.zz9,99.
           05 col-r-cou        PIC  z.zz9,99.
           05 col-r-add        PIC  z.zz9,99.
           05 col-r-imponib    PIC  zzz.zz9,99.
       77 como-prz         PIC  9(9)v99.
       77 como-imp-merce   PIC  9(9)v99.
       77 STATUS-tmp-eva   PIC  X(2).
           88 Valid-STATUS-tmp-eva VALUE IS "00" THRU "09". 
       77 STATUS-reva      PIC  X(2).
           88 Valid-STATUS-reva VALUE IS "00" THRU "09". 
       77 STATUS-teva      PIC  X(2).
           88 Valid-STATUS-teva VALUE IS "00" THRU "09". 
       77 lab-fornitore-buf            PIC  x(100).
       77 lab-magazzino-buf            PIC  x(100).
       77 ALTERNATIVI-BMP  PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 mod-campi        PIC  9
                  VALUE IS 1.
       77 v-codici         PIC  9
                  VALUE IS 1.
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 STATUS-mrordini  PIC  X(2).
           88 Valid-STATUS-mrordini VALUE IS "00" THRU "09". 
       77 STATUS-mtordini  PIC  X(2).
           88 Valid-STATUS-mtordini VALUE IS "00" THRU "09". 
       77 STATUS-rordini   PIC  X(2).
           88 Valid-STATUS-rordini VALUE IS "00" THRU "09". 
       77 STATUS-tordini   PIC  X(2).
           88 Valid-STATUS-tordini VALUE IS "00" THRU "09". 
       77 STATUS-assorcli  PIC  X(2).
           88 Valid-STATUS-assorcli VALUE IS "00" THRU "09". 
       77 STATUS-recapiti  PIC  X(2).
           88 Valid-STATUS-recapiti VALUE IS "00" THRU "09". 
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-destini   PIC  X(2).
           88 Valid-STATUS-destini VALUE IS "00" THRU "09". 
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 lab-giac-buf     PIC  ---.---.--9.
       77 lab-imp-buf      PIC  ---.---.--9.
       77 lab-ord-buf      PIC  ---.---.--9.
       77 STATUS-ttipocli  PIC  X(2).
           88 Valid-STATUS-ttipocli VALUE IS "00" THRU "09". 
       77 STATUS-blister   PIC  X(2).
           88 Valid-STATUS-blister VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-tcontat   PIC  X(2).
           88 Valid-STATUS-tcontat VALUE IS "00" THRU "09". 
       77 STATUS-paramshi  PIC  X(2).
           88 Valid-STATUS-paramshi VALUE IS "00" THRU "09". 
       77 STATUS-listini   PIC  X(2).
           88 Valid-STATUS-listini VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Screen2-FLAG-REFRESH PIC  9.
          88 Screen2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Screen2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Screen2-tordini-RESTOREBUF  PIC X(3938).
       77 TMP-Screen2-KEYIS  PIC 9(3) VALUE 1.
       77 Screen2-MULKEY-TMPBUF   PIC X(3938).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-timposte-BUF     PIC X(717).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(739).
       77 TMP-DataSet1-tordini-BUF     PIC X(3938).
       77 TMP-DataSet1-rordini-BUF     PIC X(667).
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-mrordini-BUF     PIC X(891).
       77 TMP-DataSet1-mtordini-BUF     PIC X(2122).
       77 TMP-DataSet1-recapiti-BUF     PIC X(328).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-destini-BUF     PIC X(3676).
       77 TMP-DataSet1-ttipocli-BUF     PIC X(889).
       77 TMP-DataSet1-blister-BUF     PIC X(2967).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-tcontat-BUF     PIC X(3270).
       77 TMP-DataSet1-paramSHI-BUF     PIC X(9574).
       77 TMP-DataSet1-listini-BUF     PIC X(207).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-tordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordini-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tordini-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tordini-KEY1-Asc  VALUE "A".
          88 DataSet1-tordini-KEY1-Desc VALUE "D".
       77 DataSet1-rordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordini-LOCK  VALUE "Y".
       77 DataSet1-rordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordini-KEY-Asc  VALUE "A".
          88 DataSet1-rordini-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mrordini-LOCK  VALUE "Y".
       77 DataSet1-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-mtordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mtordini-LOCK  VALUE "Y".
       77 DataSet1-mtordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-mtordini-KEY-Asc  VALUE "A".
          88 DataSet1-mtordini-KEY-Desc VALUE "D".
       77 DataSet1-recapiti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-recapiti-LOCK  VALUE "Y".
       77 DataSet1-recapiti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-recapiti-KEY-Asc  VALUE "A".
          88 DataSet1-recapiti-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-destini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destini-LOCK  VALUE "Y".
       77 DataSet1-destini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destini-KEY-Asc  VALUE "A".
          88 DataSet1-destini-KEY-Desc VALUE "D".
       77 DataSet1-ttipocli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ttipocli-LOCK  VALUE "Y".
       77 DataSet1-ttipocli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ttipocli-KEY-Asc  VALUE "A".
          88 DataSet1-ttipocli-KEY-Desc VALUE "D".
       77 DataSet1-blister-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-blister-LOCK  VALUE "Y".
       77 DataSet1-blister-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-blister-KEY-Asc  VALUE "A".
          88 DataSet1-blister-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-tcontat-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcontat-LOCK  VALUE "Y".
       77 DataSet1-tcontat-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcontat-KEY-Asc  VALUE "A".
          88 DataSet1-tcontat-KEY-Desc VALUE "D".
       77 DataSet1-paramSHI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-paramSHI-LOCK  VALUE "Y".
       77 DataSet1-paramSHI-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-paramSHI-KEY-Asc  VALUE "A".
          88 DataSet1-paramSHI-KEY-Desc VALUE "D".
       77 DataSet1-listini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-listini-LOCK  VALUE "Y".
       77 DataSet1-listini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-listini-KEY-Asc  VALUE "A".
          88 DataSet1-listini-KEY-Desc VALUE "D".

       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 tordini-k-causale-SPLITBUF  PIC X(17).
       77 tordini-k1-SPLITBUF  PIC X(23).
       77 tordini-k2-SPLITBUF  PIC X(21).
       77 tordini-k-bolla-SPLITBUF  PIC X(13).
       77 tordini-k3-SPLITBUF  PIC X(22).
       77 tordini-k-fattura-SPLITBUF  PIC X(13).
       77 tordini-k4-SPLITBUF  PIC X(30).
       77 tordini-k-contab-SPLITBUF  PIC X(14).
       77 tordini-k-tipo-SPLITBUF  PIC X(14).
       77 tordini-k-data-SPLITBUF  PIC X(17).
       77 tordini-k-agfatt-SPLITBUF  PIC X(42).
       77 tordini-k-stbolle-SPLITBUF  PIC X(34).
       77 tordini-k-andamento-data-SPLITBUF  PIC X(10).
       77 tordini-k-andamento-cliente-SPLITBUF  PIC X(15).
       77 tordini-k-andamento-clides-SPLITBUF  PIC X(20).
       77 tordini-k-promo-SPLITBUF  PIC X(29).
       77 tordini-k-or-SPLITBUF  PIC X(61).
       77 tordini-k-tor-inviare-SPLITBUF  PIC X(14).
       77 tordini-k-tor-tipocli-SPLITBUF  PIC X(25).
       77 tordini-k-tor-gdo-SPLITBUF  PIC X(28).
       77 rordini-ror-k-promo-SPLITBUF  PIC X(16).
       77 rordini-ror-k-articolo-SPLITBUF  PIC X(24).
       77 rordini-ror-k-master-SPLITBUF  PIC X(35).
       77 rordini-ror-k-stbolle-SPLITBUF  PIC X(30).
       77 rordini-ror-k-ord-art-SPLITBUF  PIC X(19).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 mrordini-mro-k-promo-SPLITBUF  PIC X(33).
       77 mrordini-mro-k-articolo-SPLITBUF  PIC X(24).
       77 mrordini-mro-k-progr-SPLITBUF  PIC X(18).
       77 mrordini-mro-k-tprev-SPLITBUF  PIC X(39).
       77 mrordini-mro-k-ord-art-SPLITBUF  PIC X(19).
       77 mtordini-mto-k-ord-cli-SPLITBUF  PIC X(55).
       77 mtordini-mto-k-data-SPLITBUF  PIC X(21).
       77 mtordini-mto-k-clides-SPLITBUF  PIC X(19).
       77 mtordini-mto-k-age-SPLITBUF  PIC X(14).
       77 mtordini-k-mto-stato-sel-SPLITBUF  PIC X(15).
       77 mtordini-k-mto-stato-SPLITBUF  PIC X(14).
       77 mtordini-mto-k-gdo-SPLITBUF  PIC X(26).
       77 mtordini-mto-k-bloc-SPLITBUF  PIC X(20).
       77 mtordini-k-giang-SPLITBUF  PIC X(21).
       77 mtordini-mto-k-promo-SPLITBUF  PIC X(25).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 destini-K1-SPLITBUF  PIC X(111).
       77 destini-k-localita-SPLITBUF  PIC X(36).
       77 blister-k-magaz-SPLITBUF  PIC X(10).
       77 blister-k-des-SPLITBUF  PIC X(51).
       77 listini-lst-k-articolo-SPLITBUF  PIC X(20).
       77 listini-lst-k-cod-art-cli-SPLITBUF  PIC X(29).
       77 listini-lst-k-data-SPLITBUF  PIC X(29).

       01  FILLER           PIC  x.
           88 si-prg-listino VALUE IS "S". 
           88 no-prg-listino VALUE IS "N". 
           88 bl-prg-listino VALUE IS "B". 
           88 nv-prg-listino VALUE IS "V". 
           88 nc-prg-listino VALUE IS "C".
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-gd-r VALUE 5001.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-EVAORD.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Screen2, 
           .

      * GRID
       05
           gd-r, 
           Grid, 
           COL 1,75, 
           LINE 2,38,
           LINES 17,19 ,
           SIZE 122,38 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 7, 10, 13, 23, 123, 131, 139, 149, 157, 
           165, 173),
           ALIGNMENT ("C", "C", "C", "R", "C", "R", "R", "R", "R", "R", 
           "R", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "X(3)", "X(3)", "9(7)", "X(100)", "9(8)"
           , "9(8)", "9(10)", "9(8)", "9(8)", "9(8)", "9(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 481
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-r,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 120,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE gd-r-Event-Proc,
           .

      * PUSH BUTTON
       05
           PB-ESEGUIa, 
           Push-Button, 
           COL 104,25, 
           LINE 20,94,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUIa-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUIa-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           Form1-Pb-2a, 
           Push-Button, 
           COL 114,25, 
           LINE 20,94,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           NO-AUTO-DEFAULT,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2a-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2a-BeforeProcedure, 
           .

      * BAR
       05
           Screen2-Br-1b, 
           Bar,
           COL 1,00, 
           LINE 20,69,
           SIZE 123,88 ,
           ID IS 502,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           lab1, 
           Label, 
           COL 2,00, 
           LINE 21,38,
           LINES 1,38 ,
           SIZE 12,00 ,
           COLOR IS 3,
           FONT IS Verdana12B-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "GIACENZA",
           .

      * LABEL
       05
           lab2, 
           Label, 
           COL 34,50, 
           LINE 21,38,
           LINES 1,38 ,
           SIZE 14,00 ,
           COLOR IS 3,
           FONT IS Verdana12B-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "IMPEGNATO",
           .

      * LABEL
       05
           lab3, 
           Label, 
           COL 70,75, 
           LINE 21,38,
           LINES 1,38 ,
           SIZE 14,00 ,
           COLOR IS 3,
           FONT IS Verdana12B-Occidentale,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "ORDINATO",
           .

      * LABEL
       05
           lab-giac, 
           Label, 
           COL 15,38, 
           LINE 21,38,
           LINES 1,38 ,
           SIZE 14,00 ,
           FONT IS Verdana12B-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-giac-buf,
           .

      * LABEL
       05
           lab-imp, 
           Label, 
           COL 50,25, 
           LINE 21,38,
           LINES 1,38 ,
           SIZE 14,00 ,
           FONT IS Verdana12B-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-imp-buf,
           .

      * LABEL
       05
           lab-ord, 
           Label, 
           COL 85,25, 
           LINE 21,31,
           LINES 1,38 ,
           SIZE 14,00 ,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-ord-buf,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING evaord-linkage.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:evaord, INIT:evaord, BeforeDeclarative>
       MTORDINI-ERR SECTION.
           use after error procedure on MTORDINI.
           evaluate status-MTORDINI
           when "35"
                display message "File [MTORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MTORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MTORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       MRORDINI-ERR SECTION.
           use after error procedure on MRORDINI.
           set tutto-ok  to true.
           evaluate status-MRORDINI
           when "35"
                display message "File [MRORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MRORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MRORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       TORDINI-ERR SECTION.
           use after error procedure on TORDINI.
           evaluate status-TORDINI
           when "35"
                display message "File [TORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       RORDINI-ERR SECTION.
           use after error procedure on RORDINI.
           set tutto-ok  to true.
           evaluate status-RORDINI
           when "35"
                display message "File [RORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [RORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[RORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       CLIENTI-ERR SECTION.
           use after error procedure on clienti.
           set tutto-ok  to true.
           evaluate status-clienti
           when "35"
                display message "File [CLIENTI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [CLIENTI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[CLIENTI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Screen2-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:evaord, INIT:evaord, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana10-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
      *    After-Program
           PERFORM accetordforn-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * PB-ESEGUIa
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * Form1-Pb-2a
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-articoli
           PERFORM OPEN-timballi
           PERFORM OPEN-tmagaz
           PERFORM OPEN-timbalqta
           PERFORM OPEN-progmag
           PERFORM OPEN-timposte
           PERFORM OPEN-tmarche
           PERFORM OPEN-tpiombo
           PERFORM OPEN-tordini
           PERFORM OPEN-rordini
           PERFORM OPEN-clienti
           PERFORM OPEN-mrordini
           PERFORM OPEN-mtordini
           PERFORM OPEN-recapiti
           PERFORM OPEN-tcaumag
           PERFORM OPEN-tparamge
           PERFORM OPEN-destini
           PERFORM OPEN-ttipocli
           PERFORM OPEN-blister
           PERFORM OPEN-param
           PERFORM OPEN-tcontat
           PERFORM OPEN-paramSHI
           PERFORM OPEN-listini
      *    After Open
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:evaord, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:evaord, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:evaord, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:evaord, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:evaord, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:evaord, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:evaord, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:evaord, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordini.
      * <TOTEM:EPT. INIT:evaord, FD:tordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordini
           IF STATUS-tordini = "35"
              OPEN OUTPUT tordini
                IF Valid-STATUS-tordini
                   CLOSE tordini
                   OPEN I-O tordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:tordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordini.
      * <TOTEM:EPT. INIT:evaord, FD:rordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rordini
           IF STATUS-rordini = "35"
              OPEN OUTPUT rordini
                IF Valid-STATUS-rordini
                   CLOSE rordini
                   OPEN I-O rordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-rordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:rordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:evaord, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-mrordini.
      * <TOTEM:EPT. INIT:evaord, FD:mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O mrordini
           IF STATUS-mrordini = "35"
              OPEN OUTPUT mrordini
                IF Valid-STATUS-mrordini
                   CLOSE mrordini
                   OPEN I-O mrordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-mrordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-mtordini.
      * <TOTEM:EPT. INIT:evaord, FD:mtordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O mtordini
           IF STATUS-mtordini = "35"
              OPEN OUTPUT mtordini
                IF Valid-STATUS-mtordini
                   CLOSE mtordini
                   OPEN I-O mtordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-mtordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:mtordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-recapiti.
      * <TOTEM:EPT. INIT:evaord, FD:recapiti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT recapiti
           IF NOT Valid-STATUS-recapiti
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:recapiti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:evaord, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:evaord, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destini.
      * <TOTEM:EPT. INIT:evaord, FD:destini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destini
           IF NOT Valid-STATUS-destini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:destini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ttipocli.
      * <TOTEM:EPT. INIT:evaord, FD:ttipocli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ttipocli
           IF NOT Valid-STATUS-ttipocli
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:ttipocli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-blister.
      * <TOTEM:EPT. INIT:evaord, FD:blister, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT blister
           IF NOT Valid-STATUS-blister
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:blister, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:evaord, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcontat.
      * <TOTEM:EPT. INIT:evaord, FD:tcontat, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcontat
           IF NOT Valid-STATUS-tcontat
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:tcontat, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-paramSHI.
      * <TOTEM:EPT. INIT:evaord, FD:paramSHI, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT paramSHI
           IF NOT Valid-STATUS-paramshi
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:paramSHI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-listini.
      * <TOTEM:EPT. INIT:evaord, FD:listini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT listini
           IF NOT Valid-STATUS-listini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaord, FD:listini, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-articoli
           PERFORM CLOSE-timballi
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-progmag
           PERFORM CLOSE-timposte
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-tordini
           PERFORM CLOSE-rordini
           PERFORM CLOSE-clienti
           PERFORM CLOSE-mrordini
           PERFORM CLOSE-mtordini
           PERFORM CLOSE-recapiti
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-destini
           PERFORM CLOSE-ttipocli
           PERFORM CLOSE-blister
           PERFORM CLOSE-param
           PERFORM CLOSE-tcontat
           PERFORM CLOSE-paramSHI
           PERFORM CLOSE-listini
      *    After Close
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:evaord, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:evaord, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:evaord, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:evaord, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:evaord, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:evaord, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:evaord, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:evaord, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-tordini.
      * <TOTEM:EPT. INIT:evaord, FD:tordini, BeforeClose>
      * <TOTEM:END>
           CLOSE tordini
           .

       CLOSE-rordini.
      * <TOTEM:EPT. INIT:evaord, FD:rordini, BeforeClose>
      * <TOTEM:END>
           CLOSE rordini
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:evaord, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-mrordini.
      * <TOTEM:EPT. INIT:evaord, FD:mrordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mrordini
           .

       CLOSE-mtordini.
      * <TOTEM:EPT. INIT:evaord, FD:mtordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mtordini
           .

       CLOSE-recapiti.
      * <TOTEM:EPT. INIT:evaord, FD:recapiti, BeforeClose>
      * <TOTEM:END>
           CLOSE recapiti
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:evaord, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:evaord, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-destini.
      * <TOTEM:EPT. INIT:evaord, FD:destini, BeforeClose>
      * <TOTEM:END>
           CLOSE destini
           .

       CLOSE-ttipocli.
      * <TOTEM:EPT. INIT:evaord, FD:ttipocli, BeforeClose>
      * <TOTEM:END>
           CLOSE ttipocli
           .

       CLOSE-blister.
      * <TOTEM:EPT. INIT:evaord, FD:blister, BeforeClose>
      * <TOTEM:END>
           CLOSE blister
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:evaord, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-tcontat.
      * <TOTEM:EPT. INIT:evaord, FD:tcontat, BeforeClose>
      * <TOTEM:END>
           CLOSE tcontat
           .

       CLOSE-paramSHI.
      * <TOTEM:EPT. INIT:evaord, FD:paramSHI, BeforeClose>
      * <TOTEM:END>
           CLOSE paramSHI
           .

       CLOSE-listini.
      * <TOTEM:EPT. INIT:evaord, FD:listini, BeforeClose>
      * <TOTEM:END>
           CLOSE listini
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       tordini-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordini-k-causale-SPLITBUF
           MOVE tor-causale(1:4) TO tordini-k-causale-SPLITBUF(1:4)
           MOVE tor-anno(1:4) TO tordini-k-causale-SPLITBUF(5:4)
           MOVE tor-numero(1:8) TO tordini-k-causale-SPLITBUF(9:8)
           .

       tordini-k1-MERGE-SPLITBUF.
           INITIALIZE tordini-k1-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k1-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k1-SPLITBUF(6:5)
           MOVE tor-anno(1:4) TO tordini-k1-SPLITBUF(11:4)
           MOVE tor-numero(1:8) TO tordini-k1-SPLITBUF(15:8)
           .

       tordini-k2-MERGE-SPLITBUF.
           INITIALIZE tordini-k2-SPLITBUF
           MOVE tor-data-passaggio-ordine(1:8) TO 
           tordini-k2-SPLITBUF(1:8)
           MOVE tor-anno(1:4) TO tordini-k2-SPLITBUF(9:4)
           MOVE tor-numero(1:8) TO tordini-k2-SPLITBUF(13:8)
           .

       tordini-k-bolla-MERGE-SPLITBUF.
           INITIALIZE tordini-k-bolla-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-bolla-SPLITBUF(1:4)
           MOVE tor-num-bolla(1:8) TO tordini-k-bolla-SPLITBUF(5:8)
           .

       tordini-k3-MERGE-SPLITBUF.
           INITIALIZE tordini-k3-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k3-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k3-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k3-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO tordini-k3-SPLITBUF(21:1)
           .

       tordini-k-fattura-MERGE-SPLITBUF.
           INITIALIZE tordini-k-fattura-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-fattura-SPLITBUF(1:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-fattura-SPLITBUF(5:8)
           .

       tordini-k4-MERGE-SPLITBUF.
           INITIALIZE tordini-k4-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k4-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k4-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k4-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k4-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO tordini-k4-SPLITBUF(29:1)
           .

       tordini-k-contab-MERGE-SPLITBUF.
           INITIALIZE tordini-k-contab-SPLITBUF
           MOVE tor-agg-contab(1:1) TO tordini-k-contab-SPLITBUF(1:1)
           MOVE tor-anno-fattura(1:4) TO tordini-k-contab-SPLITBUF(2:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-contab-SPLITBUF(6:8)
           .

       tordini-k-tipo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tipo-SPLITBUF
           MOVE tor-tipo(1:1) TO tordini-k-tipo-SPLITBUF(1:1)
           MOVE tor-chiave(1:12) TO tordini-k-tipo-SPLITBUF(2:12)
           .

       tordini-k-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-data-SPLITBUF
           MOVE tor-data-creazione(1:8) TO tordini-k-data-SPLITBUF(1:8)
           MOVE tor-numero(1:8) TO tordini-k-data-SPLITBUF(9:8)
           .

       tordini-k-agfatt-MERGE-SPLITBUF.
           INITIALIZE tordini-k-agfatt-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-agfatt-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k-agfatt-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO 
           tordini-k-agfatt-SPLITBUF(29:1)
           MOVE tor-chiave(1:12) TO tordini-k-agfatt-SPLITBUF(30:12)
           .

       tordini-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE tordini-k-stbolle-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-stbolle-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO 
           tordini-k-stbolle-SPLITBUF(21:1)
           MOVE tor-chiave(1:12) TO tordini-k-stbolle-SPLITBUF(22:12)
           .

       tordini-k-andamento-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-data-SPLITBUF
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-data-SPLITBUF(1:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-data-SPLITBUF(2:8)
           .

       tordini-k-andamento-cliente-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-cliente-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-cliente-SPLITBUF(1:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-cliente-SPLITBUF(6:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-cliente-SPLITBUF(7:8)
           .

       tordini-k-andamento-clides-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-clides-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(6:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-clides-SPLITBUF(11:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-clides-SPLITBUF(12:8)
           .

       tordini-k-promo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-promo-SPLITBUF
           MOVE tor-stato(1:1) TO tordini-k-promo-SPLITBUF(1:1)
           MOVE tor-promo(1:1) TO tordini-k-promo-SPLITBUF(2:1)
           MOVE tor-data-ordine(1:8) TO tordini-k-promo-SPLITBUF(3:8)
           MOVE tor-numero(1:8) TO tordini-k-promo-SPLITBUF(11:8)
           MOVE tor-cod-cli(1:5) TO tordini-k-promo-SPLITBUF(19:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-promo-SPLITBUF(24:5)
           .

       tordini-k-or-MERGE-SPLITBUF.
           INITIALIZE tordini-k-or-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k-or-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-or-SPLITBUF(6:5)
           MOVE tor-num-ord-cli(1:50) TO tordini-k-or-SPLITBUF(11:50)
           .

       tordini-k-tor-inviare-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-inviare-SPLITBUF
           MOVE tor-da-inviare OF tordini(1:1) TO 
           tordini-k-tor-inviare-SPLITBUF(1:1)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-inviare-SPLITBUF(2:12)
           .

       tordini-k-tor-tipocli-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-tipocli-SPLITBUF
           MOVE tor-tipocli OF tordini(1:2) TO 
           tordini-k-tor-tipocli-SPLITBUF(1:2)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(3:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(8:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-tipocli-SPLITBUF(13:12)
           .

       tordini-k-tor-gdo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-gdo-SPLITBUF
           MOVE tor-gdo OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(1:5)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(6:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(11:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-gdo-SPLITBUF(16:12)
           .

       DataSet1-tordini-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 MOVE Low-Value TO tor-chiave
              ELSE
                 MOVE High-Value TO tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 MOVE High-Value TO tor-chiave
              ELSE
                 MOVE Low-Value TO tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordini-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordini-KEY1-ORDER
           END-EVALUATE
           .

      * tordini
       DataSet1-tordini-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY >= tor-chiave
              ELSE
                 START tordini KEY <= tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY <= tor-chiave
              ELSE
                 START tordini KEY >= tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY > tor-chiave
              ELSE
                 START tordini KEY < tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY < tor-chiave
              ELSE
                 START tordini KEY > tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-LOCK
                 READ tordini WITH LOCK 
                 KEY tor-chiave
              ELSE
                 READ tordini WITH NO LOCK 
                 KEY tor-chiave
              END-IF
           END-EVALUATE
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT 
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 IF DataSet1-tordini-LOCK
                    READ tordini NEXT WITH LOCK
                 ELSE
                    READ tordini NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordini-LOCK
                    READ tordini PREVIOUS WITH LOCK
                 ELSE
                    READ tordini PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 IF DataSet1-tordini-LOCK
                    READ tordini PREVIOUS WITH LOCK
                 ELSE
                    READ tordini PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordini-LOCK
                    READ tordini NEXT WITH LOCK
                 ELSE
                    READ tordini NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeWrite>
      * <TOTEM:END>
           WRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeDelete>
      * <TOTEM:END>
           DELETE tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterDelete>
      * <TOTEM:END>
           .

       rordini-ror-k-promo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-promo-SPLITBUF
           MOVE ror-promo OF rordini(1:15) TO 
           rordini-ror-k-promo-SPLITBUF(1:15)
           .

       rordini-ror-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-articolo-SPLITBUF
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-articolo-SPLITBUF(1:6)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-articolo-SPLITBUF(7:17)
           .

       rordini-ror-k-master-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-master-SPLITBUF
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(1:17)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(18:17)
           .

       rordini-ror-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-stbolle-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-stbolle-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-stbolle-SPLITBUF(5:8)
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-stbolle-SPLITBUF(13:17)
           .

       rordini-ror-k-ord-art-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-ord-art-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-ord-art-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-ord-art-SPLITBUF(5:8)
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-ord-art-SPLITBUF(13:6)
           .

       DataSet1-rordini-INITSTART.
           IF DataSet1-rordini-KEY-Asc
              MOVE Low-Value TO ror-chiave OF rordini
           ELSE
              MOVE High-Value TO ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-INITEND.
           IF DataSet1-rordini-KEY-Asc
              MOVE High-Value TO ror-chiave OF rordini
           ELSE
              MOVE Low-Value TO ror-chiave OF rordini
           END-IF
           .

      * rordini
       DataSet1-rordini-START.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY >= ror-chiave OF rordini
           ELSE
              START rordini KEY <= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-NOTGREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY <= ror-chiave OF rordini
           ELSE
              START rordini KEY >= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-GREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY > ror-chiave OF rordini
           ELSE
              START rordini KEY < ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-LESS.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY < ror-chiave OF rordini
           ELSE
              START rordini KEY > ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordini-LOCK
              READ rordini WITH LOCK 
              KEY ror-chiave OF rordini
           ELSE
              READ rordini WITH NO LOCK 
              KEY ror-chiave OF rordini
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT 
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeWrite>
      * <TOTEM:END>
           WRITE ror-rec OF rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE ror-rec OF rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeDelete>
      * <TOTEM:END>
           DELETE rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       mrordini-mro-k-promo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-promo-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-promo-SPLITBUF(1:15)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-promo-SPLITBUF(16:17)
           .

       mrordini-mro-k-articolo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-articolo-SPLITBUF
           MOVE mro-cod-articolo(1:6) TO 
           mrordini-mro-k-articolo-SPLITBUF(1:6)
           MOVE mro-chiave(1:17) TO 
           mrordini-mro-k-articolo-SPLITBUF(7:17)
           .

       mrordini-mro-k-progr-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-progr-SPLITBUF
           MOVE mro-chiave-testa(1:12) TO 
           mrordini-mro-k-progr-SPLITBUF(1:12)
           MOVE mro-progr(1:5) TO mrordini-mro-k-progr-SPLITBUF(13:5)
           .

       mrordini-mro-k-tprev-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-tprev-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-tprev-SPLITBUF(1:15)
           MOVE mro-prg-cod-articolo(1:6) TO 
           mrordini-mro-k-tprev-SPLITBUF(16:6)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-tprev-SPLITBUF(22:17)
           .

       mrordini-mro-k-ord-art-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-ord-art-SPLITBUF
           MOVE mro-chiave-testa(1:12) TO 
           mrordini-mro-k-ord-art-SPLITBUF(1:12)
           MOVE mro-cod-articolo(1:6) TO 
           mrordini-mro-k-ord-art-SPLITBUF(13:6)
           .

       DataSet1-mrordini-INITSTART.
           IF DataSet1-mrordini-KEY-Asc
              MOVE Low-Value TO mro-chiave
           ELSE
              MOVE High-Value TO mro-chiave
           END-IF
           .

       DataSet1-mrordini-INITEND.
           IF DataSet1-mrordini-KEY-Asc
              MOVE High-Value TO mro-chiave
           ELSE
              MOVE Low-Value TO mro-chiave
           END-IF
           .

      * mrordini
       DataSet1-mrordini-START.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY >= mro-chiave
           ELSE
              START mrordini KEY <= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-NOTGREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY <= mro-chiave
           ELSE
              START mrordini KEY >= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-GREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY > mro-chiave
           ELSE
              START mrordini KEY < mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-LESS.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY < mro-chiave
           ELSE
              START mrordini KEY > mro-chiave
           END-IF
           .

       DataSet1-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-mrordini-LOCK
              READ mrordini WITH LOCK 
              KEY mro-chiave
           ELSE
              READ mrordini WITH NO LOCK 
              KEY mro-chiave
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT 
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeWrite>
      * <TOTEM:END>
           WRITE mro-rec OF mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mro-rec OF mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeDelete>
      * <TOTEM:END>
           DELETE mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterDelete>
      * <TOTEM:END>
           .

       mtordini-mto-k-ord-cli-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-ord-cli-SPLITBUF
           MOVE mto-anno(1:4) TO mtordini-mto-k-ord-cli-SPLITBUF(1:4)
           MOVE mto-num-ord-cli(1:50) TO 
           mtordini-mto-k-ord-cli-SPLITBUF(5:50)
           .

       mtordini-mto-k-data-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-data-SPLITBUF
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-data-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-data-SPLITBUF(9:12)
           .

       mtordini-mto-k-clides-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-clides-SPLITBUF
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-clides-SPLITBUF(1:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-clides-SPLITBUF(6:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-clides-SPLITBUF(11:8)
           .

       mtordini-mto-k-age-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-age-SPLITBUF
           MOVE mto-cod-agente(1:5) TO mtordini-mto-k-age-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-age-SPLITBUF(6:8)
           .

       mtordini-k-mto-stato-sel-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-sel-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(1:1)
           MOVE mto-cod-cli(1:5) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(2:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(7:8)
           .

       mtordini-k-mto-stato-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-SPLITBUF(1:1)
           MOVE mto-chiave(1:12) TO mtordini-k-mto-stato-SPLITBUF(2:12)
           .

       mtordini-mto-k-gdo-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-gdo-SPLITBUF
           MOVE mto-gdo(1:5) TO mtordini-mto-k-gdo-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-gdo-SPLITBUF(6:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-gdo-SPLITBUF(14:12)
           .

       mtordini-mto-k-bloc-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-bloc-SPLITBUF
           MOVE mto-stato-attivazione(1:1) TO 
           mtordini-mto-k-bloc-SPLITBUF(1:1)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-bloc-SPLITBUF(2:8)
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-bloc-SPLITBUF(10:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-bloc-SPLITBUF(15:5)
           .

       mtordini-k-giang-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-giang-SPLITBUF
           MOVE mto-data-note1(1:8) TO mtordini-k-giang-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-k-giang-SPLITBUF(9:12)
           .

       mtordini-mto-k-promo-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-promo-SPLITBUF
           MOVE mto-promo(1:1) TO mtordini-mto-k-promo-SPLITBUF(1:1)
           MOVE mto-tipo-CF(1:1) TO mtordini-mto-k-promo-SPLITBUF(2:1)
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-promo-SPLITBUF(3:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-promo-SPLITBUF(8:5)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-promo-SPLITBUF(13:12)
           .

       DataSet1-mtordini-INITSTART.
           IF DataSet1-mtordini-KEY-Asc
              MOVE Low-Value TO mto-chiave
           ELSE
              MOVE High-Value TO mto-chiave
           END-IF
           .

       DataSet1-mtordini-INITEND.
           IF DataSet1-mtordini-KEY-Asc
              MOVE High-Value TO mto-chiave
           ELSE
              MOVE Low-Value TO mto-chiave
           END-IF
           .

      * mtordini
       DataSet1-mtordini-START.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY >= mto-chiave
           ELSE
              START mtordini KEY <= mto-chiave
           END-IF
           .

       DataSet1-mtordini-START-NOTGREATER.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY <= mto-chiave
           ELSE
              START mtordini KEY >= mto-chiave
           END-IF
           .

       DataSet1-mtordini-START-GREATER.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY > mto-chiave
           ELSE
              START mtordini KEY < mto-chiave
           END-IF
           .

       DataSet1-mtordini-START-LESS.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY < mto-chiave
           ELSE
              START mtordini KEY > mto-chiave
           END-IF
           .

       DataSet1-mtordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-mtordini-LOCK
              READ mtordini WITH LOCK 
              KEY mto-chiave
           ELSE
              READ mtordini WITH NO LOCK 
              KEY mto-chiave
           END-IF
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT 
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-mtordini-KEY-Asc
              IF DataSet1-mtordini-LOCK
                 READ mtordini NEXT WITH LOCK
              ELSE
                 READ mtordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mtordini-LOCK
                 READ mtordini PREVIOUS WITH LOCK
              ELSE
                 READ mtordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-mtordini-KEY-Asc
              IF DataSet1-mtordini-LOCK
                 READ mtordini PREVIOUS WITH LOCK
              ELSE
                 READ mtordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mtordini-LOCK
                 READ mtordini NEXT WITH LOCK
              ELSE
                 READ mtordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeWrite>
      * <TOTEM:END>
           WRITE mto-rec OF mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mto-rec OF mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeDelete>
      * <TOTEM:END>
           DELETE mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-recapiti-INITSTART.
           IF DataSet1-recapiti-KEY-Asc
              MOVE Low-Value TO rec-chiave
           ELSE
              MOVE High-Value TO rec-chiave
           END-IF
           .

       DataSet1-recapiti-INITEND.
           IF DataSet1-recapiti-KEY-Asc
              MOVE High-Value TO rec-chiave
           ELSE
              MOVE Low-Value TO rec-chiave
           END-IF
           .

      * recapiti
       DataSet1-recapiti-START.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY >= rec-chiave
           ELSE
              START recapiti KEY <= rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-NOTGREATER.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY <= rec-chiave
           ELSE
              START recapiti KEY >= rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-GREATER.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY > rec-chiave
           ELSE
              START recapiti KEY < rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-LESS.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY < rec-chiave
           ELSE
              START recapiti KEY > rec-chiave
           END-IF
           .

       DataSet1-recapiti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-recapiti-LOCK
              READ recapiti WITH LOCK 
              KEY rec-chiave
           ELSE
              READ recapiti WITH NO LOCK 
              KEY rec-chiave
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT 
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-recapiti-KEY-Asc
              IF DataSet1-recapiti-LOCK
                 READ recapiti NEXT WITH LOCK
              ELSE
                 READ recapiti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-recapiti-LOCK
                 READ recapiti PREVIOUS WITH LOCK
              ELSE
                 READ recapiti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-recapiti-KEY-Asc
              IF DataSet1-recapiti-LOCK
                 READ recapiti PREVIOUS WITH LOCK
              ELSE
                 READ recapiti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-recapiti-LOCK
                 READ recapiti NEXT WITH LOCK
              ELSE
                 READ recapiti NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       destini-K1-MERGE-SPLITBUF.
           INITIALIZE destini-K1-SPLITBUF
           MOVE des-ragsoc-1(1:100) TO destini-K1-SPLITBUF(1:100)
           MOVE des-codice(1:5) TO destini-K1-SPLITBUF(101:5)
           MOVE des-prog(1:5) TO destini-K1-SPLITBUF(106:5)
           .

       destini-k-localita-MERGE-SPLITBUF.
           INITIALIZE destini-k-localita-SPLITBUF
           MOVE des-localita(1:35) TO destini-k-localita-SPLITBUF(1:35)
           .

       DataSet1-destini-INITSTART.
           IF DataSet1-destini-KEY-Asc
              MOVE Low-Value TO des-chiave
           ELSE
              MOVE High-Value TO des-chiave
           END-IF
           .

       DataSet1-destini-INITEND.
           IF DataSet1-destini-KEY-Asc
              MOVE High-Value TO des-chiave
           ELSE
              MOVE Low-Value TO des-chiave
           END-IF
           .

      * destini
       DataSet1-destini-START.
           IF DataSet1-destini-KEY-Asc
              START destini KEY >= des-chiave
           ELSE
              START destini KEY <= des-chiave
           END-IF
           .

       DataSet1-destini-START-NOTGREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY <= des-chiave
           ELSE
              START destini KEY >= des-chiave
           END-IF
           .

       DataSet1-destini-START-GREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY > des-chiave
           ELSE
              START destini KEY < des-chiave
           END-IF
           .

       DataSet1-destini-START-LESS.
           IF DataSet1-destini-KEY-Asc
              START destini KEY < des-chiave
           ELSE
              START destini KEY > des-chiave
           END-IF
           .

       DataSet1-destini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destini-LOCK
              READ destini WITH LOCK 
              KEY des-chiave
           ELSE
              READ destini WITH NO LOCK 
              KEY des-chiave
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT 
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-INITSTART.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE Low-Value TO tcl-chiave
           ELSE
              MOVE High-Value TO tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-INITEND.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE High-Value TO tcl-chiave
           ELSE
              MOVE Low-Value TO tcl-chiave
           END-IF
           .

      * ttipocli
       DataSet1-ttipocli-START.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY >= tcl-chiave
           ELSE
              START ttipocli KEY <= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-NOTGREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY <= tcl-chiave
           ELSE
              START ttipocli KEY >= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-GREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY > tcl-chiave
           ELSE
              START ttipocli KEY < tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-LESS.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY < tcl-chiave
           ELSE
              START ttipocli KEY > tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ttipocli-LOCK
              READ ttipocli WITH LOCK 
              KEY tcl-chiave
           ELSE
              READ ttipocli WITH NO LOCK 
              KEY tcl-chiave
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT 
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterDelete>
      * <TOTEM:END>
           .

       blister-k-magaz-MERGE-SPLITBUF.
           INITIALIZE blister-k-magaz-SPLITBUF
           MOVE bli-magazzino(1:3) TO blister-k-magaz-SPLITBUF(1:3)
           MOVE bli-codice(1:6) TO blister-k-magaz-SPLITBUF(4:6)
           .

       blister-k-des-MERGE-SPLITBUF.
           INITIALIZE blister-k-des-SPLITBUF
           MOVE bli-descrizione(1:50) TO blister-k-des-SPLITBUF(1:50)
           .

       DataSet1-blister-INITSTART.
           IF DataSet1-blister-KEY-Asc
              MOVE Low-Value TO bli-chiave
           ELSE
              MOVE High-Value TO bli-chiave
           END-IF
           .

       DataSet1-blister-INITEND.
           IF DataSet1-blister-KEY-Asc
              MOVE High-Value TO bli-chiave
           ELSE
              MOVE Low-Value TO bli-chiave
           END-IF
           .

      * blister
       DataSet1-blister-START.
           IF DataSet1-blister-KEY-Asc
              START blister KEY >= bli-chiave
           ELSE
              START blister KEY <= bli-chiave
           END-IF
           .

       DataSet1-blister-START-NOTGREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY <= bli-chiave
           ELSE
              START blister KEY >= bli-chiave
           END-IF
           .

       DataSet1-blister-START-GREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY > bli-chiave
           ELSE
              START blister KEY < bli-chiave
           END-IF
           .

       DataSet1-blister-START-LESS.
           IF DataSet1-blister-KEY-Asc
              START blister KEY < bli-chiave
           ELSE
              START blister KEY > bli-chiave
           END-IF
           .

       DataSet1-blister-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-blister-LOCK
              READ blister WITH LOCK 
              KEY bli-chiave
           ELSE
              READ blister WITH NO LOCK 
              KEY bli-chiave
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT 
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tcontat-INITSTART.
           IF DataSet1-tcontat-KEY-Asc
              MOVE Low-Value TO con-chiave
           ELSE
              MOVE High-Value TO con-chiave
           END-IF
           .

       DataSet1-tcontat-INITEND.
           IF DataSet1-tcontat-KEY-Asc
              MOVE High-Value TO con-chiave
           ELSE
              MOVE Low-Value TO con-chiave
           END-IF
           .

      * tcontat
       DataSet1-tcontat-START.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY >= con-chiave
           ELSE
              START tcontat KEY <= con-chiave
           END-IF
           .

       DataSet1-tcontat-START-NOTGREATER.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY <= con-chiave
           ELSE
              START tcontat KEY >= con-chiave
           END-IF
           .

       DataSet1-tcontat-START-GREATER.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY > con-chiave
           ELSE
              START tcontat KEY < con-chiave
           END-IF
           .

       DataSet1-tcontat-START-LESS.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY < con-chiave
           ELSE
              START tcontat KEY > con-chiave
           END-IF
           .

       DataSet1-tcontat-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcontat-LOCK
              READ tcontat WITH LOCK 
              KEY con-chiave
           ELSE
              READ tcontat WITH NO LOCK 
              KEY con-chiave
           END-IF
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT 
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcontat-KEY-Asc
              IF DataSet1-tcontat-LOCK
                 READ tcontat NEXT WITH LOCK
              ELSE
                 READ tcontat NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcontat-LOCK
                 READ tcontat PREVIOUS WITH LOCK
              ELSE
                 READ tcontat PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcontat-KEY-Asc
              IF DataSet1-tcontat-LOCK
                 READ tcontat PREVIOUS WITH LOCK
              ELSE
                 READ tcontat PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcontat-LOCK
                 READ tcontat NEXT WITH LOCK
              ELSE
                 READ tcontat NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-INITSTART.
           IF DataSet1-paramSHI-KEY-Asc
              MOVE Low-Value TO shi-chiave OF PARAMSHI
           ELSE
              MOVE High-Value TO shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-INITEND.
           IF DataSet1-paramSHI-KEY-Asc
              MOVE High-Value TO shi-chiave OF PARAMSHI
           ELSE
              MOVE Low-Value TO shi-chiave OF PARAMSHI
           END-IF
           .

      * paramSHI
       DataSet1-paramSHI-START.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY >= shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY <= shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-NOTGREATER.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY <= shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY >= shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-GREATER.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY > shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY < shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-LESS.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY < shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY > shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-paramSHI-LOCK
              READ paramSHI WITH LOCK 
              KEY shi-chiave OF PARAMSHI
           ELSE
              READ paramSHI WITH NO LOCK 
              KEY shi-chiave OF PARAMSHI
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT 
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-paramSHI-KEY-Asc
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI NEXT WITH LOCK
              ELSE
                 READ paramSHI NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI PREVIOUS WITH LOCK
              ELSE
                 READ paramSHI PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-paramSHI-KEY-Asc
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI PREVIOUS WITH LOCK
              ELSE
                 READ paramSHI PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI NEXT WITH LOCK
              ELSE
                 READ paramSHI NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterDelete>
      * <TOTEM:END>
           .

       listini-lst-k-articolo-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-articolo-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-articolo-SPLITBUF(1:5)
           MOVE lst-articolo OF listini(1:6) TO 
           listini-lst-k-articolo-SPLITBUF(6:6)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-articolo-SPLITBUF(12:8)
           .

       listini-lst-k-cod-art-cli-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-cod-art-cli-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(1:5)
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(6:15)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(21:8)
           .

       listini-lst-k-data-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-data-SPLITBUF
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-data-SPLITBUF(1:8)
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-data-SPLITBUF(9:5)
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini-lst-k-data-SPLITBUF(14:15)
           .

       DataSet1-listini-INITSTART.
           IF DataSet1-listini-KEY-Asc
              MOVE Low-Value TO lst-chiave OF listini
           ELSE
              MOVE High-Value TO lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-INITEND.
           IF DataSet1-listini-KEY-Asc
              MOVE High-Value TO lst-chiave OF listini
           ELSE
              MOVE Low-Value TO lst-chiave OF listini
           END-IF
           .

      * listini
       DataSet1-listini-START.
           IF DataSet1-listini-KEY-Asc
              START listini KEY >= lst-chiave OF listini
           ELSE
              START listini KEY <= lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-START-NOTGREATER.
           IF DataSet1-listini-KEY-Asc
              START listini KEY <= lst-chiave OF listini
           ELSE
              START listini KEY >= lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-START-GREATER.
           IF DataSet1-listini-KEY-Asc
              START listini KEY > lst-chiave OF listini
           ELSE
              START listini KEY < lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-START-LESS.
           IF DataSet1-listini-KEY-Asc
              START listini KEY < lst-chiave OF listini
           ELSE
              START listini KEY > lst-chiave OF listini
           END-IF
           .

       DataSet1-listini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-listini-LOCK
              READ listini WITH LOCK 
              KEY lst-chiave OF listini
           ELSE
              READ listini WITH NO LOCK 
              KEY lst-chiave OF listini
           END-IF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini-lst-k-data-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT 
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-listini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-listini-KEY-Asc
              IF DataSet1-listini-LOCK
                 READ listini NEXT WITH LOCK
              ELSE
                 READ listini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-listini-LOCK
                 READ listini PREVIOUS WITH LOCK
              ELSE
                 READ listini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini-lst-k-data-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-listini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-listini-KEY-Asc
              IF DataSet1-listini-LOCK
                 READ listini PREVIOUS WITH LOCK
              ELSE
                 READ listini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-listini-LOCK
                 READ listini NEXT WITH LOCK
              ELSE
                 READ listini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini-lst-k-data-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE art-rec OF articoli
           INITIALIZE imb-rec OF timballi
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE prg-rec OF progmag
           INITIALIZE imp-rec OF timposte
           INITIALIZE mar-rec OF tmarche
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE tor-rec OF tordini
           INITIALIZE ror-rec OF rordini
           INITIALIZE cli-rec OF clienti
           INITIALIZE mro-rec OF mrordini
           INITIALIZE mto-rec OF mtordini
           INITIALIZE rec-rec OF recapiti
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE tge-rec OF tparamge
           INITIALIZE des-rec OF destini
           INITIALIZE tcl-rec OF ttipocli
           INITIALIZE bli-rec OF blister
           INITIALIZE prm-rec OF param
           INITIALIZE con-rec OF tcontat
           INITIALIZE shi-rec OF paramSHI
           INITIALIZE lst-rec OF listini
           .


      * GRID
       gd-r-Content.
      * CELLS' SETTING
              MODIFY gd-r, X = 1, Y = 1,
                CELL-DATA = "Art",
      * CELLS' SETTING
              MODIFY gd-r, X = 2, Y = 1,
                CELL-DATA = "Mag",
      * CELLS' SETTING
              MODIFY gd-r, X = 3, Y = 1,
                CELL-DATA = "Imb",
      * CELLS' SETTING
              MODIFY gd-r, X = 4, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd-r, X = 5, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-r, X = 6, Y = 1,
                CELL-DATA = "Saldo",
      * CELLS' SETTING
              MODIFY gd-r, X = 7, Y = 1,
                CELL-DATA = "Q.tà",
      * CELLS' SETTING
              MODIFY gd-r, X = 8, Y = 1,
                CELL-DATA = "Prz. Unit.",
      * CELLS' SETTING
              MODIFY gd-r, X = 9, Y = 1,
                CELL-DATA = "I. Cons.",
      * CELLS' SETTING
              MODIFY gd-r, X = 10, Y = 1,
                CELL-DATA = "Cou/Cob",
      * CELLS' SETTING
              MODIFY gd-r, X = 11, Y = 1,
                CELL-DATA = "Add Pb",
      * CELLS' SETTING
              MODIFY gd-r, X = 12, Y = 1,
                CELL-DATA = "I. Merce",
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordini-INITREC.
           INITIALIZE tor-rec OF tordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordini-INITREC.
           INITIALIZE ror-rec OF rordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-mrordini-INITREC.
           INITIALIZE mro-rec OF mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-mtordini-INITREC.
           INITIALIZE mto-rec OF mtordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-recapiti-INITREC.
           INITIALIZE rec-rec OF recapiti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destini-INITREC.
           INITIALIZE des-rec OF destini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ttipocli-INITREC.
           INITIALIZE tcl-rec OF ttipocli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-blister-INITREC.
           INITIALIZE bli-rec OF blister
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcontat-INITREC.
           INITIALIZE con-rec OF tcontat
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-paramSHI-INITREC.
           INITIALIZE shi-rec OF paramSHI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-listini-INITREC.
           INITIALIZE lst-rec OF listini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Screen2-Buf-To-Fld
           END-EVALUATE
           .

       Screen2-Open-Routine.
           PERFORM Screen2-Scrn
           PERFORM Screen2-Proc
           .

       Screen2-Scrn.
           PERFORM Screen2-Create-Win
           PERFORM Screen2-Init-Value
           PERFORM Screen2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen2-DISPLAY
           .

       Screen2-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 22,31,
              SIZE 123,88,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Screen2-Handle,
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen2 UPON Screen2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-r, DISPLAY-COLUMNS (1, 7, 12, 17, 27, 67, 74, 
           81, 89, 97, 105, 113)
           .

       Screen2-PROC.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAccept>
           move evaord-anno   to mto-anno.
           move evaord-numero to mto-numero.

           move mto-numero to numero-edit.
           initialize geslock-linkage.
           string "Ordine anno: " mto-anno, " - N. ", numero-edit
           x"0d0a""risulta in uso su altro terminale." delimited size
              into geslock-messaggio
           end-string. 

           perform until 1 = 2
              set RecLocked to false
              set tutto-ok to true
              read mtordini with lock invalid continue end-read
              if not RecLocked
                 exit perform
              end-if

              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 1 to geslock-v-termina
              move "mtordini" to geslock-nome-file
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova continue
              when termina display message "Operazione interrotta!"
                                     title titolo
                                      icon 2
                           set errori to true
                           move -1 to evaord-status 
                           exit perform
              end-evaluate
           end-perform.

           if tutto-ok
              set cli-tipo-C to true
              move mto-cod-cli to cli-codice
              read clienti no lock
              move cli-tipo to tcl-codice
              read ttipocli no lock 

              move evaord-anno to con-anno
              read tcontat no lock

              evaluate tcl-serie-bolle
              when 1 move con-ult-stampa-bolle-gdo to imp-data
              when 2 move con-ult-stampa-bolle-mv  to imp-data
              when 3 move con-ult-stampa-bolle-at  to imp-data
              end-evaluate

              start timposte key <= imp-chiave
                    invalid continue
                not invalid
                    read timposte previous
              end-start

              move mto-causale to tca-codice
              read tcaumag no lock invalid continue end-read

              modify gd-r, reset-grid = 1
              perform GD-R-CONTENT

              move low-value     to mro-riga
              move evaord-anno   to mro-anno
              move evaord-numero to mro-numero
              
              start mrordini key >= mro-chiave
                    invalid continue 
              end-start
              set trovato to false
              move 2 to riga
              perform until 1 = 2
                 read mrordini next at end exit perform end-read
                 if mro-anno   not = evaord-anno or
                    mro-numero not = evaord-numero
                    exit perform
                 end-if
                 if mro-qta > mro-qta-e
                    set trovato to true
                    move mro-cod-articolo to art-codice
                    |16/10/2023: Utilizzare sempre il progressivo dell'ordine
      *****              perform TROVA-LISTINO
      *****              if si-prg-listino
      *****                 continue
      *****              else
      *****                 perform VALORIZZA-MAGGIOR-GIACENZA
      *****              end-if
                    move mro-prg-cod-articolo  to col-r-articolo 
           art-codice
                    move mro-prg-cod-magazzino to col-r-mag
                    move mro-prg-tipo-imballo  to col-r-imb imq-codice
                    move mro-prg-peso          to col-r-peso
                    
                    perform DESCRIZIONE-ARTICOLO

                    compute saldo = mro-qta - mro-qta-e

                    move saldo             to col-r-saldo   
                    move 0                 to col-r-qta     
                    move mro-prz-unitario  to col-r-prz
                    move mro-imponib-merce to col-r-imponib
                    move mro-imp-consumo   to col-r-cons
                    move mro-imp-cou-cobat to col-r-cou
                    move mro-add-piombo    to col-r-add
                    
                    move mro-chiave-testa  to hid-chiave-testa
                    move mro-progr         to hid-progr
                    modify gd-r(riga, 1),  hidden-data hid-chiave 
                    
                    modify gd-r(riga, 1),  cell-data col-r-articolo
                    modify gd-r(riga, 2),  cell-data col-r-mag     
                    modify gd-r(riga, 3),  cell-data col-r-imb     
                    modify gd-r(riga, 4),  cell-data col-r-peso    
                    modify gd-r(riga, 5),  cell-data col-r-descr   
                    modify gd-r(riga, 6),  cell-data col-r-saldo   
                    modify gd-r(riga, 7),  cell-data col-r-qta     
                    modify gd-r(riga, 8),  cell-data col-r-prz     
                    modify gd-r(riga, 9),  cell-data col-r-cons    
                    modify gd-r(riga, 10), cell-data col-r-cou     
                    modify gd-r(riga, 11), cell-data col-r-add     
                    modify gd-r(riga, 12), cell-data col-r-imponib 
                        
                    move mro-prg-cod-articolo  to prg-cod-articolo 
                    move mro-prg-cod-magazzino to prg-cod-magazzino
                    move mro-prg-tipo-imballo  to prg-tipo-imballo 
                    move mro-prg-peso          to prg-peso         
                    read progmag no lock
                         invalid
                         subtract 1 from riga
                         display message "ERRORE GRAVE!!!"
                                  x"0d0a""PROGRESSIVO RIGA " riga, " CHI
      -    "AVE " prg-chiave, " NON TROVATO"
                                  x"0d0a""CONTATTARE ASSISTENZA!!!"
                                   title tit-err
                                    icon 2
                         add 1 to riga
                    end-read

                    if mro-si-blister
                       if mro-qta-imballi not = 0
                          move prg-peso-utf to hid-peso-utf
                          move 1 to hid-num-articoli
                          perform PESO-BLISTER
                       end-if
                    else
                       move prg-peso-utf to hid-peso-utf
                       move 1 to hid-num-articoli
                    end-if
                    move mro-qta-imballi to hid-qta-imballi

                    modify gd-r(riga, 2),  hidden-data hid-blister

                    if riga = 2
                       perform DATI-PROGMAG
                    end-if

                    add 1 to riga
                 end-if
   
              end-perform
   
              if not trovato
                 display message "Ordine evaso totalmente"
                        title tit-err
                         icon 2
                 move 27 to key-status
              end-if
           else
              move 27 to key-status
           end-if.
           accept versione-evasione from environment "VERSIONE_EVASIONE"
           modify pb-eseguia, bitmap-number = 1.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen2
                 ON EXCEPTION
                    PERFORM Screen2-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen2-Handle
           INITIALIZE Key-Status
           .

       Screen2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen2-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM PB-ESEGUIa-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen2-CLEAR.
           PERFORM Screen2-INIT-VALUE
           PERFORM Screen2-DISPLAY
           .

       Screen2-DISPLAY.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen2 UPON Screen2-Handle
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDisplay>
      * <TOTEM:END>
           .

       Screen2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen2-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-r-Content
           .

       Screen2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordini-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordini-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Update-Key.
           MOVE tor-rec OF tordini TO
                     Screen2-MULKEY-TMPBUF
           PERFORM Screen2-CLEAR
           PERFORM Screen2-INIT-DATA
           MOVE Screen2-MULKEY-TMPBUF TO
                     tor-rec OF tordini
           PERFORM DataSet1-tordini-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
           .

       Screen2-DUPLICATE-MOVEKEY.
           .

       Screen2-First.
           PERFORM Screen2-DUMMY-FIRST
           PERFORM DataSet1-tordini-INITSTART
           PERFORM DataSet1-tordini-START
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-tordini-Read-Next
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFirst>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Previous.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tordini-START-LESS
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-tordini-Read-Prev
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-PREVIOUS
           PERFORM Screen2-IUD-Display
           .

       Screen2-Next.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tordini-START-GREATER
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-tordini-Read-Next
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterNext>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-NEXT
           PERFORM Screen2-IUD-Display
           .
      
       Screen2-Last.
           PERFORM Screen2-DUMMY-LAST
           PERFORM DataSet1-tordini-INITEND
           PERFORM DataSet1-tordini-START-NOTGREATER
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-tordini-Read-Prev
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterLast>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Curr.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordini-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCurrent>
      * <TOTEM:END>
           .

       Screen2-IUD-Display.
           IF Valid-STATUS-tordini
              PERFORM Screen2-ALLGRID-RESET
              PERFORM Screen2-Fld-To-Buf
              PERFORM Screen2-NAVI-FOR-MASTERGRID
              PERFORM Screen2-DISPLAY
           ELSE
              IF Screen2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Screen2-Extended-File-Status
              END-IF
           END-IF
           .

       Screen2-Add.
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-ADD
           PERFORM DataSet1-tordini-INITREC
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordini-Rec-Write
           IF Valid-STATUS-tordini
              PERFORM Screen2-RESUMMARY-INS
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAdd>
      * <TOTEM:END>
           .
     
       Screen2-Update.
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordini-START              
           IF NOT Valid-STATUS-tordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-tordini-Read
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-UPDATE
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordini-Rec-Rewrite
           IF Valid-STATUS-tordini
              PERFORM Screen2-RESUMMARY-DEL
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterUpdate>
      * <TOTEM:END>
           .

       Screen2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Screen2-DUMMY-DELETE
      * delete
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordini-Rec-Delete
           IF Valid-STATUS-tordini
              PERFORM Screen2-CLEAR
              PERFORM Screen2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-tordini
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDelete>
      * <TOTEM:END>
           PERFORM Screen2-ERR-CHECKING
           .

       Screen2-NAVI-FOR-MASTERGRID.
           .

       Screen2-ERR-CHECKING.
           IF Valid-STATUS-tordini
              PERFORM Screen2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Screen2-Extended-File-Status
           END-IF
           .

       Screen2-RESUMMARY-INS.
           .

       Screen2-RESUMMARY-DEL.
           .


       Screen2-DUMMY-FIRST.
           .

       Screen2-DUMMY-PREVIOUS.
           .

       Screen2-DUMMY-NEXT.
           .

       Screen2-DUMMY-LAST.
           .

       Screen2-DUMMY-CURR.
           .

       Screen2-DUMMY-ADD.
           .

       Screen2-DUMMY-UPDATE.
           .

       Screen2-DUMMY-UPDATE-INIT.
           .

       Screen2-DUMMY-DELETE.
           .

       Screen2-DUMMY-DELETE-INIT.
           .

       Screen2-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * FORM : Screen2
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, SetDefault>
      * <TOTEM:END>
           PERFORM Screen2-FLD-TO-BUF
           .


       Screen2-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen2-SHOW-MSG-ROUTINE
           .

       Screen2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen2-DISPLAY-MESSAGE
           .

       Screen2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen2-Save-Status.
           MOVE DataSet1-tordini-KEY1-ORDER TO TMP-Screen2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Screen2-KEYIS
           MOVE tor-rec OF tordini TO 
              TMP-Screen2-tordini-RESTOREBUF
           .             

       Screen2-Restore-Status.
           MOVE TMP-Screen2-KEY1-ORDER TO DataSet1-tordini-KEY1-ORDER
           MOVE TMP-Screen2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Screen2-tordini-RESTOREBUF TO
              tor-rec OF tordini
           PERFORM DataSet1-tordini-START
           IF Valid-STATUS-tordini
              PERFORM DataSet1-tordini-Read-Next
           ELSE
              PERFORM DataSet1-tordini-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-tordini OR
              (Valid-STATUS-tordini AND
                 tor-rec OF tordini = 
                   TMP-Screen2-tordini-RESTOREBUF)
              PERFORM DataSet1-tordini-Read-Next
           END-PERFORM
           .



       Screen2-Event-Proc.
           .

       gd-r-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    Screen2-Handle 
              PERFORM gd-r-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       APPLICA-RIGA.
      * <TOTEM:PARA. APPLICA-RIGA>
           modify gd-r(store-riga,  1), cell-data col-r-articolo.
           modify gd-r(store-riga,  2), cell-data col-r-mag.
           modify gd-r(store-riga,  3), cell-data col-r-imb.
           modify gd-r(store-riga,  4), cell-data col-r-peso.
           modify gd-r(store-riga,  5), cell-data col-r-descr.
           modify gd-r(store-riga,  6), cell-data col-r-saldo.
           modify gd-r(store-riga,  7), cell-data col-r-qta.
           modify gd-r(store-riga,  8), cell-data col-r-prz.
           modify gd-r(store-riga,  9), cell-data col-r-cons.
           modify gd-r(store-riga, 10), cell-data col-r-cou.
           modify gd-r(store-riga, 11), cell-data col-r-add.
           modify gd-r(store-riga, 12), cell-data col-r-imponib.

           modify gd-r(store-riga, 1), hidden-data hid-chiave.
           modify gd-r(store-riga, 2), hidden-data hid-blister 
           .
      * <TOTEM:END>

       CONTROLLI.
      * <TOTEM:PARA. CONTROLLI>
           ||AGGIUNGERE CONTROLLO QTA BLISTER
           set  tutto-ok        to true.
           set  cli-tipo-C      to true.
           move mto-cod-cli     to cli-codice des-codice
           move mto-prg-destino to des-prog.
           read clienti no lock invalid continue end-read.
           if des-prog not = 0
              read destini no lock invalid continue end-read
           else
              move cli-utf to des-deposito-utf
           end-if.
              
           perform CONTROLLO-24000-KG.
           if tutto-ok
              perform SUPERAMENTO-500-KG-UTF
           end-if.

      ***---
       CONTROLLO-24000-KG.
           move 0 to tot-peso.
           inquire gd-r, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
      
              inquire gd-r(riga, 4), cell-data in como-peso
      
              inquire gd-r(riga, 7), cell-data in como-qta
              compute tot-peso = 
                    ( tot-peso + ( como-qta * como-peso) )

              if tot-peso > 24000 
                 display message "Salvataggio impossibile!!!"
                          x"0d0a""Peso superiore a 24.000 Kg."
                           title tit-err
                            icon 2
                 set errori to true
                 exit perform
              end-if
           end-perform.

      ***---
       SUPERAMENTO-500-KG-UTF.
           if des-deposito-UTF not = "S"
              inquire gd-r, last-row in tot-righe
              move 0 to tot-peso

              perform varying riga from 2 by 1
                        until riga > tot-righe

                 inquire gd-r(riga, 2), hidden-data hid-blister

                 if hid-qta-imballi not = 0

                    inquire gd-r(riga, 7), cell-data in como-qta
                    compute tot-peso =
                          ( tot-peso + ( como-qta * hid-peso-utf ) )
                 end-if

                 if tot-peso > 500
                    move como-qta to tot-qta
                                  
                    compute tot-idx = como-qta / hid-qta-imballi
                    compute tot-peso =
                       ( tot-peso - ( como-qta * hid-peso-utf ) )
                    
                    move 1 to idx
                    perform until 1 = 2
                       compute utf-riga = hid-qta-imballi * hid-peso-utf
                       if utf-riga > 500
                          move 500 to utf-riga
                       end-if
                       compute tot-peso =
                               tot-peso + utf-riga
                       if tot-peso > 500
                          add hid-num-articoli to tot-righe
                          modify gd-r, 
                           insertion-index = riga + hid-num-articoli
                                                       
                          modify gd-r, insert-rows = hid-num-articoli

                          subtract 1 from idx
                          compute como-qta = idx * hid-qta-imballi
                          compute qta-rimanente = tot-qta - como-qta
                                                 
                          move como-qta to col-r-qta
                          move riga to store-riga riga-compon
                          perform hid-num-articoli times
                             modify gd-r(riga-compon, 7), cell-data 
           col-r-qta
                             add 1 to riga-compon
                          end-perform

                          perform hid-num-articoli times
                             perform VALORE-RIGA 

                             add hid-num-articoli to store-riga
                             perform APPLICA-RIGA
                             move qta-rimanente to col-r-qta
                             modify gd-r(store-riga, 7),   cell-data 
           col-r-qta
                             subtract hid-num-articoli from store-riga

                             move 0 to tot-peso
                             add 1 to store-riga
                          end-perform
                          compute riga = riga + hid-num-articoli - 1

                          exit perform
                       end-if
                          
                       add 1 to idx
                       if idx > tot-idx
                          exit perform
                       end-if

                    end-perform
                    move 0 to tot-peso
                 end-if
              end-perform
           end-if 
           .
      * <TOTEM:END>

       CREA-EVASIONE.
      * <TOTEM:PARA. CREA-EVASIONE>
           set SaveXX to true.
           perform ACCESSOXX.
           initialize tab-ordini.
           move 1 to idx.
           perform SCRIVI-TESTA.
           if tutto-ok
              perform SCRIVI-RIGHE
           end-if.
           perform DESTROYXX.

      ***---
       SCRIVI-TESTA.
           set omaggio to true.
           initialize tor-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           perform VALORIZZA-NUMERO.
           if tutto-ok         

              move evaord-anno       to mto-anno
              move evaord-numero     to mto-numero
              move tge-anno          to tor-anno
              move mto-causale       to tor-causale tca-codice
              read tcaumag no lock invalid continue end-read
              move mto-cod-cli       to tor-cod-cli
              move mto-prg-destino   to tor-prg-destino
              move mto-num-ord-cli   to tor-num-ord-cli
              move mto-data-ordine   to tor-data-ordine
              move mto-data-passaggio-ordine to 
           tor-data-passaggio-ordine
              move mto-cod-agente    to tor-cod-agente
              move mto-cod-pagamento to tor-cod-pagamento
              move mto-cod-ese-iva   to tor-cod-ese-iva
              set tor-no-ric-ago     to true
              set tor-no-ric-dic     to true
              move mto-contrassegno  to tor-contrassegno

              set tor-bolla-no-prenotata to true
              set tor-fatt-no-prenotata  to true

              move mto-vettore     to tor-vettore
              move mto-note1       to tor-note1
              move mto-data-note1  to tor-data-note1
              move mto-note2       to tor-note2
              move mto-note3       to tor-note3
              move mto-note4       to tor-note4
              move mto-note-bolla-1 to tor-note-bolla-1
              move mto-note-bolla-2 to tor-note-bolla-2

              move mto-cod-cli to rec-codice
              read recapiti no lock invalid continue end-read
              move rec-invio to tor-invio
              if tor-invio = spaces 
                 set tor-invio-postel to true 
              end-if

              set tor-manuale        to true
              set tor-no-agg-contab  to true
              set tor-ordine         to true
              move tca-contropartita to tor-contropartita
              set tor-attivo         to true
              accept tor-data-creazione from century-date
              accept tor-ora-creazione  from time
              move evaord-user       to tor-utente-creazione
              set tor-da-ordine-si   to true
              move mto-stato-attivazione to tor-stato
              set tor-ev-manuale     to true
                                       
      *****        move spaces to shi-codice
      *****        read paramSHI no lock
      *****        if tca-cod-magaz = shi-mag-shi-1 or
      *****           tca-cod-magaz = shi-mag-shi-2
      *****           set tor-da-inviare-si to true
      *****        else                            
      *****           set tor-da-inviare-no to true
      *****        end-if         
              move tca-cod-magaz to mag-codice
              read tmagaz no lock
                   invalid set tor-da-inviare-no to true
               not invalid 
                   if mag-da-inviare-si
                      set tor-da-inviare-si to true
                   else                            
                      set tor-da-inviare-no to true
                   end-if
              end-read

              set  cli-tipo-C  to true
              move tor-cod-cli to cli-codice
              read clienti no lock
              
              move cli-gdo  to tor-gdo
              move cli-tipo to tor-tipocli

              write tor-rec invalid continue end-write
              move tor-chiave to el-chiave(idx)
              if idx = 1
                 move tor-anno        to stordc-da-anno
                 move tor-numero      to stordc-da-num
                 move tor-data-ordine to stordc-da-data
              end-if
              move tor-anno        to stordc-a-anno
              move tor-numero      to stordc-a-num
              move tor-data-ordine to stordc-a-data
              add 1 to idx
              move 0 to store-riga
           end-if.

      ***---
       SCRIVI-RIGHE.
           move 0 to tot-peso tot-kg.
           move 2 to riga.
           perform until riga > tot-righe
              initialize ror-rec replacing numeric data by zeroes
                                      alphanumeric data by spaces
              inquire gd-r(riga, 7),  cell-data ror-qta
              if ror-qta > 0
                 if des-deposito-UTF not = "S"
                    inquire gd-r(riga, 2),  hidden-data in hid-blister
                    if hid-qta-imballi not = 0
                       compute tot-peso = tot-peso + (ror-qta * 
           hid-peso-utf )
                       if tot-peso > 500
                          compute tot-peso = ror-qta * hid-peso-utf

                          if omaggio
                             move tge-causale-omag to tor-causale
                             rewrite tor-rec
                             initialize geslock-linkage 
                                        replacing numeric data by zeroes
                                             alphanumeric data by spaces
                             move 1 to geslock-v-salva
                             set geslock-omom to true
                             move "RICORDARSI D'INSERIRE DETTAGLI PROMOZ
      -    "IONE!!!"
                               to geslock-messaggio
                             perform 5 times
                                call   "geslock" using geslock-linkage
                                cancel "geslock"
                             end-perform
                          end-if

      *    luciano inizio
                          if vecchia-evasione
                             if mto-vettore not = 0
                                if tot-kg <= tge-limite-kg-OLD
                                   if mto-ritira-no
                                      set  cli-tipo-C  to true
                                      move tor-cod-cli to cli-codice
                                      read clienti no lock
                                      if cli-nazione = "ITA"
                                         move tge-vettore-std-OLD to 
           tor-vettore
                                         rewrite tor-rec
                                      end-if
                                   end-if
                                end-if
                             end-if
                          else
                             move mto-prg-destino to como-prm-destino
                             move mto-cod-cli     to como-prm-cliente
                             perform TROVA-PARAMETRO
                             if mto-vettore not = 0
                                if tot-kg <= prm-minore-kg2
                                   if mto-ritira-no
                                      if cli-nazione = "ITA"
                                         move prm-vet-minore-kg2 to 
           tor-vettore
                                         rewrite tor-rec
                                      end-if
                                   end-if
                                end-if
                                if tot-kg <= prm-minore-kg1
                                   if mto-ritira-no
                                      if cli-nazione = "ITA"
                                         move prm-vet-minore-kg1 to 
           tor-vettore
                                         rewrite tor-rec
                                      end-if
                                   end-if
                                end-if
                             end-if
                          end-if
      *    luciano fine
                          perform SCRIVI-TESTA
                       end-if
                    end-if
                 end-if
                 add 1 to store-riga

                 move tor-anno   to ror-anno
                 move tor-numero to ror-num-ordine
                 move store-riga to ror-num-riga

                 inquire gd-r(riga, 1),  hidden-data hid-chiave
                 move hid-chiave-testa to mro-chiave-testa
                 move hid-progr        to mro-progr
                 read mrordini no lock key mro-k-progr
                      invalid 
                      display message "ERRORE GRAVE!!!!"
                               x"0d0a""RIGA NON VALIDA"
                               x"0d0a""CONTATTARE ASSISTENZA"
                                title tit-err
                                 icon 3
                  not invalid                   
                      perform READ-MRORDINI-LOCK
                      set link-update-um     to true
                      set link-update-peso   to false
                      set link-update-valore to false
                      set link-update        to true
                      move mro-prg-chiave    to link-key
                      move tca-codice        to link-causale
                      if mro-qta > mro-qta-e
                         move mro-qta   to link-valore
                      else
                         move mro-qta-e to link-valore
                      end-if
                      move "0000000000000000"     to link-array
                      move -1                     to multiplyer(2)
                      move evaord-user to link-user of link-wprogmag
                      call   "wprogmag" using link-wprogmag
                      cancel "wprogmag"
                      
                      compute eva-new = mro-qta-e + ror-qta
                      if mro-qta > eva-new
                         move mro-qta  to link-valore
                      else
                         move eva-new  to link-valore
                      end-if
                      move "0000000000000000"  to link-array
                      move 1                   to multiplyer(2)
                      move evaord-user to link-user of link-wprogmag
                      call   "wprogmag" using link-wprogmag
                      cancel "wprogmag"

      *****                if mro-qta > mro-qta-e
      *****                   move mro-qta   to link-valore-meno
      *****                else
      *****                   move mro-qta-e to link-valore-meno
      *****                end-if
      *****                
      *****                compute eva-new = mro-qta-e + ror-qta
      *****                if mro-qta > eva-new
      *****                   move mro-qta  to link-valore-piu
      *****                else
      *****                   move eva-new  to link-valore-piu
      *****                end-if
      *****
      *****                compute link-valore = 
      *****                        link-valore-piu - 
      *****                        link-valore-meno
      *****
      *****                move "0000000000000000"  to link-array
      *****                move 1                   to multiplyer(2)
      *****                move evaord-user to link-user of link-wprogmag
      *****                call   "wprogmag" using link-wprogmag
      *****                cancel "wprogmag"
                         
                      move mro-chiave-testa to mto-chiave
                      read mtordini no lock 
                           invalid 
                           display message
                              "GRAVE ERRORE"
                       x"0d0a""TESTA" mto-chiave
                       x"0d0a""NON TROVATA!!!"
                       x"0d0a""CONTATTARE ASSISTENZA!!!"
                             title tit-err
                              icon 2
                       not invalid
                           perform DIREZIONA-IMPEGNATO
                           if mro-qta > mro-qta-e
                              compute link-impegnato = mro-qta - 
           mro-qta-e
                              move 0                   to link-valore
                              move "0000000000000000"  to link-array
                              move -1                  to multiplyer(2)
                              move evaord-user to link-user of 
           link-wprogmag
                              call   "wprogmag" using link-wprogmag
                              cancel "wprogmag"
                           end-if
                           
                           compute eva-new = mro-qta-e + ror-qta
                           if mro-qta > eva-new
                              compute link-impegnato = mro-qta - eva-new
                              move 0                      to link-valore
                              move "0000000000000000"     to link-array
                              move 1                      to 
           multiplyer(2)
                              move evaord-user to link-user of 
           link-wprogmag
                              call   "wprogmag" using link-wprogmag
                              cancel "wprogmag"
                           end-if
                         
                      end-read
                 end-read
                 add ror-qta to mro-qta-e
                 rewrite mro-rec invalid continue end-rewrite

                 inquire gd-r(riga, 1),  cell-data ror-prg-cod-articolo
                 inquire gd-r(riga, 2),  cell-data ror-prg-cod-magazzino
                 inquire gd-r(riga, 3),  cell-data ror-prg-tipo-imballo
                 inquire gd-r(riga, 4),  cell-data ror-prg-peso        
                 inquire gd-r(riga, 7),  cell-data ror-qta
                 inquire gd-r(riga, 8),  cell-data ror-prz-unitario
                 inquire gd-r(riga, 9),  cell-data ror-imp-consumo
                 inquire gd-r(riga, 10), cell-data ror-imp-cou-cobat
                 inquire gd-r(riga, 11), cell-data ror-add-piombo
                 inquire gd-r(riga, 12), cell-data ror-imponib-merce

                 move ror-prg-chiave to prg-chiave

                 move ror-prg-cod-articolo to ror-cod-articolo
                 set ror-no-omaggio to true
                 read progmag no lock
                      invalid
                      display message "ERRORE GRAVE!!!!"
                               x"0d0a""PROGRESSIVO NON VALIDO"
                               x"0d0a""CONTATTARE ASSISTENZA"
                                title tit-err
                                 icon 3
                 end-read
                 move mro-blister      to ror-blister

                 move prg-peso-utf     to ror-peso-utf
                 move prg-peso-non-utf to ror-peso-non-utf

                 if ror-si-blister 
                    if mro-qta-imballi = 0
                       move 0 to ror-qta-imballi
                    else
                       compute ror-qta-imballi = ror-qta / ( mro-qta / 
           mro-qta-imballi )
                    end-if
                    compute ror-num-colli   = ror-qta-imballi
                 else
                    move mro-qta-imballi  to ror-qta-imballi
                    compute ror-num-colli = ror-qta / ror-qta-imballi
                 end-if
                 move mro-bli-codice   to ror-bli-codice
                 move mro-cod-imballo  to ror-cod-imballo
                 move mro-des-imballo  to ror-des-imballo
                 move mro-cod-art-cli  to ror-cod-art-cli
                 move mro-cod-iva      to ror-cod-iva
                 set ror-attivo to true
                 accept ror-data-creazione from century-date
                 accept ror-ora-creazione  from time
                 move evaord-user       to ror-utente-creazione
                 move hid-chiave-testa  to ror-chiave-ordine-testa
                 move hid-progr         to ror-progr-master
                 if ( ror-prz-unitario  + ror-imp-consumo +
                      ror-imp-cou-cobat + ror-add-piombo  +
                      ror-imponib-merce ) = 0
                    set ror-si-omaggio to true
                 else
                    set omaggio to false
                 end-if
                 compute tot-kg  = 
                         tot-kg  + 
                       ( ror-qta * ( ror-peso-utf + ror-peso-non-utf ))
                 write ror-rec invalid continue end-write

      *****           ||||||||||||||||
      *****           move ror-prg-chiave to prg-chiave
      *****           read progmag no lock
      *****           if prg-impegnato < 0
      *****              perform 5 times
      *****                 display message 
      *****                   "EVASIONE: " tor-numero
      *****            x"0d0a""ART : " prg-cod-articolo
      *****            x"0d0a""MAG : " prg-cod-magazzino
      *****            x"0d0a""IMB : " prg-tipo-imballo
      *****            x"0d0a""PESO: " prg-peso
      *****            x"0d0a""IMP : " prg-impegnato
      *****            x"0d0a""FROM: EVAORD"
      *****            x"0d0a"
      *****            x"0d0a""CONTATTARE ASSISTENZA!!!"
      *****                             title titolo
      *****                              icon 3
      *****             end-perform
      *****          end-if
      *****          if prg-impegnato < ( prg-imp-GDO + prg-imp-TRAD )
      *****             perform 5 times
      *****                display message 
      *****                   "EVASIONE: " tor-numero
      *****            x"0d0a""ART :  " prg-cod-articolo
      *****            x"0d0a""MAG :  " prg-cod-magazzino
      *****            x"0d0a""IMB :  " prg-tipo-imballo
      *****            x"0d0a""PESO:  " prg-peso
      *****            x"0d0a""IMP :  " prg-impegnato
      *****            x"0d0a""IMP G: " prg-imp-GDO
      *****            x"0d0a""IMP T: " prg-imp-TRAD
      *****            x"0d0a""FROM:  EVAORD"
      *****            x"0d0a"
      *****            x"0d0a""CONTATTARE ASSISTENZA!!!"
      *****                             title titolo
      *****                              icon 3
      *****             end-perform
      *****          end-if
      *****           |||||||||||||

              end-if

              add 1 to riga
           end-perform.

           if omaggio
              move tge-causale-omag to tor-causale
              rewrite tor-rec
              initialize geslock-linkage 
                         replacing numeric data by zeroes
                              alphanumeric data by spaces
              move 1 to geslock-v-salva
              set geslock-omom to true
              move "RICORDARSI D'INSERIRE DETTAGLI PROMOZIONE!!!"
                to geslock-messaggio
              perform 5 times
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
              end-perform
           end-if.

      *    luciano
           if vecchia-evasione
              if mto-vettore not = 0
                 if tot-kg <= tge-limite-kg-OLD
                    if mto-ritira-no
                       set  cli-tipo-C  to true
                       move tor-cod-cli to cli-codice
                       read clienti no lock
                       if cli-nazione = "ITA"
                          move tge-vettore-std-OLD to tor-vettore
                          rewrite tor-rec
                       end-if
                    end-if
                 end-if
              end-if
           else
              move mto-prg-destino to como-prm-destino
              move mto-cod-cli     to como-prm-cliente
              perform TROVA-PARAMETRO
              if mto-vettore not = 0
                 if tot-kg <= prm-minore-kg2
                    if mto-ritira-no
                       if cli-nazione = "ITA"
                          move prm-vet-minore-kg2 to tor-vettore
                          rewrite tor-rec
                       end-if
                    end-if
                 end-if       
                 if tot-kg <= prm-minore-kg1
                    if mto-ritira-no
                       if cli-nazione = "ITA"
                          move prm-vet-minore-kg1 to tor-vettore
                          rewrite tor-rec
                       end-if
                    end-if
                 end-if
              end-if
           end-if

      *    luciano fine
           modify screen2-handle, visible false.
           
           perform CHIUDI-MASTER.

           set stordc-evasioni to true.
           call   "stordcp" using stordcp-limiti.
           cancel "stordcp" 
           .
      * <TOTEM:END>

       DATI-PROGMAG.
      * <TOTEM:PARA. DATI-PROGMAG>
           move mro-prg-cod-articolo  to prg-cod-articolo.
           move spaces to prg-tipo-imballo prg-cod-magazzino.
           move 0      to prg-peso.
           read progmag no lock.
           move prg-impegnato to lab-imp-buf.
           display lab-imp.
           if prg-impegnato < 0
              modify lab2,    color = 5
              modify lab-imp, color = 5
           else
              modify lab2,    color = 3
              modify lab-imp, color = 3
           end-if.

           move prg-ordinato-6 to lab-ord-buf.
           display lab-ord.
           if prg-ordinato-6 < 0
              modify lab3,    color = 5
              modify lab-ord, color = 5
           else
              modify lab3,    color = 3
              modify lab-ord, color = 3
           end-if.

           move 0 to como-giacenza.
           initialize prg-chiave.
           move mro-prg-cod-articolo to prg-cod-articolo.
           move "LBX"                to prg-cod-magazzino.
           start progmag key > prg-chiave.
           perform until 1 = 2
              read progmag next at end exit perform end-read
              if prg-cod-articolo  not = mro-prg-cod-articolo or
                 prg-cod-magazzino not = "LBX"
                 exit perform
              end-if
              add prg-giacenza to como-giacenza
           end-perform.

           move como-giacenza to lab-giac-buf.
           display lab-giac.
           if como-giacenza < 0
              modify lab1,     color = 5
              modify lab-giac, color = 5
           else
              modify lab1,     color = 3
              modify lab-giac, color = 3
           end-if 
           .
      * <TOTEM:END>

       DESCRIZIONE-ARTICOLO.
      * <TOTEM:PARA. DESCRIZIONE-ARTICOLO>
           read articoli no lock invalid continue end-read.
           inspect art-descrizione replacing trailing 
                                   spaces by low-value.
           if mro-si-blister
              initialize como-imballo
              move mro-qta-imballi to imballi-ed
              call "C$JUSTIFY"  using imballi-ed, "L"
              inspect mro-des-imballo replacing trailing spaces by 
           low-value
BLISTR        string mro-des-imballo delimited low-value
BLISTR               " ("            delimited size
BLISTR               imballi-ed      delimited spaces
BLISTR               ")"             delimited size
BLISTR               into como-imballo
BLISTR        end-string
           else
              perform DESCRIZIONE-IMBALLO
           end-if.
           initialize col-r-descr.

           string art-descrizione delimited low-value
                  " - "           delimited size
                  como-imballo    delimited size
                  into col-r-descr
           end-string 
           .
      * <TOTEM:END>

       DESCRIZIONE-IMBALLO.
      * <TOTEM:PARA. DESCRIZIONE-IMBALLO>
           read timbalqta
                invalid initialize imq-dati
           end-read.
      
           move imq-tipo to imb-codice.
           read timballi
                invalid initialize imb-dati
           end-read.
           inspect imb-descrizione replacing trailing 
                                   spaces by low-value.
           move imq-qta-imb  to imballi-ed.
           call "C$JUSTIFY"  using imballi-ed, "L".
           initialize como-imballo.
      
           string  imb-descrizione delimited by low-value
                   " da "          delimited by size
                   imballi-ed      delimited by spaces
                   " x "           delimited by size
                   art-udm-imballo delimited by size
                   into como-imballo
           end-string.

           inspect como-imballo replacing trailing spaces by low-value 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "imposte.cpy".
           copy "addizionale-piombo.cpy".
           copy "chiudi-master.cpy".
           copy "direziona-impegnato-common.cpy".
           copy "trova-parametro.cpy".
           copy "accessoxx.cpy" 
           .
      * <TOTEM:END>

       IMBALLI-QTA.
      * <TOTEM:PARA. IMBALLI-QTA>
           if como-qta not = 0
              move 0 to resto
              if como-qta > mro-qta-imballi
                 divide como-qta by mro-qta-imballi giving ris
                                                 remainder resto
              else
                 move 1 to resto
                 move 0 to ris
              end-if

              if resto not = 0
                 add 1 to ris
              end-if

              if resto > 0
                 compute mro-qta = mro-qta-imballi * ris
              else
                 move como-qta to mro-qta
              end-if
           else
              move como-qta to mro-qta
           end-if.

           move mro-qta to col-r-qta.
           modify gd-r(riga, 7),  cell-data col-r-qta 
           .
      * <TOTEM:END>

       PESO-BLISTER.
      * <TOTEM:PARA. PESO-BLISTER>
           move mro-chiave to save-mro-chiave.
           perform until 1 = 2
              read mrordini next at end exit perform end-read

              if not mro-si-blister or mro-qta-imballi not = 0
                 exit perform
              end-if

              move mro-prg-cod-articolo  to prg-cod-articolo
              move mro-prg-cod-magazzino to prg-cod-magazzino
              move mro-prg-tipo-imballo  to prg-tipo-imballo
              move mro-prg-peso          to prg-peso
              read progmag no lock
                   invalid
                   subtract 1 from riga
                   display message "ERRORE GRAVE!!!"
                            x"0d0a""PROGRESSIVO RIGA " riga, " CHIAVE " 
           prg-chiave, " NON TROVATO"
                            x"0d0a""CONTATTARE ASSISTENZA!!!"
                             title tit-err
                              icon 2
                   add 1 to riga
              end-read

              add 1            to hid-num-articoli
              add prg-peso-utf to hid-peso-utf
           end-perform.

           move save-mro-chiave to mro-chiave.
           start mrordini key > mro-chiave
                 invalid continue
           end-start 
           .
      * <TOTEM:END>

       READ-MRORDINI-LOCK.
      * <TOTEM:PARA. READ-MRORDINI-LOCK>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "mrordini" to geslock-nome-file.
      
           set tutto-ok to true.
           read mrordini lock key mro-k-progr invalid continue end-read
      
           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read mrordini lock key mro-k-progr 
                        invalid continue 
                   end-read
              end-evaluate
           end-perform 
           .
      * <TOTEM:END>

       SPOSTAMENTO-R.
      * <TOTEM:PARA. SPOSTAMENTO-R>
           inquire gd-r, last-row in tot-righe.
           move event-data-2 to riga.
           if riga < 2 move 2 to riga end-if.
           if riga > tot-righe move tot-righe to riga end-if.
           modify gd-r, start-x = 1, x = 12,
                        start-y = riga, y = riga,
                        region-color = 144.

           inquire gd-r(riga, 1), cell-data in mro-prg-cod-articolo.
           inquire gd-r(riga, 2), cell-data in mro-prg-cod-magazzino.
           inquire gd-r(riga, 3), cell-data in mro-prg-tipo-imballo.
           inquire gd-r(riga, 4), cell-data in mro-prg-peso.
           perform DATI-PROGMAG 
           .
      * <TOTEM:END>

       TROVA-LISTINO.
      * <TOTEM:PARA. TROVA-LISTINO>
           set no-prg-listino to true
      *****     if cli-gdo = space
           if tcl-gdo-no
              exit paragraph
           end-if

           move cli-gdo          to lst-gdo
           move mto-data-ordine  to lst-data
           move art-codice       to lst-articolo
           start listini key <= lst-k-articolo
                 invalid continue
             not invalid
                 read listini previous
                 if lst-gdo      = cli-gdo          and
                    lst-data    <= mto-data-ordine  and
                    lst-articolo = art-codice

                    if lst-prg-cod-articolo = space
                       move zero   to lst-prg-cod-articolo
                    end-if

                    if lst-prg-cod-articolo not = zero
                       set si-prg-listino   to true
                    end-if
                       
                 end-if
           end-start.

           if si-prg-listino
              move lst-prg-chiave  to prg-chiave
              read progmag no lock
                 invalid
                    set nv-prg-listino   to true
              end-read

              if not prg-attivo
                 set bl-prg-listino   to true
              end-if

              if tca-cod-magaz not = prg-cod-magazzino
                 set nc-prg-listino   to true
              end-if
           end-if.

           evaluate true
           when si-prg-listino
                move lst-prg-chiave  to prg-chiave
           when no-prg-listino
                continue
           when bl-prg-listino
                display message box 
                    "Progressivo associato al listino bloccato."
                    title titolo
                    icon 2
                set errori   to true
           when nv-prg-listino
                display message box 
                    "Progressivo associato al listino inesistente."
                    title titolo
                    icon 2
                set errori   to true
           when nc-prg-listino
                display message box 
                    "Progressivo associato al listino"
                    x"0D0A"
                    "non compatibile con la causale scelta."
                    title titolo
                    icon 2
                set errori   to true
           end-evaluate 
           .
      * <TOTEM:END>

       VALORIZZA-MAGGIOR-GIACENZA.
      * <TOTEM:PARA. VALORIZZA-MAGGIOR-GIACENZA>
           |Valorizzo prg-chiave con il record avente > giacenza
           move 0 to giacenza.
           set  trovato              to false.
           move low-value            to prg-chiave.
           move mro-prg-cod-articolo to prg-cod-articolo.
           move tca-cod-magaz        to prg-cod-magazzino.
           start progmag key >= prg-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read progmag next at end exit perform end-read
                    if prg-cod-articolo  not = mro-prg-cod-articolo or
                       prg-cod-magazzino not = tca-cod-magaz
                       exit perform
                    end-if
                    if prg-attivo
                       set trovato to true
                       if prg-giacenza > giacenza
                          move prg-giacenza to giacenza
                          move prg-chiave to mro-prg-chiave
                       end-if
                    end-if
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       VALORIZZA-NUMERO.
      * <TOTEM:PARA. VALORIZZA-NUMERO>
           move spaces to tge-codice
           read tparamge no lock

           move tge-anno     to link-anno.

           set  link-gordc    to true.
           set  link-crea     to true.

           call   "nambar" using link-nambar.
           cancel "nambar".
           
           if link-status-nambar = -1 set errori       to true
           else                       move link-numero to tor-numero
           end-if 
           .
      * <TOTEM:END>

       VALORE-RIGA.
      * <TOTEM:PARA. VALORE-RIGA>
           inquire gd-r(store-riga,  1), cell-data in col-r-articolo.
           inquire gd-r(store-riga,  2), cell-data in col-r-mag.
           inquire gd-r(store-riga,  3), cell-data in col-r-imb.
           inquire gd-r(store-riga,  4), cell-data in col-r-peso.
           inquire gd-r(store-riga,  5), cell-data in col-r-descr.
           inquire gd-r(store-riga,  6), cell-data in col-r-saldo.
           inquire gd-r(store-riga,  7), cell-data in col-r-qta.
           inquire gd-r(store-riga,  8), cell-data in col-r-prz.
           inquire gd-r(store-riga,  9), cell-data in col-r-cons.
           inquire gd-r(store-riga, 10), cell-data in col-r-cou.
           inquire gd-r(store-riga, 11), cell-data in col-r-add.
           inquire gd-r(store-riga, 12), cell-data in col-r-imponib.

           inquire gd-r(store-riga, 1), hidden-data in hid-chiave
           inquire gd-r(store-riga, 2), hidden-data in hid-blister
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           .
      * <TOTEM:END>
       PB-ESEGUIa-LinkTo.
      * <TOTEM:PARA. PB-ESEGUIa-LinkTo>
           set trovato to false.
           inquire gd-r, last-row tot-righe.
           perform varying riga from 2 by 1 until riga > tot-righe
              inquire gd-r(riga, 7), cell-data in como-qta
              if como-qta not = 0
                 set trovato to true
                 exit perform
              end-if
           end-perform.

           if trovato
              display message "Confermi l'evasione?"
                        title titolo
                         type 2
                      default mb-no
                       giving scelta
              if scelta = mb-yes
                 perform CONTROLLI
                 if tutto-ok
                    perform CREA-EVASIONE
                    call   "tprev-elab" using evaord-user
                    cancel "tprev-elab"
                    move 27 to key-status
                 end-if
              end-if
           else
              display message "Nessuna quantità impostata!"
                        title titolo
           end-if 
           .
      * <TOTEM:END>
       PB-ESEGUIa-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-BeforeProcedure>
           modify PB-ESEGUIa, bitmap-number 2
           .
      * <TOTEM:END>
       PB-ESEGUIa-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-AfterProcedure>
           modify PB-ESEGUIa, bitmap-number 1
           .
      * <TOTEM:END>
       Form1-Pb-2a-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-BeforeProcedure>
           modify Form1-Pb-2a, bitmap-number 2
           .
      * <TOTEM:END>
       Form1-Pb-2a-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-AfterProcedure>
           modify Form1-Pb-2a, bitmap-number 1
           .
      * <TOTEM:END>
       accetordforn-Ev-After-Program.
      * <TOTEM:PARA. accetordforn-Ev-After-Program>
           set environment "KEYSTROKE" to "DATA=46   46".
           set environment "KEYSTROKE" to "DATA=44   44" 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Entry>
           evaluate event-data-1
           when  7 continue
           when other set event-action to event-action-fail
           end-evaluate 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-r-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-R 
           .
      * <TOTEM:END>
       gd-r-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-r-Ev-Msg-Finish-Entry>
           set tutto-ok to true.
           inquire gd-r(event-data-2,  7), cell-data in col-r-qta.
           inquire gd-r, last-row  in tot-righe.
           move col-r-qta to como-qta.

           inquire gd-r(event-data-2,  1), hidden-data in hid-chiave.
           move hid-chiave-testa to mro-chiave-testa.
           move hid-progr        to mro-progr.
           read mrordini no lock key mro-k-progr invalid continue 
           end-read.
           
           if mro-si-blister
              if como-qta < mro-qta-imballi and como-qta not = 0
                 set errori to true
                 set event-action to event-action-fail
                 display message 
                     "Quantità < colli Blister ("mro-qta-imballi,")"
                           title tit-err
                            icon 2
              else
                 move como-qta to col-r-qta
                 modify gd-r(event-data-2, 7),  cell-data col-r-qta
                 move event-data-2 to store-riga riga
                 move 1 to idx
                 if store-riga > 2
                    perform until 1 = 2
                       inquire gd-r(riga,  1), hidden-data in hid-chiave
                       move hid-chiave-testa to mro-chiave-testa
                       move hid-progr        to mro-progr
                       read mrordini no lock key mro-k-progr invalid 
           continue end-read
                       if not mro-si-blister or mro-qta-imballi not = 0
                          exit perform
                       end-if
                       subtract 1 from riga
                       add 1 to idx
                    end-perform
                 end-if
                 move mro-bli-codice to bli-codice
                 read blister no lock invalid continue end-read
                 if como-qta < bli-el-qta(idx)
                    set errori to true
                    set event-action to event-action-fail
                    display message 
                        "Minimo evaedibile ("bli-el-qta(idx)")"
                              title tit-err
                               icon 2
                 else
                    move 0 to resto
                    divide como-qta by bli-el-qta(idx)
                           giving colli remainder resto
                    if resto not = 0
                       set errori to true
                       set event-action to event-action-fail
                       display message 
                           "Qta errata: dev'essere multiplo di "
           bli-el-qta(idx)
                                 title tit-err
                                   icon 2
                    end-if
                 end-if
                 if tutto-ok
                    move 1 to idx
                    compute como-qta = colli * bli-el-qta(idx)
                    move como-qta to col-r-qta
                    modify gd-r(riga, 7),  cell-data col-r-qta
                    add 1 to riga
                    add 1 to idx
                    perform until 1 = 2
                       inquire gd-r(riga,  1), hidden-data in hid-chiave
                       move hid-chiave-testa to mro-chiave-testa
                       move hid-progr        to mro-progr
                       read mrordini no lock key mro-k-progr invalid 
           continue end-read
                       if not mro-si-blister or mro-qta-imballi not = 0
                          exit perform
                       end-if
                       compute como-qta = colli * bli-el-qta(idx)
                       move como-qta to col-r-qta
                       modify gd-r(riga, 7),  cell-data col-r-qta
                       add 1 to riga
                       add 1 to idx
                       if riga > tot-righe
                          exit perform
                       end-if
                    end-perform
                    move store-riga to event-data-2
                    inquire gd-r(event-data-2,  1), hidden-data in 
           hid-chiave
                    move hid-chiave-testa to mro-chiave-testa
                    move hid-progr        to mro-progr
                    read mrordini no lock key mro-k-progr invalid 
           continue end-read
                 end-if
              end-if
           else
              perform IMBALLI-QTA
           end-if 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

