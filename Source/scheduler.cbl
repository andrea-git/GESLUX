      *{TOTEM}PRG-COMMENT
      * scheduler.Cbl
      * scheduler.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          scheduler.
       AUTHOR.              andre.
       DATE-WRITTEN.        giovedì 13 aprile 2023 11:10:18.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:scheduler, INIT:scheduler, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "batnott.sl".
           COPY "tsetinvio.sl".
           COPY "lineseq.sl".
           COPY "lineseq-mail.sl".
           COPY "lockname.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "batnott.fd".
           COPY "tsetinvio.fd".
           COPY "lineseq.fd".
           COPY "lineseq-mail.fd".
           COPY "lockname.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 TITOLO VALUE IS "Geslux - Monitor batch". 
       77 FORM1-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana18B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Arial10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 data-oggi        PIC  x(10).
       77 Verdana18-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana20-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 bottone-no-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-si-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 v-push           PIC  9
                  VALUE IS 0.
       77 como-entry       PIC  x.
       77 ore  PIC  99.
       77 ora-oggi         PIC  x(9).
       77 minuti           PIC  99.
       77 secondi          PIC  99.
       77 tot-ok           PIC  99.
       77 tot-ko           PIC  99.
       77 tot-bloc         PIC  99.
       77 tot-ok-ko        PIC  99.
       77 tot-proc         PIC  99.
       77 tot-exec         PIC  99.
       77 path-log         PIC  x(256).
       77 tot-warning      PIC  999
                  VALUE IS 0.
       77 secondi-start    PIC  9(18).
       77 secondi-end      PIC  9(18).
       77 tot-secondi      PIC  9(18).
       77 NomePgm          PIC  x(15).
       77 call-status
                  USAGE IS SIGNED-SHORT.
       77 cmd  PIC  x(200).
       77 SchedulerLog     PIC  x(256).
       77 debugger-test    PIC  x.
       77 idx-log          PIC  9(3)
                  VALUE IS 0.
       77 s-data           PIC  9(8).
       77 diff-gg          PIC  9(8).
       01 tab-log-invio.
           05 el-log-invio     PIC  x(256)
                      OCCURS 50 TIMES.
           COPY  "MAIL.DEF".
           COPY  "LINK-BATCH.DEF".
       01 como-ora-hhmmss.
           05 como-hh          PIC  99.
           05 como-mm          PIC  99.
           05 como-ss          PIC  99.
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 errore-bloccante VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 CallDettaglio VALUE IS 1    WHEN SET TO FALSE  0. 
       77 STATUS-batnott   PIC  X(2).
           88 Valid-STATUS-batnott VALUE IS "00" THRU "09". 
       01 rec-grid.
           05 col-programma    PIC  X(25).
           05 col-ini          PIC  X(25).
           05 col-fine         PIC  X(25).
           05 col-esito        PIC  x(5).
       77 scr-oper-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-tsetinvio PIC  X(2).
           88 Valid-STATUS-tsetinvio VALUE IS "00" THRU "09". 
       77 path-lineseq-mail            PIC  X(256).
       77 STATUS-lineseq-mail          PIC  X(2).
           88 Valid-STATUS-lineseq-mail VALUE IS "00" THRU "09". 
       77 STATUS-lockname  PIC  X(2).
           88 Valid-STATUS-lockname VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-scr-oper-FLAG-REFRESH PIC  9.
          88 scr-oper-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-batnott-BUF     PIC X(589).
       77 TMP-DataSet1-tsetinvio-BUF     PIC X(1023).
       77 TMP-DataSet1-lineseq-BUF     PIC X(1000).
       77 TMP-DataSet1-lineseq-mail-BUF     PIC X(1000).
       77 TMP-DataSet1-lockname-BUF     PIC X(2106).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-batnott-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-batnott-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-batnott-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-batnott-KEY1-Asc  VALUE "A".
          88 DataSet1-batnott-KEY1-Desc VALUE "D".
       77 DataSet1-tsetinvio-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tsetinvio-LOCK  VALUE "Y".
       77 DataSet1-tsetinvio-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tsetinvio-KEY-Asc  VALUE "A".
          88 DataSet1-tsetinvio-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-mail-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-mail-LOCK  VALUE "Y".
       77 DataSet1-lineseq-mail-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-mail-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-mail-KEY-Desc VALUE "D".
       77 DataSet1-lockname-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lockname-LOCK  VALUE "Y".
       77 DataSet1-lockname-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lockname-KEY-Asc  VALUE "A".
          88 DataSet1-lockname-KEY-Desc VALUE "D".

       77 batnott-bat-k-des-SPLITBUF  PIC X(34).
       77 batnott-bat-k-abil-SPLITBUF  PIC X(35).
       77 batnott-bat-k-bloc-SPLITBUF  PIC X(35).
       77 lockname-lckn-k-ute-SPLITBUF  PIC X(91).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           scr-oper, 
           .

      * PUSH BUTTON
       05
           pb-ok-oper, 
           Push-Button, 
           COL 42,38, 
           LINE 33,06,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 13,
           FLAT,
           FONT IS Small-Font,
           ID IS 2,
           OK-BUTTON,
           TITLE "OK",
           VISIBLE v-push,
           .

      * GRID
       05
           form1-gd-1, 
           Grid, 
           COL 3,75, 
           LINE 1,06,
           LINES 31,50 ,
           SIZE 87,50 ,
           BOXED,
           DATA-COLUMNS (1, 26, 51, 76),
           ALIGNMENT ("U", "U", "U", "C"),
           SEPARATION (5, 5, 5, 5),
           DATA-TYPES ("X(20)", "X(20)", "X(20)", "x(5)"),
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RECORD-DATA rec-grid,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 85,
           VPADDING 20,
           VSCROLL,
           EVENT PROCEDURE scr-oper-Gd-1-Event-Proc,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE        DIVISION.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:scheduler, INIT:scheduler, BeforeDeclarative>
       copy "mail-decl.cpy".

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM scheduler-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM scr-oper-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:scheduler, INIT:scheduler, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana10-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
      *    After-Program
           PERFORM scheduler-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-ok-oper
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-batnott
      *    tsetinvio OPEN MODE IS FALSE
      *    PERFORM OPEN-tsetinvio
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    lineseq-mail OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq-mail
      *    lockname OPEN MODE IS FALSE
      *    PERFORM OPEN-lockname
      *    After Open
           .

       OPEN-batnott.
      * <TOTEM:EPT. INIT:scheduler, FD:batnott, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT batnott
           IF NOT Valid-STATUS-batnott
              PERFORM  scr-oper-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:scheduler, FD:batnott, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tsetinvio.
      * <TOTEM:EPT. INIT:scheduler, FD:tsetinvio, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tsetinvio
           IF STATUS-tsetinvio = "35"
              OPEN OUTPUT tsetinvio
                IF Valid-STATUS-tsetinvio
                   CLOSE tsetinvio
                   OPEN I-O tsetinvio
                END-IF
           END-IF
           IF NOT Valid-STATUS-tsetinvio
              PERFORM  scr-oper-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:scheduler, FD:tsetinvio, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:scheduler, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  scr-oper-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:scheduler, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq-mail.
      * <TOTEM:EPT. INIT:scheduler, FD:lineseq-mail, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq-mail
           IF NOT Valid-STATUS-lineseq-mail
              PERFORM  scr-oper-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:scheduler, FD:lineseq-mail, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lockname.
      * <TOTEM:EPT. INIT:scheduler, FD:lockname, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O lockname
           IF STATUS-lockname = "35"
              OPEN OUTPUT lockname
                IF Valid-STATUS-lockname
                   CLOSE lockname
                   OPEN I-O lockname
                END-IF
           END-IF
           IF NOT Valid-STATUS-lockname
              PERFORM  scr-oper-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:scheduler, FD:lockname, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-batnott
      *    tsetinvio CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tsetinvio
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    lineseq-mail CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq-mail
      *    lockname CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lockname
      *    After Close
           .

       CLOSE-batnott.
      * <TOTEM:EPT. INIT:scheduler, FD:batnott, BeforeClose>
      * <TOTEM:END>
           CLOSE batnott
           .

       CLOSE-tsetinvio.
      * <TOTEM:EPT. INIT:scheduler, FD:tsetinvio, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:scheduler, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq-mail.
      * <TOTEM:EPT. INIT:scheduler, FD:lineseq-mail, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lockname.
      * <TOTEM:EPT. INIT:scheduler, FD:lockname, BeforeClose>
      * <TOTEM:END>
           .

       batnott-bat-k-des-MERGE-SPLITBUF.
           INITIALIZE batnott-bat-k-des-SPLITBUF
           MOVE bat-programma(1:30) TO batnott-bat-k-des-SPLITBUF(1:30)
           MOVE bat-chiave(1:3) TO batnott-bat-k-des-SPLITBUF(31:3)
           .

       batnott-bat-k-abil-MERGE-SPLITBUF.
           INITIALIZE batnott-bat-k-abil-SPLITBUF
           MOVE bat-abilitato(1:1) TO batnott-bat-k-abil-SPLITBUF(1:1)
           MOVE bat-programma(1:30) TO batnott-bat-k-abil-SPLITBUF(2:30)
           MOVE bat-chiave(1:3) TO batnott-bat-k-abil-SPLITBUF(32:3)
           .

       batnott-bat-k-bloc-MERGE-SPLITBUF.
           INITIALIZE batnott-bat-k-bloc-SPLITBUF
           MOVE bat-bloccante(1:1) TO batnott-bat-k-bloc-SPLITBUF(1:1)
           MOVE bat-programma(1:30) TO batnott-bat-k-bloc-SPLITBUF(2:30)
           MOVE bat-chiave(1:3) TO batnott-bat-k-bloc-SPLITBUF(32:3)
           .

       DataSet1-batnott-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 MOVE Low-Value TO bat-chiave
              ELSE
                 MOVE High-Value TO bat-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-batnott-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 MOVE High-Value TO bat-chiave
              ELSE
                 MOVE Low-Value TO bat-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-batnott-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-batnott-KEY1-ORDER
           END-EVALUATE
           .

      * batnott
       DataSet1-batnott-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 START batnott KEY >= bat-chiave
              ELSE
                 START batnott KEY <= bat-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-batnott-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 START batnott KEY <= bat-chiave
              ELSE
                 START batnott KEY >= bat-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-batnott-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 START batnott KEY > bat-chiave
              ELSE
                 START batnott KEY < bat-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-batnott-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 START batnott KEY < bat-chiave
              ELSE
                 START batnott KEY > bat-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-batnott-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-LOCK
                 READ batnott WITH LOCK 
                 KEY bat-chiave
              ELSE
                 READ batnott WITH NO LOCK 
                 KEY bat-chiave
              END-IF
           END-EVALUATE
           PERFORM batnott-bat-k-des-MERGE-SPLITBUF
           PERFORM batnott-bat-k-abil-MERGE-SPLITBUF
           PERFORM batnott-bat-k-bloc-MERGE-SPLITBUF
           MOVE STATUS-batnott TO TOTEM-ERR-STAT 
           MOVE "batnott" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-batnott-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 IF DataSet1-batnott-LOCK
                    READ batnott NEXT WITH LOCK
                 ELSE
                    READ batnott NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-batnott-LOCK
                    READ batnott PREVIOUS WITH LOCK
                 ELSE
                    READ batnott PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM batnott-bat-k-des-MERGE-SPLITBUF
           PERFORM batnott-bat-k-abil-MERGE-SPLITBUF
           PERFORM batnott-bat-k-bloc-MERGE-SPLITBUF
           MOVE STATUS-batnott TO TOTEM-ERR-STAT
           MOVE "batnott" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-batnott-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-batnott-KEY1-Asc
                 IF DataSet1-batnott-LOCK
                    READ batnott PREVIOUS WITH LOCK
                 ELSE
                    READ batnott PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-batnott-LOCK
                    READ batnott NEXT WITH LOCK
                 ELSE
                    READ batnott NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM batnott-bat-k-des-MERGE-SPLITBUF
           PERFORM batnott-bat-k-abil-MERGE-SPLITBUF
           PERFORM batnott-bat-k-bloc-MERGE-SPLITBUF
           MOVE STATUS-batnott TO TOTEM-ERR-STAT
           MOVE "batnott" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-batnott-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-batnott TO TOTEM-ERR-STAT
           MOVE "batnott" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-batnott-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-batnott TO TOTEM-ERR-STAT
           MOVE "batnott" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-batnott-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-batnott TO TOTEM-ERR-STAT
           MOVE "batnott" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:batnott, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-INITSTART.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE Low-Value TO tsi-chiave
           ELSE
              MOVE High-Value TO tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-INITEND.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE High-Value TO tsi-chiave
           ELSE
              MOVE Low-Value TO tsi-chiave
           END-IF
           .

      * tsetinvio
       DataSet1-tsetinvio-START.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY >= tsi-chiave
           ELSE
              START tsetinvio KEY <= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-NOTGREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY <= tsi-chiave
           ELSE
              START tsetinvio KEY >= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-GREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY > tsi-chiave
           ELSE
              START tsetinvio KEY < tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-LESS.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY < tsi-chiave
           ELSE
              START tsetinvio KEY > tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-LOCK
              READ tsetinvio WITH LOCK 
              KEY tsi-chiave
           ELSE
              READ tsetinvio WITH NO LOCK 
              KEY tsi-chiave
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT 
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeWrite>
      * <TOTEM:END>
           WRITE tsi-rec OF tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tsi-rec OF tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeDelete>
      * <TOTEM:END>
           DELETE tsetinvio.
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lineseq-LOCK
              READ lineseq WITH LOCK 
           ELSE
              READ lineseq WITH NO LOCK 
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT 
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lineseq-KEY-Asc
              IF DataSet1-lineseq-LOCK
                 READ lineseq NEXT WITH LOCK
              ELSE
                 READ lineseq NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-INITSTART.
           .

       DataSet1-lineseq-mail-INITEND.
           .

       DataSet1-lineseq-mail-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga-mail OF lineseq-mail.
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterDelete>
      * <TOTEM:END>
           .

       lockname-lckn-k-ute-MERGE-SPLITBUF.
           INITIALIZE lockname-lckn-k-ute-SPLITBUF
           MOVE lckn-chiave(1:60) TO lockname-lckn-k-ute-SPLITBUF(1:60)
           MOVE lckn-utente(1:30) TO lockname-lckn-k-ute-SPLITBUF(61:30)
           .

       DataSet1-lockname-INITSTART.
           IF DataSet1-lockname-KEY-Asc
              MOVE Low-Value TO lckn-chiave
           ELSE
              MOVE High-Value TO lckn-chiave
           END-IF
           .

       DataSet1-lockname-INITEND.
           IF DataSet1-lockname-KEY-Asc
              MOVE High-Value TO lckn-chiave
           ELSE
              MOVE Low-Value TO lckn-chiave
           END-IF
           .

      * lockname
       DataSet1-lockname-START.
           IF DataSet1-lockname-KEY-Asc
              START lockname KEY >= lckn-chiave
           ELSE
              START lockname KEY <= lckn-chiave
           END-IF
           .

       DataSet1-lockname-START-NOTGREATER.
           IF DataSet1-lockname-KEY-Asc
              START lockname KEY <= lckn-chiave
           ELSE
              START lockname KEY >= lckn-chiave
           END-IF
           .

       DataSet1-lockname-START-GREATER.
           IF DataSet1-lockname-KEY-Asc
              START lockname KEY > lckn-chiave
           ELSE
              START lockname KEY < lckn-chiave
           END-IF
           .

       DataSet1-lockname-START-LESS.
           IF DataSet1-lockname-KEY-Asc
              START lockname KEY < lckn-chiave
           ELSE
              START lockname KEY > lckn-chiave
           END-IF
           .

       DataSet1-lockname-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lockname-LOCK
              READ lockname WITH LOCK 
              KEY lckn-chiave
           ELSE
              READ lockname WITH NO LOCK 
              KEY lckn-chiave
           END-IF
           PERFORM lockname-lckn-k-ute-MERGE-SPLITBUF
           MOVE STATUS-lockname TO TOTEM-ERR-STAT 
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lockname-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lockname-KEY-Asc
              IF DataSet1-lockname-LOCK
                 READ lockname NEXT WITH LOCK
              ELSE
                 READ lockname NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockname-LOCK
                 READ lockname PREVIOUS WITH LOCK
              ELSE
                 READ lockname PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM lockname-lckn-k-ute-MERGE-SPLITBUF
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lockname-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-lockname-KEY-Asc
              IF DataSet1-lockname-LOCK
                 READ lockname PREVIOUS WITH LOCK
              ELSE
                 READ lockname PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockname-LOCK
                 READ lockname NEXT WITH LOCK
              ELSE
                 READ lockname NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM lockname-lckn-k-ute-MERGE-SPLITBUF
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lockname-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeWrite>
      * <TOTEM:END>
           WRITE lckn-rec OF lockname.
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lockname-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRewrite>
      * <TOTEM:END>
           REWRITE lckn-rec OF lockname.
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lockname-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeDelete>
      * <TOTEM:END>
           DELETE lockname.
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE bat-rec OF batnott
           INITIALIZE tsi-rec OF tsetinvio
           INITIALIZE line-riga OF lineseq
           INITIALIZE line-riga-mail OF lineseq-mail
           INITIALIZE lckn-rec OF lockname
           .


      * GRID
       form1-gd-1-Content.
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 1, Y = 1,
                CELL-DATA = "Processo",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 2, Y = 1,
                CELL-DATA = "Inzio",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 3, Y = 1,
                CELL-DATA = "Fine",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 4, Y = 1,
                CELL-DATA = "Esito",
      * COLUMNS' SETTING
              MODIFY form1-gd-1, X = 4  
                COLUMN-FONT = Verdana12B-Occidentale,
           .

      * FD's Initialize Paragraph
       DataSet1-batnott-INITREC.
           INITIALIZE bat-rec OF batnott
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tsetinvio-INITREC.
           INITIALIZE tsi-rec OF tsetinvio
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-mail-INITREC.
           INITIALIZE line-riga-mail OF lineseq-mail
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lockname-INITREC.
           INITIALIZE lckn-rec OF lockname
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       scr-oper-Open-Routine.
           PERFORM scr-oper-Scrn
           PERFORM scr-oper-Proc
           .

       scr-oper-Scrn.
           PERFORM scr-oper-Create-Win
           PERFORM scr-oper-Init-Value
           PERFORM scr-oper-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-oper-DISPLAY
           .

       scr-oper-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 35,00,
              SIZE 93,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-oper-Event-Proc,
              HANDLE IS scr-oper-Handle,
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-oper UPON scr-oper-Handle
      * DISPLAY-COLUMNS settings
              MODIFY form1-gd-1, DISPLAY-COLUMNS (1, 26, 51, 76)
           .

       scr-oper-PROC.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeAccept>
           move low-value to bat-rec.
           start batnott key >= bat-chiave
                 invalid 
                 modify form1-gd-1, reset-grid = 1
                 perform FORM1-GD-1-CONTENT
             not invalid
                 initialize rec-grid
                 move 2 to riga
                 perform until 1 = 2
                    read batnott next at end exit perform end-read
                    if bat-abilitato-si
                       move bat-programma to col-programma
                       modify form1-gd-1(riga, 1), cell-data 
           col-programma
                       modify form1-gd-1(riga, 1), hidden-data bat-prg
                       add 1 to riga
                    end-if
                 end-perform                 
                 call "C$CALLEDBY" using NomePgm
                 if NomePgm = "admin"
                    move 1 to v-push
                    modify pb-ok-oper, VISIBLE v-push
                 else
                    modify form1-gd-1, enabled true
                   |Serve a spoller per non dare messaggi a video
                    set environment "BATCH_NOTTURNO" to "S"         
                    perform CHIAMA-BATCH                         
                    set environment "BATCH_NOTTURNO" to " "
                    move 27 to key-status
                 end-if
           end-start.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-oper
                 ON EXCEPTION
                    PERFORM scr-oper-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterEndAccept>
           if CallDettaglio
              set CallDettaglio to false
              if path-log not = spaces
                 inspect path-log replacing trailing spaces by low-value
                 initialize cmd
                 string "START "   delimited size
                       x"22222022" delimited size
                       path-log    delimited low-value
                       x"22"       delimited size
                       into cmd
                 end-string
                 call "C$SYSTEM" using cmd, 225
                                giving call-status
              end-if
           end-if

      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-oper-Handle
           INITIALIZE Key-Status
           .

       scr-oper-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-oper-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-oper-Exit
                 END-IF
              WHEN Key-Status = 13
                 PERFORM pb-ok-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-oper-CLEAR.
           PERFORM scr-oper-INIT-VALUE
           PERFORM scr-oper-DISPLAY
           .

       scr-oper-DISPLAY.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-oper UPON scr-oper-Handle
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterDisplay>
      * <TOTEM:END>
           .

       scr-oper-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-oper-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM form1-gd-1-Content
           .

       scr-oper-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, SetDefault>
      * <TOTEM:END>
           PERFORM scr-oper-FLD-TO-BUF
           .


       scr-oper-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-oper-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-oper-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-oper-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-oper-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-oper-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-oper-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-oper-SHOW-MSG-ROUTINE
           .

       scr-oper-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-oper-DISPLAY-MESSAGE
           .

       scr-oper-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-oper-Save-Status.
           .             

       scr-oper-Restore-Status.
           .



       scr-oper-Event-Proc.
           .

       scr-oper-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 1 ALSO
                    scr-oper-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    scr-oper-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 1 ALSO
                    scr-oper-Handle 
              PERFORM form1-gd-1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 1 ALSO
                    scr-oper-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 1 ALSO
                    scr-oper-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 1 ALSO
                    scr-oper-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       AFTER-SEND-MAIL.
      * <TOTEM:PARA. AFTER-SEND-MAIL>
           .
      * <TOTEM:END>

       CHIAMA-BATCH.
      * <TOTEM:PARA. CHIAMA-BATCH>
           move space to debugger-test.
           accept debugger-test from environment "DEBUGGER_TEST".
           if debugger-test = space
              perform INVIO-MAIL-INI
           end-if.
           initialize wstampa.                 
           perform FORMAT-DATA-OGGI-ORA.
           accept  wstampa from environment "SCHEDULER_PATH_LOG".
           inspect wstampa replacing trailing spaces by low-value.
           string  wstampa                          delimited low-value
                   "RIEPILOGO_BATCH_NOTTURNI_DEL_"  delimited size
                   como-data                        delimited size
                   "_ORE_"                          delimited size
                   como-ora-hhmmss                  delimited size
                   ".txt"                           delimited size
                   into wstampa
           end-string.                 
           move wstampa to SchedulerLog. 

           open output lineseq.
           write line-riga of lineseq from spaces.
           accept s-data from century-date.
           string "RIEPILOGO BATCH NOTTURNI DEL " delimited size
                  data-oggi          delimited size
                  " - INZIATO ALLE " delimited size
                  como-hh            delimited size
                  ":"                delimited size
                  como-mm            delimited size
                  "."                delimited size
                  como-ss            delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.
           write line-riga of lineseq from spaces.
           compute secondi-start = como-ss +
                                 ( como-mm * 60 ) +
                                 ( como-hh * 3600 ).
                  
           if debugger-test = space
              call "C$SYSTEM" using "E:\GESLUX\acu-stop.bat"
              call "C$SLEEP" using 5
           end-if.

           set errore-bloccante to false.

           |Lo ripulisco per evitarne la proliferazione
           open output lockname.
           close       lockname.

           move 0 to tot-ok tot-ko tot-proc tot-ok-ko tot-exec tot-bloc
                     idx-log tot-warning.  
           initialize tab-log-invio.
           inquire form1-gd-1, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              if riga = 2
                 move "NOME PROCESSO" to col-programma
                 move "INIZIO"        to col-ini
                 move "FINE"          to col-fine
                 move "ESITO"         to col-esito
                 perform WRITE-LINE-RIGA
              end-if

              inquire form1-gd-1(riga, 1), hidden-data bat-prg
              read batnott

              inquire form1-gd-1 (riga, 1), cell-data in col-programma
              move spaces to col-ini col-fine col-esito              
              perform FORMAT-DATA-OGGI-ORA
              string data-oggi delimited size
                     " - "     delimited size
                     ora-oggi  delimited size
                     into col-ini
              end-string                                    
              modify form1-gd-1(riga, 2), cell-data col-ini

              if bat-bloccabile-no or
               ( bat-bloccabile-si and not errore-bloccante )
                 move "Running..." to col-fine 
                 modify form1-gd-1(riga, 3), cell-data col-fine  
                 initialize batch-linkage replacing numeric data by 
           zeroes
                                               alphanumeric data by 
           spaces
                 move scr-oper-handle to batch-win-handle       
                 move 0 to batch-status
                 call col-programma using batch-linkage
                      on overflow                             
                      modify form1-gd-1(riga, 4), cell-color 5
                      move "ERR"      to col-esito
                      move "OVERFLOW" to col-fine
                      add 1 to tot-ko
                  not on overflow   
                      if col-programma = "ricaldin-bat"
                         move 1 to batch-status
                      end-if
                      if bat-invio-log-sempre
                         add 1 to idx-log
                         move batch-log to el-log-invio(idx-log)
                      end-if
                      add 1 to tot-exec
                      evaluate batch-status                        
                      when 0 
                           move "OK" to col-esito
                           add 1 to tot-ok                             
                           modify form1-gd-1(riga, 4), cell-color 3
                      when 1               
                           if bat-invio-log-warning
                              add 1 to idx-log
                              move batch-log to el-log-invio(idx-log)
                           end-if
                           move "OK**" to col-esito
                           add 1 to tot-ok tot-warning                  
                     
                           modify form1-gd-1(riga, 4), cell-color 14
                      when -1              
                           if bat-invio-log-warning
                              add 1 to idx-log
                              move batch-log to el-log-invio(idx-log)
                           end-if
                           move "ERR" to col-esito
                           add 1 to tot-ok-ko
                           modify form1-gd-1(riga, 4), cell-color 5
                           if bat-bloccante-si
                              set errore-bloccante to true
                           end-if
                      end-evaluate
                 
                      perform FORMAT-DATA-OGGI-ORA
                      string data-oggi delimited size
                             " - "     delimited size
                             ora-oggi  delimited size
                             into col-fine
                      end-string
                 end-call
                 cancel col-programma  
              else
                 move "BLOC" to col-esito
                 add 1 to tot-bloc
                 modify form1-gd-1(riga, 4), cell-color 14
                 
                 perform FORMAT-DATA-OGGI-ORA
                 string data-oggi delimited size
                        " - "     delimited size
                        ora-oggi  delimited size
                        into col-fine
                 end-string
              end-if
                                     
              modify form1-gd-1(riga, 2), cell-data col-ini
              modify form1-gd-1(riga, 3), cell-data col-fine
              modify form1-gd-1(riga, 4), cell-data col-esito
              perform WRITE-LINE-RIGA
      *****        if col-esito = "ERR"
      *****           inquire form1-gd-1(riga, 1), hidden-data bat-prg
      *****           read batnott
      *****           if bat-bloccante-si
      *****              exit perform
      *****           end-if
      *****        end-if
           end-perform.             

           write line-riga of lineseq from spaces.
           perform FORMAT-DATA-OGGI-ORA.
           compute secondi-end = como-ss +
                               ( como-mm * 60 ) +
                               ( como-hh * 3600 ).
                             
           accept como-data from century-date.
           if como-data > s-data 
              compute diff-gg = function integer-of-date(como-data) -
                                function integer-of-date(s-data)
              compute secondi-end = ( 24 * diff-gg * 3600 ) + 
                                    secondi-end
           end-if.
                                    
           initialize line-riga of lineseq.
           string "RIEPILOGO BATCH NOTTURNI " delimited size
                  " - TERMINATO IL "          delimited size
                  data-oggi                   delimited size
                  " ALLE "                    delimited size
                  ora-oggi                    delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.

           write line-riga of lineseq from spaces.

           compute tot-secondi = secondi-end - secondi-start.
           if tot-secondi >= 3600
              compute ore = tot-secondi / 3600
              compute tot-secondi = tot-secondi - ( ore * 3600 )
           end-if.
           if tot-secondi >= 60               
              compute minuti = tot-secondi / 60
              compute tot-secondi = tot-secondi - ( minuti * 60)
           end-if.
           move tot-secondi to secondi.
                 
           initialize line-riga of lineseq.
           string "ELABORAZIONE ESEGUITA IN " delimited size
                  ore       delimited size
                  " ORE, "  delimited size
                  minuti    delimited size
                  " MIN E " delimited size
                  secondi   delimited size
                  " SEC"    delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.
                 
           subtract 1 from tot-righe giving tot-proc.
           initialize line-riga of lineseq.
           string "TOTALE PROCESSI: " delimited size
                  tot-proc            delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.
           initialize line-riga of lineseq.
           string "ESEGUITI.......: " delimited size
                  tot-exec            delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.     
           initialize line-riga of lineseq.
           string "CORRETTI.......: " delimited size
                  tot-ok              delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.
           initialize line-riga of lineseq.
           string "ERRATI.........: " delimited size
                  tot-ok-ko           delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.     
           initialize line-riga of lineseq.
           string "NON ESEGUITI...: " delimited size
                  tot-ko              delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.
           initialize line-riga of lineseq.
           string "BLOCCATI.......: " delimited size
                  tot-bloc            delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq.

           close lineseq.                    

           if debugger-test = space
              call "C$SYSTEM" using "E:\GESLUX\acu-start.bat"
              perform INVIO-MAIL-FINE  
           end-if.

      ***---
       FORMAT-DATA-OGGI-ORA.
           accept como-data from century-date. 
           move como-data(7:2) to data-oggi(1:2).
           move "/"            to data-oggi(3:1).
           move como-data(5:2) to data-oggi(4:2).
           move "/"            to data-oggi(6:1).
           move como-data(1:4) to data-oggi(7:4).
           accept como-ora-hhmmss  from time.
           string como-hh              delimited size
                  ":"                  delimited size
                  como-mm              delimited size
                  "."                  delimited size
                  como-ss              delimited size
                  into ora-oggi
           end-string.

      ***---
       WRITE-LINE-RIGA.
           string col-programma delimited size
                  col-ini       delimited size
                  col-fine      delimited size
                  col-esito     delimited size
                  into line-riga of lineseq
           end-string.
           write line-riga of lineseq 

           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           modify form1-gd-1, start-x = 1, x = 3,
                              start-y = event-data-2, y = event-data-2,
                              region-color = 481 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "mail.cpy" 
           .
      * <TOTEM:END>

       INVIO-MAIL-FINE.
      * <TOTEM:PARA. INVIO-MAIL-FINE>
           initialize LinkBody.
           if tot-proc = tot-ok
              if tot-warning = 0
                 move "OK - RIEPILOGO BATCH NOTTURNI" to LinkSubject
              else                                                  
                 move "WARNING** - RIEPILOGO BATCH NOTTURNI" to 
           LinkSubject
              end-if
           else                                                  
              move "KO - RIEPILOGO BATCH NOTTURNI" to LinkSubject
           end-if.

           accept path-log from environment "SCHEDULER_PATH_LOG".
           string "In allegato funzionamento schedulazione. "
            x"0d0a""I dettagli di ogni processo si trovano in: "
            x"0d0a"path-log
             into LinkBody.

           accept LinkAddress from environment "SCHEDULER_ADDRESSES".

           move SchedulerLog to LinkAttach
           if idx-log > 0
              perform varying idx-log from 1 by 1 
                        until idx-log > 50
                 if el-log-invio(idx-log) not = spaces
                    inspect LinkAttach replacing trailing spaces by 
           low-value
                    inspect el-log-invio(idx-log)replacing trailing 
           spaces by low-value
                         
                    string LinkAttach            delimited low-value 
                           ";"                   delimited size
                           el-log-invio(idx-log) delimited low-value
                      into LinkAttach
                    end-string
                 end-if
              end-perform                                            

              inspect LinkAttach replacing trailing low-value by spaces
           end-if.                                                   
                               
           move "scheduler" to NomeProgramma.
           set trovato to false.    
           move 10 to tentativi-mail.
           perform CICLO-SEND-MAIL.

           if mail-ko and NomePgm = "admin"
              display message "Invio mail impossibile!"
                       x"0d0a" line-riga-mail
                        title tit-err
                         icon 3
           end-if 
           .
      * <TOTEM:END>

       INVIO-MAIL-INI.
      * <TOTEM:PARA. INVIO-MAIL-INI>
           initialize LinkBody.
           move "INIZIO ELABORAZIONE BATCH NOTTURNI" to LinkSubject.

           accept path-log from environment "SCHEDULER_PATH_LOG".
           move "Inizio elaborazione..." to LinkBody.

           accept LinkAddress from environment "SCHEDULER_INI_ADDRESSES"
           accept LinkAttach  from environment "DUMMY_ATTACH".

           move "scheduler" to NomeProgramma.
           set trovato to false.    
           move 5 to tentativi-mail.
           perform CICLO-SEND-MAIL.

           if mail-ko and NomePgm = "admin"
              display message "Invio mail impossibile!"
                       x"0d0a" line-riga-mail
                        title tit-err
                         icon 3
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       pb-ok-LinkTo.
      * <TOTEM:PARA. pb-ok-LinkTo>
           display message "Eseguire i processi?"
                     title titolo
                      icon 2
                      type mb-yes-no
                   default mb-no
                    giving scelta.

           if scelta= mb-yes
              move 0 to v-push
              modify pb-ok-oper, VISIBLE v-push
              modify form1-gd-1, enabled false
              perform CHIAMA-BATCH
              modify form1-gd-1, enabled true
           end-if 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Entry>
           set event-action  to event-action-fail-terminate.
           inquire form1-gd-1, entry-reason in como-entry.
           if como-entry = x"00"
              inquire form1-gd-1(event-data-2, 2), hidden-data in 
           path-log
              set CallDettaglio to true
           end-if 
           .
      * <TOTEM:END>
       scheduler-Ev-Before-Program.
      * <TOTEM:PARA. scheduler-Ev-Before-Program>
           call "C$CALLEDBY" using NomePgm.
           if NomePgm not = "admin"
              call   "colors"
              cancel "colors"
           end-if 
           .
      * <TOTEM:END>
       scheduler-Ev-After-Program.
      * <TOTEM:PARA. scheduler-Ev-After-Program>
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

