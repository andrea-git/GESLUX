      *{TOTEM}PRG-COMMENT
      * cambia-rif-ord-reva.Cbl
      * cambia-rif-ord-reva.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          cambia-rif-ord-reva.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        lunedì 2 febbraio 2015 11:42:14.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, INIT:cambia-rif-ord-reva, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "clienti.sl".
           COPY "tordforn.sl".
           COPY "rordforn.sl".
           COPY "reva.sl".
           COPY "teva.sl".
           COPY "progmag.sl".
           COPY "tcaumag.sl".
           COPY "sordforn.sl".
           COPY "tparamge.sl".
           COPY "articoli.sl".
           COPY "timposte.sl".
           COPY "tmarche.sl".
           COPY "tpiombo.sl".
           COPY "paramSHI.sl".
           COPY "paramGET.sl".
           COPY "param.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "clienti.fd".
           COPY "tordforn.fd".
           COPY "rordforn.fd".
           COPY "reva.fd".
           COPY "teva.fd".
           COPY "progmag.fd".
           COPY "tcaumag.fd".
           COPY "sordforn.fd".
           COPY "tparamge.fd".
           COPY "articoli.fd".
           COPY "timposte.fd".
           COPY "tmarche.fd".
           COPY "tpiombo.fd".
           COPY "paramSHI.fd".
           COPY "paramGET.fd".
           COPY "param.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
           COPY  "AGGIORNA-STATO-ORDF.DEF".
           COPY  "LINK-WPROGMAG.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "IMPOSTE.DEF".
           COPY  "TROVA-PARAMETRO.DEF".
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       78 titolo VALUE IS "GESLUX - Cambio riferimenti ordine". 
       77 orig-imp-cons    PIC  s9(12)v9999.
       77 orig-coubat      PIC  s9(12)v9999.
       77 orig-add-pb      PIC  s9(12)v9999.
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-imballo     PIC  x(30).
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 1003.
       77 STATUS-reva      PIC  X(2).
           88 Valid-STATUS-reva VALUE IS "00" THRU "09". 
       77 STATUS-teva      PIC  X(2).
           88 Valid-STATUS-teva VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-tpromo    PIC  X(2).
           88 Valid-STATUS-tpromo VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-sordforn  PIC  X(2).
           88 Valid-STATUS-sordforn VALUE IS "00" THRU "09". 
       77 anno-ordf        PIC  9(4).
       77 numero-ordf      PIC  z(8).
       77 riga-ordf        PIC  z(5).
       77 lab-stato-ord-buf            PIC  X(30).
       77 anno-eva         PIC  9(4).
       77 numero-eva       PIC  z(8).
       77 riga-eva         PIC  z(5).
       77 ef-anno-buf      PIC  9(4).
       77 ef-riga-buf      PIC  z(4).
       77 ef-numero-buf    PIC  9(5).
       77 STATUS-paramshi  PIC  X(2).
           88 Valid-STATUS-paramshi VALUE IS "00" THRU "09". 
       77 STATUS-paramget  PIC  X(2).
           88 Valid-STATUS-paramget VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-reva-BUF     PIC X(260).
       77 TMP-DataSet1-teva-BUF     PIC X(199).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-sordforn-BUF     PIC X(1139).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-timposte-BUF     PIC X(277).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(179).
       77 TMP-DataSet1-paramSHI-BUF     PIC X(9574).
       77 TMP-DataSet1-paramGET-BUF     PIC X(9624).
       77 TMP-DataSet1-param-BUF     PIC X(980).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tordforn-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY1-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY1-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-reva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-reva-LOCK  VALUE "Y".
       77 DataSet1-reva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-reva-KEY-Asc  VALUE "A".
          88 DataSet1-reva-KEY-Desc VALUE "D".
       77 DataSet1-teva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-teva-LOCK  VALUE "Y".
       77 DataSet1-teva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-teva-KEY-Asc  VALUE "A".
          88 DataSet1-teva-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-sordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-sordforn-LOCK  VALUE "Y".
       77 DataSet1-sordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-sordforn-KEY-Asc  VALUE "A".
          88 DataSet1-sordforn-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-paramSHI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-paramSHI-LOCK  VALUE "Y".
       77 DataSet1-paramSHI-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-paramSHI-KEY-Asc  VALUE "A".
          88 DataSet1-paramSHI-KEY-Desc VALUE "D".
       77 DataSet1-paramGET-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-paramGET-LOCK  VALUE "Y".
       77 DataSet1-paramGET-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-paramGET-KEY-Asc  VALUE "A".
          88 DataSet1-paramGET-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".

       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 reva-reva-k-articolo-SPLITBUF  PIC X(26).
       77 teva-teva-stato-SPLITBUF  PIC X(14).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 articoli-art-k1-SPLITBUF  PIC X(51).

       77  save-tof-cod-forn    pic 9(5).
       77  save-tof-causale     pic x(4).
       77  como-prz-unit        PIC  9(9)v9999.

       01                       pic 9.
           88 controllo-finale  value 1 false zero.
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-anno VALUE 5001.
       78  78-ID-ef-numero VALUE 5002.
       78  78-ID-ef-riga VALUE 5003.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-CAMBIA-RIF-ORD-REVA.DEF".
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * ENTRY FIELD
       05
           ef-anno, 
           Entry-Field, 
           COL 13,00, 
           LINE 14,00,
           LINES 1,33 ,
           SIZE 8,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-anno,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-anno-buf,
           AFTER PROCEDURE ef-anno-AfterProcedure, 
           BEFORE PROCEDURE ef-anno-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-numero, 
           Entry-Field, 
           COL 13,00, 
           LINE 16,00,
           LINES 1,33 ,
           SIZE 8,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-numero,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-numero-buf,
           AFTER PROCEDURE ef-dest-AfterProcedure, 
           BEFORE PROCEDURE ef-dest-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-riga, 
           Entry-Field, 
           COL 13,00, 
           LINE 18,00,
           LINES 1,33 ,
           SIZE 8,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-riga,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 3,
           VALUE ef-riga-buf,
           AFTER PROCEDURE ef-num-AfterProcedure, 
           BEFORE PROCEDURE ef-num-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 2,10, 
           LINE 1,17,
           LINES 0,89 ,
           SIZE 1,60 ,
           FONT IS Default-Font,
           ID IS 5,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 2,00, 
           LINE 14,00,
           LINES 1,33 ,
           SIZE 9,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Anno",
           .

      * LABEL
       05
           Screen1-La-2, 
           Label, 
           COL 2,00, 
           LINE 18,00,
           LINES 1,31 ,
           SIZE 9,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Riga",
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 20,50,
           LINES 2,78 ,
           SIZE 54,60 ,
           LOWERED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUI, 
           Push-Button, 
           COL 39,30, 
           LINE 21,17,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-cancel, 
           Push-Button, 
           COL 47,30, 
           LINE 21,17,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-blockpgm-1, 
           Label, 
           COL 6,10, 
           LINE 1,00,
           LINES 0,44 ,
           SIZE 4,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-La-1a, 
           Label, 
           COL 2,00, 
           LINE 16,00,
           LINES 1,33 ,
           SIZE 9,00 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Numero",
           .

      * LABEL
       05
           Screen2-La-1ba, 
           Label, 
           COL 2,00, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 7,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Numero:",
           .

      * LABEL
       05
           lab-anno-eva, 
           Label, 
           COL 10,00, 
           LINE 3,78,
           LINES 1,33 ,
           SIZE 4,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 22,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE anno-eva,
           .

      * LABEL
       05
           Screen2-La-4, 
           Label, 
           COL 15,00, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 1,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "-",
           .

      * LABEL
       05
           lab-num-ordf, 
           Label, 
           COL 17,00, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 8,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE numero-ordf,
           .

      * LABEL
       05
           Form1-La-5aaacaad, 
           Label, 
           COL 2,00, 
           LINE 6,00,
           LINES 1,33 ,
           SIZE 15,00 ,
           COLOR IS 80,
           ID IS 139,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TITLE "Ordine Originale",
           .

      * BAR
       05
           Form1-Br-2aaad, 
           Bar,
           COL 17,00, 
           LINE 6,70,
           SIZE 38,00 ,
           ID IS 140,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           Form1-La-5aaacaada, 
           Label, 
           COL 2,00, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 15,00 ,
           COLOR IS 80,
           ID IS 141,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TITLE "Dati Evasione",
           .

      * BAR
       05
           Form1-Br-2aaada, 
           Bar,
           COL 17,00, 
           LINE 2,70,
           SIZE 38,00 ,
           ID IS 142,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           Screen2-La-1baa, 
           Label, 
           COL 2,00, 
           LINE 3,78,
           LINES 1,33 ,
           SIZE 7,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 143,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Numero:",
           .

      * LABEL
       05
           lab-anno-ordfa, 
           Label, 
           COL 10,00, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 4,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 144,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE anno-ordf,
           .

      * LABEL
       05
           Screen2-La-4a, 
           Label, 
           COL 15,00, 
           LINE 3,78,
           LINES 1,33 ,
           SIZE 1,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 145,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "-",
           .

      * LABEL
       05
           lab-num-eva, 
           Label, 
           COL 17,00, 
           LINE 3,78,
           LINES 1,33 ,
           SIZE 8,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 146,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE numero-eva,
           .

      * LABEL
       05
           lab-num-ordfaa, 
           Label, 
           COL 27,00, 
           LINE 8,00,
           LINES 1,17 ,
           SIZE 4,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 25,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Riga:",
           .

      * LABEL
       05
           lab-riga-ordf, 
           Label, 
           COL 32,10, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 6,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 26,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE riga-ordf,
           .

      * LABEL
       05
           lab-riga-eva, 
           Label, 
           COL 32,10, 
           LINE 3,78,
           LINES 1,33 ,
           SIZE 6,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 27,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE riga-eva,
           .

      * LABEL
       05
           lab-num-ordfaaa, 
           Label, 
           COL 27,00, 
           LINE 3,78,
           LINES 1,17 ,
           SIZE 4,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 28,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Riga:",
           .

      * LABEL
       05
           lab-num-ordfaab, 
           Label, 
           COL 2,00, 
           LINE 10,00,
           LINES 1,17 ,
           SIZE 4,80 ,
           FONT IS Verdana12-Occidentale,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Stato:",
           .

      * LABEL
       05
           lab-stato-ord, 
           Label, 
           COL 10,00, 
           LINE 10,00,
           LINES 1,33 ,
           SIZE 40,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 31,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE lab-stato-ord-buf,
           .

      * LABEL
       05
           Form1-La-5aaacaadb, 
           Label, 
           COL 2,00, 
           LINE 12,00,
           LINES 1,33 ,
           SIZE 15,00 ,
           COLOR IS 80,
           ID IS 32,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TITLE "Nuovo Ordine",
           .

      * BAR
       05
           Form1-Br-2aaadb, 
           Bar,
           COL 17,00, 
           LINE 12,70,
           SIZE 38,00 ,
           ID IS 33,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 11,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 12,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING cambia-rif-ord-reva-linkage, 
           LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, INIT:cambia-rif-ord-reva, BeforeDeclarative>
       TORDFORN-ERR SECTION.
           use after error procedure on TORDFORN.
           evaluate status-TORDFORN
           when "35"
                display message "File [TORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       RORDFORN-ERR SECTION.
           use after error procedure on RORDFORN.
           set tutto-ok  to true.
           evaluate status-RORDFORN
           when "35"
                display message "File [RORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [RORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[RORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       CLIENTI-ERR SECTION.
           use after error procedure on clienti.
           set tutto-ok  to true.
           evaluate status-clienti
           when "35"
                display message "File [CLIENTI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [CLIENTI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[CLIENTI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, INIT:cambia-rif-ord-reva, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
      *    After-Program
           PERFORM accetordforn-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * PB-ESEGUI
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-cancel
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-clienti
           PERFORM OPEN-tordforn
           PERFORM OPEN-rordforn
           PERFORM OPEN-reva
           PERFORM OPEN-teva
           PERFORM OPEN-progmag
           PERFORM OPEN-tcaumag
           PERFORM OPEN-sordforn
           PERFORM OPEN-tparamge
           PERFORM OPEN-articoli
           PERFORM OPEN-timposte
           PERFORM OPEN-tmarche
           PERFORM OPEN-tpiombo
           PERFORM OPEN-paramSHI
           PERFORM OPEN-paramGET
           PERFORM OPEN-param
      *    After Open
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordforn
           IF STATUS-tordforn = "35"
              OPEN OUTPUT tordforn
                IF Valid-STATUS-tordforn
                   CLOSE tordforn
                   OPEN I-O tordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rordforn
           IF STATUS-rordforn = "35"
              OPEN OUTPUT rordforn
                IF Valid-STATUS-rordforn
                   CLOSE rordforn
                   OPEN I-O rordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-rordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-reva.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:reva, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O reva
           IF STATUS-reva = "35"
              OPEN OUTPUT reva
                IF Valid-STATUS-reva
                   CLOSE reva
                   OPEN I-O reva
                END-IF
           END-IF
           IF NOT Valid-STATUS-reva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:reva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-teva.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:teva, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O teva
           IF STATUS-teva = "35"
              OPEN OUTPUT teva
                IF Valid-STATUS-teva
                   CLOSE teva
                   OPEN I-O teva
                END-IF
           END-IF
           IF NOT Valid-STATUS-teva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:teva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-sordforn.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:sordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O sordforn
           IF STATUS-sordforn = "35"
              OPEN OUTPUT sordforn
                IF Valid-STATUS-sordforn
                   CLOSE sordforn
                   OPEN I-O sordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-sordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:sordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-paramSHI.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:paramSHI, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT paramSHI
           IF NOT Valid-STATUS-paramshi
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:paramSHI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-paramGET.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:paramGET, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT paramGET
           IF NOT Valid-STATUS-paramget
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:paramGET, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-clienti
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-reva
           PERFORM CLOSE-teva
           PERFORM CLOSE-progmag
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-sordforn
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-articoli
           PERFORM CLOSE-timposte
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-paramSHI
           PERFORM CLOSE-paramGET
           PERFORM CLOSE-param
      *    After Close
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-reva.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:reva, BeforeClose>
      * <TOTEM:END>
           CLOSE reva
           .

       CLOSE-teva.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:teva, BeforeClose>
      * <TOTEM:END>
           CLOSE teva
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-sordforn.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:sordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE sordforn
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-paramSHI.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:paramSHI, BeforeClose>
      * <TOTEM:END>
           CLOSE paramSHI
           .

       CLOSE-paramGET.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:paramGET, BeforeClose>
      * <TOTEM:END>
           CLOSE paramGET
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:cambia-rif-ord-reva, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE Low-Value TO tof-chiave
              ELSE
                 MOVE High-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE High-Value TO tof-chiave
              ELSE
                 MOVE Low-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

      * tordforn
       DataSet1-tordforn-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY >= tof-chiave
              ELSE
                 START tordforn KEY <= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY <= tof-chiave
              ELSE
                 START tordforn KEY >= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY > tof-chiave
              ELSE
                 START tordforn KEY < tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY < tof-chiave
              ELSE
                 START tordforn KEY > tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-LOCK
                 READ tordforn WITH LOCK 
                 KEY tof-chiave
              ELSE
                 READ tordforn WITH NO LOCK 
                 KEY tof-chiave
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE rof-rec OF rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE rof-rec OF rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE rordforn.
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       reva-reva-k-articolo-MERGE-SPLITBUF.
           INITIALIZE reva-reva-k-articolo-SPLITBUF
           MOVE reva-qta OF reva(1:8) TO 
           reva-reva-k-articolo-SPLITBUF(1:8)
           MOVE reva-chiave OF reva(1:17) TO 
           reva-reva-k-articolo-SPLITBUF(9:17)
           .

       DataSet1-reva-INITSTART.
           IF DataSet1-reva-KEY-Asc
              MOVE Low-Value TO reva-chiave
           ELSE
              MOVE High-Value TO reva-chiave
           END-IF
           .

       DataSet1-reva-INITEND.
           IF DataSet1-reva-KEY-Asc
              MOVE High-Value TO reva-chiave
           ELSE
              MOVE Low-Value TO reva-chiave
           END-IF
           .

      * reva
       DataSet1-reva-START.
           IF DataSet1-reva-KEY-Asc
              START reva KEY >= reva-chiave
           ELSE
              START reva KEY <= reva-chiave
           END-IF
           .

       DataSet1-reva-START-NOTGREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY <= reva-chiave
           ELSE
              START reva KEY >= reva-chiave
           END-IF
           .

       DataSet1-reva-START-GREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY > reva-chiave
           ELSE
              START reva KEY < reva-chiave
           END-IF
           .

       DataSet1-reva-START-LESS.
           IF DataSet1-reva-KEY-Asc
              START reva KEY < reva-chiave
           ELSE
              START reva KEY > reva-chiave
           END-IF
           .

       DataSet1-reva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-reva-LOCK
              READ reva WITH LOCK 
              KEY reva-chiave
           ELSE
              READ reva WITH NO LOCK 
              KEY reva-chiave
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT 
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeWrite>
      * <TOTEM:END>
           WRITE reva-rec OF reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRewrite>
      * <TOTEM:END>
           REWRITE reva-rec OF reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeDelete>
      * <TOTEM:END>
           DELETE reva.
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterDelete>
      * <TOTEM:END>
           .

       teva-teva-stato-MERGE-SPLITBUF.
           INITIALIZE teva-teva-stato-SPLITBUF
           MOVE teva-stato OF teva(1:1) TO teva-teva-stato-SPLITBUF(1:1)
           MOVE teva-chiave OF teva(1:12) TO 
           teva-teva-stato-SPLITBUF(2:12)
           .

       DataSet1-teva-INITSTART.
           IF DataSet1-teva-KEY-Asc
              MOVE Low-Value TO teva-chiave OF teva
           ELSE
              MOVE High-Value TO teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-INITEND.
           IF DataSet1-teva-KEY-Asc
              MOVE High-Value TO teva-chiave OF teva
           ELSE
              MOVE Low-Value TO teva-chiave OF teva
           END-IF
           .

      * teva
       DataSet1-teva-START.
           IF DataSet1-teva-KEY-Asc
              START teva KEY >= teva-chiave OF teva
           ELSE
              START teva KEY <= teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-START-NOTGREATER.
           IF DataSet1-teva-KEY-Asc
              START teva KEY <= teva-chiave OF teva
           ELSE
              START teva KEY >= teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-START-GREATER.
           IF DataSet1-teva-KEY-Asc
              START teva KEY > teva-chiave OF teva
           ELSE
              START teva KEY < teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-START-LESS.
           IF DataSet1-teva-KEY-Asc
              START teva KEY < teva-chiave OF teva
           ELSE
              START teva KEY > teva-chiave OF teva
           END-IF
           .

       DataSet1-teva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-teva-LOCK
              READ teva WITH LOCK 
              KEY teva-chiave OF teva
           ELSE
              READ teva WITH NO LOCK 
              KEY teva-chiave OF teva
           END-IF
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT 
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-teva-KEY-Asc
              IF DataSet1-teva-LOCK
                 READ teva NEXT WITH LOCK
              ELSE
                 READ teva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-teva-LOCK
                 READ teva PREVIOUS WITH LOCK
              ELSE
                 READ teva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-teva-KEY-Asc
              IF DataSet1-teva-LOCK
                 READ teva PREVIOUS WITH LOCK
              ELSE
                 READ teva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-teva-LOCK
                 READ teva NEXT WITH LOCK
              ELSE
                 READ teva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeWrite>
      * <TOTEM:END>
           WRITE teva-rec OF teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRewrite>
      * <TOTEM:END>
           REWRITE teva-rec OF teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeDelete>
      * <TOTEM:END>
           DELETE teva.
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-sordforn-INITSTART.
           IF DataSet1-sordforn-KEY-Asc
              MOVE Low-Value TO sof-chiave OF sordforn
           ELSE
              MOVE High-Value TO sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-INITEND.
           IF DataSet1-sordforn-KEY-Asc
              MOVE High-Value TO sof-chiave OF sordforn
           ELSE
              MOVE Low-Value TO sof-chiave OF sordforn
           END-IF
           .

      * sordforn
       DataSet1-sordforn-START.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY >= sof-chiave OF sordforn
           ELSE
              START sordforn KEY <= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-NOTGREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY <= sof-chiave OF sordforn
           ELSE
              START sordforn KEY >= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-GREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY > sof-chiave OF sordforn
           ELSE
              START sordforn KEY < sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-LESS.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY < sof-chiave OF sordforn
           ELSE
              START sordforn KEY > sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-sordforn-LOCK
              READ sordforn WITH LOCK 
              KEY sof-chiave OF sordforn
           ELSE
              READ sordforn WITH NO LOCK 
              KEY sof-chiave OF sordforn
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT 
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-INITSTART.
           IF DataSet1-paramSHI-KEY-Asc
              MOVE Low-Value TO shi-chiave OF PARAMSHI
           ELSE
              MOVE High-Value TO shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-INITEND.
           IF DataSet1-paramSHI-KEY-Asc
              MOVE High-Value TO shi-chiave OF PARAMSHI
           ELSE
              MOVE Low-Value TO shi-chiave OF PARAMSHI
           END-IF
           .

      * paramSHI
       DataSet1-paramSHI-START.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY >= shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY <= shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-NOTGREATER.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY <= shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY >= shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-GREATER.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY > shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY < shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-LESS.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY < shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY > shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-paramSHI-LOCK
              READ paramSHI WITH LOCK 
              KEY shi-chiave OF PARAMSHI
           ELSE
              READ paramSHI WITH NO LOCK 
              KEY shi-chiave OF PARAMSHI
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT 
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-paramSHI-KEY-Asc
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI NEXT WITH LOCK
              ELSE
                 READ paramSHI NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI PREVIOUS WITH LOCK
              ELSE
                 READ paramSHI PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-paramSHI-KEY-Asc
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI PREVIOUS WITH LOCK
              ELSE
                 READ paramSHI PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI NEXT WITH LOCK
              ELSE
                 READ paramSHI NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-paramGET-INITSTART.
           IF DataSet1-paramGET-KEY-Asc
              MOVE Low-Value TO get-chiave OF paramGET
           ELSE
              MOVE High-Value TO get-chiave OF paramGET
           END-IF
           .

       DataSet1-paramGET-INITEND.
           IF DataSet1-paramGET-KEY-Asc
              MOVE High-Value TO get-chiave OF paramGET
           ELSE
              MOVE Low-Value TO get-chiave OF paramGET
           END-IF
           .

      * paramGET
       DataSet1-paramGET-START.
           IF DataSet1-paramGET-KEY-Asc
              START paramGET KEY >= get-chiave OF paramGET
           ELSE
              START paramGET KEY <= get-chiave OF paramGET
           END-IF
           .

       DataSet1-paramGET-START-NOTGREATER.
           IF DataSet1-paramGET-KEY-Asc
              START paramGET KEY <= get-chiave OF paramGET
           ELSE
              START paramGET KEY >= get-chiave OF paramGET
           END-IF
           .

       DataSet1-paramGET-START-GREATER.
           IF DataSet1-paramGET-KEY-Asc
              START paramGET KEY > get-chiave OF paramGET
           ELSE
              START paramGET KEY < get-chiave OF paramGET
           END-IF
           .

       DataSet1-paramGET-START-LESS.
           IF DataSet1-paramGET-KEY-Asc
              START paramGET KEY < get-chiave OF paramGET
           ELSE
              START paramGET KEY > get-chiave OF paramGET
           END-IF
           .

       DataSet1-paramGET-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-paramGET-LOCK
              READ paramGET WITH LOCK 
              KEY get-chiave OF paramGET
           ELSE
              READ paramGET WITH NO LOCK 
              KEY get-chiave OF paramGET
           END-IF
           MOVE STATUS-paramget TO TOTEM-ERR-STAT 
           MOVE "paramGET" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-paramGET-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-paramGET-KEY-Asc
              IF DataSet1-paramGET-LOCK
                 READ paramGET NEXT WITH LOCK
              ELSE
                 READ paramGET NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramGET-LOCK
                 READ paramGET PREVIOUS WITH LOCK
              ELSE
                 READ paramGET PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramget TO TOTEM-ERR-STAT
           MOVE "paramGET" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-paramGET-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-paramGET-KEY-Asc
              IF DataSet1-paramGET-LOCK
                 READ paramGET PREVIOUS WITH LOCK
              ELSE
                 READ paramGET PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramGET-LOCK
                 READ paramGET NEXT WITH LOCK
              ELSE
                 READ paramGET NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramget TO TOTEM-ERR-STAT
           MOVE "paramGET" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-paramGET-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-paramget TO TOTEM-ERR-STAT
           MOVE "paramGET" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-paramGET-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-paramget TO TOTEM-ERR-STAT
           MOVE "paramGET" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-paramGET-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-paramget TO TOTEM-ERR-STAT
           MOVE "paramGET" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramGET, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE cli-rec OF clienti
           INITIALIZE tof-rec OF tordforn
           INITIALIZE rof-rec OF rordforn
           INITIALIZE reva-rec OF reva
           INITIALIZE teva-rec OF teva
           INITIALIZE prg-rec OF progmag
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE sof-rec OF sordforn
           INITIALIZE tge-rec OF tparamge
           INITIALIZE art-rec OF articoli
           INITIALIZE imp-rec OF timposte
           INITIALIZE mar-rec OF tmarche
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE shi-rec OF paramSHI
           INITIALIZE get-rec OF paramGET
           INITIALIZE prm-rec OF param
           .


      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-reva-INITREC.
           INITIALIZE reva-rec OF reva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-teva-INITREC.
           INITIALIZE teva-rec OF teva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-sordforn-INITREC.
           INITIALIZE sof-rec OF sordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-paramSHI-INITREC.
           INITIALIZE shi-rec OF paramSHI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-paramGET-INITREC.
           INITIALIZE get-rec OF paramGET
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 22,28,
              SIZE 54,60,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS Form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Form1 UPON Form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM PB-ESEGUI-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Form1 UPON Form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>

      *<<** Customized_Default, SP-G, Screen1-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
           move space  to shi-codice
           read paramSHI
              invalid
                 continue
           end-read

           move space  to get-codice
           read paramGET
              invalid
                 continue
           end-read

           set cror-ricarica to false

      *    metto in linea i dati di partenza. i Lock li faccio quando 
      *    confermo il cambiamento
           move cror-reva-chiave         to reva-chiave
           move cror-reva-chiave-testa   to teva-chiave

           read teva no lock
              invalid
                 continue
           end-read

           read reva no lock
              invalid
                 continue
           end-read

           move reva-chiave-ordf   to rof-chiave
           read rordforn no lock
              invalid
                 initialize rof-dati
           end-read

           move reva-chiave-testa-ordf   to tof-chiave
           read tordforn no lock
              invalid
                 initialize tof-dati
           end-read

           move teva-anno    to anno-eva
           move teva-numero  to numero-eva
           move reva-riga    to riga-eva

           move tof-anno     to anno-ordf
           move tof-numero   to numero-ordf
           move rof-riga     to riga-ordf

           evaluate true
           when tof-inserito
                move "Inserito" to lab-stato-ord-buf
           when tof-inviato
                move "Inviato" to lab-stato-ord-buf
           when tof-in-lavorazione
                move "In Lavorazione" to lab-stato-ord-buf
           when tof-chiuso
                evaluate true 
                when tof-chiusura-man
                     move "Chiuso Manualmente"      to lab-stato-ord-buf
                when tof-chiusura-auto
                     move "Chiuso Automaticamente"  to lab-stato-ord-buf
                end-evaluate
           end-evaluate

           move teva-cod-forn   to save-tof-cod-forn
           if reva-chiave-testa-ordf = zero
              move tof-causale to tca-codice
              read tcaumag no lock
              evaluate tca-cod-magaz
              when "SHI"
                   move shi-causale-impcar to save-tof-causale
              when "GET"
                   move get-causale-impcar to save-tof-causale
              end-evaluate
           else
              move tof-causale        to save-tof-causale
           end-if

           .
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .



       Screen1-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       CAMBIA-RIFERIMENTO.
      * <TOTEM:PARA. CAMBIA-RIFERIMENTO>
      *    blocco per prima cosa l'evasione
           perform READ-RECORD-LOCK

      *    se l'ordine originale è valorizzato faccio lo storno
           if tutto-ok
              if reva-chiave-ordf not = zero
                 perform AGGIORNA-ORDINE-ORIGINALE
              end-if
           end-if.

           if tutto-ok
              perform AGGIORNA-ORDINE-DESTINAZIONE
           end-if.

           if tutto-ok
              set cror-ricarica to true
           end-if.


      ***---
       READ-RECORD-LOCK.
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "teva" to geslock-nome-file.

           set tutto-ok    to true.
           read teva lock key teva-chiave 
              invalid 
                 continue 
           end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read teva lock key teva-chiave
                        invalid continue 
                   end-read
              when ignora  exit perform
              end-evaluate
           end-perform.

           if RecLocked
              set errori to true
           end-if 


           .
      * <TOTEM:END>

       SCRIVI-RORDFORN.
      * <TOTEM:PARA. SCRIVI-RORDFORN>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "rordforn" to geslock-nome-file.

           set tutto-ok to true.
           move reva-chiave-ordf to rof-chiave.
           read rordforn lock key rof-chiave 
                invalid continue 
           end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read rordforn lock key rof-chiave
                        invalid continue 
                   end-read
              when ignora  exit perform
              end-evaluate
           end-perform.

           if not RecLocked
              perform STORNA-ORDINATO-AUMENTA-GIACENZA
              add  reva-qta             to rof-qta-evasa

              move reva-chiave-progmag  to prg-chiave
              read progmag no lock invalid continue end-read
      *    Luciano fine
              move reva-imballo         to rof-imb-ordinato

              accept rof-data-ultima-modifica from century-date
              accept rof-ora-ultima-modifica  from time
              move user-codi to rof-utente-ultima-modifica
              rewrite rof-rec invalid continue end-rewrite
              unlock rordforn all records

              move rof-chiave to sof-chiave
              delete sordforn record invalid continue end-delete
           end-if.

      ***---
       STORNA-ORDINATO-AUMENTA-GIACENZA.
           |Adesso devo stornare l'ordinato
           move rof-chiave-testa to tof-chiave.
           read tordforn no lock invalid continue end-read.
           move tof-causale      to link-causale.
           set link-update       to true.
           move rof-prg-chiave   to link-key.
           move tof-mese-rif     to link-mese-rif.
           move tof-chiave       to link-chiave-origine.

           move user-codi to link-user of link-wprogmag.
      *    Lo tolgo dal vecchio progressivo
           move reva-qta           to link-valore.
           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.

           |Se è scoperto (non ho ancora scritto)
           if rof-qta-ord > rof-qta-evasa
              if reva-qta > rof-qta-ord - rof-qta-evasa
                 compute link-valore = rof-qta-ord - rof-qta-evasa
              else
                 move reva-qta to link-valore
              end-if
           end-if.

           if link-valore > 0
              move "0000000000000000"   to link-array
              move -1 to multiplyer(3)
              call   "wprogmag" using link-wprogmag
              cancel "wprogmag"
           end-if.

      **    Dopodiché aggiungo direttamente la qta alla giacenza
      *     move tmp-eva-chiave-progmag to link-key.
      *     move tmp-eva-qta            to link-valore.
      *     move "1000000000000010"     to link-array.
      *     call   "wprogmag"        using link-wprogmag.
      *     cancel "wprogmag" 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-ID-ef-anno
           when 78-ID-ef-numero
                move save-tof-cod-forn   to tof-cod-forn
                move "tordforn-forn" to como-file

                inquire ef-anno, VALUE tof-anno
                inquire ef-numero, value in tof-numero
                call "zoom-gt"   using como-file, tof-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move tof-anno   to ef-anno-buf
                   modify ef-anno value ef-anno-buf
                   move tof-numero to ef-numero-buf
                   modify ef-numero value ef-numero-buf
                end-if

           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.
           evaluate control-id
           when 78-ID-ef-numero
                inquire ef-anno, VALUE tof-anno
                inquire ef-numero, value in tof-numero

                if tof-numero = zero
                   if controllo-finale
                      set errori to true
                      display message "Ordine non valido"
                              title tit-err
                              icon 2
                   end-if
                else
                   read tordforn no lock
                      invalid
                         set errori to true
                         display message "Ordine non valido"
                                 title tit-err
                                 icon 2
                   end-read
                   if tutto-ok
                      evaluate true
                      when tof-inserito
                      when tof-chiuso 
                           set errori to true
                           display message "Stato Ordine non valido"
                                   title tit-err
                                   icon 2
                      end-evaluate
                   end-if
                   if tutto-ok
                      if tof-cod-forn not = save-tof-cod-forn
                         set errori to true
                         display message "Fornitore diverso dall'origina
      -    "le"
                                   title tit-err
                                   icon 2
                      end-if
                   end-if
                   
                   if tutto-ok
                      if tof-causale not = save-tof-causale
                         set errori to true
                         display message "Causale diversa dall'originale
      -    ""
                                   title tit-err
                                   icon 2
                      end-if
                   end-if
                end-if

           when 78-ID-ef-riga
                inquire ef-anno, VALUE rof-anno
                inquire ef-numero, value in rof-numero
                inquire ef-riga, VALUE rof-riga

                if rof-riga = zero
                   if controllo-finale
                      set errori to true
                      display message "Ordine non valido"
                              title tit-err
                              icon 2
                   end-if
                 else
                   read rordforn no lock
                      invalid
                         set errori to true
                         display message "Ordine non valido"
                                 title tit-err
                                 icon 2
                   end-read
                   if tutto-ok
                      if reva-articolo not = rof-cod-articolo
                         set errori to true
                         display message "Articolo diverso dall'original
      -    "e"
                                   title tit-err
                                   icon 2
                      end-if
                   end-if
                   if tutto-ok
                      if reva-qta > (rof-qta-ord - rof-qta-evasa)
                         set errori to true
                         display message "Riga con quantità insufficient
      -    "e"
                                   title tit-err
                                   icon 2
                      end-if
                   end-if
                end-if
           end-evaluate.

           if errori
              perform CANCELLA-COLORE
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "aggiorna-stato-ordf.cpy".
           copy "imposte.cpy".
           copy "addizionale-piombo.cpy".
           copy "trova-parametro.cpy" 
           .
      * <TOTEM:END>

       AGGIORNA-ORDINE-ORIGINALE.
      * <TOTEM:PARA. AGGIORNA-ORDINE-ORIGINALE>
           set tutto-ok  to true.
           set RecLocked to false.
           initialize geslock-linkage.
           move "rordforn" to geslock-nome-file.

           set tutto-ok to true.
           move reva-chiave-ordf to rof-chiave.
           read rordforn lock key rof-chiave 
                invalid continue 
           end-read.

           perform until 1 = 2
              if not RecLocked
                 exit perform
              end-if
              set RecLocked to false
              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   read rordforn lock key rof-chiave
                        invalid continue 
                   end-read
              when ignora  exit perform
              end-evaluate
           end-perform.

           if not RecLocked
              perform STORNA-ORDINATO
              subtract reva-qta from rof-qta-evasa

              accept rof-data-ultima-modifica from century-date
              accept rof-ora-ultima-modifica  from time
              move user-codi to rof-utente-ultima-modifica
              rewrite rof-rec invalid continue end-rewrite
              unlock rordforn all records

      *        move rof-chiave to sof-chiave
      *        delete sordforn record invalid continue end-delete
           end-if.

           perform AGGIORNA-STATO-ORDF.


      ***---
       STORNA-ORDINATO.
           |Adesso devo stornare l'ordinato
           move rof-chiave-testa to tof-chiave.
           read tordforn no lock invalid continue end-read.
           move tof-causale      to link-causale.
           set link-update       to true.
           move rof-prg-chiave   to link-key.
           move tof-mese-rif     to link-mese-rif.
           move tof-chiave       to link-chiave-origine.

           move user-codi to link-user of link-wprogmag.
      *    Lo tolgo dal vecchio progressivo
           move reva-qta       to link-valore.
           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.

           |Se è scoperto (non ho ancora scritto)
           if rof-qta-ord > rof-qta-evasa
              if reva-qta > rof-qta-ord - rof-qta-evasa
                 compute link-valore = rof-qta-ord - rof-qta-evasa
              else
                 move reva-qta to link-valore
              end-if
           end-if.

           if link-valore > 0
              move "0000000000000000"   to link-array
              move 1 to multiplyer(3)
              call   "wprogmag" using link-wprogmag
              cancel "wprogmag"
           end-if 

           .
      * <TOTEM:END>

       AGGIORNA-ORDINE-DESTINAZIONE.
      * <TOTEM:PARA. AGGIORNA-ORDINE-DESTINAZIONE>
      *    rimetto in linea il record dell'evasione che si 
           move cror-reva-chiave         to reva-chiave

           read reva no lock
              invalid
                 continue
           end-read

           if reva-chiave-ordf = zero
              move ef-anno-buf     to reva-anno-ordf
              move ef-numero-buf   to reva-numero-ordf
              move ef-riga-buf     to reva-riga-ordf
              move reva-chiave-ordf to rof-chiave
              read rordforn no lock key rof-chiave                 
                 invalid 
                    continue            
              end-read
              perform VALORIZZA-IMPOSTE
           end-if


      *    valorizzo la nuova chiave di rordforn
           move ef-anno-buf     to reva-anno-ordf
           move ef-numero-buf   to reva-numero-ordf
           move ef-riga-buf     to reva-riga-ordf

           perform SCRIVI-RORDFORN

           accept reva-data-modifica from century-date
           accept reva-ora-modifica  from time
           move user-codi to reva-utente-modifica
           rewrite reva-rec 
              invalid 
                 continue 
           end-rewrite

           perform AGGIORNA-STATO-ORDF 

           .
      * <TOTEM:END>

       VALORIZZA-IMPOSTE.
      * <TOTEM:PARA. VALORIZZA-IMPOSTE>
           accept imp-data from century-date.

           start timposte key <= imp-chiave
                 invalid continue
             not invalid
                 read timposte previous
           end-start.

           move reva-articolo   to art-codice.
           read articoli invalid continue end-read.

           compute como-prz-unit =   rof-imponib-merce +
                                     rof-imp-consumo   +
                                     rof-imp-cou-cobat +
                                     rof-add-piombo

           move como-prz-unit   to como-prz-unitario

           if reva-chiave-progmag not = rof-prg-chiave
              perform RICALCOLO-IMPOSTE
           end-if

           add 0,0005 to como-prz-unit
           add 0,005  to como-prz-unit
           move como-prz-unit to reva-prz-unit
           
           add 0,0005 to rof-imp-consumo
           add 0,005  to rof-imp-consumo
           move rof-imp-consumo to reva-imp-cons
           
           add 0,0005 to rof-imp-cou-cobat
           add 0,005  to rof-imp-cou-cobat
           move rof-imp-cou-cobat to reva-coubat

           add 0,0005 to rof-add-piombo
           add 0,005  to rof-add-piombo
           move rof-add-piombo to reva-add-pb
           
           compute reva-netto = reva-prz-unit -
                                reva-imp-cons -
                                reva-coubat   -
                                reva-add-pb.

      ***---
       RICALCOLO-IMPOSTE.
           move reva-chiave-progmag   to prg-chiave.
           read progmag no lock
                invalid move 0 to prg-peso-utf
           end-read.
           set TrattamentoGDO to true.
           accept como-data-ordine from century-date.
           move art-marca-prodotto to tpb-marca.
           move como-data-ordine   to tpb-data.
           move 0 to como-prm-cliente como-prm-destino.

           if como-prz-unitario not = 0
              perform CALCOLA-IMPOSTE
              perform ADDIZIONALE-PIOMBO
              |Se erano a zero significa che per qualche motivo 
              |(listino o manuale) non vanno impostate perciò
              |le lascio a zero 
              if orig-imp-cons = 0
                 move 0 to imposta-consumo
              end-if
              if orig-coubat = 0
                 move 0 to imposta-cou imposta-cobat
              end-if
              if orig-add-pb = 0
                 move 0 to add-piombo
              end-if
              move imposta-consumo to rof-imp-consumo
              add imposta-cou      to imposta-cobat giving imposta-cou
              move imposta-cou     to rof-imp-cou-cobat
              move add-piombo      to rof-add-piombo
              if como-prz-unitario < ( imposta-cou     + 
                                       imposta-consumo + 
                                       add-piombo )
                 compute como-prz-unitario = 
                         imposta-cou       +
                         imposta-consumo   +
                         add-piombo
                 move 0 to como-imposta
              else
                 compute como-imposta = como-prz-unitario - 
                                        imposta-cou       -
                                        imposta-consumo   -
                                        add-piombo
              end-if
              move como-imposta to rof-imponib-merce
           else
              move 0 to imposta-consumo rof-imp-consumo
                        imposta-cou     rof-imp-cou-cobat
                        add-piombo      rof-add-piombo rof-imponib-merce
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       ef-anno-BeforeProcedure.
      * <TOTEM:PARA. ef-anno-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-anno-AfterProcedure.
      * <TOTEM:PARA. ef-anno-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO 
           .
      * <TOTEM:END>
       ef-num-BeforeProcedure.
      * <TOTEM:PARA. ef-num-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
      *     move 1 to e-cerca.
      *     modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-num-AfterProcedure.
      * <TOTEM:PARA. ef-num-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
      *     move 0 to e-cerca.
      *     modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify PB-ESEGUI, bitmap-number 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify PB-ESEGUI, bitmap-number 1 
           .
      * <TOTEM:END>
       PB-ESEGUI-LinkTo.
      * <TOTEM:PARA. PB-ESEGUI-LinkTo>
           set controllo-finale to true
           perform varying control-id from 78-ID-ef-anno by 1
                     until control-id > 78-ID-ef-riga
              perform CONTROLLO
              if errori
                 exit perform
              end-if
           end-perform.
           set controllo-finale to false

           if tutto-ok
              display message "Confermi il cambiamento di riferimento or
      -    "dine?"
                   title titolo
                   type 2
                   default mb-no
                   giving scelta
              if scelta = mb-yes
                 perform CAMBIA-RIFERIMENTO
                 move 27 to key-status
              end-if
           end-if.


           perform CANCELLA-COLORE.
           modify pb-esegui, bitmap-number = 1.
           modify pb-cancel, bitmap-number = 1 

           .
      * <TOTEM:END>
       Form1-Pb-2-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2-BeforeProcedure>
           modify pb-cancel, bitmap-number 2 
           .
      * <TOTEM:END>
       Form1-Pb-2-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2-AfterProcedure>
           modify pb-cancel, bitmap-number 1 
           .
      * <TOTEM:END>
       accetordforn-Ev-After-Program.
      * <TOTEM:PARA. accetordforn-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           set environment "KEYSTROKE" to "DATA=46   46".
           set environment "KEYSTROKE" to "DATA=44   44" 
           .
      * <TOTEM:END>
       ef-dest-BeforeProcedure.
      * <TOTEM:PARA. ef-dest-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-dest-AfterProcedure.
      * <TOTEM:PARA. ef-dest-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

