      *{TOTEM}PRG-COMMENT
      * glockname.Cbl
      * glockname.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          glockname.
       AUTHOR.              andre.
       DATE-WRITTEN.        giovedì 13 aprile 2023 16:51:09.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:glockname, INIT:glockname, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "lockname.sl".
           COPY "USER.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "lockname.fd".
           COPY "USER.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Geslux - Elenco utenti bloccanti". 
           COPY  "LINK-PASSWD.DEF".
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0.
       77 messaggio        PIC  x(75).
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 rec-grid.
           05 col-utente       PIC  x(10).
           05 col-nome         PIC  x(30).
           05 col-pgm          PIC  x(30).
           05 col-data         PIC  x(10).
           05 col-ora          PIC  x(8).
       77 v-screen         PIC  9
                  VALUE IS 1.
       77 form1-handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 STATUS-lockname  PIC  X(2).
           88 Valid-STATUS-lockname VALUE IS "00" THRU "09". 
       77 STATUS-USER      PIC  X(2).
           88 Valid-STATUS-USER VALUE IS "00" THRU "09". 
       77 wk-titolo        PIC  X(100).

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-form1-FLAG-REFRESH PIC  9.
          88 form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-lockname-BUF     PIC X(2106).
       77 TMP-DataSet1-USER-BUF     PIC X(1015).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-lockname-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lockname-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-lockname-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-lockname-KEY1-Asc  VALUE "A".
          88 DataSet1-lockname-KEY1-Desc VALUE "D".
       77 DataSet1-USER-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-USER-LOCK  VALUE "Y".
       77 DataSet1-USER-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-USER-KEY-Asc  VALUE "A".
          88 DataSet1-USER-KEY-Desc VALUE "D".

       77 lockname-lckn-k-ute-SPLITBUF  PIC X(91).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-GLOCKNAME.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           form1, 
           HELP-ID 1,
           .

      * GRID
       05
           form1-gd-1, 
           Grid, 
           COL 1,70, 
           LINE 2,00,
           LINES 36,20 CELLS,
           SIZE 71,90 CELLS,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 11, 41, 71, 81),
           ALIGNMENT ("L", "L", "L", "C", "C"),
           SEPARATION (5, 5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 261,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS Verdana12B-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 70,
           VPADDING 30,
           VSCROLL,
           EVENT PROCEDURE scr-visua-Gd-1-Event-Proc,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING glockname-linkage.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:glockname, INIT:glockname, BeforeDeclarative>
      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM stbolle-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:glockname, INIT:glockname, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana12-Occidentale
      *    After-Program
           PERFORM stbolle-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-lockname
           PERFORM OPEN-USER
      *    After Open
           .

       OPEN-lockname.
      * <TOTEM:EPT. INIT:glockname, FD:lockname, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT lockname
           IF NOT Valid-STATUS-lockname
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:glockname, FD:lockname, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-USER.
      * <TOTEM:EPT. INIT:glockname, FD:USER, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT USER
           IF NOT Valid-STATUS-USER
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:glockname, FD:USER, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-lockname
           PERFORM CLOSE-USER
      *    After Close
           .

       CLOSE-lockname.
      * <TOTEM:EPT. INIT:glockname, FD:lockname, BeforeClose>
      * <TOTEM:END>
           CLOSE lockname
           .

       CLOSE-USER.
      * <TOTEM:EPT. INIT:glockname, FD:USER, BeforeClose>
      * <TOTEM:END>
           CLOSE USER
           .

       lockname-lckn-k-ute-MERGE-SPLITBUF.
           INITIALIZE lockname-lckn-k-ute-SPLITBUF
           MOVE lckn-chiave(1:60) TO lockname-lckn-k-ute-SPLITBUF(1:60)
           MOVE lckn-utente(1:30) TO lockname-lckn-k-ute-SPLITBUF(61:30)
           .

       DataSet1-lockname-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 MOVE Low-Value TO lckn-chiave
              ELSE
                 MOVE High-Value TO lckn-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-lockname-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 MOVE High-Value TO lckn-chiave
              ELSE
                 MOVE Low-Value TO lckn-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-lockname-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-lockname-KEY1-ORDER
           END-EVALUATE
           .

      * lockname
       DataSet1-lockname-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 START lockname KEY >= lckn-chiave
              ELSE
                 START lockname KEY <= lckn-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-lockname-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 START lockname KEY <= lckn-chiave
              ELSE
                 START lockname KEY >= lckn-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-lockname-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 START lockname KEY > lckn-chiave
              ELSE
                 START lockname KEY < lckn-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-lockname-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 START lockname KEY < lckn-chiave
              ELSE
                 START lockname KEY > lckn-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-lockname-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-LOCK
                 READ lockname WITH LOCK 
                 KEY lckn-chiave
              ELSE
                 READ lockname WITH NO LOCK 
                 KEY lckn-chiave
              END-IF
           END-EVALUATE
           PERFORM lockname-lckn-k-ute-MERGE-SPLITBUF
           MOVE STATUS-lockname TO TOTEM-ERR-STAT 
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lockname-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 IF DataSet1-lockname-LOCK
                    READ lockname NEXT WITH LOCK
                 ELSE
                    READ lockname NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-lockname-LOCK
                    READ lockname PREVIOUS WITH LOCK
                 ELSE
                    READ lockname PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM lockname-lckn-k-ute-MERGE-SPLITBUF
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lockname-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-lockname-KEY1-Asc
                 IF DataSet1-lockname-LOCK
                    READ lockname PREVIOUS WITH LOCK
                 ELSE
                    READ lockname PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-lockname-LOCK
                    READ lockname NEXT WITH LOCK
                 ELSE
                    READ lockname NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM lockname-lckn-k-ute-MERGE-SPLITBUF
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lockname-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lockname-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lockname-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lockname TO TOTEM-ERR-STAT
           MOVE "lockname" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockname, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-USER-INITSTART.
           IF DataSet1-USER-KEY-Asc
              MOVE Low-Value TO user-chiave
           ELSE
              MOVE High-Value TO user-chiave
           END-IF
           .

       DataSet1-USER-INITEND.
           IF DataSet1-USER-KEY-Asc
              MOVE High-Value TO user-chiave
           ELSE
              MOVE Low-Value TO user-chiave
           END-IF
           .

      * USER
       DataSet1-USER-START.
           IF DataSet1-USER-KEY-Asc
              START USER KEY >= user-chiave
           ELSE
              START USER KEY <= user-chiave
           END-IF
           .

       DataSet1-USER-START-NOTGREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY <= user-chiave
           ELSE
              START USER KEY >= user-chiave
           END-IF
           .

       DataSet1-USER-START-GREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY > user-chiave
           ELSE
              START USER KEY < user-chiave
           END-IF
           .

       DataSet1-USER-START-LESS.
           IF DataSet1-USER-KEY-Asc
              START USER KEY < user-chiave
           ELSE
              START USER KEY > user-chiave
           END-IF
           .

       DataSet1-USER-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-USER-LOCK
              READ USER WITH LOCK 
              KEY user-chiave
           ELSE
              READ USER WITH NO LOCK 
              KEY user-chiave
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT 
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE lckn-rec OF lockname
           INITIALIZE user-rec OF USER
           .


      * GRID
       form1-gd-1-Content.
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 1, Y = 1,
                CELL-DATA = "Utente",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 2, Y = 1,
                CELL-DATA = "Nome",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 3, Y = 1,
                CELL-DATA = "Programma",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 4, Y = 1,
                CELL-DATA = "Data",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 5, Y = 1,
                CELL-DATA = "Ora",
           .

      * FD's Initialize Paragraph
       DataSet1-lockname-INITREC.
           INITIALIZE lckn-rec OF lockname
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-USER-INITREC.
           INITIALIZE user-rec OF USER
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       form1-Open-Routine.
           PERFORM form1-Scrn
           PERFORM form1-Proc
           .

       form1-Scrn.
           PERFORM form1-Create-Win
           PERFORM form1-Init-Value
           PERFORM form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form1-DISPLAY
           .

       form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 38,30,
              SIZE 73,40,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE wk-titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 1,
              USER-WHITE,
              No WRAP,
              HANDLE IS form1-handle,
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form1 UPON form1-handle
      * DISPLAY-COLUMNS settings
              MODIFY form1-gd-1, DISPLAY-COLUMNS (1, 14, 34, 49, 61)
           .

       form1-PROC.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeAccept>
           perform CARICA-GRIGLIA.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT form1
                 ON EXCEPTION
                    PERFORM form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-handle
           INITIALIZE Key-Status
           .

       form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form1-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form1-CLEAR.
           PERFORM form1-INIT-VALUE
           PERFORM form1-DISPLAY
           .

       form1-DISPLAY.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form1 UPON form1-handle
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterDisplay>
      * <TOTEM:END>
           .

       form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM form1-gd-1-Content
           .

       form1-Init-Value.
           MOVE wk-titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:form1, FORM:form1, SetDefault>
      * <TOTEM:END>
           PERFORM form1-FLD-TO-BUF
           .


       form1-ALLGRID-RESET.
           .

      * for Form's Validation
       form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterBufToFld>
      * <TOTEM:END>
           .

       form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form1-SHOW-MSG-ROUTINE
           .

       form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form1-DISPLAY-MESSAGE
           .

       form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form1-Save-Status.
           .             

       form1-Restore-Status.
           .



       scr-visua-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 1 ALSO
                    form1-handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CARICA-GRIGLIA.
      * <TOTEM:PARA. CARICA-GRIGLIA>
           perform RESET-GRIGLIA.
           move low-value to lckn-chiave.
           move link-glockname-file to lckn-file.
           start lockname key >= lckn-chiave
                 invalid continue
             not invalid
                 move 1 to riga
                 perform until 1 = 2
                    read lockname next at end exit perform end-read
                    if lckn-file not = link-glockname-file
                       exit perform
                    end-if
                    move lckn-pgm    to col-pgm
                    move lckn-utente to col-utente user-cod
                    read user no lock invalid continue end-read
                    move user-name   to col-nome
                    string lckn-data(7:2) delimited size
                           "/"            delimited size
                           lckn-data(5:2) delimited size
                           "/"            delimited size
                           lckn-data(1:4) delimited size
                      into col-data
                    end-string
                    string lckn-ora(1:2) delimited size
                           ":"           delimited size
                           lckn-ora(3:2) delimited size
                           ":"           delimited size
                           lckn-ora(5:2) delimited size
                      into col-ora
                    end-string 
                    add 1 to riga         
                    modify form1-gd-1(riga, 1), cell-data = col-utente
                    modify form1-gd-1(riga, 2), cell-data = col-nome
                    modify form1-gd-1(riga, 3), cell-data = col-pgm
                    modify form1-gd-1(riga, 4), cell-data = col-data
                    modify form1-gd-1(riga, 5), cell-data = col-ora
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       RESET-GRIGLIA.
      * <TOTEM:PARA. RESET-GRIGLIA>
           modify form1-gd-1, reset-grid = 1.
           perform FORM1-GD-1-CONTENT 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           modify form1-gd-1, start-y = event-data-2, y = event-data-2 
                              start-x = 2,            x = 5,
                              region-color = 481 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       stbolle-Ev-Before-Program.
      * <TOTEM:PARA. stbolle-Ev-Before-Program>
           evaluate link-glockname-op
           when "L"
                 open i-o lockname
                 call "C$CALLEDBY" using lckn-pgm           
                 move link-glockname-file   to lckn-file
                 move link-glockname-utente to lckn-utente 
                 accept lckn-data from century-date
                 accept lckn-ora from time
                 write lckn-rec invalid rewrite lckn-rec end-write
                 close lockname
                 goback
           when "C"              
                 open i-o lockname               
                 call "C$CALLEDBY" using lckn-pgm           
                 move link-glockname-file   to lckn-file
                 move link-glockname-utente to lckn-utente 
                 delete lockname record invalid continue end-delete
                 close lockname
                 goback
           when "G"
                initialize wk-titolo
                string titolo              delimited size
                       " su: "             delimited size
                       link-glockname-file delimited size
                   into wk-titolo
                end-string
           end-evaluate
           .
      * <TOTEM:END>
       stbolle-Ev-After-Program.
      * <TOTEM:PARA. stbolle-Ev-After-Program>
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

