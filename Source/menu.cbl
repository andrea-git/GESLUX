      *{TOTEM}PRG-COMMENT
      * menu.Cbl
      * menu.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          "menu" IS INITIAL PROGRAM.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        martedì 3 luglio 2018 13:30:24.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:menu, INIT:menu, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "USER-PGM.sl".
           COPY "PROG.sl".
           COPY "PROG.sl"
                REPLACING ==PROG== BY ==PROG1==,
                          ==STAT-PROG== BY ==STAT-PROG1==
                .
           COPY "useravv.sl".
           COPY "ttipoavv.sl".
           COPY "USER.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "USER-PGM.fd".
           COPY "PROG.fd".
           COPY "PROG.fd"
                REPLACING ==PROG== BY ==PROG1==,
                          ==STAT-PROG== BY ==STAT-PROG1==
                .
           COPY "useravv.fd".
           COPY "ttipoavv.fd".
           COPY "USER.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Enter-Pushed VALUE 13.
      * Properties & User defined Working Stoarge
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 sw-call          PIC  9
                  VALUE IS 0.
       77 SW-PASS          PIC  9
                  VALUE IS 0.
       77 BitmapNumEsegui  PIC  9.
       77 ef-data-buf      PIC  99/99/9999
                  VALUE IS "99/99/9999".
       77 StatusCode
                  USAGE IS SIGNED-SHORT.
       77 path-completo-cliente        PIC  x(200).
       77 storico          PIC  x.
       77 versione-geslux  PIC  x.
       78 BitmapEseguiEnabled VALUE IS 1. 
       78 BitmapEseguiDisabled VALUE IS 2. 
       78 78-GestioneMenu VALUE IS "Gestione Menù". 
       78 78-GestioneUtenti VALUE IS "Gestione Utenti". 
       78 78-Utility VALUE IS "Utility". 
       77 STAT-PROG        PIC  X(2).
           88 VALID-STAT-PROG VALUE IS "00" THRU "09". 
       01 TREE-WORKING.
           05 W-LEVELNO        PIC  9(02).
           05 STACK-DATA.
               10 STACK-TREE-ID
                          USAGE IS POINTER
                          OCCURS 6 TIMES.
               10 STACK-LEVELNO    PIC  9(02).
               10 STACK-MENU-LEVEL PIC  X(10).
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 cmd  PIC  x(200).
       77 Form1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       01 FILLER           PIC  9.
           88 CallProgramFlag VALUE IS 1    WHEN SET TO FALSE  0. 
       77 Tree-bmp
                  USAGE IS HANDLE OF BITMAP
                  VALUE IS 0.
       77 CurrentItem
                  USAGE IS POINTER.
       77 LAST-PROG-TYPE   PIC  9
                  VALUE IS 0.
       77 MENU-PAR-CALL    PIC  9999.
       77 STATUS-user-pgm  PIC  X(2).
           88 VALID-STATUS-user-pgm VALUE IS "00" THRU "09". 
       01 HIDDEN-TREE.
           05 H-PROG-MENU-LEVEL            PIC  9(10).
           05 H-LIVELLO-ABIL   PIC  9.
       77 Form1-Tb-2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 HND-WIN-ATTIVA
                  USAGE IS HANDLE OF WINDOW.
       77 VALORE           PIC  X(500).
       77 POINT-UTIL
                  USAGE IS POINTER.
       77 calendr3-bmp
                  USAGE IS HANDLE OF BITMAP
                  VALUE IS 0.
       01 Variabili-About.
           05 Win-Nome         PIC  x(30).
           05 Host-System      PIC  x(30).
       77 CALLP            PIC  x(10)
                  VALUE IS spaces.
       77 FORM-CALL-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 sfondo-jpg
                  USAGE IS HANDLE OF BITMAP
                  VALUE IS 0.
       77 Form1-Mn-1-Handle
                  USAGE IS HANDLE OF MENU.
       01 OLD-PROG-R.
           05 OLD-PROG-KEY.
      * PROMPT =Menu Level
               10 OLD-PROG-MENU-LEVEL          PIC  X(10).
               10 OLD-PROG-MENU-LEVEL-G REDEFINES OLD-PROG-MENU-LEVEL.
                   15 OLD-PROG-LEVEL   PIC  9(02)
                              OCCURS 5 TIMES.
               10 OLD-FILLER REDEFINES OLD-PROG-MENU-LEVEL.
                   15 OLD-PROG-LEVEL-1 PIC  9(02).
                   15 OLD-PROG-LEVEL-2 PIC  9(02).
                   15 OLD-PROG-LEVEL-3 PIC  9(02).
                   15 OLD-PROG-LEVEL-4 PIC  9(02).
                   15 OLD-PROG-LEVEL-5 PIC  9(02).
      * PROMPT =Program ID
           05 OLD-PROG-ID      PIC  X(15).
      * PROMPT =Short Description
           05 OLD-PROG-S-DESC  PIC  X(30).
      * PROMPT =Program Type
      *0:Program (Executable)
      *1:Classification (Non-executable)
      *
           05 OLD-PROG-TYPE    PIC  9(01).
           05 OLD-PROG-TYPE-2  PIC  X(20).
               88 OLD-PROG-T-ELABORAZIONE VALUE IS "Elaborazione". 
               88 OLD-PROG-T-ARCHIVIO VALUE IS "Gestione archivio". 
               88 OLD-PROG-T-STAMPA VALUE IS "Stampa". 
               88 OLD-PROG-T-NON-ESEGU VALUE IS SPACES. 
      * PROMPT =Long Description
           05 OLD-PROG-L-DESC  PIC  X(500).
           05 OLD-PROG-FILLER  PIC  X(100).
       77 num-bitmap       PIC  9.
       77 VALORE2          PIC  X(500).
       77 tool-menu-bmp
                  USAGE IS HANDLE OF BITMAP
                  VALUE IS 0.
       77 Times-New-Roman9B
                  USAGE IS HANDLE OF FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 exit-73x21-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 esci-73x21-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 esegui-73x21-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 e-esegui         PIC  9
                  VALUE IS 0.
       77 ESEGUI73X21-BMP  PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 TITOLO           PIC  X(50).
       78 titolo1 VALUE IS "Geslux - Menu Principale". 
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-annulla-bmp          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       01 como-offset      PIC  9(2).
       01 FILLER           PIC  9.
           88 livello-0 VALUE IS 0. 
           88 livello-1 VALUE IS 1. 
           88 livello-2 VALUE IS 2. 
           88 livello-3 VALUE IS 3. 
           88 livello-4 VALUE IS 4. 
           88 livello-5 VALUE IS 5. 
       77 bottone_sfoglia-bmp          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STAT-PROG1       PIC  X(2).
           88 VALID-STAT-PROG1 VALUE IS "00" THRU "09". 
       77 lab-anno-buf     PIC  X(30).
       77 v-messaggio      PIC  9
                  VALUE IS 0.
       77 messaggio        PIC  X(500).
       77 STATUS-useravv   PIC  X(2).
           88 Valid-STATUS-useravv VALUE IS "00" THRU "09". 
       77 STATUS-ttipoavv  PIC  X(2).
           88 Valid-STATUS-ttipoavv VALUE IS "00" THRU "09". 
       77 Verdana9B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 sx-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 dx-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 WindowColor      PIC  9(6)
                  VALUE IS 65793.
       77 STATUS-USER      PIC  X(2).
           88 Valid-STATUS-USER VALUE IS "00" THRU "09". 
       77 STATUS-pgmmenu   PIC  X(2).
           88 Valid-STATUS-pgmmenu VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
      * DATA CONTROL BUFFER
       01 Form1-BUF.
      * Data.Entry-Field
              05 ef-descr-BUF PIC X(500).
      * Data.Entry-Field
              05 ef-messaggio-BUF PIC X(500).

       77 TMP-Form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form1-PROG-RESTOREBUF  PIC X(676).
       77 TMP-Form1-KEYIS  PIC 9(3) VALUE 1.
       77 Form1-MULKEY-TMPBUF   PIC X(676).
       77 STATUS-Form-CALL-FLAG-REFRESH PIC  9.
          88 Form-CALL-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-user-pgm-BUF     PIC X(26).
       77 TMP-DataSet1-PROG-BUF     PIC X(676).

       77 TMP-DataSet1-PROG1-BUF     PIC X(676).
       77 TMP-DataSet1-useravv-BUF     PIC X(178).
       77 TMP-DataSet1-ttipoavv-BUF     PIC X(270).
       77 TMP-DataSet1-USER-BUF     PIC X(1015).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-user-pgm-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-user-pgm-LOCK  VALUE "Y".
       77 DataSet1-user-pgm-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-user-pgm-KEY-Asc  VALUE "A".
          88 DataSet1-user-pgm-KEY-Desc VALUE "D".
       77 DataSet1-PROG-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PROG-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-PROG-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-PROG-KEY1-Asc  VALUE "A".
          88 DataSet1-PROG-KEY1-Desc VALUE "D".
       77 DataSet1-PROG1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PROG1-LOCK  VALUE "Y".
       77 DataSet1-PROG1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PROG1-KEY-Asc  VALUE "A".
          88 DataSet1-PROG1-KEY-Desc VALUE "D".
       77 DataSet1-useravv-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-useravv-LOCK  VALUE "Y".
       77 DataSet1-useravv-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-useravv-KEY-Asc  VALUE "A".
          88 DataSet1-useravv-KEY-Desc VALUE "D".
       77 DataSet1-ttipoavv-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ttipoavv-LOCK  VALUE "Y".
       77 DataSet1-ttipoavv-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ttipoavv-KEY-Asc  VALUE "A".
          88 DataSet1-ttipoavv-KEY-Desc VALUE "D".
       77 DataSet1-USER-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-USER-LOCK  VALUE "Y".
       77 DataSet1-USER-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-USER-KEY-Asc  VALUE "A".
          88 DataSet1-USER-KEY-Desc VALUE "D".

       77 useravv-uav-k-tipologia-SPLITBUF  PIC X(13).

           copy "common-linkage.def".
           copy "winvers.def".
           copy "link-gpgmexe.def".

       78  78-delimitatore   value 
              "------------------------------------------------".

       01                       pic 9.
           88 primo-passaggio   value 1 false zero.

       77  como-utente pic x(10).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
       77 link-user        PIC  X(10).

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           AFTER PROCEDURE Form1-AfterProcedure,
           .

      * FRAME
       05
           Form1-Fr-1, 
           Frame, 
           COL 2,00, 
           LINE 1,38,
           LINES 32,62 ,
           SIZE 54,00 ,
           ENGRAVED,
           FULL-HEIGHT,
           ID IS 2,
           .

      * TREE VIEW
       05
           Form1-Menu-Tree, 
           Tree-View, 
           COL 2,00, 
           LINE 3,46,
           LINES 30,23 ,
           SIZE 40,50 ,
           BITMAP-HANDLE TREE-BMP,
           BITMAP-WIDTH  20,
           NO-BOX,
           BUTTONS,
           FONT IS Verdana10-Occidentale,
           ID IS 3,
           HEIGHT-IN-CELLS,
           LINES-AT-ROOT,
           SHOW-LINES,
           SHOW-SEL-ALWAYS,
           EVENT PROCEDURE Form1-Menu-Tree-Event-Proc,
           .

      * BITMAP
       05
           Form1-Bt-2, 
           Bitmap, 
           COL 2,33, 
           LINE 1,53,
           LINES 24,00 ,
           SIZE 319,00 ,
           BITMAP-HANDLE sx-bmp,
           BITMAP-NUMBER 1,
           ID IS 28,
           .

      * FRAME
       05
           Form1-Fr-2, 
           Frame, 
           COL 57,17, 
           LINE 1,38,
           LINES 14,92 ,
           SIZE 61,50 ,
           ENGRAVED,
           FULL-HEIGHT,
           ID IS 5,
           .

      * ENTRY FIELD
       05
           ef-descr, 
           Entry-Field, 
           COL 57,50, 
           LINE 3,46,
           LINES 12,62 ,
           SIZE 60,50 ,
           NO-BOX,
           COLOR IS 513,
           FONT IS Verdana10-Occidentale,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 500,
           NO-TAB,
           READ-ONLY,
           VSCROLL-BAR,
           VALUE ef-descr-BUF,
           BEFORE PROCEDURE Form1-DaEf-1-BeforeProcedure, 
           .
      * BITMAP
       05
           Form1-Bt-3, 
           Bitmap, 
           COL 57,50, 
           LINE 1,53,
           LINES 24,00 ,
           SIZE 363,00 ,
           BITMAP-HANDLE DX-BMP,
           BITMAP-NUMBER 1,
           ID IS 29,
           .

      * FRAME
       05
           Form1-Fr-3, 
           Frame, 
           COL 57,17, 
           LINE 16,23,
           LINES 17,77 ,
           SIZE 61,50 ,
           ENGRAVED,
           ID IS 1,
           .

      * BITMAP
       05
           Form1-Bt-1, 
           Bitmap, 
           COL 57,50, 
           LINE 16,92,
           LINES 218,00 ,
           SIZE 365,00 ,
           BITMAP-HANDLE SFONDO-JPG,
           BITMAP-NUMBER 1,
           ID IS 10,
           .

      * PUSH BUTTON
       05
           Form1-Pb-Run-Prg, 
           Push-Button, 
           COL 104,50, 
           LINE 31,61,
           LINES 21,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE ESEGUI_73X21-BMP,
           FRAMED,
           SQUARE,
           ENABLED e-esegui,
           FLAT,
           ID IS 24,
           OK-BUTTON,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           BITMAP-NUMBER BitmapNumEsegui
           .

      * PUSH BUTTON
       05
           Form1-Pb-2, 
           Push-Button, 
           COL 90,84, 
           LINE 31,61,
           LINES 21,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE ESCI_73X21-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           FLAT,
           ID IS 27,
           NO-AUTO-DEFAULT,
           CANCEL-BUTTON,
           TITLE "&Esce dall'applicativo",
           .

      * ENTRY FIELD
       05
           ef-messaggio, 
           Entry-Field, 
           COL 57,50, 
           LINE 16,77,
           LINES 14,15 ,
           SIZE 60,50 ,
           BOXED,
           COLOR IS 33249,
           FONT IS Verdana10B-Occidentale,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 30,
           NO-TAB,
           VSCROLL-BAR,
           VALUE ef-messaggio-BUF,
           VISIBLE v-messaggio,
           BEFORE PROCEDURE Form1-DaEf-1-BeforeProcedure, 
           .
      * TOOLBAR
       01
           Form1-Tb-2,
           .    

      * PUSH BUTTON
       05
           Form1-Pb-1, 
           Push-Button, 
           COL 1,00, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 11,
           SELF-ACT,
           TITLE "&Uscita (Esc)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1a, 
           Push-Button, 
           COL 10,33, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 2,
           FRAMED,
           EXCEPTION-VALUE 2,
           FLAT,
           ID IS 12,
           SELF-ACT,
           TITLE "&Notepad (F2)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1b, 
           Push-Button, 
           COL 19,67, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 3,
           FRAMED,
           EXCEPTION-VALUE 3,
           FLAT,
           ID IS 31,
           SELF-ACT,
           TITLE "&Calcolatrice (F3)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1c, 
           Push-Button, 
           COL 28,83, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 4,
           FRAMED,
           EXCEPTION-VALUE 4,
           FLAT,
           ID IS 32,
           SELF-ACT,
           TITLE "&Word (F4)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1d, 
           Push-Button, 
           COL 38,00, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 5,
           FRAMED,
           EXCEPTION-VALUE 5,
           FLAT,
           ID IS 33,
           SELF-ACT,
           TITLE "&Excel (F5)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1e, 
           Push-Button, 
           COL 47,17, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 6,
           FRAMED,
           EXCEPTION-VALUE 6,
           FLAT,
           ID IS 34,
           SELF-ACT,
           TITLE "&Prompt di DOS (F6)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1f, 
           Push-Button, 
           COL 56,33, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 7,
           FRAMED,
           EXCEPTION-VALUE 7,
           FLAT,
           ID IS 35,
           SELF-ACT,
           TITLE "&Internet (F7)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1g, 
           Push-Button, 
           COL 65,50, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 8,
           FRAMED,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 36,
           SELF-ACT,
           TITLE "P&osta (F8)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1h, 
           Push-Button, 
           COL 74,50, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 9,
           FRAMED,
           EXCEPTION-VALUE 9,
           FLAT,
           ID IS 37,
           SELF-ACT,
           TITLE "C&alendario (F9)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1i, 
           Push-Button, 
           COL 83,67, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 10,
           FRAMED,
           EXCEPTION-VALUE 10,
           FLAT,
           ID IS 38,
           SELF-ACT,
           TITLE "&Lancia (F10)",
           .

      * PUSH BUTTON
       05
           Form1-Pb-1j, 
           Push-Button, 
           COL 92,83, 
           LINE 1,23,
           LINES 53,00 ,
           SIZE 55,00 ,
           BITMAP-HANDLE TOOL-MENU-BMP,
           BITMAP-NUMBER 11,
           FRAMED,
           EXCEPTION-VALUE 1,
           FLAT,
           ID IS 39,
           SELF-ACT,
           TITLE "In&fo (F1)",
           .

      * FORM
       01 
           Form-CALL, 
           .

      * ENTRY FIELD
       05
           EF-CALL, 
           Entry-Field, 
           COL 14,00, 
           LINE 3,00,
           LINES 2,30 CELLS,
           SIZE 20,00 CELLS,
           BOXED,
           LOWER,
           ID IS 2,
           MAX-TEXT 15,
           AFTER PROCEDURE EF-CALL-AfterProcedure, 
           BEFORE PROCEDURE EF-CALL-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-ok, 
           Push-Button, 
           COL 4,00, 
           LINE 7,00,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 13,
           FLAT,
           ID IS 5,
           OK-BUTTON,
           TITLE "&OK",
           AFTER PROCEDURE pb-ok-AfterProcedure, 
           BEFORE PROCEDURE pb-ok-BeforeProcedure, 
           .

      * LABEL
       05
           Form2-Custom1-1, 
           Label, 
           COL 1,80, 
           LINE 1,50,
           LINES 1,00 CELLS,
           SIZE 1,40 CELLS,
           FONT IS Default-Font,
           ID IS 7,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Form2-La-1, 
           Label, 
           COL 3,00, 
           LINE 3,00,
           LINES 2,30 CELLS,
           SIZE 10,00 CELLS,
           ID IS 3,
           LABEL-OFFSET 0,
           TRANSPARENT,
           TITLE "Programma:",
           .

      * PUSH BUTTON
       05
           pb-cancel, 
           Push-Button, 
           COL 14,50, 
           LINE 7,00,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-ANNULLA-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 4,
           TITLE "&Annulla",
           AFTER PROCEDURE pb-cancel-AfterProcedure, 
           BEFORE PROCEDURE pb-cancel-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-sfoglia, 
           Push-Button, 
           COL 25,00, 
           LINE 7,00,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE_SFOGLIA-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 6,
           TITLE "&Sfoglia",
           AFTER PROCEDURE pb-sfoglia-AfterProcedure, 
           BEFORE PROCEDURE pb-sfoglia-BeforeProcedure, 
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING link-user.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:menu, INIT:menu, BeforeDeclarative>
      ***---
       USER-PGM-ERR SECTION.
           use after error procedure on USER-PGM.
           set tutto-ok  to true.
           evaluate status-USER-PGM
           when "35"
                display message "File [USER-PGM] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [USER-PGM] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[USER-PGM] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       PROG-ERR SECTION.
           use after error procedure on PROG.
           set tutto-ok  to true.
           evaluate stat-prog
           when "35"
                display message "File [PROG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PROG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PROG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM menu-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:menu, INIT:menu, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10-Occidentale
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, TREE-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, sx-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, DX-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, SFONDO-JPG
           CALL "w$bitmap" USING WBITMAP-DESTROY, ESEGUI_73X21-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, ESCI_73X21-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOL-MENU-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-ANNULLA-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE_SFOGLIA-BMP
           CALL "W$MENU" USING WMENU-DESTROY-DELAYED Form1-Mn-1-Handle
      *    After-Program
           PERFORM menu-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
           PERFORM ACCETTA-DATA-ORA
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * Form1-Menu-Tree
           COPY RESOURCE "TREE.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TREE.BMP", 
                   GIVING TREE-BMP.
      * Form1-Bt-2
           COPY RESOURCE "sx.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "sx.bmp", 
                   GIVING sx-bmp.
      * Form1-Bt-3
           COPY RESOURCE "DX.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "DX.BMP", 
                   GIVING DX-BMP.
      * Form1-Bt-1
           COPY RESOURCE "SFONDO.JPG".
           CALL "w$bitmap" USING WBITMAP-LOAD "SFONDO.JPG", 
                   GIVING SFONDO-JPG.
      * Form1-Pb-Run-Prg
           COPY RESOURCE "ESEGUI_73X21.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "ESEGUI_73X21.BMP", 
                   GIVING ESEGUI_73X21-BMP.
      * Form1-Pb-2
           COPY RESOURCE "ESCI_73X21.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "ESCI_73X21.BMP", 
                   GIVING ESCI_73X21-BMP.
      * Form1-Pb-1
           COPY RESOURCE "TOOL-MENU.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOL-MENU.BMP", 
                   GIVING TOOL-MENU-BMP.
      * pb-ok
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-cancel
           COPY RESOURCE "BOTTONE-ANNULLA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-ANNULLA.BMP", 
                   GIVING BOTTONE-ANNULLA-BMP.
      * pb-sfoglia
           COPY RESOURCE "BOTTONE_SFOGLIA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE_SFOGLIA.BMP", 
                   GIVING BOTTONE_SFOGLIA-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-user-pgm
           PERFORM OPEN-PROG
           PERFORM OPEN-PROG1
           PERFORM OPEN-useravv
           PERFORM OPEN-ttipoavv
           PERFORM OPEN-USER
      *    After Open
           .

       OPEN-user-pgm.
      * <TOTEM:EPT. INIT:menu, FD:user-pgm, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT user-pgm
           IF NOT VALID-STATUS-user-pgm
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:menu, FD:user-pgm, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PROG.
      * <TOTEM:EPT. INIT:menu, FD:PROG, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT PROG
           IF NOT VALID-STAT-PROG
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:menu, FD:PROG, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PROG1.
      * <TOTEM:EPT. INIT:menu, FD:PROG1, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT PROG1
           IF NOT VALID-STAT-PROG1
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:menu, FD:PROG1, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-useravv.
      * <TOTEM:EPT. INIT:menu, FD:useravv, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT useravv
           IF NOT Valid-STATUS-useravv
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:menu, FD:useravv, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ttipoavv.
      * <TOTEM:EPT. INIT:menu, FD:ttipoavv, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ttipoavv
           IF NOT Valid-STATUS-ttipoavv
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:menu, FD:ttipoavv, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-USER.
      * <TOTEM:EPT. INIT:menu, FD:USER, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT USER
           IF NOT Valid-STATUS-USER
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:menu, FD:USER, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-user-pgm
           PERFORM CLOSE-PROG
           PERFORM CLOSE-PROG1
           PERFORM CLOSE-useravv
           PERFORM CLOSE-ttipoavv
           PERFORM CLOSE-USER
      *    After Close
           .

       CLOSE-user-pgm.
      * <TOTEM:EPT. INIT:menu, FD:user-pgm, BeforeClose>
      * <TOTEM:END>
           CLOSE user-pgm
           .

       CLOSE-PROG.
      * <TOTEM:EPT. INIT:menu, FD:PROG, BeforeClose>
      * <TOTEM:END>
           CLOSE PROG
           .

       CLOSE-PROG1.
      * <TOTEM:EPT. INIT:menu, FD:PROG1, BeforeClose>
      * <TOTEM:END>
           CLOSE PROG1
           .

       CLOSE-useravv.
      * <TOTEM:EPT. INIT:menu, FD:useravv, BeforeClose>
      * <TOTEM:END>
           CLOSE useravv
           .

       CLOSE-ttipoavv.
      * <TOTEM:EPT. INIT:menu, FD:ttipoavv, BeforeClose>
      * <TOTEM:END>
           CLOSE ttipoavv
           .

       CLOSE-USER.
      * <TOTEM:EPT. INIT:menu, FD:USER, BeforeClose>
      * <TOTEM:END>
           CLOSE USER
           .

       DataSet1-user-pgm-INITSTART.
           IF DataSet1-user-pgm-KEY-Asc
              MOVE Low-Value TO UP-CHIAVE OF USER-PGM
           ELSE
              MOVE High-Value TO UP-CHIAVE OF USER-PGM
           END-IF
           .

       DataSet1-user-pgm-INITEND.
           IF DataSet1-user-pgm-KEY-Asc
              MOVE High-Value TO UP-CHIAVE OF USER-PGM
           ELSE
              MOVE Low-Value TO UP-CHIAVE OF USER-PGM
           END-IF
           .

      * user-pgm
       DataSet1-user-pgm-START.
           IF DataSet1-user-pgm-KEY-Asc
              START user-pgm KEY >= UP-CHIAVE OF USER-PGM
           ELSE
              START user-pgm KEY <= UP-CHIAVE OF USER-PGM
           END-IF
           .

       DataSet1-user-pgm-START-NOTGREATER.
           IF DataSet1-user-pgm-KEY-Asc
              START user-pgm KEY <= UP-CHIAVE OF USER-PGM
           ELSE
              START user-pgm KEY >= UP-CHIAVE OF USER-PGM
           END-IF
           .

       DataSet1-user-pgm-START-GREATER.
           IF DataSet1-user-pgm-KEY-Asc
              START user-pgm KEY > UP-CHIAVE OF USER-PGM
           ELSE
              START user-pgm KEY < UP-CHIAVE OF USER-PGM
           END-IF
           .

       DataSet1-user-pgm-START-LESS.
           IF DataSet1-user-pgm-KEY-Asc
              START user-pgm KEY < UP-CHIAVE OF USER-PGM
           ELSE
              START user-pgm KEY > UP-CHIAVE OF USER-PGM
           END-IF
           .

       DataSet1-user-pgm-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-user-pgm-LOCK
              READ user-pgm WITH LOCK 
              KEY UP-CHIAVE OF USER-PGM
           ELSE
              READ user-pgm WITH NO LOCK 
              KEY UP-CHIAVE OF USER-PGM
           END-IF
           MOVE STATUS-user-pgm TO TOTEM-ERR-STAT 
           MOVE "user-pgm" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-user-pgm-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-user-pgm-KEY-Asc
              IF DataSet1-user-pgm-LOCK
                 READ user-pgm NEXT WITH LOCK
              ELSE
                 READ user-pgm NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-user-pgm-LOCK
                 READ user-pgm PREVIOUS WITH LOCK
              ELSE
                 READ user-pgm PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-user-pgm TO TOTEM-ERR-STAT
           MOVE "user-pgm" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-user-pgm-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-user-pgm-KEY-Asc
              IF DataSet1-user-pgm-LOCK
                 READ user-pgm PREVIOUS WITH LOCK
              ELSE
                 READ user-pgm PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-user-pgm-LOCK
                 READ user-pgm NEXT WITH LOCK
              ELSE
                 READ user-pgm NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-user-pgm TO TOTEM-ERR-STAT
           MOVE "user-pgm" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-user-pgm-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-user-pgm TO TOTEM-ERR-STAT
           MOVE "user-pgm" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-user-pgm-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-user-pgm TO TOTEM-ERR-STAT
           MOVE "user-pgm" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-user-pgm-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-user-pgm TO TOTEM-ERR-STAT
           MOVE "user-pgm" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:user-pgm, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-PROG-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 MOVE Low-Value TO PROG-KEY OF PROG
              ELSE
                 MOVE High-Value TO PROG-KEY OF PROG
              END-IF
           END-EVALUATE
           .

       DataSet1-PROG-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 MOVE High-Value TO PROG-KEY OF PROG
              ELSE
                 MOVE Low-Value TO PROG-KEY OF PROG
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-PROG-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-PROG-KEY1-ORDER
           END-EVALUATE
           .

      * PROG
       DataSet1-PROG-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 START PROG KEY >= PROG-KEY OF PROG
              ELSE
                 START PROG KEY <= PROG-KEY OF PROG
              END-IF
           END-EVALUATE
           .

       DataSet1-PROG-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 START PROG KEY <= PROG-KEY OF PROG
              ELSE
                 START PROG KEY >= PROG-KEY OF PROG
              END-IF
           END-EVALUATE
           .

       DataSet1-PROG-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 START PROG KEY > PROG-KEY OF PROG
              ELSE
                 START PROG KEY < PROG-KEY OF PROG
              END-IF
           END-EVALUATE
           .

       DataSet1-PROG-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 START PROG KEY < PROG-KEY OF PROG
              ELSE
                 START PROG KEY > PROG-KEY OF PROG
              END-IF
           END-EVALUATE
           .

       DataSet1-PROG-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-LOCK
                 READ PROG WITH LOCK 
                 KEY PROG-KEY OF PROG
              ELSE
                 READ PROG WITH NO LOCK 
                 KEY PROG-KEY OF PROG
              END-IF
           END-EVALUATE
           MOVE STAT-PROG TO TOTEM-ERR-STAT 
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRead>
      * MI SERVE PER RIPRISTINARE LA SITUAZIONE DEL TREE-WIEW
           MOVE PROG-R OF PROG TO OLD-PROG-R.

           .
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterReadRecord>
      * MI SERVE PER RIPRISTINARE LA SITUAZIONE DEL TREE-WIEW
           MOVE PROG-R OF PROG TO OLD-PROG-R.

           .
      * <TOTEM:END>
           .

       DataSet1-PROG-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 IF DataSet1-PROG-LOCK
                    READ PROG NEXT WITH LOCK
                 ELSE
                    READ PROG NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-PROG-LOCK
                    READ PROG PREVIOUS WITH LOCK
                 ELSE
                    READ PROG PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRead>
      * MI SERVE PER RIPRISTINARE LA SITUAZIONE DEL TREE-WIEW
           MOVE PROG-R OF PROG TO OLD-PROG-R.

           .
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterReadNext>
      * MI SERVE PER RIPRISTINARE LA SITUAZIONE DEL TREE-WIEW
           MOVE PROG-R OF PROG TO OLD-PROG-R.

           .
      * <TOTEM:END>
           .

       DataSet1-PROG-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-PROG-KEY1-Asc
                 IF DataSet1-PROG-LOCK
                    READ PROG PREVIOUS WITH LOCK
                 ELSE
                    READ PROG PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-PROG-LOCK
                    READ PROG NEXT WITH LOCK
                 ELSE
                    READ PROG NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRead>
      * MI SERVE PER RIPRISTINARE LA SITUAZIONE DEL TREE-WIEW
           MOVE PROG-R OF PROG TO OLD-PROG-R.

           .
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterReadPrev>
      * MI SERVE PER RIPRISTINARE LA SITUAZIONE DEL TREE-WIEW
           MOVE PROG-R OF PROG TO OLD-PROG-R.

           .
      * <TOTEM:END>
           .

       DataSet1-PROG-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeWrite>
      * <TOTEM:END>
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PROG-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeRewrite>
      * <TOTEM:END>
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PROG-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, BeforeDelete>
      * <TOTEM:END>
           MOVE STAT-PROG TO TOTEM-ERR-STAT
           MOVE "PROG" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-PROG1-INITSTART.
           IF DataSet1-PROG1-KEY-Asc
              MOVE Low-Value TO PROG-KEY OF PROG1
           ELSE
              MOVE High-Value TO PROG-KEY OF PROG1
           END-IF
           .

       DataSet1-PROG1-INITEND.
           IF DataSet1-PROG1-KEY-Asc
              MOVE High-Value TO PROG-KEY OF PROG1
           ELSE
              MOVE Low-Value TO PROG-KEY OF PROG1
           END-IF
           .

      * PROG1
       DataSet1-PROG1-START.
           IF DataSet1-PROG1-KEY-Asc
              START PROG1 KEY >= PROG-KEY OF PROG1
           ELSE
              START PROG1 KEY <= PROG-KEY OF PROG1
           END-IF
           .

       DataSet1-PROG1-START-NOTGREATER.
           IF DataSet1-PROG1-KEY-Asc
              START PROG1 KEY <= PROG-KEY OF PROG1
           ELSE
              START PROG1 KEY >= PROG-KEY OF PROG1
           END-IF
           .

       DataSet1-PROG1-START-GREATER.
           IF DataSet1-PROG1-KEY-Asc
              START PROG1 KEY > PROG-KEY OF PROG1
           ELSE
              START PROG1 KEY < PROG-KEY OF PROG1
           END-IF
           .

       DataSet1-PROG1-START-LESS.
           IF DataSet1-PROG1-KEY-Asc
              START PROG1 KEY < PROG-KEY OF PROG1
           ELSE
              START PROG1 KEY > PROG-KEY OF PROG1
           END-IF
           .

       DataSet1-PROG1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PROG1-LOCK
              READ PROG1 WITH LOCK 
              KEY PROG-KEY OF PROG1
           ELSE
              READ PROG1 WITH NO LOCK 
              KEY PROG-KEY OF PROG1
           END-IF
           MOVE STAT-PROG1 TO TOTEM-ERR-STAT 
           MOVE "PROG1" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PROG1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PROG1-KEY-Asc
              IF DataSet1-PROG1-LOCK
                 READ PROG1 NEXT WITH LOCK
              ELSE
                 READ PROG1 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PROG1-LOCK
                 READ PROG1 PREVIOUS WITH LOCK
              ELSE
                 READ PROG1 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STAT-PROG1 TO TOTEM-ERR-STAT
           MOVE "PROG1" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PROG1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PROG1-KEY-Asc
              IF DataSet1-PROG1-LOCK
                 READ PROG1 PREVIOUS WITH LOCK
              ELSE
                 READ PROG1 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PROG1-LOCK
                 READ PROG1 NEXT WITH LOCK
              ELSE
                 READ PROG1 NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STAT-PROG1 TO TOTEM-ERR-STAT
           MOVE "PROG1" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PROG1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeWrite>
      * <TOTEM:END>
           MOVE STAT-PROG1 TO TOTEM-ERR-STAT
           MOVE "PROG1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PROG1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeRewrite>
      * <TOTEM:END>
           MOVE STAT-PROG1 TO TOTEM-ERR-STAT
           MOVE "PROG1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PROG1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, BeforeDelete>
      * <TOTEM:END>
           MOVE STAT-PROG1 TO TOTEM-ERR-STAT
           MOVE "PROG1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PROG1, AfterDelete>
      * <TOTEM:END>
           .

       useravv-uav-k-tipologia-MERGE-SPLITBUF.
           INITIALIZE useravv-uav-k-tipologia-SPLITBUF
           MOVE uav-tipologia OF useravv(1:2) TO 
           useravv-uav-k-tipologia-SPLITBUF(1:2)
           MOVE uav-utente OF useravv(1:10) TO 
           useravv-uav-k-tipologia-SPLITBUF(3:10)
           .

       DataSet1-useravv-INITSTART.
           IF DataSet1-useravv-KEY-Asc
              MOVE Low-Value TO uav-chiave OF useravv
           ELSE
              MOVE High-Value TO uav-chiave OF useravv
           END-IF
           .

       DataSet1-useravv-INITEND.
           IF DataSet1-useravv-KEY-Asc
              MOVE High-Value TO uav-chiave OF useravv
           ELSE
              MOVE Low-Value TO uav-chiave OF useravv
           END-IF
           .

      * useravv
       DataSet1-useravv-START.
           IF DataSet1-useravv-KEY-Asc
              START useravv KEY >= uav-chiave OF useravv
           ELSE
              START useravv KEY <= uav-chiave OF useravv
           END-IF
           .

       DataSet1-useravv-START-NOTGREATER.
           IF DataSet1-useravv-KEY-Asc
              START useravv KEY <= uav-chiave OF useravv
           ELSE
              START useravv KEY >= uav-chiave OF useravv
           END-IF
           .

       DataSet1-useravv-START-GREATER.
           IF DataSet1-useravv-KEY-Asc
              START useravv KEY > uav-chiave OF useravv
           ELSE
              START useravv KEY < uav-chiave OF useravv
           END-IF
           .

       DataSet1-useravv-START-LESS.
           IF DataSet1-useravv-KEY-Asc
              START useravv KEY < uav-chiave OF useravv
           ELSE
              START useravv KEY > uav-chiave OF useravv
           END-IF
           .

       DataSet1-useravv-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-useravv-LOCK
              READ useravv WITH LOCK 
              KEY uav-chiave OF useravv
           ELSE
              READ useravv WITH NO LOCK 
              KEY uav-chiave OF useravv
           END-IF
           PERFORM useravv-uav-k-tipologia-MERGE-SPLITBUF
           MOVE STATUS-useravv TO TOTEM-ERR-STAT 
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-useravv-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-useravv-KEY-Asc
              IF DataSet1-useravv-LOCK
                 READ useravv NEXT WITH LOCK
              ELSE
                 READ useravv NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-useravv-LOCK
                 READ useravv PREVIOUS WITH LOCK
              ELSE
                 READ useravv PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM useravv-uav-k-tipologia-MERGE-SPLITBUF
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-useravv-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-useravv-KEY-Asc
              IF DataSet1-useravv-LOCK
                 READ useravv PREVIOUS WITH LOCK
              ELSE
                 READ useravv PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-useravv-LOCK
                 READ useravv NEXT WITH LOCK
              ELSE
                 READ useravv NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM useravv-uav-k-tipologia-MERGE-SPLITBUF
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-useravv-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-useravv-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-useravv-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-useravv TO TOTEM-ERR-STAT
           MOVE "useravv" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:useravv, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-ttipoavv-INITSTART.
           IF DataSet1-ttipoavv-KEY-Asc
              MOVE Low-Value TO tav-chiave OF ttipoavv
           ELSE
              MOVE High-Value TO tav-chiave OF ttipoavv
           END-IF
           .

       DataSet1-ttipoavv-INITEND.
           IF DataSet1-ttipoavv-KEY-Asc
              MOVE High-Value TO tav-chiave OF ttipoavv
           ELSE
              MOVE Low-Value TO tav-chiave OF ttipoavv
           END-IF
           .

      * ttipoavv
       DataSet1-ttipoavv-START.
           IF DataSet1-ttipoavv-KEY-Asc
              START ttipoavv KEY >= tav-chiave OF ttipoavv
           ELSE
              START ttipoavv KEY <= tav-chiave OF ttipoavv
           END-IF
           .

       DataSet1-ttipoavv-START-NOTGREATER.
           IF DataSet1-ttipoavv-KEY-Asc
              START ttipoavv KEY <= tav-chiave OF ttipoavv
           ELSE
              START ttipoavv KEY >= tav-chiave OF ttipoavv
           END-IF
           .

       DataSet1-ttipoavv-START-GREATER.
           IF DataSet1-ttipoavv-KEY-Asc
              START ttipoavv KEY > tav-chiave OF ttipoavv
           ELSE
              START ttipoavv KEY < tav-chiave OF ttipoavv
           END-IF
           .

       DataSet1-ttipoavv-START-LESS.
           IF DataSet1-ttipoavv-KEY-Asc
              START ttipoavv KEY < tav-chiave OF ttipoavv
           ELSE
              START ttipoavv KEY > tav-chiave OF ttipoavv
           END-IF
           .

       DataSet1-ttipoavv-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ttipoavv-LOCK
              READ ttipoavv WITH LOCK 
              KEY tav-chiave OF ttipoavv
           ELSE
              READ ttipoavv WITH NO LOCK 
              KEY tav-chiave OF ttipoavv
           END-IF
           MOVE STATUS-ttipoavv TO TOTEM-ERR-STAT 
           MOVE "ttipoavv" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ttipoavv-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ttipoavv-KEY-Asc
              IF DataSet1-ttipoavv-LOCK
                 READ ttipoavv NEXT WITH LOCK
              ELSE
                 READ ttipoavv NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipoavv-LOCK
                 READ ttipoavv PREVIOUS WITH LOCK
              ELSE
                 READ ttipoavv PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipoavv TO TOTEM-ERR-STAT
           MOVE "ttipoavv" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ttipoavv-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ttipoavv-KEY-Asc
              IF DataSet1-ttipoavv-LOCK
                 READ ttipoavv PREVIOUS WITH LOCK
              ELSE
                 READ ttipoavv PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipoavv-LOCK
                 READ ttipoavv NEXT WITH LOCK
              ELSE
                 READ ttipoavv NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipoavv TO TOTEM-ERR-STAT
           MOVE "ttipoavv" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ttipoavv-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ttipoavv TO TOTEM-ERR-STAT
           MOVE "ttipoavv" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ttipoavv-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ttipoavv TO TOTEM-ERR-STAT
           MOVE "ttipoavv" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ttipoavv-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ttipoavv TO TOTEM-ERR-STAT
           MOVE "ttipoavv" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipoavv, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-USER-INITSTART.
           IF DataSet1-USER-KEY-Asc
              MOVE Low-Value TO user-chiave
           ELSE
              MOVE High-Value TO user-chiave
           END-IF
           .

       DataSet1-USER-INITEND.
           IF DataSet1-USER-KEY-Asc
              MOVE High-Value TO user-chiave
           ELSE
              MOVE Low-Value TO user-chiave
           END-IF
           .

      * USER
       DataSet1-USER-START.
           IF DataSet1-USER-KEY-Asc
              START USER KEY >= user-chiave
           ELSE
              START USER KEY <= user-chiave
           END-IF
           .

       DataSet1-USER-START-NOTGREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY <= user-chiave
           ELSE
              START USER KEY >= user-chiave
           END-IF
           .

       DataSet1-USER-START-GREATER.
           IF DataSet1-USER-KEY-Asc
              START USER KEY > user-chiave
           ELSE
              START USER KEY < user-chiave
           END-IF
           .

       DataSet1-USER-START-LESS.
           IF DataSet1-USER-KEY-Asc
              START USER KEY < user-chiave
           ELSE
              START USER KEY > user-chiave
           END-IF
           .

       DataSet1-USER-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-USER-LOCK
              READ USER WITH LOCK 
              KEY user-chiave
           ELSE
              READ USER WITH NO LOCK 
              KEY user-chiave
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT 
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-USER-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-USER-KEY-Asc
              IF DataSet1-USER-LOCK
                 READ USER PREVIOUS WITH LOCK
              ELSE
                 READ USER PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-USER-LOCK
                 READ USER NEXT WITH LOCK
              ELSE
                 READ USER NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-USER-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:USER, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-USER TO TOTEM-ERR-STAT
           MOVE "USER" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:USER, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE UP-RECORD OF user-pgm
           INITIALIZE PROG-R OF PROG
           INITIALIZE PROG-R OF PROG1
           INITIALIZE uav-rec OF useravv
           INITIALIZE tav-rec OF ttipoavv
           INITIALIZE user-rec OF USER
           .


       DataSet1-PROG-REF-user-pgm-KEY.
           MOVE PROG-ID OF PROG TO UP-PROG-ID
           .

       DataSet1-PROG-REF-user-pgm.
           PERFORM DataSet1-user-pgm-INITREC
           PERFORM DataSet1-PROG-REF-user-pgm-KEY
           PERFORM DataSet1-Relation1-EXPRESSION
           PERFORM DataSet1-user-pgm-READ
           IF NOT VALID-STATUS-user-pgm
              PERFORM DataSet1-user-pgm-INITREC
           END-IF
           .

      * RI TYPE : Restricted
       DataSet1-PROG-REF-user-pgm-INS.
           .

      * RI TYPE : Restricted
       DataSet1-PROG-REF-user-pgm-UPD.
           .

      * RI TYPE : Restricted
       DataSet1-PROG-REF-user-pgm-DEL.
           .

      * FD's Initialize Paragraph
       DataSet1-user-pgm-INITREC.
           INITIALIZE UP-RECORD OF user-pgm
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PROG-INITREC.
           INITIALIZE PROG-R OF PROG
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           PERFORM DataSet1-user-pgm-INITREC
           .

      * FD's Initialize Paragraph
       DataSet1-PROG1-INITREC.
           INITIALIZE PROG-R OF PROG1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-useravv-INITREC.
           INITIALIZE uav-rec OF useravv
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ttipoavv-INITREC.
           INITIALIZE tav-rec OF ttipoavv
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-USER-INITREC.
           INITIALIZE user-rec OF USER
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form1-Buf-To-Fld
           END-EVALUATE
           .

       DataSet1-Relation1-EXPRESSION.
           .

       Form1-DISPLAY-STATUS-MSG.
            MODIFY Form1-St-1-Handle PANEL-INDEX = 1
                PANEL-TEXT = PROG-S-DESC OF Prog
            MODIFY Form1-St-1-Handle PANEL-INDEX = 2
                PANEL-TEXT = PROG-ID OF Prog
            MODIFY Form1-St-1-Handle PANEL-INDEX = 4
                PANEL-TEXT = ef-data-buf
           .

       Form1-CLEAR-STATUS-MSG.
           MOVE SPACES TO TOTEM-MSG-1, TOTEM-MSG-2, TOTEM-MSG-3, 
           TOTEM-MSG-TEXT
           PERFORM Form1-DISPLAY-STATUS-MSG
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-2
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 34,77,
              SIZE 118,83,
              COLOR WindowColor,
              CONTROL FONT Small-Font,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo1,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Form1-Event-Proc,
              HANDLE IS Form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Main Menu
           PERFORM Form1-Mn-1-Menu
           MOVE Menu-Handle TO Form1-Mn-1-Handle
           CALL "W$MENU" USING Wmenu-Show, Form1-Mn-1-Handle

      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 5,00,   
              HANDLE IN Form1-Tb-2-Handle
           DISPLAY Form1-Tb-2 UPON Form1-Tb-2-Handle

      * Status-bar
           DISPLAY STATUS-BAR
              FONT IS Verdana10-Occidentale,
              GRIP,
              PANEL-WIDTHS (60, 21, 23, 999),
              PANEL-STYLE  (1, 1, 1, 1),
              PANEL-TEXT   (PROG-S-DESC OF Prog, PROG-ID OF Prog, 
           SPACE, ef-data-buf),
              HANDLE IS Form1-St-1-Handle
           DISPLAY Form1 UPON Form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           modify Form1-St-1-Handle, panel-index = 3
                                     panel-style = 2
                                     panel-text  = lab-anno-buf.

           accept como-data from century-date.
           perform DATE-TO-SCREEN.
           move como-data to ef-data-buf.

           modify Form1-St-1-Handle, panel-index = 4
                                     panel-style = 1
                                     panel-text  = ef-data-buf.

           perform VISUALIZZA-MESSAGGI.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
           if Enter-Pushed 
              move 0 to sw-call
              set CallProgramFlag to true
           end-if
           if CallProgramFlag
              set CallProgramFlag to false
              perform CALL-PROGRAM
           end-if

      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 2
                 PERFORM Form1-Pb-1a-LinkTo
              WHEN Key-Status = 3
                 PERFORM Form1-Pb-1b-LinkTo
              WHEN Key-Status = 4
                 PERFORM Form1-Pb-1c-LinkTo
              WHEN Key-Status = 5
                 PERFORM Form1-Pb-1d-LinkTo
              WHEN Key-Status = 6
                 PERFORM Form1-Pb-1e-LinkTo
              WHEN Key-Status = 7
                 PERFORM Form1-Pb-1f-LinkTo
              WHEN Key-Status = 8
                 PERFORM Form1-Pb-1g-LinkTo
              WHEN Key-Status = 9
                 PERFORM Form1-Pb-1h-LinkTo
              WHEN Key-Status = 10
                 PERFORM Form1-Pb-1i-LinkTo
              WHEN Key-Status = 1
                 PERFORM Form1-Pb-1j-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-2
           DISPLAY Form1 UPON Form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE "101" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE = 1
              MOVE 27 TO Key-Status
           ELSE
              INITIALIZE Key-Status
           END-IF
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * TREE VIEW
           MODIFY Form1-Menu-Tree, RESET-LIST = 1
           PERFORM Form1-AfterInitData
           .

       Form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-PROG-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-PROG-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Update-Key.
           MOVE PROG-R OF PROG TO
                     Form1-MULKEY-TMPBUF
           PERFORM Form1-CLEAR
           PERFORM Form1-INIT-DATA
           MOVE Form1-MULKEY-TMPBUF TO
                     PROG-R OF PROG
           PERFORM DataSet1-PROG-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
           .

       Form1-DUPLICATE-MOVEKEY.
           .

       Form1-First.
           PERFORM Form1-DUMMY-FIRST
           PERFORM DataSet1-PROG-INITSTART
           PERFORM DataSet1-PROG-START
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-PROG-Read-Next
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFirst>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Previous.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-PROG-START-LESS
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-PROG-Read-Prev
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-PREVIOUS
           PERFORM Form1-IUD-Display
           .

       Form1-Next.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-PROG-START-GREATER
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-PROG-Read-Next
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterNext>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-NEXT
           PERFORM Form1-IUD-Display
           .
      
       Form1-Last.
           PERFORM Form1-DUMMY-LAST
           PERFORM DataSet1-PROG-INITEND
           PERFORM DataSet1-PROG-START-NOTGREATER
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-PROG-Read-Prev
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterLast>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Curr.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-PROG-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCurrent>
      * <TOTEM:END>
           .

       Form1-IUD-Display.
           IF VALID-STAT-PROG
              PERFORM Form1-ALLGRID-RESET
              PERFORM DataSet1-PROG-REF-user-pgm
              PERFORM Form1-Fld-To-Buf
              PERFORM Form1-NAVI-FOR-MASTERGRID
              PERFORM Form1-DISPLAY
           ELSE
              IF Form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form1-Extended-File-Status
              END-IF
           END-IF
           .

       Form1-Add.
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-ADD
           PERFORM DataSet1-PROG-INITREC
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-PROG-Rec-Write
           IF VALID-STAT-PROG
              PERFORM Form1-RESUMMARY-INS
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAdd>
      * <TOTEM:END>
           .
     
       Form1-Update.
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-PROG-START              
           IF NOT VALID-STAT-PROG
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-PROG-Read
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-UPDATE
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-PROG-Rec-Rewrite
           IF VALID-STAT-PROG
              PERFORM Form1-RESUMMARY-DEL
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterUpdate>
      * <TOTEM:END>
           .

       Form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form1-DUMMY-DELETE
      * delete
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-PROG-Rec-Delete
           IF VALID-STAT-PROG
              PERFORM Form1-CLEAR
              PERFORM Form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STAT-PROG
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDelete>
      * <TOTEM:END>
           PERFORM Form1-ERR-CHECKING
           .

       Form1-NAVI-FOR-MASTERGRID.
           .

       Form1-ERR-CHECKING.
           IF VALID-STAT-PROG
              PERFORM Form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form1-Extended-File-Status
           END-IF
           .

       Form1-RESUMMARY-INS.
           .

       Form1-RESUMMARY-DEL.
           .


       Form1-DUMMY-FIRST.
           .

       Form1-DUMMY-PREVIOUS.
           .

       Form1-DUMMY-NEXT.
           .

       Form1-DUMMY-LAST.
           .

       Form1-DUMMY-CURR.
           .

       Form1-DUMMY-ADD.
           .

       Form1-DUMMY-UPDATE.
           .

       Form1-DUMMY-UPDATE-INIT.
           .

       Form1-DUMMY-DELETE.
           .

       Form1-DUMMY-DELETE-INIT.
           .

       Form1-Init-Value.
           MOVE titolo1 TO TOTEM-MSG-TITLE
           INITIALIZE Form1-BUF
      * FORM : Form1
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
      * ef-descr's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-descr-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 7 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-messaggio's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-messaggio-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 30 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
           .

       ef-descr-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-descr, BeforeValidation>
      * <TOTEM:END>
           .

       ef-descr-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-descr, AfterValidation>
      * <TOTEM:END>
           .

      * ef-descr's Validation
       ef-descr-VALIDATION.
           PERFORM ef-descr-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-descr-AFTER-VALIDATION
           .

       ef-messaggio-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-messaggio, BeforeValidation>
      * <TOTEM:END>
           .

       ef-messaggio-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Form1, Data.Entry-Field:ef-messaggio, AfterValidation>
      * <TOTEM:END>
           .

      * ef-messaggio's Validation
       ef-messaggio-VALIDATION.
           PERFORM ef-messaggio-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-messaggio-AFTER-VALIDATION
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * DB_Entry-Field : ef-descr
           MOVE ef-descr-BUF TO PROG-L-DESC of prog
      * DB_Entry-Field : ef-messaggio
           MOVE ef-messaggio-BUF TO messaggio
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * DB_Entry-Field : ef-descr
           MOVE PROG-L-DESC of prog TO ef-descr-BUF
      * DB_Entry-Field : ef-messaggio
           MOVE messaggio TO ef-messaggio-BUF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           MOVE DataSet1-PROG-KEY1-ORDER TO TMP-Form1-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form1-KEYIS
           MOVE PROG-R OF PROG TO 
              TMP-Form1-PROG-RESTOREBUF
           .             

       Form1-Restore-Status.
           MOVE TMP-Form1-KEY1-ORDER TO DataSet1-PROG-KEY1-ORDER
           MOVE TMP-Form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form1-PROG-RESTOREBUF TO
              PROG-R OF PROG
           PERFORM DataSet1-PROG-START
           IF VALID-STAT-PROG
              PERFORM DataSet1-PROG-Read-Next
           ELSE
              PERFORM DataSet1-PROG-INITREC
           END-IF
           PERFORM UNTIL NOT VALID-STAT-PROG OR
              (VALID-STAT-PROG AND
                 PROG-R OF PROG = 
                   TMP-Form1-PROG-RESTOREBUF)
              PERFORM DataSet1-PROG-Read-Next
           END-PERFORM
           .

       Form-CALL-Open-Routine.
           PERFORM Form-CALL-Scrn
           PERFORM Form-CALL-Proc
           .

       Form-CALL-Scrn.
           PERFORM Form-CALL-Create-Win
           PERFORM Form-CALL-Init-Value
           PERFORM Form-CALL-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form-CALL-DISPLAY
           .

       Form-CALL-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 11,20,
              SIZE 35,20,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Chiamata veloce",
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Form2-Event-Proc,
              HANDLE IS FORM-CALL-HANDLE,
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form-CALL UPON FORM-CALL-HANDLE
      * DISPLAY-COLUMNS settings
           .

       Form-CALL-PROC.
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, BeforeAccept>
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form-CALL
                 ON EXCEPTION
                    PERFORM Form-CALL-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY FORM-CALL-HANDLE
           INITIALIZE Key-Status
           .

       Form-CALL-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form-CALL-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form-CALL-Exit
                 END-IF
              WHEN Key-Status = 13
                 PERFORM Form2-Pb-1a-LinkTo
              WHEN Key-Status = 1000
                 PERFORM Form2-Pb-2-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form-CALL-CLEAR.
           PERFORM Form-CALL-INIT-VALUE
           PERFORM Form-CALL-DISPLAY
           .

       Form-CALL-DISPLAY.
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form-CALL UPON FORM-CALL-HANDLE
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, AfterDisplay>
      * <TOTEM:END>
           .

       Form-CALL-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form-CALL-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form-CALL-Init-Value.
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, SetDefault>
      * <TOTEM:END>
           PERFORM Form-CALL-FLD-TO-BUF
           .


       Form-CALL-ALLGRID-RESET.
           .

      * for Form's Validation
       Form-CALL-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form-CALL-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, AfterBufToFld>
      * <TOTEM:END>
           .

       Form-CALL-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form-CALL, FORM:Form-CALL, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form-CALL-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form-CALL-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form-CALL-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form-CALL-SHOW-MSG-ROUTINE
           .

       Form-CALL-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form-CALL-DISPLAY-MESSAGE
           .

       Form-CALL-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form-CALL-Save-Status.
           .             

       Form-CALL-Restore-Status.
           .


       Form1-Mn-1-Menu.
           PERFORM Form1-Mn-1-INIT
           THRU    Form1-Mn-1-EXIT.

       Form1-Mn-1-INIT.
           CALL "W$MENU" USING WMENU-NEW GIVING MENU-HANDLE
           IF MENU-HANDLE = ZERO
              GO TO Form1-Mn-1-Exit
           END-IF
           CALL "W$MENU" USING WMENU-NEW GIVING SUB-HANDLE-1
           IF SUB-HANDLE-1 = ZERO
               MOVE ZERO TO MENU-HANDLE
               GO TO Form1-Mn-1-EXIT
           END-IF
           CALL "W$MENU" USING WMENU-ADD, MENU-HANDLE, 0, 
            0, 
            "&File",
            1000,
            SUB-HANDLE-1
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "Uscita (Esc)",
            27
           CALL "W$MENU" USING WMENU-NEW GIVING SUB-HANDLE-1
           IF SUB-HANDLE-1 = ZERO
               MOVE ZERO TO MENU-HANDLE
               GO TO Form1-Mn-1-EXIT
           END-IF
           CALL "W$MENU" USING WMENU-ADD, MENU-HANDLE, 0, 
            0, 
            "E&segui",
            1001,
            SUB-HANDLE-1
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Blocco note (F2)",
            2
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Calcolatrice (F3)",
            3
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Word (F4)",
            4
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "E&xcel (F5)",
            5
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Dos (F6)",
            6
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Internet (F7)",
            7
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Posta (F8)",
            8
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, W-SEPARATOR
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Programma (F10)",
            10
           CALL "W$MENU" USING WMENU-NEW GIVING SUB-HANDLE-1
           IF SUB-HANDLE-1 = ZERO
               MOVE ZERO TO MENU-HANDLE
               GO TO Form1-Mn-1-EXIT
           END-IF
           CALL "W$MENU" USING WMENU-ADD, MENU-HANDLE, 0, 
            0, 
            "&?",
            1002,
            SUB-HANDLE-1
           CALL "W$MENU" USING WMENU-ADD, SUB-HANDLE-1, 0, 
            0, 
            "&Informazioni generali (F1)",
            1
           .

       Form1-Mn-1-EXIT.
           MOVE ZERO TO Return-Code.


       Form1-AfterProcedure.
           EVALUATE Control-Id
           When 7 PERFORM Form1-DaEf-1-AfterProcedure
           When 30 PERFORM Form1-DaEf-1-AfterProcedure
           END-EVALUATE
           .

       Form1-Event-Proc.
           .

       Form1-Menu-Tree-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Tv-Dblclick ALSO 3 ALSO
                    Form1-Handle 
              PERFORM Form1-Menu-Tree-Ev-Msg-Tv-Dblclick
           WHEN Msg-Tv-Selchanging ALSO 3 ALSO
                    Form1-Handle 
              PERFORM Form1-Menu-Tree-Ev-Msg-Tv-Selchanging
           END-EVALUATE
           .

       Form2-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       CALL-PROGRAM.
      * <TOTEM:PARA. CALL-PROGRAM>
      *    ANDREA: CHIAMATA AL PROGRAMMA DI GESTIONE UTENTI E MENU
           evaluate valore 
           when 78-GestioneUtenti
                set lk-bl-lettura to true
                move "Gest-Pwd"   to prog-id OF PROG
                perform I-O-BLOCCO
                if not lk-bl-in-uso
                   set lk-bl-scrittura to true
                   initialize lk-hnd-win
                   move "Gest-Pwd"   to prog-id OF PROG
                   perform I-O-BLOCCO
                   if sw-call = 1           
                      perform FORM-CALL-EXIT
                      move 0 to sw-call
                   end-if
                   move 3 to h-livello-abil
                   perform CHIAMATA-EFFETTIVA
      *             call thread "Gest-Pwd" using lk-blockpgm
      *                                          user-cod
      *                                          h-livello-abil
      *                  on overflow
      *                  display message "Il programma non esiste!"
      *                            title titolo1
      *                  set lk-bl-cancellazione to true
      *                  perform I-O-BLOCCO
      *             end-call
      *             cancel "Gest-Pwd"
                else 
                   move lk-hnd-win    to hnd-win-attiva
                   set i-o window     to hnd-win-attiva
                end-if
           when 78-GestioneMenu
                 set lk-bl-lettura to true
                 move "gestmenu"   to prog-id OF PROG
                 perform I-O-BLOCCO
                 if not lk-bl-in-uso
                    set lk-bl-scrittura to true
                    initialize lk-hnd-win
                    move "gestmenu"   to prog-id OF PROG
                    perform I-O-BLOCCO
                    if sw-call = 1           
                       perform FORM-CALL-EXIT
                       move 0 to sw-call
                    end-if
                    perform CHIAMATA-EFFETTIVA
      *              call thread "gestmenu" using lk-blockpgm 
      *                                           user-cod
      *                                           h-livello-abil
      *                   on overflow
      *                   display message "Il programma non esiste!"
      *                             title titolo1
      *                   set lk-bl-cancellazione to true
      *                   perform I-O-BLOCCO
      *              end-call
      *              cancel "gestmenu"
                 else 
                    move lk-hnd-win    to hnd-win-attiva
                    set i-o window     to hnd-win-attiva
                 end-if
           when other
                if prog-type OF PROG = 1 and h-livello-abil not = 0
                   if prog-acuthin-si of prog and versione-geslux = "V"
                      move spaces to user-path-acuthin
                      move link-user to user-cod
                      read user invalid continue end-read
                      if user-path-acuthin not = spaces
                         inspect user-path-acuthin replacing trailing 
           spaces by low-value
                         inspect prog-id of prog   replacing trailing 
           spaces by low-value
                         inspect link-user         replacing trailing 
           spaces by low-value
                         initialize cmd
                         string user-path-acuthin delimited low-value
                                " "               delimited size
                                prog-id of prog   delimited low-value
                                " "               delimited size
                                link-user         delimited low-value
                                " "               delimited size
                                h-livello-abil    delimited size
                           into cmd
                         end-string
                         call "C$SYSTEM" using cmd, 129                 
              
                         inspect user-path-acuthin replacing trailing 
           low-value by spaces
                         inspect prog-id of prog   replacing trailing 
           low-value by spaces
                         inspect link-user         replacing trailing 
           low-value by spaces
                      end-if                                         
                   else
                      set lk-bl-lettura to true
                      perform I-O-BLOCCO
                      if not lk-bl-in-uso
                         set lk-bl-scrittura to true
                         initialize lk-hnd-win
                         perform I-O-BLOCCO
                         if sw-call = 1
                            perform FORM-CALL-EXIT
                            move 0 to sw-call
                         end-if
                         perform CHIAMATA-EFFETTIVA
                         |Questa istruzione causava l'errore dell'errata
                         |chiamata dei pgm. Non serve a nulla risettare 
                         |hidden-data con una modify in quanto già settata
      *                   modify form1-menu-tree(event-data-2),
      *                          hidden-data = hidden-tree
                      else
                         move lk-hnd-win    to hnd-win-attiva
                         set i-o window     to hnd-win-attiva
                      end-if
                   end-if
                else
                   display message box "Funzione non abilitata!"
                           title titolo1
                end-if
           end-evaluate 
           .
      * <TOTEM:END>

       CARICA-TREE.
      * <TOTEM:PARA. CARICA-TREE>
           set CallProgramFlag to false.

           MODIFY Form1-Menu-Tree, RESET-LIST = 1.
           MOVE  "0000000000" TO PROG-MENU-LEVEL OF PROG
           START PROG KEY NOT < PROG-KEY OF PROG
             NOT INVALID
                 READ PROG NEXT WITH NO LOCK
                 MOVE 1 TO STACK-LEVELNO
                 MOVE PROG-MENU-LEVEL OF PROG TO HIDDEN-TREE
                 MODIFY Form1-Menu-Tree,
                        ITEM-TO-ADD = PROG-S-DESC OF PROG,
                        GIVING STACK-TREE-ID(STACK-LEVELNO),
                        HIDDEN-DATA = HIDDEN-TREE
                        ensure-visible STACK-TREE-ID(STACK-LEVELNO)
      *    Davide inizio 03/10/2001
      *    la move serve a volorizzare il primo Item del TreeView
      *    Fissato il problema del Crash su Windows95
                 MOVE STACK-TREE-ID(STACK-LEVELNO) TO CurrentItem
      *    Davide fine
           END-START
           PERFORM UNTIL  NOT VALID-STAT-PROG
              PERFORM VARYING W-LEVELNO FROM 1 BY 1 
                      UNTIL   PROG-LEVEL OF PROG (W-LEVELNO) = 0
                              OR W-LEVELNO > 5
                 CONTINUE
              END-PERFORM
              IF W-LEVELNO > 01  
                 IF W-LEVELNO NOT = STACK-LEVELNO
                    MOVE W-LEVELNO          TO STACK-LEVELNO      
                    MODIFY Form1-Menu-Tree, 
                           PARENT STACK-TREE-ID(STACK-LEVELNO - 1)
                 END-IF 
      *questo controllo serve per far aumentare il livello solo se viene
      *viene  aggiunta una cartella perchè se un utente non è abilitato all'uso
      *di un programma  il livello non deve aumentare
                 IF PROG-TYPE OF PROG = 0
                    |Le cartelle, se disabilitate, NON devono essere visualizzate
                    move prog-id of prog to up-prog-id
                    move link-user       to up-user-id
                    read user-pgm
                         invalid move 0 to sw-pass
                     not invalid
                         if up-livello-abil = 0
                            move 0 to sw-pass
                         else
                            perform CONTROLLA-FIGLI
                            |MOVE 1 TO SW-PASS
                            modify form1-menu-tree, 
                              item-to-add prog-s-desc of prog
                                   giving stack-tree-id(stack-levelno)
                         end-if
                    end-read
                    |||||
                 ELSE
                    MOVE PROG-ID OF PROG TO UP-PROG-ID
                    MOVE link-user       TO UP-USER-ID
                    READ user-pgm
                      INVALID 
      *questo è uno swith che serve per sapere se l'utente è abilitato all'uso del programma
                         MOVE 0 TO SW-PASS
                      NOT INVALID
                           IF UP-LIVELLO-ABIL = ZERO
                              MOVE 0 TO SW-PASS
                           ELSE                
                              PERFORM VAL-NUM-BITMAP
                              MOVE 1 TO SW-PASS
                              MODIFY Form1-Menu-Tree, 
                                    ITEM-TO-ADD = PROG-S-DESC OF PROG
                                    GIVING STACK-TREE-ID(STACK-LEVELNO)
                              modify Form1-Menu-Tree
                                     (STACK-TREE-ID(STACK-LEVELNO))
      *luciano
                              bitmap-number = num-bitmap
                              MOVE UP-LIVELLO-ABIL TO H-LIVELLO-ABIL
                           END-IF
                    END-READ 
                 end-if
                 IF SW-PASS = 1
                    if STACK-LEVELNO = 2
                       MODIFY Form1-Menu-Tree, 
                              ensure-visible 
           STACK-TREE-ID(STACK-LEVELNO)
                    end-if                 
                    MOVE PROG-MENU-LEVEL OF PROG TO H-PROG-MENU-LEVEL
                    MODIFY Form1-Menu-Tree, 
                         HIDDEN-DATA = HIDDEN-TREE                 
                 END-IF
              END-IF 
              READ PROG NEXT WITH NO LOCK
           END-PERFORM      
      *->->-> ANDREA : AGGIUNTA DELLA VOCE "UTILITY" COME ULTIMA NEL TREE-VIEW
      *->->-> CONTENENTE LA GESTIONE DEL MENU' E DELLE PASSWORD.  
           MODIFY Form1-Menu-Tree, 
                  PARENT = STACK-TREE-ID(1)
                  ITEM-TO-ADD = "Utility",
                  GIVING POINT-UTIL, 
      *luciano
                  BITMAP-NUMBER = 4
                  PARENT POINT-UTIL
                  ITEM-TO-ADD = "Gestione Utenti"
      *->->-> ANDREA: AGGIUNTA DELLA VOCE "GESTIONE MENù" SOLO PER L'UTENTE "BOSS".
      *luciano
                  BITMAP-NUMBER = 3
           inspect user-codi replacing trailing low-value by spaces.
           IF link-user = "BOSS" THEN
              MODIFY FORM1-MENU-TREE,
                     PARENT POINT-UTIL
                     ITEM-TO-ADD = "Gestione Menù"
      *luciano
                     BITMAP-NUMBER = 3
           END-IF.
      *->->-> FINE MODIFICA 
                   
           .
      * <TOTEM:END>

       CONTROLLA-FIGLI.
      * <TOTEM:PARA. CONTROLLA-FIGLI>
           move zero to SW-PASS.
           move PROG-R of prog  to PROG-R of prog1.

           set livello-5  to true
           if prog-level-5  of prog1 = zero
              set livello-4  to true
           end-if

           if prog-level-4  of prog1 = zero
              set livello-3  to true
           end-if

           if prog-level-3 of prog1 = zero
              set livello-2  to true
           end-if

           if prog-level-2 of prog1 = zero
              set livello-1  to true
           end-if
           evaluate true
           when livello-1
                move 2    to como-offset
           when livello-2
                move 4    to como-offset
           when livello-3
                move 6    to como-offset
           when livello-4
                move 8    to como-offset
           when livello-5
                move 10   to como-offset
           end-evaluate

           read PROG1
           perform until not valid-stat-prog
              read prog1 next with no lock
                 at end
                    exit perform
              end-read
              if prog-key of prog1 (1:como-offset)= prog-key of prog 
           (1:como-offset)
                 move prog-id of prog1 to up-prog-id
                 move link-user        to up-user-id
                 read user-pgm
                 if up-livello-abil not = zero
                    move 1 to sw-pass
                    exit perform
                 end-if
              else
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       I-O-BLOCCO.
      * <TOTEM:PARA. I-O-BLOCCO>
           MOVE PROG-ID OF PROG  TO LK-BL-PROG-ID.
           MOVE COMO-DATA        TO LK-BL-DATA.
           if lk-bl-ora = 0
              MOVE COMO-ORA         TO LK-BL-ORA
           end-if.
           CALL   "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM" 
           .
      * <TOTEM:END>

       SFOGLIA.
      * <TOTEM:PARA. SFOGLIA>
           move "user-pgm"   to como-file
           move link-user    to up-user-id.
           inquire ef-call value in up-prog-id.
           call "zoom-gt" using como-file, up-record
                          giving stato-zoom
           end-call.

           cancel "zoom-gt".
           if stato-zoom = 0
              modify ef-call, value up-prog-id
              move 5 to control-id
              move 4 to accept-control
              modify pb-cancel,  bitmap-number = 1
              modify pb-sfoglia, bitmap-number = 1
           end-if 
           .
      * <TOTEM:END>

       VAL-NUM-BITMAP.
      * <TOTEM:PARA. VAL-NUM-BITMAP>
           EVALUATE TRUE
           WHEN PROG-T-ELABORAZIONE OF PROG
                MOVE 3 TO num-bitmap
           WHEN PROG-T-ARCHIVIO OF PROG
                MOVE 6 TO NUM-BITMAP
           WHEN PROG-T-STAMPA OF PROG
                MOVE 5 TO NUM-BITMAP
           END-EVALUATE 
           .
      * <TOTEM:END>

       VISUALIZZA-MESSAGGI.
      * <TOTEM:PARA. VISUALIZZA-MESSAGGI>
           initialize messaggio

           set primo-passaggio  to true
      *    giro sui messaggi dell'utente
           move link-user  to como-utente
           perform CICLO-MESSAGGI-UTENTE

      *    giro sull'utente speciale "tutti".
           move "tutti"   to como-utente
           perform CICLO-MESSAGGI-UTENTE


           inspect messaggio replacing trailing low-value by space

           if messaggio = space 
              move zero   to v-messaggio
           else
              move 1      to v-messaggio
           end-if.

      *****     modify ef-messaggio, VALUE messaggio
      *****                          visible v-messaggio.

      ***---
       CICLO-MESSAGGI-UTENTE.
           move como-utente to uav-utente
           move low-value to uav-tipologia
           start useravv key not < uav-chiave
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read useravv next
                       at end
                          exit perform
                    end-read
                    if como-utente not = uav-utente 
                       exit perform
                    end-if
                    move uav-tipologia   to tav-codice
                    read ttipoavv
                       invalid
                          initialize tav-messaggio
                    end-read
                 

                    if primo-passaggio
                       set primo-passaggio  to false
                       move tav-messaggio   to messaggio
                    else
                       inspect messaggio 
                                   replacing trailing space by low-value
                       inspect tav-messaggio
                                   replacing trailing space by low-value
                       
                       string messaggio        delimited by low-value
                              x"0D0A"          delimited by size
                              78-delimitatore  delimited by size
                              x"0D0A"          delimited by size
                              tav-messaggio delimited by low-value
                              into messaggio
                    end-if
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy"      
           .
      * <TOTEM:END>

       CHIAMATA-EFFETTIVA.
      * <TOTEM:PARA. CHIAMATA-EFFETTIVA>
      *                call thread prog-id OF PROG using lk-blockpgm
      *                                                  user-cod
      *                                                  h-livello-abil 
      *                     on overflow
      *                     display message "Il programma non esiste!"
      *                               title Titolo1
      *                     set lk-bl-cancellazione to true
      *                     perform I-O-BLOCCO
      *                end-call
      *                cancel prog-id of PROG

           call thread "lanciopgm" using lk-blockpgm
                                         link-user
                                         h-livello-abil 
           end-call
           cancel prog-id of PROG 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       Form1-AfterInitData.
      * <TOTEM:PARA. Form1-AfterInitData>
           perform CARICA-TREE 
           .
      * <TOTEM:END>
       ACCETTA-DATA-ORA.
      * <TOTEM:PARA. ACCETTA-DATA-ORA>
           ACCEPT COMO-DATA  FROM CENTURY-DATE.
           ACCEPT COMO-ORA   FROM TIME 
           .
      * <TOTEM:END>
       Form1-Menu-Tree-Ev-Msg-Tv-Dblclick.
      * <TOTEM:PARA. Form1-Menu-Tree-Ev-Msg-Tv-Dblclick>
           set CallProgramFlag to true.
           move 0 to sw-call.
           set event-action to event-action-terminate.

           perform VISUALIZZA-MESSAGGI
           .
      * <TOTEM:END>
       Form1-Menu-Tree-Ev-Msg-Tv-Selchanging.
      * <TOTEM:PARA. Form1-Menu-Tree-Ev-Msg-Tv-Selchanging>
      *    GUARDO IL VALORE DELL'ELEMENTO DOVE VOGLIO PUNTARE 
      *    E ANTICIPO I SETTAGGI DELLA VARIABILE "TITOLO" CHE 
      *    SARà IL TITOLO DI UN PANNELLO DELLA STATUS-BAR
           inquire form1-menu-tree(event-data-2), item-text in valore.

           evaluate valore
           when 78-GestioneMenu   move "gestmenu" to titolo
           when 78-GestioneUtenti move "gest-pwd" to titolo
      *    SETTANDO A '0' LA VARIABILE H-LIVELLO-ABIL EVITO 
      *    CHE VENGA CAMBIATA LA BITMAP ALL'ELEMENTO UTILITY
           when 78-Utility        move 0 to h-livello-abil
                                  move 0 to prog-type OF PROG
                                  move "Sub-Servizi" to titolo
           end-evaluate.

      *    IN QUESTO MODO EVITO CHE LA BITMAP VENGA CAMBIATA 
      *    AGLI ELEMENTI GESTIONE UTENTI E GESTIONE MENU
           evaluate valore
           when 78-GestioneUtenti   
           when 78-GestioneMenu     continue
           when other
                if last-prog-type not = 1
                   if valore2 = 78-Utility
                      modify Form1-Menu-Tree(CurrentItem), 
                             bitmap-number = 4
                      move spaces to valore2
                   else
                      modify Form1-Menu-Tree(CurrentItem)
                             bitmap-number = 1
                   end-if
                end-if
                move event-data-2 to CurrentItem
                inquire Form1-Menu-Tree(event-data-2),
                        hidden-data in hidden-tree 
           end-evaluate.
           move h-prog-menu-level to prog-menu-level OF PROG. 

      *    ANDREA: LA VOCE UTILITY, NON FACENTE PARTE DEL FILE 
      *    PROG, NON VIENE TROVATA CON LA FORM1-CURR. TRAMITE
      *    QUESTO CONTROLLO NON VIENE ESEGUITA E NON ESCE IL
      *    MESSAGGIO D'ERRORE.
           if valore = 78-Utility        or
              valore = 78-GestioneUtenti or
              valore = 78-GestioneMenu
              move valore to prog-l-desc OF PROG ef-descr-buf
              display ef-descr
              modify Form1-St-1-Handle, panel-index = 2
                                        panel-text  = titolo
           else
      *       perform FORM1-CURR
              read prog no lock invalid continue end-read
              move prog-l-desc OF PROG to ef-descr-buf
              display ef-descr
              modify  Form1-St-1-Handle, panel-index = 2
                                         panel-text  = prog-id OF PROG

      *       PER RIPRISTINARE LA SITUAZIONE DEL TREE-WIEW
              move prog-r OF PROG to old-prog-r
           end-if.

           modify Form1-St-1-Handle, panel-index = 1
                                     panel-Text  = prog-s-desc OF PROG.
           move prog-type OF PROG to last-prog-type.
           if prog-type OF PROG = 1 
              if h-livello-abil > 0
                 perform VAL-NUM-BITMAP
                 modify Form1-Menu-Tree(CurrentItem)
      *luciano
                        bitmap-number = num-bitmap

                |Modifica (Andrea) per il tasto bitmap
                 move 1 to e-esegui
                 move BitmapEseguiEnabled to BitmapNumEsegui
                 modify Form1-Pb-Run-Prg, enabled = e-esegui,
                                          bitmap-number = 
           BitmapNumEsegui
                | FINE Modifica (Andrea)

      *****           modify Form1-St-1-Handle, panel-index = 3
      *****                                     panel-text  = "Abilitato"
              end-if
           else
      *LUCIANO
              if valore = 78-Utility
                 modify Form1-Menu-Tree(CurrentItem)
                        bitmap-number = 7
                 move 78-Utility to valore2
              else 
                 if valore2 = 78-Utility
                     modify Form1-Menu-Tree(CurrentItem)
                            bitmap-number = 4
                 else
                    modify Form1-Menu-Tree(CurrentItem)
                           bitmap-number = 2
                 end-if
              end-if                 
              |Modifica (Andrea) per il tasto bitmap
              move 0 to e-esegui
              move BitmapEseguiDisabled to BitmapNumEsegui
              modify Form1-Pb-Run-Prg, enabled = e-esegui,
                                       bitmap-number = BitmapNumEsegui
              | FINE Modifica (Andrea)

      *****        modify Form1-St-1-Handle, panel-index = 3
      *****                                  panel-style = 2
      *****                                  panel-text  = "Menu"
     
           end-if

      *    ANDREA: CAMBIAMENTO DELLA STATUS-BAR E ABILITAZIONE DEL PB
      *    PER LA SCELTA DEI DUE PROGRAMMI FUORI DALL'ARCHIVIO DI
      *    CARICAMENTO DEL TREE-VIEW.
           if valore = 78-GestioneUtenti or 
              valore = 78-GestioneMenu
              |Modifica (Andrea) per il tasto bitmap
              move 1 to e-esegui
              move BitmapEseguiEnabled to BitmapNumEsegui
              modify Form1-Pb-Run-Prg, enabled = e-esegui,
                                       bitmap-number = BitmapNumEsegui
              |FINE Modifica (Andrea)
      *****        modify Form1-St-1-Handle, panel-index = 3
      *****                                  panel-text  = "Abilitato"
           end-if.

           perform VISUALIZZA-MESSAGGI
           .
      * <TOTEM:END>
       Form1-Pb-1i-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1i-LinkTo>
           PERFORM Form-CALL-Open-Routine 
           .
      * <TOTEM:END>
       Form1-Pb-1j-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1j-LinkTo>
           call "win$version" using winversion-data.
           evaluate true
           when PLATFORM-WIN-31  MOVE "Windows 3.1" TO Win-Nome
           when PLATFORM-WIN-9X
                evaluate WIN-MAJOR-VERSION also WIN-MINOR-VERSION
                when 4 also 00  MOVE "Windows 95"  to Win-Nome
                when 4 also 10  MOVE "Windows 98"  to Win-Nome
                when 4 also 90  MOVE "Windows Me"  to Win-Nome
                end-evaluate
           when PLATFORM-WIN-NT  MOVE "Win NT, Win 2000, Xp, Vista, 7"  
                to Win-Nome
           end-evaluate.
           inspect Win-Nome replacing trailing spaces by low-value.
           accept SYSTEM-INFORMATION from system-info.
           accept Host-System from environment "DEFAULT_HOST"
           if Host-System = space
               move "Vision" to Host-System 
           end-if
           inspect Host-System replacing trailing spaces by low-value.
           DISPLAY MESSAGE BOX
              "Geslux Versione 2.7.1 del 13/10/2010" x"0A"
              "Argomenti principali: " x"0A"
              "- MAGAZZINO DI SCELTA PER CREAZIONE BOZZE NC" x"0A"
              "- STRALCIO SHI - LUBEX (11/11/2011)" x"0A"
              "- Magazzino GETRASPED (11/11/2011)" x"0A" 
              "- EVASIONE IMBALLO MINIMO (DA INSTALLARE)" x"0A"
              "- PRESE GIORNALIERE INTEGRATE CON QUANTITA' PRENOTATE (11
      -    "/11/2011)" x"0A"
              "- PESI UTF FISSI PER NON GDO (11/11/2011)"
              x"0A"
              "Sistema operativo: " Win-Nome x"0A"
              "Runtime Acucobol-GT Versione ",
              RUNTIME-MAJOR-VERSION "."
              RUNTIME-MINOR-VERSION "."
              RUNTIME-RELEASE x"0A"
              "File System: " Host-System x"0A"
              "Anno di login: " esercizio," (", esercizio-g2, ")" x"0A"
              "Utente: " link-user
               title "Informazioni...".
            
           .
      * <TOTEM:END>
       Form1-Pb-1h-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1h-LinkTo>
           MOVE 9008 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-Pb-1g-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1g-LinkTo>
           MOVE 9006 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-Pb-1f-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1f-LinkTo>
           MOVE 9005 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-Pb-1e-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1e-LinkTo>
           MOVE 9007 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-Pb-1d-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1d-LinkTo>
           MOVE 9004 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-Pb-1c-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1c-LinkTo>
           MOVE 9003 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-Pb-1b-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1b-LinkTo>
           MOVE 9002 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-Pb-1a-LinkTo.
      * <TOTEM:PARA. Form1-Pb-1a-LinkTo>
           MOVE 9001 TO MENU-PAR-CALL.
           CALL "RUNPROG" USING MENU-PAR-CALL 
           .
      * <TOTEM:END>
       Form1-DaEf-1-BeforeProcedure.
      * <TOTEM:PARA. Form1-DaEf-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Form1-DaEf-1-AfterProcedure.
      * <TOTEM:PARA. Form1-DaEf-1-AfterProcedure>
              INQUIRE ef-descr, VALUE IN PROG-L-DESC of prog
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-descr-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
              INQUIRE ef-messaggio, VALUE IN messaggio
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-messaggio-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR

           .
      * <TOTEM:END>

       Form2-Pb-1a-LinkTo.
      * <TOTEM:PARA. Form2-Pb-1a-LinkTo>
           set tutto-ok to true.
           inquire ef-call, value in valore.
           evaluate valore
           when "calendario" 
           when "loginscrn"  
           when "menu"
                set errori to true
           when "gest-pwd"
      *          call thread "gest-pwd" using lk-blockpgm,
      *                                       user-cod,
      *                                       h-livello-abil
      *          cancel "gest-pwd"
      *          set errori to true
                move 78-GestioneUtenti   to valore

           when "gestmenu"
                inspect user-codi replacing trailing low-value by spaces
                if link-user = "BOSS" 
                   move 3 to h-livello-abil
                   move 78-GestioneMenu to valore
      *             call thread "gestmenu" using lk-blockpgm,
      *                                          user-cod,
      *                                          h-livello-abil
      *             cancel "gestmenu"
      *             perform FORM-CALL-EXIT
                end-if
      *          set errori to true
           when "admin"
                inspect user-codi replacing trailing low-value by spaces
                if link-user = "BOSS" 
                   move 3 to h-livello-abil
                   call thread "admin" using lk-blockpgm,
                                             link-user,
                                             h-livello-abil
                   cancel "admin"
      *             move "admin" to LK-BL-PROG-ID
      *             perform CHIAMATA-EFFETTIVA
                   perform FORM-CALL-EXIT
                end-if
                set errori to true
           when other
                move valore   to prog-id OF PROG
                read prog key is prog-id OF PROG
                     invalid
                     set errori to true
                     display message box "il programma non esiste!"
                             title titolo1
                end-read  
           end-evaluate.

           if tutto-ok                 
              move link-user to up-user-id
              move valore    to up-prog-id
              read user-pgm key is up-chiave invalid continue end-read

              move up-livello-abil to h-livello-abil
              set CallProgramFlag to true
              if CallProgramFlag
                 set CallProgramFlag to false  
                 move 1 to sw-call
                 perform CALL-PROGRAM
              end-if
              initialize callp
      *          mi rimetto nella situazione del tree-wiew
              move old-prog-r    to prog-r OF PROG
              perform FORM-CALL-EXIT
           else
      *          mi rimetto nella situazione del tree-wiew
              move old-prog-r    to prog-r OF PROG
           end-if 
           .
      * <TOTEM:END>
       EF-CALL-BeforeProcedure.
      * <TOTEM:PARA. EF-CALL-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       EF-CALL-AfterProcedure.
      * <TOTEM:PARA. EF-CALL-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       Form2-Pb-2-LinkTo.
      * <TOTEM:PARA. Form2-Pb-2-LinkTo>
           PERFORM SFOGLIA 
           .
      * <TOTEM:END>
       pb-sfoglia-BeforeProcedure.
      * <TOTEM:PARA. pb-sfoglia-BeforeProcedure>
           modify pb-sfoglia, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-sfoglia-AfterProcedure.
      * <TOTEM:PARA. pb-sfoglia-AfterProcedure>
           modify pb-sfoglia, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-cancel-BeforeProcedure.
      * <TOTEM:PARA. pb-cancel-BeforeProcedure>
           modify pb-cancel, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-cancel-AfterProcedure.
      * <TOTEM:PARA. pb-cancel-AfterProcedure>
           modify pb-cancel, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-ok-BeforeProcedure.
      * <TOTEM:PARA. pb-ok-BeforeProcedure>
           modify pb-ok, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-ok-AfterProcedure.
      * <TOTEM:PARA. pb-ok-AfterProcedure>
           modify pb-ok, bitmap-number = 1 
           .
      * <TOTEM:END>
       menu-Ev-After-Program.
      * <TOTEM:PARA. menu-Ev-After-Program>
           set pgme-azzera-sessione   to true
           call "gpgmexe" using gpgmexe-linkage 
           .
      * <TOTEM:END>
       menu-Ev-Before-Program.
      * <TOTEM:PARA. menu-Ev-Before-Program>
           accept versione-geslux from environment "VERSIONE_GESLUX".
           accept storico         from environment "STORICO".
           accept esercizio-x     from environment "ESERCIZIO".
           accept esercizio-g2    from environment "ESERCIZIO-G2".

           if storico = "S"
              move "STORICO" to lab-anno-buf 
              move 65576 to WindowColor
           else
              move esercizio-x to esercizio
              move 65793 to WindowColor
              string "Esercizio " delimited size
                     esercizio    delimited size
                     " ("         delimited size
                     esercizio-G2 delimited size
                     ")"          delimited size
                     into lab-anno-buf
              end-string
           end-if                    
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

