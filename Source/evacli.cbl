      *{TOTEM}PRG-COMMENT
      * evacli.Cbl
      * evacli.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          evacli.
       AUTHOR.              andre.
       DATE-WRITTEN.        mercoledì 5 gennaio 2022 10:56:31.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:evacli, INIT:evacli, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tparameva.sl".
           COPY "tmagaz.sl".
           COPY "clienti.sl".
           COPY "destini.sl".
           COPY "mrordini.sl".
           COPY "mtordini.sl".
           COPY "tmp-k-mtordini.sl".
           COPY "lockfile.sl".
           COPY "rordini.sl".
           COPY "tordini.sl".
           COPY "promoeva.sl".
           COPY "agenti.sl".
           COPY "tcaumag.sl".
           COPY "tgrupgdo.sl".
           COPY "articoli.sl".
           COPY "tmp-k-mrordini.sl".
           COPY "timballi.sl".
           COPY "timbalqta.sl".
           COPY "tpromo.sl".
           COPY "progmag.sl".
           COPY "tmp-qta-eva.sl".
           COPY "tmp-qta-pren.sl".
           COPY "blister.sl".
           COPY "tmp-group-eva.sl".
           COPY "tagli.sl".
           COPY "tscorte.sl".
           COPY "ttipocli.sl".
           COPY "recapiti.sl".
           COPY "tparamge.sl".
           COPY "timposte.sl".
           COPY "tmp-tevacli.sl".
           COPY "param.sl".
           COPY "lineseq.sl".
           COPY "multigest.sl".
           COPY "rpromo.sl".
           COPY "tmarche.sl".
           COPY "tregioni.sl".
           COPY "tprov.sl".
           COPY "paramSHI.sl".
           COPY "tmp-eva-riep.sl".
           COPY "macrobatch.sl".
           COPY "log-macrobatch.sl".
           COPY "usr-tel.sl".
           COPY "tsetinvio.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tparameva.fd".
           COPY "tmagaz.fd".
           COPY "clienti.fd".
           COPY "destini.fd".
           COPY "mrordini.fd".
           COPY "mtordini.fd".
           COPY "tmp-k-mtordini.fd".
           COPY "lockfile.fd".
           COPY "rordini.fd".
           COPY "tordini.fd".
           COPY "promoeva.fd".
           COPY "agenti.fd".
           COPY "tcaumag.fd".
           COPY "tgrupgdo.fd".
           COPY "articoli.fd".
           COPY "tmp-k-mrordini.fd".
           COPY "timballi.fd".
           COPY "timbalqta.fd".
           COPY "tpromo.fd".
           COPY "progmag.fd".
           COPY "tmp-qta-eva.fd".
           COPY "tmp-qta-pren.fd".
           COPY "blister.fd".
           COPY "tmp-group-eva.fd".
           COPY "tagli.fd".
           COPY "tscorte.fd".
           COPY "ttipocli.fd".
           COPY "recapiti.fd".
           COPY "tparamge.fd".
           COPY "timposte.fd".
           COPY "tmp-tevacli.fd".
           COPY "param.fd".
           COPY "lineseq.fd".
           COPY "multigest.fd".
           COPY "rpromo.fd".
           COPY "tmarche.fd".
           COPY "tregioni.fd".
           COPY "tprov.fd".
           COPY "paramSHI.fd".
           COPY "tmp-eva-riep.fd".
           COPY "macrobatch.fd".
           COPY "log-macrobatch.fd".
           COPY "usr-tel.fd".
           COPY "tsetinvio.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
           COPY  "AGGIORNA-STATO-MASTER.DEF".
           COPY  "LINK-WPROGMAG.DEF".
           COPY  "LINK-GESLOCK.DEF".
           COPY  "LINK-STORDCP.DEF".
           COPY  "LINK-NAMBAR.DEF".
           COPY  "LINK-TPREV-P.DEF".
           COPY  "TROVA-PARAMETRO.DEF".
           COPY  "VERSIONE-EVASIONE.DEF".
           COPY  "LINK-GPGMEXE.DEF".
           COPY  "MAIL.DEF".
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
      *
      *
       77 GiacenzaMAG      PIC  s9(8).
       77 como-riga        PIC  9(3).
       77 tot-bozze        PIC  9(3).
       77 max-peso         PIC  9(18)
                  VALUE IS 0.
       77 tot-bozze-x      PIC  9(3).
       77 idx-mag-gen      PIC  9(3)
                  VALUE IS 0.
       77 idx-gen          PIC  9(3)
                  VALUE IS 0.
       01 FILLER           PIC  9.
           88 evasioni-generate VALUE IS 1    WHEN SET TO FALSE  0. 
       01 tab-tipologie.
           05 el-tipologia
                      OCCURS 200 TIMES
                      INDEXED  idx-tipologie.
               10 el-tcl-codice    PIC  xx.
               10 el-sel           PIC  9.
       01 como-chiave.
           05 como-anno        PIC  9(4).
           05 como-numero      PIC  9(8).
       01 s-chiave.
           05 s-anno           PIC  9(4).
           05 s-numero         PIC  9(8).
       01 FILLER           PIC  9.
           88 trovato-prog VALUE IS 1    WHEN SET TO FALSE  0. 
       01 password         PIC  9.
           88 AccessConfirmed VALUE IS 1. 
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       01 FILLER           PIC  9.
           88 PrimaVolta VALUE IS 1    WHEN SET TO FALSE  0. 
       77 save-ritira      PIC  9.
       77 r-output         PIC  x(25).
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 FiltraRecord VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 EvasioneIntera VALUE IS 1    WHEN SET TO FALSE  0. 
       77 como-riga-riep   PIC  9(5).
       77 como-x           PIC  x.
       77 tot-righe-riep   PIC  9(5).
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 RichiamoBatch VALUE IS 1    WHEN SET TO FALSE  0. 
       77 da-evadere       PIC  9(8).
       77 save-gg-cons-max PIC  9(3).
       77 evades           PIC  x(9).
       77 mag-idx          PIC  9(3).
       78 78-ID-ef-mag VALUE IS 6001. 
       78 78-ID-ef-eva VALUE IS 6002. 
       77 tot-ordini       PIC  9(8).
       77 resto            PIC  9(8).
       77 righe-ok         PIC  9(5).
       77 save-evasione    PIC  9(3).
       77 save-magazzino   PIC  x(3).
       77 save-magazzino-next          PIC  x(3).
       77 ora-stampa       PIC  9(8).
       77 data-stampa      PIC  9(8).
       01 r-inizio.
           05 FILLER           PIC  xx
                      VALUE IS " [".
           05 r-data.
               10 r-gg PIC  xx.
               10 FILLER           PIC  x
                          VALUE IS "/".
               10 r-mm PIC  xx.
               10 FILLER           PIC  x
                          VALUE IS "/".
               10 r-aa PIC  xx.
           05 FILLER           PIC  x(5)
                      VALUE IS "] - [".
           05 r-ora.
               10 r-hh PIC  xx.
               10 FILLER           PIC  x
                          VALUE IS X"22".
               10 r-min            PIC  xx.
               10 FILLER           PIC  x
                          VALUE IS "'".
               10 r-sec            PIC  xx.
           05 FILLER           PIC  xx
                      VALUE IS "] ".
       01 save-depositi.
           05 save-el-deposito PIC  x(3)
                      OCCURS 25 TIMES.
           05 save-el-gg-cons-max          PIC  9(3)
                      OCCURS 25 TIMES.
       01 save-chiave-master-interno.
           05 save-anno-master-interno     PIC  9(4).
           05 save-numero-master-interno   PIC  9(8).
       77 righe-blister    PIC  9(5).
       77 tot-righe-evadibili          PIC  9(8).
       77 utf-riga         PIC  9(5)v999.
       77 num-componenti   PIC  9(5).
       77 num-imballi      PIC  9(5).
       77 num-imballi-tot  PIC  9(5).
       77 tot-idx          PIC  9(5).
       77 idx-mag          PIC  9(5).
       77 num-cicli        PIC  9(5).
       77 lab-mag-buf      PIC  X(100).
       77 min-imb-evadibile            PIC  9(5).
       77 id-evasione      PIC  9(8).
       77 save-giacenza-assoluta       PIC  9(8).
       77 como-qta-e       PIC  9(8).
       77 tot-idx-m        PIC  9(4)
                  VALUE IS 0.
       77 tot-idx-tipocli  PIC  9(4)
                  VALUE IS 0.
       77 tor-numero-x     PIC  x(8).
       77 blister-id       PIC  9(5).
       77 numero-ed        PIC  z(8).
       77 tot-peso         PIC  9(9)v999.
       77 tot-utf          PIC  9(9)v999.
       77 peso-riga        PIC  9(9)v999.
       77 tot-peso-reale   PIC  9(9)v999.
       77 tot-utf-reale    PIC  9(9)v999.
       77 numero-edit      PIC  z(8).
       01 save-prg-chiave.
           05 save-prg-cod-articolo        PIC  9(6).
           05 save-prg-cod-magazzino       PIC  X(3).
           05 save-prg-tipo-imballo        PIC  X(3).
           05 save-prg-peso    PIC  9(5)V9(3).
       77 REGALO-BMP
                  USAGE IS HANDLE OF BITMAP.
       77 REGALO2-BMP
                  USAGE IS HANDLE OF BITMAP.
       77 BLOCCATO-EVA-BMP
                  USAGE IS HANDLE OF BITMAP.
       01 FILLER           PIC  9.
           88 GeneraEvasioni VALUE IS 1    WHEN SET TO FALSE  0. 
       77 BLOCCATO-EVA2-BMP
                  USAGE IS HANDLE OF BITMAP.
       77 PESO-BMP
                  USAGE IS HANDLE OF BITMAP.
       77 PESO2-BMP
                  USAGE IS HANDLE OF BITMAP.
       77 save-id-evasione PIC  9(8).
       77 primo-numero     PIC  9(8)
                  VALUE IS 0.
       77 ultimo-numero    PIC  9(8)
                  VALUE IS 0.
       01 tab-tipocli.
           05 el-tipocli       PIC  xx
                      OCCURS 9999 TIMES
                      INDEXED  idx-tipocli.
       01 tab-master.
           05 el-chiave-m
                      OCCURS 9999 TIMES
                      INDEXED  idx-m.
               10 el-anno-m        PIC  9(4).
               10 el-numero-m      PIC  9(8).
       78 titolo VALUE IS "GESLUX - Evasione Ordini Clienti". 
       78 78-evacli VALUE IS "evacli". 
       01 FILLER           PIC  9.
           88 contatore-lock VALUE IS 1    WHEN SET TO FALSE  0. 
       01 tipo-ope         PIC  x.
           88 modifica VALUE IS "M". 
           88 ingresso VALUE IS "I". 
       01 tab-blister.
           05 riga-blister
                      OCCURS 50 TIMES.
               10 el-bli-chiave-master.
                   15 el-bli-chiave-testa.
                       20 el-bli-chiave-anno           PIC  9(4).
                       20 el-bli-chiave-numero         PIC  9(8).
                   15 el-bli-chiave-riga           PIC  9(5).
               10 el-bli-qta-imb   PIC  9(8).
               10 el-bli-ordinata  PIC  9(8).
               10 el-bli-evadibile PIC  9(8).
               10 el-bli-imb-evadibile         PIC  9(8).
       01 tab-blister-peso-utf.
           05 el-peso-utf-blister-ok       PIC  9(4)v999
                      OCCURS 5000 TIMES.
           05 el-peso-peso-blister-ok      PIC  9(4)v999
                      OCCURS 5000 TIMES.
       01 FILLER           PIC  9.
           88 ValutaBlister VALUE IS 1    WHEN SET TO FALSE  0. 
       01 tab-articoli.
           05 el-articolo      PIC  9(6)
                      OCCURS 9999 TIMES
                      INDEXED  idx-art.
       01 gd1-rec.
           05 col1-anno        PIC  9(4).
           05 col1-numero      PIC  z(8).
           05 col1-cliente     PIC  x(40).
           05 col1-destino     PIC  x(40).
           05 col1-num-cli     PIC  x(50).
           05 col1-data        PIC  99/99/9999.
           05 col1-agente      PIC  x(40).
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       01 GdoInUsoFlag     PIC  x.
           88 GdoInUso VALUE IS "S". 
           88 GdoNonInUso VALUE IS " ". 
       77 tot-articoli     PIC  9(5).
       77 save-qta-imballi PIC  9(4).
       77 giac-utile       PIC  s9(8).
       77 como-giacenza    PIC  s9(8).
       77 colore           PIC  9(5).
       77 save-prog        PIC  9(8).
       01 save-chiave-testa.
           05 save-anno        PIC  9(4).
           05 save-numero      PIC  9(8).
       01 gd3-rec.
           05 col3-anno        PIC  9(4).
           05 col3-numero      PIC  z(8).
           05 col3-cliente     PIC  x(40).
           05 col3-destino     PIC  x(40).
           05 col3-articolo    PIC  z(6).
           05 col3-descr       PIC  x(60).
           05 col3-imb         PIC  x(3).
           05 col3-peso        PIC  zz.zz9,999.
           05 col3-qta         PIC  zzz.zz9.
           05 col3-oma         PIC  x.
           05 col3-bloc        PIC  x.
           05 col3-bloc-peso   PIC  x.
       01 rec-art.
           05 col-cod          PIC  z(6).
           05 col-des          PIC  x(50).
       77 counter          PIC  9(10).
       77 counter2         PIC  9(10).
      *(( XFD NAME = mag-principale_1_2 ))
       01 save-mag-blocco-24000        PIC  X(1).
           88 save-mag-blocco-24000-si VALUE IS "S". 
           88 save-mag-blocco-24000-no VALUE IS "N", " ". 
       01 gd2-rec.
           05 col2-articolo    PIC  z(6).
           05 col2-descrizione PIC  x(50).
           05 col2-imb         PIC  x(3).
           05 col2-peso        PIC  zz.zz9,999.
           05 col2-qta-o       PIC  zzz.zz9.
           05 col2-qta-e       PIC  zzz.zz9.
           05 col2-qta         PIC  zzz.zz9.
       77 counter-edit     PIC  z.zzz.zzz.zz9.
       01 g2-hidden.
           05 hid-chiave.
               10 hid-anno         PIC  9(4).
               10 hid-numero       PIC  9(8).
               10 hid-riga         PIC  9(5).
           05 hid-prg-chiave.
               15 hid-art          PIC  9(6).
               15 hid-mag          PIC  x(3).
               15 hid-imb          PIC  x(3).
               15 hid-peso         PIC  9(5)V9(3).
           05 hid-blister      PIC  9.
               88 hid-si-blister VALUE IS 1    WHEN SET TO FALSE  0. 
           05 hid-qta-imballi  PIC  9(4).
           05 hid-prog         PIC  9(9).
           05 hid-omaggio      PIC  X.
               88 hid-si-omaggio VALUE IS "S". 
               88 hid-no-omaggio VALUE IS "N". 
           05 hid-bloccato     PIC  X.
               88 hid-si-bloccato VALUE IS "S". 
               88 hid-no-bloccato VALUE IS "N". 
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 scr-fine-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 data-oggi        PIC  9(8).
       77 data-max-scadenza            PIC  9(8).
       77 tot-master       PIC  9(5).
       77 como-cli-codice  PIC  9(5).
       77 como-gdo-codice  PIC  x(5).
       77 como-age-codice  PIC  9(5).
       01 FILLER           PIC  9.
           88 record-ok VALUE IS 1    WHEN SET TO FALSE  0. 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       77 lab-data-a-buf   PIC  99/99/9999.
       77 lab-data-da-buf  PIC  99/99/9999.
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 STATUS-tparameva PIC  X(2).
           88 Valid-STATUS-tparameva VALUE IS "00" THRU "09". 
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 evadi-tutto-bmp  PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 chk-tutto-buf    PIC  9
                  VALUE IS 0.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 6002.
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 STATUS-destini   PIC  X(2).
           88 Valid-STATUS-destini VALUE IS "00" THRU "09". 
       77 STATUS-mrordini  PIC  X(2).
           88 Valid-STATUS-mrordini VALUE IS "00" THRU "09". 
       77 STATUS-mtordini  PIC  X(2).
           88 Valid-STATUS-mtordini VALUE IS "00" THRU "09". 
       77 path-tmp-k-mtordini          PIC  X(256).
       77 STATUS-tmp-k-mtordini        PIC  X(2).
           88 Valid-STATUS-tmp-k-mtordini VALUE IS "00" THRU "09". 
       77 STATUS-lockfile  PIC  X(2).
           88 Valid-STATUS-lockfile VALUE IS "00" THRU "09". 
       77 STATUS-rordini   PIC  X(2).
           88 Valid-STATUS-rordini VALUE IS "00" THRU "09". 
       77 STATUS-tordini   PIC  X(2).
           88 Valid-STATUS-tordini VALUE IS "00" THRU "09". 
       77 STATUS-promoeva  PIC  X(2).
           88 Valid-STATUS-promoeva VALUE IS "00" THRU "09". 
       77 Verdana8-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 g3-hidden.
           05 hid-colore       PIC  9(5).
           05 hid-id-evasione  PIC  9(8).
           05 hid-chiave-m.
               10 hid-chiave-testa.
                   15 hid-anno-m       PIC  9(4).
                   15 hid-numero-m     PIC  9(8).
               10 hid-riga-m       PIC  9(5).
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 ef-cli-buf       PIC  9(5).
       77 ef-age-buf       PIC  9(5).
       77 APPLICA-BMP      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 lab-cli-buf      PIC  x(50)
                  VALUE IS "<< HELP >> 0 = TUTTI I CLIENTI".
       77 lab-age-buf      PIC  x(50)
                  VALUE IS "<< HELP >> 0 = TUTTI CLI AGENTI".
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 lab-data-buf     PIC  99/99/9999.
       77 DISTINTEB-BMP    PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 lab-giac-buf     PIC  ---.---.--9.
       77 lab-ord-buf      PIC  zz.zzz.zz9.
       77 lab-evadi-dal-buf            PIC  99/99/9999.
       77 Form1-Tb-1-Handleaa
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-agenti    PIC  X(2).
           88 Valid-STATUS-agenti VALUE IS "00" THRU "09". 
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 scr-elab-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Screen3-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 scr-elab-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana14I-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 save-cod-pagamento           PIC  x(3).
       77 save-cliente     PIC  9(5).
       77 save-destino     PIC  9(5).
       77 STATUS-tgrupgdo  PIC  X(2).
           88 Valid-STATUS-tgrupgdo VALUE IS "00" THRU "09". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 ef-gdo-buf       PIC  x(5).
       77 lab-gdo-buf      PIC  x(50)
                  VALUE IS "<< HELP >> 0 = TUTTI I GRUPPI".
       77 path-tmp-k-mrordini          PIC  X(256).
       77 giac-assoluta    PIC  9(8).
       77 STATUS-tmp-k-mrordini        PIC  X(2).
           88 Valid-STATUS-tmp-k-mrordini VALUE IS "00" THRU "09". 
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-tpromo    PIC  X(2).
           88 Valid-STATUS-tpromo VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 path-tmp-qta-eva PIC  X(256).
       77 STATUS-tmp-qta-eva           PIC  X(2).
           88 Valid-STATUS-tmp-qta-eva VALUE IS "00" THRU "09". 
       77 path-tmp-qta-pren            PIC  X(256).
       77 STATUS-tmp-qta-pren          PIC  X(2).
           88 Valid-STATUS-tmp-qta-pren VALUE IS "00" THRU "09". 
       77 lab-pren-buf     PIC  zz.zzz.zz9.
       77 STATUS-blister   PIC  X(2).
           88 Valid-STATUS-blister VALUE IS "00" THRU "09". 
       77 path-tmp-tevacli PIC  X(256).
       77 STATUS-tmp-tevacli           PIC  X(2).
           88 Valid-STATUS-tmp-tevacli VALUE IS "00" THRU "09". 
       77 path-tmp-group-eva           PIC  X(256).
       77 STATUS-tmp-group-eva         PIC  X(2).
           88 Valid-STATUS-tmp-group-eva VALUE IS "00" THRU "09". 
       77 STATUS-recapiti  PIC  X(2).
           88 Valid-STATUS-recapiti VALUE IS "00" THRU "09". 
       77 primo-numero-z   PIC  Z(8).
       77 ultimo-numero-z  PIC  Z(8).
       77 tot-ordini-z     PIC  ZZ.ZZZ.ZZ9.
       77 STATUS-tagli     PIC  X(2).
           88 Valid-STATUS-tagli VALUE IS "00" THRU "09". 
       77 STATUS-tscorte   PIC  X(2).
           88 Valid-STATUS-tscorte VALUE IS "00" THRU "09". 
       77 STATUS-ttipocli  PIC  X(2).
           88 Valid-STATUS-ttipocli VALUE IS "00" THRU "09". 
       77 scr-elab-tprev-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 lab-promo-buf    PIC  z(15).
       77 lab-data-cons-buf            PIC  99/99/9999.
       77 lab-data-ord-buf PIC  99/99/9999.
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-evaclides PIC  X(2).
           88 Valid-STATUS-evaclides VALUE IS "00" THRU "09". 
       77 evadi_normale-bmp            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 evadi_immediato-bmp          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 tipo-evasione    PIC  S9(1)
                  VALUE IS 0.
       77 prossimo-bmp     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 lab-mag-next-buf PIC  X(100).
       77 v-next           PIC  9
                  VALUE IS 1.
       77 mess PIC  x.
       77 lab-data-scad-buf            PIC  99/99/9999.
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 STATUS-multigest PIC  X(2).
           88 Valid-STATUS-multigest VALUE IS "00" THRU "09". 
       77 STATUS-rpromo    PIC  X(2).
           88 Valid-STATUS-rpromo VALUE IS "00" THRU "09". 
       77 STATUS-tprov     PIC  X(2).
           88 Valid-STATUS-tprov VALUE IS "00" THRU "09". 
       77 STATUS-tregioni  PIC  X(2).
           88 Valid-STATUS-tregioni VALUE IS "00" THRU "09". 
       77 STATUS-paramshi  PIC  X(2).
           88 Valid-STATUS-paramshi VALUE IS "00" THRU "09". 
       77 lab-tot-bozze-buf            PIC  x(50).
       77 path-tmp-riep    PIC  X(32).
       77 STATUS-tmp-eva-riep          PIC  X(2).
           88 Valid-STATUS-tmp-eva-riep VALUE IS "00" THRU "09". 
       01 gd-riep-rec.
           05 col-mag          PIC  X(50).
           05 col-colli        PIC  zzz.zzz.zz9.
           05 col-quintali     PIC  zzz.zzz.zz9,99999.
           05 col-codici       PIC  zzz.zzz.zz9.
       77 como-codici      PIC  9(5).
       77 como-colli       PIC  9(5).
       77 como-peso        PIC  9(10)v99999.
       77 como-qta         PIC  9(5).
       77 s-mag            PIC  x(3).
       77 path-tmp-eva-riep            PIC  x(200).
       77 STATUS-macrobatch            PIC  X(2).
           88 Valid-STATUS-macrobatch VALUE IS "00" THRU "09". 
       77 path-log-macrobatch          PIC  X(256).
       77 STATUS-log-macrobatch        PIC  X(2).
           88 Valid-STATUS-log-macrobatch VALUE IS "00" THRU "09". 
       77 video-on         PIC  9
                  VALUE IS 0.
       01 gd-tipocli-rec.
           05 col-tcl-codice   PIC  X(2).
           05 col-tcl-descrizione          PIC  X(50).
       77 SEL-TUTTO-BMP    PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 DESEL-TUTTO-BMP  PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 hid-col-sel      PIC  9
                  VALUE IS 0.
       77 status-usr-tel   PIC  X(2).
           88 Valid-status-usr-tel VALUE IS "00" THRU "09". 
       77 STATUS-tsetinvio PIC  X(2).
           88 Valid-STATUS-tsetinvio VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-Screen2-FLAG-REFRESH PIC  9.
          88 Screen2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Screen2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Screen2-tmagaz-RESTOREBUF  PIC X(212).
       77 TMP-Screen2-KEYIS  PIC 9(3) VALUE 1.
       77 Screen2-MULKEY-TMPBUF   PIC X(212).
       77 STATUS-scr-elab-FLAG-REFRESH PIC  9.
          88 scr-elab-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-elab-evasioni-FLAG-REFRESH PIC  9.
          88 scr-elab-evasioni-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-fine-FLAG-REFRESH PIC  9.
          88 scr-fine-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-elab-tprev-FLAG-REFRESH PIC  9.
          88 scr-elab-tprev-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tparameva-BUF     PIC X(810).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-destini-BUF     PIC X(3676).
       77 TMP-DataSet1-mrordini-BUF     PIC X(891).
       77 TMP-DataSet1-mtordini-BUF     PIC X(2122).
       77 TMP-DataSet1-tmp-k-mtordini-BUF     PIC X(31).
       77 TMP-DataSet1-lockfile-BUF     PIC X(183).
       77 TMP-DataSet1-rordini-BUF     PIC X(667).
       77 TMP-DataSet1-tordini-BUF     PIC X(3938).
       77 TMP-DataSet1-promoeva-BUF     PIC X(817).
       77 TMP-DataSet1-agenti-BUF     PIC X(1233).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-tgrupgdo-BUF     PIC X(1206).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-tmp-k-mrordini-BUF     PIC X(116).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-tpromo-BUF     PIC X(263).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-tmp-qta-eva-BUF     PIC X(30).
       77 TMP-DataSet1-tmp-qta-pren-BUF     PIC X(37).
       77 TMP-DataSet1-blister-BUF     PIC X(2967).
       77 TMP-DataSet1-tmp-group-eva-BUF     PIC X(106).
       77 TMP-DataSet1-tagli-BUF     PIC X(198).
       77 TMP-DataSet1-tscorte-BUF     PIC X(205).
       77 TMP-DataSet1-ttipocli-BUF     PIC X(889).
       77 TMP-DataSet1-recapiti-BUF     PIC X(328).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-timposte-BUF     PIC X(717).
       77 TMP-DataSet1-tmp-tevacli-BUF     PIC X(32766).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-lineseq-BUF     PIC X(1000).
       77 TMP-DataSet1-multigest-BUF     PIC X(3).
       77 TMP-DataSet1-rpromo-BUF     PIC X(209).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-tregioni-BUF     PIC X(190).
       77 TMP-DataSet1-tprov-BUF     PIC X(192).
       77 TMP-DataSet1-paramSHI-BUF     PIC X(9574).
       77 TMP-DataSet1-tmp-eva-riep-BUF     PIC X(39).
       77 TMP-DataSet1-macrobatch-BUF     PIC X(9848).
       77 TMP-DataSet1-log-macrobatch-BUF     PIC X(1000).
       77 TMP-DataSet1-usr-tel-BUF     PIC X(1362).
       77 TMP-DataSet1-tsetinvio-BUF     PIC X(1023).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tparameva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparameva-LOCK  VALUE "Y".
       77 DataSet1-tparameva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparameva-KEY-Asc  VALUE "A".
          88 DataSet1-tparameva-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tmagaz-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY1-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY1-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-destini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destini-LOCK  VALUE "Y".
       77 DataSet1-destini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destini-KEY-Asc  VALUE "A".
          88 DataSet1-destini-KEY-Desc VALUE "D".
       77 DataSet1-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mrordini-LOCK  VALUE "Y".
       77 DataSet1-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-mtordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mtordini-LOCK  VALUE "Y".
       77 DataSet1-mtordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-mtordini-KEY-Asc  VALUE "A".
          88 DataSet1-mtordini-KEY-Desc VALUE "D".
       77 DataSet1-tmp-k-mtordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-k-mtordini-LOCK  VALUE "Y".
       77 DataSet1-tmp-k-mtordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-k-mtordini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-k-mtordini-KEY-Desc VALUE "D".
       77 DataSet1-lockfile-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lockfile-LOCK  VALUE "Y".
       77 DataSet1-lockfile-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lockfile-KEY-Asc  VALUE "A".
          88 DataSet1-lockfile-KEY-Desc VALUE "D".
       77 DataSet1-rordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordini-LOCK  VALUE "Y".
       77 DataSet1-rordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordini-KEY-Asc  VALUE "A".
          88 DataSet1-rordini-KEY-Desc VALUE "D".
       77 DataSet1-tordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordini-LOCK  VALUE "Y".
       77 DataSet1-tordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordini-KEY-Asc  VALUE "A".
          88 DataSet1-tordini-KEY-Desc VALUE "D".
       77 DataSet1-promoeva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-promoeva-LOCK  VALUE "Y".
       77 DataSet1-promoeva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-promoeva-KEY-Asc  VALUE "A".
          88 DataSet1-promoeva-KEY-Desc VALUE "D".
       77 DataSet1-agenti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-agenti-LOCK  VALUE "Y".
       77 DataSet1-agenti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-agenti-KEY-Asc  VALUE "A".
          88 DataSet1-agenti-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-tgrupgdo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tgrupgdo-LOCK  VALUE "Y".
       77 DataSet1-tgrupgdo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Asc  VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-tmp-k-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-k-mrordini-LOCK  VALUE "Y".
       77 DataSet1-tmp-k-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-k-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-k-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-tpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpromo-LOCK  VALUE "Y".
       77 DataSet1-tpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpromo-KEY-Asc  VALUE "A".
          88 DataSet1-tpromo-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-tmp-qta-eva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-qta-eva-LOCK  VALUE "Y".
       77 DataSet1-tmp-qta-eva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-qta-eva-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-qta-eva-KEY-Desc VALUE "D".
       77 DataSet1-tmp-qta-pren-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-qta-pren-LOCK  VALUE "Y".
       77 DataSet1-tmp-qta-pren-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-qta-pren-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-qta-pren-KEY-Desc VALUE "D".
       77 DataSet1-blister-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-blister-LOCK  VALUE "Y".
       77 DataSet1-blister-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-blister-KEY-Asc  VALUE "A".
          88 DataSet1-blister-KEY-Desc VALUE "D".
       77 DataSet1-tmp-group-eva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-group-eva-LOCK  VALUE "Y".
       77 DataSet1-tmp-group-eva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-group-eva-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-group-eva-KEY-Desc VALUE "D".
       77 DataSet1-tagli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tagli-LOCK  VALUE "Y".
       77 DataSet1-tagli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tagli-KEY-Asc  VALUE "A".
          88 DataSet1-tagli-KEY-Desc VALUE "D".
       77 DataSet1-tscorte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tscorte-LOCK  VALUE "Y".
       77 DataSet1-tscorte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tscorte-KEY-Asc  VALUE "A".
          88 DataSet1-tscorte-KEY-Desc VALUE "D".
       77 DataSet1-ttipocli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ttipocli-LOCK  VALUE "Y".
       77 DataSet1-ttipocli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ttipocli-KEY-Asc  VALUE "A".
          88 DataSet1-ttipocli-KEY-Desc VALUE "D".
       77 DataSet1-recapiti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-recapiti-LOCK  VALUE "Y".
       77 DataSet1-recapiti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-recapiti-KEY-Asc  VALUE "A".
          88 DataSet1-recapiti-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-tmp-tevacli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-tevacli-LOCK  VALUE "Y".
       77 DataSet1-tmp-tevacli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-tevacli-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-tevacli-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-multigest-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-multigest-LOCK  VALUE "Y".
       77 DataSet1-multigest-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-multigest-KEY-Asc  VALUE "A".
          88 DataSet1-multigest-KEY-Desc VALUE "D".
       77 DataSet1-rpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rpromo-LOCK  VALUE "Y".
       77 DataSet1-rpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rpromo-KEY-Asc  VALUE "A".
          88 DataSet1-rpromo-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-tregioni-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tregioni-LOCK  VALUE "Y".
       77 DataSet1-tregioni-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tregioni-KEY-Asc  VALUE "A".
          88 DataSet1-tregioni-KEY-Desc VALUE "D".
       77 DataSet1-tprov-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tprov-LOCK  VALUE "Y".
       77 DataSet1-tprov-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tprov-KEY-Asc  VALUE "A".
          88 DataSet1-tprov-KEY-Desc VALUE "D".
       77 DataSet1-paramSHI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-paramSHI-LOCK  VALUE "Y".
       77 DataSet1-paramSHI-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-paramSHI-KEY-Asc  VALUE "A".
          88 DataSet1-paramSHI-KEY-Desc VALUE "D".
       77 DataSet1-tmp-eva-riep-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-eva-riep-LOCK  VALUE "Y".
       77 DataSet1-tmp-eva-riep-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-eva-riep-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-eva-riep-KEY-Desc VALUE "D".
       77 DataSet1-macrobatch-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-macrobatch-LOCK  VALUE "Y".
       77 DataSet1-macrobatch-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-macrobatch-KEY-Asc  VALUE "A".
          88 DataSet1-macrobatch-KEY-Desc VALUE "D".
       77 DataSet1-log-macrobatch-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-log-macrobatch-LOCK  VALUE "Y".
       77 DataSet1-log-macrobatch-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-log-macrobatch-KEY-Asc  VALUE "A".
          88 DataSet1-log-macrobatch-KEY-Desc VALUE "D".
       77 DataSet1-usr-tel-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-usr-tel-LOCK  VALUE "Y".
       77 DataSet1-usr-tel-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-usr-tel-KEY-Asc  VALUE "A".
          88 DataSet1-usr-tel-KEY-Desc VALUE "D".
       77 DataSet1-tsetinvio-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tsetinvio-LOCK  VALUE "Y".
       77 DataSet1-tsetinvio-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tsetinvio-KEY-Asc  VALUE "A".
          88 DataSet1-tsetinvio-KEY-Desc VALUE "D".

       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 destini-K1-SPLITBUF  PIC X(111).
       77 destini-k-localita-SPLITBUF  PIC X(36).
       77 mrordini-mro-k-promo-SPLITBUF  PIC X(33).
       77 mrordini-mro-k-articolo-SPLITBUF  PIC X(24).
       77 mrordini-mro-k-progr-SPLITBUF  PIC X(18).
       77 mrordini-mro-k-tprev-SPLITBUF  PIC X(39).
       77 mrordini-mro-k-ord-art-SPLITBUF  PIC X(19).
       77 mtordini-mto-k-ord-cli-SPLITBUF  PIC X(55).
       77 mtordini-mto-k-data-SPLITBUF  PIC X(21).
       77 mtordini-mto-k-clides-SPLITBUF  PIC X(19).
       77 mtordini-mto-k-age-SPLITBUF  PIC X(14).
       77 mtordini-k-mto-stato-sel-SPLITBUF  PIC X(15).
       77 mtordini-k-mto-stato-SPLITBUF  PIC X(14).
       77 mtordini-mto-k-gdo-SPLITBUF  PIC X(26).
       77 mtordini-mto-k-bloc-SPLITBUF  PIC X(20).
       77 mtordini-k-giang-SPLITBUF  PIC X(21).
       77 mtordini-mto-k-promo-SPLITBUF  PIC X(25).
       77 tmp-k-mtordini-tmp-k-promo-SPLITBUF  PIC X(14).
       77 tmp-k-mtordini-tmp-k-valutare-SPLITBUF  PIC X(14).
       77 tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF  PIC X(15).
       77 rordini-ror-k-promo-SPLITBUF  PIC X(16).
       77 rordini-ror-k-articolo-SPLITBUF  PIC X(24).
       77 rordini-ror-k-master-SPLITBUF  PIC X(35).
       77 rordini-ror-k-stbolle-SPLITBUF  PIC X(30).
       77 rordini-ror-k-ord-art-SPLITBUF  PIC X(19).
       77 tordini-k-causale-SPLITBUF  PIC X(17).
       77 tordini-k1-SPLITBUF  PIC X(23).
       77 tordini-k2-SPLITBUF  PIC X(21).
       77 tordini-k-bolla-SPLITBUF  PIC X(13).
       77 tordini-k3-SPLITBUF  PIC X(22).
       77 tordini-k-fattura-SPLITBUF  PIC X(13).
       77 tordini-k4-SPLITBUF  PIC X(30).
       77 tordini-k-contab-SPLITBUF  PIC X(14).
       77 tordini-k-tipo-SPLITBUF  PIC X(14).
       77 tordini-k-data-SPLITBUF  PIC X(17).
       77 tordini-k-agfatt-SPLITBUF  PIC X(42).
       77 tordini-k-stbolle-SPLITBUF  PIC X(34).
       77 tordini-k-andamento-data-SPLITBUF  PIC X(10).
       77 tordini-k-andamento-cliente-SPLITBUF  PIC X(15).
       77 tordini-k-andamento-clides-SPLITBUF  PIC X(20).
       77 tordini-k-promo-SPLITBUF  PIC X(29).
       77 tordini-k-or-SPLITBUF  PIC X(61).
       77 tordini-k-tor-inviare-SPLITBUF  PIC X(14).
       77 tordini-k-tor-tipocli-SPLITBUF  PIC X(25).
       77 tordini-k-tor-gdo-SPLITBUF  PIC X(28).
       77 promoeva-pev-k-art-SPLITBUF  PIC X(22).
       77 promoeva-pev-k-descr-art-SPLITBUF  PIC X(65).
       77 promoeva-pev-k-gdo-SPLITBUF  PIC X(70).
       77 promoeva-pev-k-fittizia-SPLITBUF  PIC X(16).
       77 promoeva-pev-k-promo-SPLITBUF  PIC X(30).
       77 promoeva-pev-k-descr-promo-SPLITBUF  PIC X(65).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 tgrupgdo-gdo-k-g2-SPLITBUF  PIC X(9).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 tmp-k-mrordini-k-mro-promo-SPLITBUF  PIC X(39).
       77 tmp-k-mrordini-k-mro-blister-SPLITBUF  PIC X(24).
       77 tpromo-tpr-chiave-ricerca-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-gdo-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-ini-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-volantino-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-fine-vol-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-data-ins-SPLITBUF  PIC X(29).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 blister-k-magaz-SPLITBUF  PIC X(10).
       77 blister-k-des-SPLITBUF  PIC X(51).
       77 tmp-group-eva-tgr-k-ord-SPLITBUF  PIC X(98).
       77 tagli-k2-SPLITBUF  PIC X(9).
       77 rpromo-k-stampa-SPLITBUF  PIC X(32).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-rb-normale VALUE 5001.
       78  78-ID-chk-tutto VALUE 5002.
       78  78-ID-ef-cli VALUE 5001.
       78  78-ID-ef-gdo VALUE 5002.
       78  78-ID-ef-age VALUE 5003.
       78  78-ID-gd-art VALUE 5004.
       78  78-ID-gd1 VALUE 5005.
       78  78-ID-gd3 VALUE 5006.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
       77 lk-mb-id         PIC  9(18).
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * GRID
       05
           gd-tipocli, 
           Grid, 
           COL 2,20, 
           LINE 1,72,
           LINES 19,00 ,
           SIZE 41,90 ,
           BOXED,
           DATA-COLUMNS (1, 3),
           SEPARATION (5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RECORD-DATA gd-tipocli-rec,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 40,
           VPADDING 10,
           VSCROLL,
           EVENT PROCEDURE Screen4-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-sel, 
           Push-Button, 
           COL 1,70, 
           LINE 21,06,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE SEL-TUTTO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1010,
           FLAT,
           ID IS 21,
           TITLE "g",
           AFTER PROCEDURE pb-sel-AfterProcedure, 
           BEFORE PROCEDURE pb-sel-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-desel, 
           Push-Button, 
           COL 9,70, 
           LINE 21,06,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE DESEL-TUTTO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1020,
           FLAT,
           ID IS 22,
           TITLE "g",
           AFTER PROCEDURE pb-desel-AfterProcedure, 
           BEFORE PROCEDURE pb-desel-BeforeProcedure, 
           .

      * RADIO BUTTON
       05
           rb-normale, 
           Radio-Button, 
           COL 7,70, 
           LINE 24,83,
           LINES 2,61 ,
           SIZE 15,00 ,
           BITMAP-HANDLE EVADI_NORMALE-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002
           FLAT,
           FONT IS Small-Font,
           GROUP 1,
           GROUP-VALUE 1,
           ID IS 78-ID-rb-normale,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Evasione &Normale",
           VALUE tipo-evasione,
           AFTER PROCEDURE rb-normale-AfterProcedure, 
           BEFORE PROCEDURE rb-normale-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           rb-immediata, 
           Radio-Button, 
           COL 23,70, 
           LINE 24,83,
           LINES 2,61 ,
           SIZE 15,00 ,
           BITMAP-HANDLE EVADI_IMMEDIATO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1003
           FLAT,
           FONT IS Small-Font,
           GROUP 1,
           GROUP-VALUE 2,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Evasione &Immediata",
           VALUE tipo-evasione,
           AFTER PROCEDURE Screen1-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE Screen1-Rb-1-BeforeProcedure, 
           .
      * CHECK BOX
       05
           chk-tutto, 
           Check-Box, 
           COL 15,70, 
           LINE 29,56,
           LINES 40,00 ,
           SIZE 142,00 ,
           BITMAP-HANDLE EVADI_TUTTO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000
           FLAT,
           ID IS 78-ID-chk-tutto,                
           TITLE "&Evadi Tutto",
           VALUE chk-tutto-buf,
           AFTER PROCEDURE Screen1-Cb-1-AfterProcedure,
           BEFORE PROCEDURE Screen1-Cb-1-BeforeProcedure, 
           .
      * FRAME
       05
           Screen1-Fr-2, 
           Frame, 
           COL 1,00, 
           LINE 32,56,
           LINES 2,78 ,
           SIZE 44,40 ,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUI, 
           Push-Button, 
           COL 28,90, 
           LINE 33,23,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           Form1-Pb-2, 
           Push-Button, 
           COL 36,90, 
           LINE 33,23,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-blockpgm-2, 
           Label, 
           COL 2,40, 
           LINE 1,00,
           LINES 1,00 ,
           SIZE 1,00 ,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 9,00, 
           LINE 1,28,
           LINES 0,44 ,
           SIZE 4,00 ,
           FONT IS Default-Font,
           ID IS 6,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * BAR
       05
           Screen1-Br-1, 
           Bar,
           COL 1,00, 
           LINE 28,67,
           SIZE 44,40 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           WIDTH 1,
           .

      * BAR
       05
           Screen1-Br-1a, 
           Bar,
           COL 1,00, 
           LINE 23,67,
           SIZE 44,40 ,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           WIDTH 1,
           .

      * FORM
       01 
           Screen2, 
           AFTER PROCEDURE  Screen2-AFTER-SCREEN
           BEFORE PROCEDURE  Screen2-BEFORE-SCREEN
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 2,14, 
           LINE 1,31,
           LINES 9,54 ,
           SIZE 142,71 ,
           COLOR IS 2,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           HEAVY,
           TITLE "Filtro di visualizzazione e scelte",
           TITLE-POSITION 2,
           .

      * ENTRY FIELD
       05
           ef-cli, 
           Entry-Field, 
           COL 10,57, 
           LINE 3,31,
           LINES 1,23 ,
           SIZE 7,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-cli,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-cli-buf,
           AFTER PROCEDURE ef-cli-AfterProcedure, 
           BEFORE PROCEDURE ef-cli-BeforeProcedure, 
           .


      * ENTRY FIELD
       05
           ef-gdo, 
           Entry-Field, 
           COL 10,57, 
           LINE 5,31,
           LINES 1,31 ,
           SIZE 7,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-gdo,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 5,
           VALUE ef-gdo-buf,
           AFTER PROCEDURE ef-gdo-AfterProcedure, 
           BEFORE PROCEDURE ef-gdo-BeforeProcedure, 
           .


      * ENTRY FIELD
       05
           ef-age, 
           Entry-Field, 
           COL 10,57, 
           LINE 7,31,
           LINES 1,23 ,
           SIZE 7,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-age,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-age-buf,
           AFTER PROCEDURE ef-age-AfterProcedure, 
           BEFORE PROCEDURE ef-age-BeforeProcedure, 
           .


      * GRID
       05
           gd-art, 
           Grid, 
           COL 79,57, 
           LINE 8,39,
           LINES 1,23 ,
           SIZE 1,14 ,
           BOXED,
           DATA-COLUMNS (1, 7),
           ALIGNMENT ("R", "U"),
           SEPARATION (5, 5),
           DATA-TYPES ("9(6)", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 481
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-art,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 50,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 46,
           VISIBLE 0,
           VPADDING 15,
           VSCROLL,
           AFTER PROCEDURE gd-articoli-AfterProcedure, 
           BEFORE PROCEDURE gd-articoli-BeforeProcedure, 
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-applica, 
           Push-Button, 
           COL 66,71, 
           LINE 7,62,
           LINES 31,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE APPLICA-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           AFTER PROCEDURE pb-applica-AfterProcedure, 
           BEFORE PROCEDURE pb-applica-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-La-1b, 
           Label, 
           COL 3,14, 
           LINE 3,31,
           LINES 1,20 ,
           SIZE 7,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Cliente",
           .

      * LABEL
       05
           lab-cli, 
           Label, 
           COL 18,43, 
           LINE 3,31,
           LINES 1,23 ,
           SIZE 35,00 ,
           COLOR IS 5,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-cli-buf,
           .

      * LABEL
       05
           Screen1-La-1aa, 
           Label, 
           COL 3,14, 
           LINE 5,31,
           LINES 1,20 ,
           SIZE 7,00 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "GDO",
           .

      * LABEL
       05
           lab-gdo, 
           Label, 
           COL 18,43, 
           LINE 5,31,
           LINES 1,23 ,
           SIZE 35,00 ,
           COLOR IS 5,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-gdo-buf,
           .

      * LABEL
       05
           Screen1-La-1aaa, 
           Label, 
           COL 3,14, 
           LINE 7,31,
           LINES 1,23 ,
           SIZE 7,00 ,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Agente",
           .

      * LABEL
       05
           lab-age, 
           Label, 
           COL 18,43, 
           LINE 7,31,
           LINES 1,23 ,
           SIZE 35,00 ,
           COLOR IS 5,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-age-buf,
           .

      * LABEL
       05
           lab-mag, 
           Label, 
           COL 55,00, 
           LINE 3,08,
           LINES 1,23 ,
           SIZE 35,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-mag-buf,
           .

      * LABEL
       05
           Screen2-La-1b, 
           Label, 
           COL 55,00, 
           LINE 4,85,
           LINES 1,23 ,
           SIZE 35,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "EVADI TUTTO",
           VISIBLE chk-tutto-buf,
           .

      * LABEL
       05
           lab-tot-bozze, 
           Label, 
           COL 91,00, 
           LINE 9,31,
           LINES 1,23 ,
           SIZE 52,86 ,
           COLOR IS 2,
           FONT IS Verdana8-Occidentale,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-tot-bozze-buf,
           .

      * GRID
       05
           gd1, 
           Grid, 
           COL 2,14, 
           LINE 11,38,
           LINES 9,38 ,
           SIZE 142,71 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 5, 13, 53, 93, 143, 153),
           ALIGNMENT ("C", "R", "U", "U", "C", "C", "U"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(4)", "9(8)", "X(40)", "X(40)", "X(50)", "X(10)
      -    "", "X(40)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 140,
           VISIBLE 1,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * BAR
       05
           Screen2-Br-1, 
           Bar,
           COL 1,00, 
           LINE 36,31,
           SIZE 145,00 ,
           COLOR IS 2,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 2,
           .

      * LABEL
       05
           lab1, 
           Label, 
           COL 129,71, 
           LINE 22,08,
           LINES 2,54 ,
           SIZE 13,00 ,
           COLOR IS 3,
           FONT IS Verdana10B-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Giacenza utile",
           .

      * GRID
       05
           gd2, 
           Grid, 
           COL 19,57, 
           LINE 21,77,
           LINES 14,00 ,
           SIZE 107,71 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 7, 57, 60, 70, 77, 84),
           ALIGNMENT ("C", "U", "C", "R", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "9(6)", "9(2)", "9(7)", "9(7)", "9(7)", 
           "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 105,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * GRID
       05
           gd3, 
           Grid, 
           COL 2,14, 
           LINE 36,54,
           LINES 14,00 ,
           SIZE 142,71 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 5, 13, 53, 93, 99, 139, 142, 152, 159, 160, 
           161),
           ALIGNMENT ("C", "R", "U", "U", "C", "U", "C", "R", "R", "C", 
           "C", "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(4)", "9(8)", "X(40)", "X(40)", "9(6)", "X", "X
      -    "(3)", "9(7)", "9(7)", "X", "X", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd3,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 140,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE gd-r-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-genera, 
           Push-Button, 
           COL 60,57, 
           LINE 51,31,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE DISTINTEB-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1004,
           FLAT,
           ID IS 20,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "&Genera",
           AFTER PROCEDURE pb-genera-AfterProcedure, 
           BEFORE PROCEDURE pb-genera-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-prossimo, 
           Push-Button, 
           COL 74,86, 
           LINE 51,31,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE PROSSIMO-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 21,
           SELF-ACT,
           TERMINATION-VALUE 13,
           VISIBLE v-next,
           AFTER PROCEDURE pb-prossimo-AfterProcedure, 
           BEFORE PROCEDURE pb-prossimo-BeforeProcedure, 
           .

      * LABEL
       05
           lab-giac, 
           Label, 
           COL 129,71, 
           LINE 24,85,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 3,
           FONT IS Verdana10B-Occidentale,
           ID IS 22,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-giac-buf,
           .

      * LABEL
       05
           lab1a, 
           Label, 
           COL 129,71, 
           LINE 32,85,
           LINES 1,23 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Ordinato",
           .

      * LABEL
       05
           lab-ord, 
           Label, 
           COL 129,71, 
           LINE 34,31,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-ord-buf,
           .

      * LABEL
       05
           lab1aa, 
           Label, 
           COL 3,43, 
           LINE 28,77,
           LINES 1,62 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 26,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Evadi dal",
           .

      * LABEL
       05
           lab-evadi-dal, 
           Label, 
           COL 3,43, 
           LINE 30,31,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 27,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-evadi-dal-buf,
           .

      * LABEL
       05
           Screen2-Custom1-1, 
           Label, 
           COL 3,00, 
           LINE 6,62,
           LINES 1,85 ,
           SIZE 2,86 ,
           FONT IS Default-Font,
           ID IS 15,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           lab1b, 
           Label, 
           COL 129,71, 
           LINE 26,92,
           LINES 1,23 ,
           SIZE 13,00 ,
           COLOR IS 14,
           FONT IS Verdana10B-Occidentale,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Prenotata",
           .

      * LABEL
       05
           lab-pren, 
           Label, 
           COL 129,71, 
           LINE 28,31,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 14,
           FONT IS Verdana10B-Occidentale,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-pren-buf,
           .

      * LABEL
       05
           lab-promo, 
           Label, 
           COL 129,71, 
           LINE 30,85,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 14,
           FONT IS Verdana10B-Occidentale,
           ID IS 25,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-promo-buf,
           .

      * BAR
       05
           Screen2-Br-2, 
           Bar,
           COL 129,71, 
           LINE 26,62,
           SIZE 13,00 ,
           ID IS 28,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           WIDTH 1,
           .

      * BAR
       05
           Screen2-Br-2a, 
           Bar,
           COL 129,71, 
           LINE 32,54,
           SIZE 13,00 ,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           WIDTH 1,
           .

      * LABEL
       05
           lab1ba, 
           Label, 
           COL 129,71, 
           LINE 29,62,
           LINES 1,23 ,
           SIZE 13,00 ,
           COLOR IS 14,
           FONT IS Verdana10B-Occidentale,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "ID Promo",
           .

      * LABEL
       05
           lab1aaa, 
           Label, 
           COL 3,43, 
           LINE 25,46,
           LINES 1,62 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 31,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Data Cons.",
           .

      * LABEL
       05
           lab-data-cons, 
           Label, 
           COL 3,43, 
           LINE 27,00,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 32,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-data-cons-buf,
           .

      * LABEL
       05
           lab1aab, 
           Label, 
           COL 3,43, 
           LINE 22,15,
           LINES 1,62 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 34,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Data Ordine",
           .

      * LABEL
       05
           lab-data-ord, 
           Label, 
           COL 3,43, 
           LINE 23,69,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 35,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-data-ord-buf,
           .

      * LABEL
       05
           lab-mag-next, 
           Label, 
           COL 88,14, 
           LINE 52,00,
           LINES 1,23 ,
           SIZE 35,00 ,
           COLOR IS 5,
           FONT IS Verdana10B-Occidentale,
           ID IS 36,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-mag-next-buf,
           .

      * LABEL
       05
           lab-attendere, 
           Label, 
           COL 2,71, 
           LINE 51,31,
           LINES 2,85 ,
           SIZE 40,29 ,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "ATTENDERE TERMINE STAMPA RIEPILOGO EVASIONI",
           VISIBLE 0,
           .

      * LABEL
       05
           lab1aaaa, 
           Label, 
           COL 3,43, 
           LINE 32,38,
           LINES 1,62 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 37,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Data Scad.",
           .

      * LABEL
       05
           lab-data-scad, 
           Label, 
           COL 3,43, 
           LINE 33,92,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 38,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-data-scad-buf,
           .

      * GRID
       05
           gd-riep, 
           Grid, 
           COL 91,14, 
           LINE 2,15,
           LINES 7,23 ,
           SIZE 52,71 ,
           BOXED,
           DATA-COLUMNS (1, 51, 62, 79),
           ALIGNMENT ("U", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5),
           DATA-TYPES ("x(80)", "X", "X", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RECORD-DATA gd-riep-rec,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 50,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * TOOLBAR
       01
           Form1-Tb-1aa,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCIa, 
           Push-Button, 
           COL 1,00, 
           LINE 1,15,
           LINES 24,00 ,
           SIZE 26,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 39,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA2, 
           Push-Button, 
           COL 6,00, 
           LINE 1,15,
           LINES 24,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 40,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           scr-elab, 
           HELP-ID 1,
           AFTER PROCEDURE  scr-elab-AFTER-SCREEN
           BEFORE PROCEDURE  scr-elab-BEFORE-SCREEN
           .

      * LABEL
       05
           scr-elab-La-1, 
           Label, 
           COL 20,10, 
           LINE 1,90,
           LINES 2,20 CELLS,
           SIZE 34,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana14I-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Caricamento in corso...",
           .

      * FORM
       01 
           scr-elab-evasioni, 
           HELP-ID 1,
           AFTER PROCEDURE  scr-elab-evasioni-AFTER-SCREEN
           BEFORE PROCEDURE  scr-elab-evasioni-BEFORE-SCREEN
           .

      * LABEL
       05
           scr-elab-La-1a, 
           Label, 
           COL 20,10, 
           LINE 1,90,
           LINES 2,20 CELLS,
           SIZE 34,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana14I-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Generazione evasioni in corso...",
           .

      * FORM
       01 
           scr-fine, 
           HELP-ID 1,
           AFTER PROCEDURE  scr-fine-AFTER-SCREEN
           BEFORE PROCEDURE  scr-fine-BEFORE-SCREEN
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1c, 
           Push-Button, 
           COL 1,00, 
           LINE 1,00,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-sia, 
           Push-Button, 
           COL 11,90, 
           LINE 17,20,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 100,
           FLAT,
           ID IS 10,
           AFTER PROCEDURE pb-sia-AfterProcedure, 
           BEFORE PROCEDURE pb-sia-BeforeProcedure, 
           .

      * FRAME
       05
           Screen1-Fr-1a, 
           Frame, 
           COL 2,00, 
           LINE 1,30,
           LINES 15,40 CELLS,
           SIZE 27,90 CELLS,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * LABEL
       05
           scr-fine-La-4, 
           Label, 
           COL 5,10, 
           LINE 3,00,
           LINES 2,00 CELLS,
           SIZE 20,60 CELLS,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Evasioni Generate",
           .

      * LABEL
       05
           scr-fine-La-5, 
           Label, 
           COL 5,10, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 2,80 CELLS,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Da",
           .

      * LABEL
       05
           scr-fine-La-6, 
           Label, 
           COL 17,10, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 1,50 CELLS,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "a",
           .

      * LABEL
       05
           scr-fine-La-7, 
           Label, 
           COL 8,40, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 7,50 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE primo-numero-z,
           .

      * LABEL
       05
           scr-fine-La-8, 
           Label, 
           COL 19,30, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 7,50 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE ultimo-numero-z,
           .

      * LABEL
       05
           scr-fine-La-4a, 
           Label, 
           COL 8,40, 
           LINE 10,30,
           LINES 2,00 CELLS,
           SIZE 15,00 CELLS,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Totale Evasioni",
           .

      * LABEL
       05
           lbl-tot-fat, 
           Label, 
           COL 10,90, 
           LINE 13,30,
           LINES 2,00 CELLS,
           SIZE 10,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE tot-ordini-z,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1, 
           Push-Button, 
           COL 30,10, 
           LINE 20,50,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1a, 
           Push-Button, 
           COL 30,10, 
           LINE 1,00,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1b, 
           Push-Button, 
           COL 1,00, 
           LINE 20,50,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * FORM
       01 
           scr-elab-tprev, 
           HELP-ID 1,
           AFTER PROCEDURE  scr-elab-tprev-AFTER-SCREEN
           BEFORE PROCEDURE  scr-elab-tprev-BEFORE-SCREEN
           .

      * LABEL
       05
           scr-elab-La-2a, 
           Label, 
           COL 3,00, 
           LINE 2,50,
           LINES 1,90 CELLS,
           SIZE 45,90 CELLS,
           COLOR IS 1,
           FONT IS Verdana12B-Occidentale,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Creazione base dati in corso. Attendere prego...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL, 
           lk-mb-id.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:evacli, INIT:evacli, BeforeDeclarative>
       MTORDINI-ERR SECTION.
           use after error procedure on MTORDINI.
           evaluate status-MTORDINI
           when "35"
                display message "File [MTORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MTORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MTORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       MRORDINI-ERR SECTION.
           use after error procedure on MRORDINI.
           set tutto-ok  to true.
           evaluate status-MRORDINI
           when "35"
                display message "File [MRORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MRORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MRORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       TORDINI-ERR SECTION.
           use after error procedure on TORDINI.
           evaluate status-TORDINI
           when "35"
                display message "File [TORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       RORDINI-ERR SECTION.
           use after error procedure on RORDINI.
           set tutto-ok  to true.
           evaluate status-RORDINI
           when "35"
                display message "File [RORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [RORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[RORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       LOCKFILE-ERR SECTION.
           use after error procedure on lockfile.
           evaluate status-lockfile
           when "35"
                display message "File [LOCKFILE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [LOCKFILE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[LOCKFILE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       MULTIGEST-ERR SECTION.
           use after error procedure on MULTIGEST.
           evaluate status-MULTIGEST
           when "35"
                display message "File [MULTIGEST] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MULTIGEST] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MULTIGEST] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       PROMOEVA-ERR SECTION.
           use after error procedure on promoeva.
           evaluate status-promoeva
           when "35"
                display message "File [PROMOEVA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PROMOEVA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PROMOEVA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM aggmese-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:evacli, INIT:evacli, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana8-Occidentale
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana14I-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, SEL-TUTTO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, DESEL-TUTTO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, EVADI_NORMALE-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, EVADI_IMMEDIATO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, EVADI_TUTTO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, APPLICA-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, DISTINTEB-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, PROSSIMO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
      *    After-Program
           PERFORM evacli-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA

      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana8-Occidentale
           INITIALIZE WFONT-DATA Verdana8-Occidentale
           MOVE 8 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana8-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana14I-Occidentale
           INITIALIZE WFONT-DATA Verdana14I-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana14I-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-sel
           COPY RESOURCE "SEL-TUTTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "SEL-TUTTO.BMP", 
                   GIVING SEL-TUTTO-BMP.
      * pb-desel
           COPY RESOURCE "DESEL-TUTTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "DESEL-TUTTO.BMP", 
                   GIVING DESEL-TUTTO-BMP.
      * rb-normale
           COPY RESOURCE "EVADI_NORMALE.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "EVADI_NORMALE.BMP", 
                   GIVING EVADI_NORMALE-BMP.
      * rb-immediata
           COPY RESOURCE "EVADI_IMMEDIATO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "EVADI_IMMEDIATO.BMP", 
                   GIVING EVADI_IMMEDIATO-BMP.
      * chk-tutto
           COPY RESOURCE "EVADI_TUTTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "EVADI_TUTTO.BMP", 
                   GIVING EVADI_TUTTO-BMP.
      * PB-ESEGUI
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * Form1-Pb-2
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * pb-applica
           COPY RESOURCE "APPLICA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "APPLICA.BMP", 
                   GIVING APPLICA-BMP.
      * pb-genera
           COPY RESOURCE "DISTINTEB.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "DISTINTEB.BMP", 
                   GIVING DISTINTEB-BMP.
      * pb-prossimo
           COPY RESOURCE "PROSSIMO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "PROSSIMO.BMP", 
                   GIVING PROSSIMO-BMP.
      * TOOL-ESCIa
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA2
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tparameva
           PERFORM OPEN-tmagaz
           PERFORM OPEN-clienti
           PERFORM OPEN-destini
           PERFORM OPEN-mrordini
           PERFORM OPEN-mtordini
      *    tmp-k-mtordini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-k-mtordini
           PERFORM OPEN-lockfile
           PERFORM OPEN-rordini
           PERFORM OPEN-tordini
           PERFORM OPEN-promoeva
           PERFORM OPEN-agenti
           PERFORM OPEN-tcaumag
           PERFORM OPEN-tgrupgdo
           PERFORM OPEN-articoli
      *    tmp-k-mrordini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-k-mrordini
           PERFORM OPEN-timballi
           PERFORM OPEN-timbalqta
           PERFORM OPEN-tpromo
           PERFORM OPEN-progmag
      *    tmp-qta-eva OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-qta-eva
      *    tmp-qta-pren OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-qta-pren
           PERFORM OPEN-blister
      *    tmp-group-eva OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-group-eva
      *    tagli OPEN MODE IS FALSE
      *    PERFORM OPEN-tagli
           PERFORM OPEN-tscorte
           PERFORM OPEN-ttipocli
           PERFORM OPEN-recapiti
           PERFORM OPEN-tparamge
           PERFORM OPEN-timposte
      *    tmp-tevacli OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-tevacli
           PERFORM OPEN-param
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    multigest OPEN MODE IS FALSE
      *    PERFORM OPEN-multigest
           PERFORM OPEN-rpromo
           PERFORM OPEN-tmarche
           PERFORM OPEN-tregioni
           PERFORM OPEN-tprov
           PERFORM OPEN-paramSHI
      *    tmp-eva-riep OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-eva-riep
      *    macrobatch OPEN MODE IS FALSE
      *    PERFORM OPEN-macrobatch
      *    log-macrobatch OPEN MODE IS FALSE
      *    PERFORM OPEN-log-macrobatch
           PERFORM OPEN-usr-tel
      *    tsetinvio OPEN MODE IS FALSE
      *    PERFORM OPEN-tsetinvio
      *    After Open
           .

       OPEN-tparameva.
      * <TOTEM:EPT. INIT:evacli, FD:tparameva, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparameva
           IF NOT Valid-STATUS-tparameva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tparameva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:evacli, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:evacli, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destini.
      * <TOTEM:EPT. INIT:evacli, FD:destini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destini
           IF NOT Valid-STATUS-destini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:destini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-mrordini.
      * <TOTEM:EPT. INIT:evacli, FD:mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O mrordini
           IF STATUS-mrordini = "35"
              OPEN OUTPUT mrordini
                IF Valid-STATUS-mrordini
                   CLOSE mrordini
                   OPEN I-O mrordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-mrordini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-mtordini.
      * <TOTEM:EPT. INIT:evacli, FD:mtordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O mtordini
           IF STATUS-mtordini = "35"
              OPEN OUTPUT mtordini
                IF Valid-STATUS-mtordini
                   CLOSE mtordini
                   OPEN I-O mtordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-mtordini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:mtordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-k-mtordini.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-k-mtordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-k-mtordini
           IF NOT Valid-STATUS-tmp-k-mtordini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmp-k-mtordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lockfile.
      * <TOTEM:EPT. INIT:evacli, FD:lockfile, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O lockfile
           IF STATUS-lockfile = "35"
              OPEN OUTPUT lockfile
                IF Valid-STATUS-lockfile
                   CLOSE lockfile
                   OPEN I-O lockfile
                END-IF
           END-IF
           IF NOT Valid-STATUS-lockfile
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:lockfile, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordini.
      * <TOTEM:EPT. INIT:evacli, FD:rordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rordini
           IF STATUS-rordini = "35"
              OPEN OUTPUT rordini
                IF Valid-STATUS-rordini
                   CLOSE rordini
                   OPEN I-O rordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-rordini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:rordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordini.
      * <TOTEM:EPT. INIT:evacli, FD:tordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordini
           IF STATUS-tordini = "35"
              OPEN OUTPUT tordini
                IF Valid-STATUS-tordini
                   CLOSE tordini
                   OPEN I-O tordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-promoeva.
      * <TOTEM:EPT. INIT:evacli, FD:promoeva, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT promoeva
           IF NOT Valid-STATUS-promoeva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:promoeva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-agenti.
      * <TOTEM:EPT. INIT:evacli, FD:agenti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT agenti
           IF NOT Valid-STATUS-agenti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:agenti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:evacli, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tgrupgdo.
      * <TOTEM:EPT. INIT:evacli, FD:tgrupgdo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tgrupgdo
           IF NOT Valid-STATUS-tgrupgdo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tgrupgdo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:evacli, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-k-mrordini.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-k-mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-k-mrordini
           IF NOT Valid-STATUS-tmp-k-mrordini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmp-k-mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:evacli, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:evacli, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpromo.
      * <TOTEM:EPT. INIT:evacli, FD:tpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tpromo
           IF STATUS-tpromo = "35"
              OPEN OUTPUT tpromo
                IF Valid-STATUS-tpromo
                   CLOSE tpromo
                   OPEN I-O tpromo
                END-IF
           END-IF
           IF NOT Valid-STATUS-tpromo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:evacli, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-qta-eva.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-qta-eva, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-qta-eva
           IF NOT Valid-STATUS-tmp-qta-eva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmp-qta-eva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-qta-pren.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-qta-pren, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-qta-pren
           IF NOT Valid-STATUS-tmp-qta-pren
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmp-qta-pren, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-blister.
      * <TOTEM:EPT. INIT:evacli, FD:blister, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT blister
           IF NOT Valid-STATUS-blister
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:blister, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-group-eva.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-group-eva, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-group-eva
           IF NOT Valid-STATUS-tmp-group-eva
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmp-group-eva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tagli.
      * <TOTEM:EPT. INIT:evacli, FD:tagli, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tagli
           IF STATUS-tagli = "35"
              OPEN OUTPUT tagli
                IF Valid-STATUS-tagli
                   CLOSE tagli
                   OPEN I-O tagli
                END-IF
           END-IF
           IF NOT Valid-STATUS-tagli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tagli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tscorte.
      * <TOTEM:EPT. INIT:evacli, FD:tscorte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tscorte
           IF NOT Valid-STATUS-tscorte
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tscorte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ttipocli.
      * <TOTEM:EPT. INIT:evacli, FD:ttipocli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ttipocli
           IF NOT Valid-STATUS-ttipocli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:ttipocli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-recapiti.
      * <TOTEM:EPT. INIT:evacli, FD:recapiti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT recapiti
           IF NOT Valid-STATUS-recapiti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:recapiti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:evacli, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:evacli, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-tevacli.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-tevacli, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-tevacli
           IF NOT Valid-STATUS-tmp-tevacli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmp-tevacli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:evacli, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:evacli, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-multigest.
      * <TOTEM:EPT. INIT:evacli, FD:multigest, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O multigest
           IF STATUS-multigest = "35"
              OPEN OUTPUT multigest
                IF Valid-STATUS-multigest
                   CLOSE multigest
                   OPEN I-O multigest
                END-IF
           END-IF
           IF NOT Valid-STATUS-multigest
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:multigest, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rpromo.
      * <TOTEM:EPT. INIT:evacli, FD:rpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rpromo
           IF STATUS-rpromo = "35"
              OPEN OUTPUT rpromo
                IF Valid-STATUS-rpromo
                   CLOSE rpromo
                   OPEN I-O rpromo
                END-IF
           END-IF
           IF NOT Valid-STATUS-rpromo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:rpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:evacli, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tregioni.
      * <TOTEM:EPT. INIT:evacli, FD:tregioni, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tregioni
           IF NOT Valid-STATUS-tregioni
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tregioni, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tprov.
      * <TOTEM:EPT. INIT:evacli, FD:tprov, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tprov
           IF STATUS-tprov = "35"
              OPEN OUTPUT tprov
                IF Valid-STATUS-tprov
                   CLOSE tprov
                   OPEN I-O tprov
                END-IF
           END-IF
           IF NOT Valid-STATUS-tprov
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tprov, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-paramSHI.
      * <TOTEM:EPT. INIT:evacli, FD:paramSHI, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT paramSHI
           IF NOT Valid-STATUS-paramshi
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:paramSHI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-eva-riep.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-eva-riep, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-eva-riep
           IF NOT Valid-STATUS-tmp-eva-riep
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tmp-eva-riep, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-macrobatch.
      * <TOTEM:EPT. INIT:evacli, FD:macrobatch, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O macrobatch
           IF STATUS-macrobatch = "35"
              OPEN OUTPUT macrobatch
                IF Valid-STATUS-macrobatch
                   CLOSE macrobatch
                   OPEN I-O macrobatch
                END-IF
           END-IF
           IF NOT Valid-STATUS-macrobatch
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:macrobatch, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-log-macrobatch.
      * <TOTEM:EPT. INIT:evacli, FD:log-macrobatch, BeforeOpen>
      * <TOTEM:END>
           OPEN  EXTEND log-macrobatch
           IF NOT Valid-STATUS-log-macrobatch
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:log-macrobatch, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-usr-tel.
      * <TOTEM:EPT. INIT:evacli, FD:usr-tel, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT usr-tel
           IF NOT Valid-status-usr-tel
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:usr-tel, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tsetinvio.
      * <TOTEM:EPT. INIT:evacli, FD:tsetinvio, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tsetinvio
           IF NOT Valid-STATUS-tsetinvio
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evacli, FD:tsetinvio, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tparameva
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-clienti
           PERFORM CLOSE-destini
           PERFORM CLOSE-mrordini
           PERFORM CLOSE-mtordini
      *    tmp-k-mtordini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-k-mtordini
           PERFORM CLOSE-lockfile
           PERFORM CLOSE-rordini
           PERFORM CLOSE-tordini
           PERFORM CLOSE-promoeva
           PERFORM CLOSE-agenti
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-tgrupgdo
           PERFORM CLOSE-articoli
      *    tmp-k-mrordini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-k-mrordini
           PERFORM CLOSE-timballi
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-tpromo
           PERFORM CLOSE-progmag
      *    tmp-qta-eva CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-qta-eva
      *    tmp-qta-pren CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-qta-pren
           PERFORM CLOSE-blister
      *    tmp-group-eva CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-group-eva
      *    tagli CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tagli
           PERFORM CLOSE-tscorte
           PERFORM CLOSE-ttipocli
           PERFORM CLOSE-recapiti
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-timposte
      *    tmp-tevacli CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-tevacli
           PERFORM CLOSE-param
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    multigest CLOSE MODE IS FALSE
      *    PERFORM CLOSE-multigest
           PERFORM CLOSE-rpromo
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-tregioni
           PERFORM CLOSE-tprov
           PERFORM CLOSE-paramSHI
      *    tmp-eva-riep CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-eva-riep
      *    macrobatch CLOSE MODE IS FALSE
      *    PERFORM CLOSE-macrobatch
      *    log-macrobatch CLOSE MODE IS FALSE
      *    PERFORM CLOSE-log-macrobatch
           PERFORM CLOSE-usr-tel
      *    tsetinvio CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tsetinvio
      *    After Close
           .

       CLOSE-tparameva.
      * <TOTEM:EPT. INIT:evacli, FD:tparameva, BeforeClose>
      * <TOTEM:END>
           CLOSE tparameva
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:evacli, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:evacli, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-destini.
      * <TOTEM:EPT. INIT:evacli, FD:destini, BeforeClose>
      * <TOTEM:END>
           CLOSE destini
           .

       CLOSE-mrordini.
      * <TOTEM:EPT. INIT:evacli, FD:mrordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mrordini
           .

       CLOSE-mtordini.
      * <TOTEM:EPT. INIT:evacli, FD:mtordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mtordini
           .

       CLOSE-tmp-k-mtordini.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-k-mtordini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lockfile.
      * <TOTEM:EPT. INIT:evacli, FD:lockfile, BeforeClose>
      * <TOTEM:END>
           CLOSE lockfile
           .

       CLOSE-rordini.
      * <TOTEM:EPT. INIT:evacli, FD:rordini, BeforeClose>
      * <TOTEM:END>
           CLOSE rordini
           .

       CLOSE-tordini.
      * <TOTEM:EPT. INIT:evacli, FD:tordini, BeforeClose>
      * <TOTEM:END>
           CLOSE tordini
           .

       CLOSE-promoeva.
      * <TOTEM:EPT. INIT:evacli, FD:promoeva, BeforeClose>
      * <TOTEM:END>
           CLOSE promoeva
           .

       CLOSE-agenti.
      * <TOTEM:EPT. INIT:evacli, FD:agenti, BeforeClose>
      * <TOTEM:END>
           CLOSE agenti
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:evacli, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-tgrupgdo.
      * <TOTEM:EPT. INIT:evacli, FD:tgrupgdo, BeforeClose>
      * <TOTEM:END>
           CLOSE tgrupgdo
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:evacli, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-tmp-k-mrordini.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-k-mrordini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:evacli, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:evacli, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-tpromo.
      * <TOTEM:EPT. INIT:evacli, FD:tpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpromo
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:evacli, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-tmp-qta-eva.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-qta-eva, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-qta-pren.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-qta-pren, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-blister.
      * <TOTEM:EPT. INIT:evacli, FD:blister, BeforeClose>
      * <TOTEM:END>
           CLOSE blister
           .

       CLOSE-tmp-group-eva.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-group-eva, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tagli.
      * <TOTEM:EPT. INIT:evacli, FD:tagli, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tscorte.
      * <TOTEM:EPT. INIT:evacli, FD:tscorte, BeforeClose>
      * <TOTEM:END>
           CLOSE tscorte
           .

       CLOSE-ttipocli.
      * <TOTEM:EPT. INIT:evacli, FD:ttipocli, BeforeClose>
      * <TOTEM:END>
           CLOSE ttipocli
           .

       CLOSE-recapiti.
      * <TOTEM:EPT. INIT:evacli, FD:recapiti, BeforeClose>
      * <TOTEM:END>
           CLOSE recapiti
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:evacli, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:evacli, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-tmp-tevacli.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-tevacli, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:evacli, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:evacli, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-multigest.
      * <TOTEM:EPT. INIT:evacli, FD:multigest, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-rpromo.
      * <TOTEM:EPT. INIT:evacli, FD:rpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE rpromo
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:evacli, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-tregioni.
      * <TOTEM:EPT. INIT:evacli, FD:tregioni, BeforeClose>
      * <TOTEM:END>
           CLOSE tregioni
           .

       CLOSE-tprov.
      * <TOTEM:EPT. INIT:evacli, FD:tprov, BeforeClose>
      * <TOTEM:END>
           CLOSE tprov
           .

       CLOSE-paramSHI.
      * <TOTEM:EPT. INIT:evacli, FD:paramSHI, BeforeClose>
      * <TOTEM:END>
           CLOSE paramSHI
           .

       CLOSE-tmp-eva-riep.
      * <TOTEM:EPT. INIT:evacli, FD:tmp-eva-riep, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-macrobatch.
      * <TOTEM:EPT. INIT:evacli, FD:macrobatch, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-log-macrobatch.
      * <TOTEM:EPT. INIT:evacli, FD:log-macrobatch, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-usr-tel.
      * <TOTEM:EPT. INIT:evacli, FD:usr-tel, BeforeClose>
      * <TOTEM:END>
           CLOSE usr-tel
           .

       CLOSE-tsetinvio.
      * <TOTEM:EPT. INIT:evacli, FD:tsetinvio, BeforeClose>
      * <TOTEM:END>
           .

       DataSet1-tparameva-INITSTART.
           IF DataSet1-tparameva-KEY-Asc
              MOVE Low-Value TO tpa-chiave
           ELSE
              MOVE High-Value TO tpa-chiave
           END-IF
           .

       DataSet1-tparameva-INITEND.
           IF DataSet1-tparameva-KEY-Asc
              MOVE High-Value TO tpa-chiave
           ELSE
              MOVE Low-Value TO tpa-chiave
           END-IF
           .

      * tparameva
       DataSet1-tparameva-START.
           IF DataSet1-tparameva-KEY-Asc
              START tparameva KEY >= tpa-chiave
           ELSE
              START tparameva KEY <= tpa-chiave
           END-IF
           .

       DataSet1-tparameva-START-NOTGREATER.
           IF DataSet1-tparameva-KEY-Asc
              START tparameva KEY <= tpa-chiave
           ELSE
              START tparameva KEY >= tpa-chiave
           END-IF
           .

       DataSet1-tparameva-START-GREATER.
           IF DataSet1-tparameva-KEY-Asc
              START tparameva KEY > tpa-chiave
           ELSE
              START tparameva KEY < tpa-chiave
           END-IF
           .

       DataSet1-tparameva-START-LESS.
           IF DataSet1-tparameva-KEY-Asc
              START tparameva KEY < tpa-chiave
           ELSE
              START tparameva KEY > tpa-chiave
           END-IF
           .

       DataSet1-tparameva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparameva-LOCK
              READ tparameva WITH LOCK 
              KEY tpa-chiave
           ELSE
              READ tparameva WITH NO LOCK 
              KEY tpa-chiave
           END-IF
           MOVE STATUS-tparameva TO TOTEM-ERR-STAT 
           MOVE "tparameva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparameva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparameva-KEY-Asc
              IF DataSet1-tparameva-LOCK
                 READ tparameva NEXT WITH LOCK
              ELSE
                 READ tparameva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparameva-LOCK
                 READ tparameva PREVIOUS WITH LOCK
              ELSE
                 READ tparameva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparameva TO TOTEM-ERR-STAT
           MOVE "tparameva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparameva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparameva-KEY-Asc
              IF DataSet1-tparameva-LOCK
                 READ tparameva PREVIOUS WITH LOCK
              ELSE
                 READ tparameva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparameva-LOCK
                 READ tparameva NEXT WITH LOCK
              ELSE
                 READ tparameva NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparameva TO TOTEM-ERR-STAT
           MOVE "tparameva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparameva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparameva TO TOTEM-ERR-STAT
           MOVE "tparameva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparameva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparameva TO TOTEM-ERR-STAT
           MOVE "tparameva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparameva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparameva TO TOTEM-ERR-STAT
           MOVE "tparameva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparameva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 MOVE Low-Value TO mag-chiave
              ELSE
                 MOVE High-Value TO mag-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmagaz-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 MOVE High-Value TO mag-chiave
              ELSE
                 MOVE Low-Value TO mag-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tmagaz-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tmagaz-KEY1-ORDER
           END-EVALUATE
           .

      * tmagaz
       DataSet1-tmagaz-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 START tmagaz KEY >= mag-chiave
              ELSE
                 START tmagaz KEY <= mag-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmagaz-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 START tmagaz KEY <= mag-chiave
              ELSE
                 START tmagaz KEY >= mag-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmagaz-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 START tmagaz KEY > mag-chiave
              ELSE
                 START tmagaz KEY < mag-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmagaz-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 START tmagaz KEY < mag-chiave
              ELSE
                 START tmagaz KEY > mag-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz WITH LOCK 
                 KEY mag-chiave
              ELSE
                 READ tmagaz WITH NO LOCK 
                 KEY mag-chiave
              END-IF
           END-EVALUATE
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 IF DataSet1-tmagaz-LOCK
                    READ tmagaz NEXT WITH LOCK
                 ELSE
                    READ tmagaz NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tmagaz-LOCK
                    READ tmagaz PREVIOUS WITH LOCK
                 ELSE
                    READ tmagaz PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tmagaz-KEY1-Asc
                 IF DataSet1-tmagaz-LOCK
                    READ tmagaz PREVIOUS WITH LOCK
                 ELSE
                    READ tmagaz PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tmagaz-LOCK
                    READ tmagaz NEXT WITH LOCK
                 ELSE
                    READ tmagaz NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       destini-K1-MERGE-SPLITBUF.
           INITIALIZE destini-K1-SPLITBUF
           MOVE des-ragsoc-1(1:100) TO destini-K1-SPLITBUF(1:100)
           MOVE des-codice(1:5) TO destini-K1-SPLITBUF(101:5)
           MOVE des-prog(1:5) TO destini-K1-SPLITBUF(106:5)
           .

       destini-k-localita-MERGE-SPLITBUF.
           INITIALIZE destini-k-localita-SPLITBUF
           MOVE des-localita(1:35) TO destini-k-localita-SPLITBUF(1:35)
           .

       DataSet1-destini-INITSTART.
           IF DataSet1-destini-KEY-Asc
              MOVE Low-Value TO des-chiave
           ELSE
              MOVE High-Value TO des-chiave
           END-IF
           .

       DataSet1-destini-INITEND.
           IF DataSet1-destini-KEY-Asc
              MOVE High-Value TO des-chiave
           ELSE
              MOVE Low-Value TO des-chiave
           END-IF
           .

      * destini
       DataSet1-destini-START.
           IF DataSet1-destini-KEY-Asc
              START destini KEY >= des-chiave
           ELSE
              START destini KEY <= des-chiave
           END-IF
           .

       DataSet1-destini-START-NOTGREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY <= des-chiave
           ELSE
              START destini KEY >= des-chiave
           END-IF
           .

       DataSet1-destini-START-GREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY > des-chiave
           ELSE
              START destini KEY < des-chiave
           END-IF
           .

       DataSet1-destini-START-LESS.
           IF DataSet1-destini-KEY-Asc
              START destini KEY < des-chiave
           ELSE
              START destini KEY > des-chiave
           END-IF
           .

       DataSet1-destini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destini-LOCK
              READ destini WITH LOCK 
              KEY des-chiave
           ELSE
              READ destini WITH NO LOCK 
              KEY des-chiave
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT 
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterDelete>
      * <TOTEM:END>
           .

       mrordini-mro-k-promo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-promo-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-promo-SPLITBUF(1:15)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-promo-SPLITBUF(16:17)
           .

       mrordini-mro-k-articolo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-articolo-SPLITBUF
           MOVE mro-cod-articolo(1:6) TO 
           mrordini-mro-k-articolo-SPLITBUF(1:6)
           MOVE mro-chiave(1:17) TO 
           mrordini-mro-k-articolo-SPLITBUF(7:17)
           .

       mrordini-mro-k-progr-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-progr-SPLITBUF
           MOVE mro-chiave-testa(1:12) TO 
           mrordini-mro-k-progr-SPLITBUF(1:12)
           MOVE mro-progr(1:5) TO mrordini-mro-k-progr-SPLITBUF(13:5)
           .

       mrordini-mro-k-tprev-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-tprev-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-tprev-SPLITBUF(1:15)
           MOVE mro-prg-cod-articolo(1:6) TO 
           mrordini-mro-k-tprev-SPLITBUF(16:6)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-tprev-SPLITBUF(22:17)
           .

       mrordini-mro-k-ord-art-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-ord-art-SPLITBUF
           MOVE mro-chiave-testa(1:12) TO 
           mrordini-mro-k-ord-art-SPLITBUF(1:12)
           MOVE mro-cod-articolo(1:6) TO 
           mrordini-mro-k-ord-art-SPLITBUF(13:6)
           .

       DataSet1-mrordini-INITSTART.
           IF DataSet1-mrordini-KEY-Asc
              MOVE Low-Value TO mro-chiave
           ELSE
              MOVE High-Value TO mro-chiave
           END-IF
           .

       DataSet1-mrordini-INITEND.
           IF DataSet1-mrordini-KEY-Asc
              MOVE High-Value TO mro-chiave
           ELSE
              MOVE Low-Value TO mro-chiave
           END-IF
           .

      * mrordini
       DataSet1-mrordini-START.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY >= mro-chiave
           ELSE
              START mrordini KEY <= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-NOTGREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY <= mro-chiave
           ELSE
              START mrordini KEY >= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-GREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY > mro-chiave
           ELSE
              START mrordini KEY < mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-LESS.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY < mro-chiave
           ELSE
              START mrordini KEY > mro-chiave
           END-IF
           .

       DataSet1-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-mrordini-LOCK
              READ mrordini WITH LOCK 
              KEY mro-chiave
           ELSE
              READ mrordini WITH NO LOCK 
              KEY mro-chiave
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT 
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeWrite>
      * <TOTEM:END>
           WRITE mro-rec OF mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mro-rec OF mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeDelete>
      * <TOTEM:END>
           DELETE mrordini.
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterDelete>
      * <TOTEM:END>
           .

       mtordini-mto-k-ord-cli-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-ord-cli-SPLITBUF
           MOVE mto-anno(1:4) TO mtordini-mto-k-ord-cli-SPLITBUF(1:4)
           MOVE mto-num-ord-cli(1:50) TO 
           mtordini-mto-k-ord-cli-SPLITBUF(5:50)
           .

       mtordini-mto-k-data-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-data-SPLITBUF
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-data-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-data-SPLITBUF(9:12)
           .

       mtordini-mto-k-clides-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-clides-SPLITBUF
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-clides-SPLITBUF(1:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-clides-SPLITBUF(6:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-clides-SPLITBUF(11:8)
           .

       mtordini-mto-k-age-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-age-SPLITBUF
           MOVE mto-cod-agente(1:5) TO mtordini-mto-k-age-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-age-SPLITBUF(6:8)
           .

       mtordini-k-mto-stato-sel-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-sel-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(1:1)
           MOVE mto-cod-cli(1:5) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(2:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(7:8)
           .

       mtordini-k-mto-stato-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-SPLITBUF(1:1)
           MOVE mto-chiave(1:12) TO mtordini-k-mto-stato-SPLITBUF(2:12)
           .

       mtordini-mto-k-gdo-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-gdo-SPLITBUF
           MOVE mto-gdo(1:5) TO mtordini-mto-k-gdo-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-gdo-SPLITBUF(6:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-gdo-SPLITBUF(14:12)
           .

       mtordini-mto-k-bloc-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-bloc-SPLITBUF
           MOVE mto-stato-attivazione(1:1) TO 
           mtordini-mto-k-bloc-SPLITBUF(1:1)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-bloc-SPLITBUF(2:8)
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-bloc-SPLITBUF(10:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-bloc-SPLITBUF(15:5)
           .

       mtordini-k-giang-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-giang-SPLITBUF
           MOVE mto-data-note1(1:8) TO mtordini-k-giang-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-k-giang-SPLITBUF(9:12)
           .

       mtordini-mto-k-promo-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-promo-SPLITBUF
           MOVE mto-promo(1:1) TO mtordini-mto-k-promo-SPLITBUF(1:1)
           MOVE mto-tipo-CF(1:1) TO mtordini-mto-k-promo-SPLITBUF(2:1)
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-promo-SPLITBUF(3:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-promo-SPLITBUF(8:5)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-promo-SPLITBUF(13:12)
           .

       DataSet1-mtordini-INITSTART.
           IF DataSet1-mtordini-KEY-Asc
              MOVE Low-Value TO mto-chiave
           ELSE
              MOVE High-Value TO mto-chiave
           END-IF
           .

       DataSet1-mtordini-INITEND.
           IF DataSet1-mtordini-KEY-Asc
              MOVE High-Value TO mto-chiave
           ELSE
              MOVE Low-Value TO mto-chiave
           END-IF
           .

      * mtordini
       DataSet1-mtordini-START.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY >= mto-chiave
           ELSE
              START mtordini KEY <= mto-chiave
           END-IF
           .

       DataSet1-mtordini-START-NOTGREATER.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY <= mto-chiave
           ELSE
              START mtordini KEY >= mto-chiave
           END-IF
           .

       DataSet1-mtordini-START-GREATER.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY > mto-chiave
           ELSE
              START mtordini KEY < mto-chiave
           END-IF
           .

       DataSet1-mtordini-START-LESS.
           IF DataSet1-mtordini-KEY-Asc
              START mtordini KEY < mto-chiave
           ELSE
              START mtordini KEY > mto-chiave
           END-IF
           .

       DataSet1-mtordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-mtordini-LOCK
              READ mtordini WITH LOCK 
              KEY mto-chiave
           ELSE
              READ mtordini WITH NO LOCK 
              KEY mto-chiave
           END-IF
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT 
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-mtordini-KEY-Asc
              IF DataSet1-mtordini-LOCK
                 READ mtordini NEXT WITH LOCK
              ELSE
                 READ mtordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mtordini-LOCK
                 READ mtordini PREVIOUS WITH LOCK
              ELSE
                 READ mtordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-mtordini-KEY-Asc
              IF DataSet1-mtordini-LOCK
                 READ mtordini PREVIOUS WITH LOCK
              ELSE
                 READ mtordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mtordini-LOCK
                 READ mtordini NEXT WITH LOCK
              ELSE
                 READ mtordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-promo-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeWrite>
      * <TOTEM:END>
           WRITE mto-rec OF mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mto-rec OF mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeDelete>
      * <TOTEM:END>
           DELETE mtordini.
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterDelete>
      * <TOTEM:END>
           .

       tmp-k-mtordini-tmp-k-promo-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mtordini-tmp-k-promo-SPLITBUF
           MOVE k-mto-promo(1:1) TO 
           tmp-k-mtordini-tmp-k-promo-SPLITBUF(1:1)
           MOVE k-mto-chiave(1:12) TO 
           tmp-k-mtordini-tmp-k-promo-SPLITBUF(2:12)
           .

       tmp-k-mtordini-tmp-k-valutare-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mtordini-tmp-k-valutare-SPLITBUF
           MOVE k-mto-evadibile(1:1) TO 
           tmp-k-mtordini-tmp-k-valutare-SPLITBUF(1:1)
           MOVE k-mto-chiave(1:12) TO 
           tmp-k-mtordini-tmp-k-valutare-SPLITBUF(2:12)
           .

       tmp-k-mtordini-tmp-k-valutare-blister-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF
           MOVE k-mto-evadibile(1:1) TO 
           tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF(1:1)
           MOVE k-mto-blister(1:1) TO 
           tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF(2:1)
           MOVE k-mto-chiave(1:12) TO 
           tmp-k-mtordini-tmp-k-valutare-blister-SPLITBUF(3:12)
           .

       DataSet1-tmp-k-mtordini-INITSTART.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              MOVE Low-Value TO k-mto-chiave
           ELSE
              MOVE High-Value TO k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-INITEND.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              MOVE High-Value TO k-mto-chiave
           ELSE
              MOVE Low-Value TO k-mto-chiave
           END-IF
           .

      * tmp-k-mtordini
       DataSet1-tmp-k-mtordini-START.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY >= k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY <= k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-START-NOTGREATER.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY <= k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY >= k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-START-GREATER.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY > k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY < k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-START-LESS.
           IF DataSet1-tmp-k-mtordini-KEY-Asc
              START tmp-k-mtordini KEY < k-mto-chiave
           ELSE
              START tmp-k-mtordini KEY > k-mto-chiave
           END-IF
           .

       DataSet1-tmp-k-mtordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeWrite>
      * <TOTEM:END>
           WRITE k-mto-rec OF tmp-k-mtordini.
           MOVE STATUS-tmp-k-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mtordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mtordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mtordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mtordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mtordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mtordini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lockfile-INITSTART.
           IF DataSet1-lockfile-KEY-Asc
              MOVE Low-Value TO lck-chiave
           ELSE
              MOVE High-Value TO lck-chiave
           END-IF
           .

       DataSet1-lockfile-INITEND.
           IF DataSet1-lockfile-KEY-Asc
              MOVE High-Value TO lck-chiave
           ELSE
              MOVE Low-Value TO lck-chiave
           END-IF
           .

      * lockfile
       DataSet1-lockfile-START.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY >= lck-chiave
           ELSE
              START lockfile KEY <= lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-NOTGREATER.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY <= lck-chiave
           ELSE
              START lockfile KEY >= lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-GREATER.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY > lck-chiave
           ELSE
              START lockfile KEY < lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-LESS.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY < lck-chiave
           ELSE
              START lockfile KEY > lck-chiave
           END-IF
           .

       DataSet1-lockfile-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lockfile-LOCK
              READ lockfile WITH LOCK 
              KEY lck-chiave
           ELSE
              READ lockfile WITH NO LOCK 
              KEY lck-chiave
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT 
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lockfile-KEY-Asc
              IF DataSet1-lockfile-LOCK
                 READ lockfile NEXT WITH LOCK
              ELSE
                 READ lockfile NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockfile-LOCK
                 READ lockfile PREVIOUS WITH LOCK
              ELSE
                 READ lockfile PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-lockfile-KEY-Asc
              IF DataSet1-lockfile-LOCK
                 READ lockfile PREVIOUS WITH LOCK
              ELSE
                 READ lockfile PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockfile-LOCK
                 READ lockfile NEXT WITH LOCK
              ELSE
                 READ lockfile NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeWrite>
      * <TOTEM:END>
           WRITE lck-rec OF lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRewrite>
      * <TOTEM:END>
           REWRITE lck-rec OF lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeDelete>
      * <TOTEM:END>
           DELETE lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterDelete>
      * <TOTEM:END>
           .

       rordini-ror-k-promo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-promo-SPLITBUF
           MOVE ror-promo OF rordini(1:15) TO 
           rordini-ror-k-promo-SPLITBUF(1:15)
           .

       rordini-ror-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-articolo-SPLITBUF
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-articolo-SPLITBUF(1:6)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-articolo-SPLITBUF(7:17)
           .

       rordini-ror-k-master-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-master-SPLITBUF
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(1:17)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(18:17)
           .

       rordini-ror-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-stbolle-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-stbolle-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-stbolle-SPLITBUF(5:8)
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-stbolle-SPLITBUF(13:17)
           .

       rordini-ror-k-ord-art-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-ord-art-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-ord-art-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-ord-art-SPLITBUF(5:8)
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-ord-art-SPLITBUF(13:6)
           .

       DataSet1-rordini-INITSTART.
           IF DataSet1-rordini-KEY-Asc
              MOVE Low-Value TO ror-chiave OF rordini
           ELSE
              MOVE High-Value TO ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-INITEND.
           IF DataSet1-rordini-KEY-Asc
              MOVE High-Value TO ror-chiave OF rordini
           ELSE
              MOVE Low-Value TO ror-chiave OF rordini
           END-IF
           .

      * rordini
       DataSet1-rordini-START.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY >= ror-chiave OF rordini
           ELSE
              START rordini KEY <= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-NOTGREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY <= ror-chiave OF rordini
           ELSE
              START rordini KEY >= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-GREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY > ror-chiave OF rordini
           ELSE
              START rordini KEY < ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-LESS.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY < ror-chiave OF rordini
           ELSE
              START rordini KEY > ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordini-LOCK
              READ rordini WITH LOCK 
              KEY ror-chiave OF rordini
           ELSE
              READ rordini WITH NO LOCK 
              KEY ror-chiave OF rordini
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT 
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           PERFORM rordini-ror-k-ord-art-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeWrite>
      * <TOTEM:END>
           WRITE ror-rec OF rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE ror-rec OF rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeDelete>
      * <TOTEM:END>
           DELETE rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterDelete>
      * <TOTEM:END>
           .

       tordini-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordini-k-causale-SPLITBUF
           MOVE tor-causale(1:4) TO tordini-k-causale-SPLITBUF(1:4)
           MOVE tor-anno(1:4) TO tordini-k-causale-SPLITBUF(5:4)
           MOVE tor-numero(1:8) TO tordini-k-causale-SPLITBUF(9:8)
           .

       tordini-k1-MERGE-SPLITBUF.
           INITIALIZE tordini-k1-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k1-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k1-SPLITBUF(6:5)
           MOVE tor-anno(1:4) TO tordini-k1-SPLITBUF(11:4)
           MOVE tor-numero(1:8) TO tordini-k1-SPLITBUF(15:8)
           .

       tordini-k2-MERGE-SPLITBUF.
           INITIALIZE tordini-k2-SPLITBUF
           MOVE tor-data-passaggio-ordine(1:8) TO 
           tordini-k2-SPLITBUF(1:8)
           MOVE tor-anno(1:4) TO tordini-k2-SPLITBUF(9:4)
           MOVE tor-numero(1:8) TO tordini-k2-SPLITBUF(13:8)
           .

       tordini-k-bolla-MERGE-SPLITBUF.
           INITIALIZE tordini-k-bolla-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-bolla-SPLITBUF(1:4)
           MOVE tor-num-bolla(1:8) TO tordini-k-bolla-SPLITBUF(5:8)
           .

       tordini-k3-MERGE-SPLITBUF.
           INITIALIZE tordini-k3-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k3-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k3-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k3-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO tordini-k3-SPLITBUF(21:1)
           .

       tordini-k-fattura-MERGE-SPLITBUF.
           INITIALIZE tordini-k-fattura-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-fattura-SPLITBUF(1:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-fattura-SPLITBUF(5:8)
           .

       tordini-k4-MERGE-SPLITBUF.
           INITIALIZE tordini-k4-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k4-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k4-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k4-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k4-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO tordini-k4-SPLITBUF(29:1)
           .

       tordini-k-contab-MERGE-SPLITBUF.
           INITIALIZE tordini-k-contab-SPLITBUF
           MOVE tor-agg-contab(1:1) TO tordini-k-contab-SPLITBUF(1:1)
           MOVE tor-anno-fattura(1:4) TO tordini-k-contab-SPLITBUF(2:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-contab-SPLITBUF(6:8)
           .

       tordini-k-tipo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tipo-SPLITBUF
           MOVE tor-tipo(1:1) TO tordini-k-tipo-SPLITBUF(1:1)
           MOVE tor-chiave(1:12) TO tordini-k-tipo-SPLITBUF(2:12)
           .

       tordini-k-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-data-SPLITBUF
           MOVE tor-data-creazione(1:8) TO tordini-k-data-SPLITBUF(1:8)
           MOVE tor-numero(1:8) TO tordini-k-data-SPLITBUF(9:8)
           .

       tordini-k-agfatt-MERGE-SPLITBUF.
           INITIALIZE tordini-k-agfatt-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-agfatt-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k-agfatt-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO 
           tordini-k-agfatt-SPLITBUF(29:1)
           MOVE tor-chiave(1:12) TO tordini-k-agfatt-SPLITBUF(30:12)
           .

       tordini-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE tordini-k-stbolle-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-stbolle-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO 
           tordini-k-stbolle-SPLITBUF(21:1)
           MOVE tor-chiave(1:12) TO tordini-k-stbolle-SPLITBUF(22:12)
           .

       tordini-k-andamento-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-data-SPLITBUF
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-data-SPLITBUF(1:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-data-SPLITBUF(2:8)
           .

       tordini-k-andamento-cliente-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-cliente-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-cliente-SPLITBUF(1:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-cliente-SPLITBUF(6:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-cliente-SPLITBUF(7:8)
           .

       tordini-k-andamento-clides-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-clides-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(6:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-clides-SPLITBUF(11:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-clides-SPLITBUF(12:8)
           .

       tordini-k-promo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-promo-SPLITBUF
           MOVE tor-stato(1:1) TO tordini-k-promo-SPLITBUF(1:1)
           MOVE tor-promo(1:1) TO tordini-k-promo-SPLITBUF(2:1)
           MOVE tor-data-ordine(1:8) TO tordini-k-promo-SPLITBUF(3:8)
           MOVE tor-numero(1:8) TO tordini-k-promo-SPLITBUF(11:8)
           MOVE tor-cod-cli(1:5) TO tordini-k-promo-SPLITBUF(19:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-promo-SPLITBUF(24:5)
           .

       tordini-k-or-MERGE-SPLITBUF.
           INITIALIZE tordini-k-or-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k-or-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-or-SPLITBUF(6:5)
           MOVE tor-num-ord-cli(1:50) TO tordini-k-or-SPLITBUF(11:50)
           .

       tordini-k-tor-inviare-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-inviare-SPLITBUF
           MOVE tor-da-inviare OF tordini(1:1) TO 
           tordini-k-tor-inviare-SPLITBUF(1:1)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-inviare-SPLITBUF(2:12)
           .

       tordini-k-tor-tipocli-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-tipocli-SPLITBUF
           MOVE tor-tipocli OF tordini(1:2) TO 
           tordini-k-tor-tipocli-SPLITBUF(1:2)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(3:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(8:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-tipocli-SPLITBUF(13:12)
           .

       tordini-k-tor-gdo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-gdo-SPLITBUF
           MOVE tor-gdo OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(1:5)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(6:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(11:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-gdo-SPLITBUF(16:12)
           .

       DataSet1-tordini-INITSTART.
           IF DataSet1-tordini-KEY-Asc
              MOVE Low-Value TO tor-chiave
           ELSE
              MOVE High-Value TO tor-chiave
           END-IF
           .

       DataSet1-tordini-INITEND.
           IF DataSet1-tordini-KEY-Asc
              MOVE High-Value TO tor-chiave
           ELSE
              MOVE Low-Value TO tor-chiave
           END-IF
           .

      * tordini
       DataSet1-tordini-START.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY >= tor-chiave
           ELSE
              START tordini KEY <= tor-chiave
           END-IF
           .

       DataSet1-tordini-START-NOTGREATER.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY <= tor-chiave
           ELSE
              START tordini KEY >= tor-chiave
           END-IF
           .

       DataSet1-tordini-START-GREATER.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY > tor-chiave
           ELSE
              START tordini KEY < tor-chiave
           END-IF
           .

       DataSet1-tordini-START-LESS.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY < tor-chiave
           ELSE
              START tordini KEY > tor-chiave
           END-IF
           .

       DataSet1-tordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordini-LOCK
              READ tordini WITH LOCK 
              KEY tor-chiave
           ELSE
              READ tordini WITH NO LOCK 
              KEY tor-chiave
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT 
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordini-KEY-Asc
              IF DataSet1-tordini-LOCK
                 READ tordini NEXT WITH LOCK
              ELSE
                 READ tordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordini-LOCK
                 READ tordini PREVIOUS WITH LOCK
              ELSE
                 READ tordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordini-KEY-Asc
              IF DataSet1-tordini-LOCK
                 READ tordini PREVIOUS WITH LOCK
              ELSE
                 READ tordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordini-LOCK
                 READ tordini NEXT WITH LOCK
              ELSE
                 READ tordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeWrite>
      * <TOTEM:END>
           WRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeDelete>
      * <TOTEM:END>
           DELETE tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterDelete>
      * <TOTEM:END>
           .

       promoeva-pev-k-art-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-art-SPLITBUF
           MOVE pev-articolo OF promoeva(1:6) TO 
           promoeva-pev-k-art-SPLITBUF(1:6)
           MOVE pev-tpr-codice OF promoeva(1:15) TO 
           promoeva-pev-k-art-SPLITBUF(7:15)
           .

       promoeva-pev-k-descr-art-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-descr-art-SPLITBUF
           MOVE pev-descr-art OF promoeva(1:50) TO 
           promoeva-pev-k-descr-art-SPLITBUF(1:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-descr-art-SPLITBUF(51:14)
           .

       promoeva-pev-k-gdo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-gdo-SPLITBUF
           MOVE pev-gdo OF promoeva(1:5) TO 
           promoeva-pev-k-gdo-SPLITBUF(1:5)
           MOVE pev-descr-art OF promoeva(1:50) TO 
           promoeva-pev-k-gdo-SPLITBUF(6:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-gdo-SPLITBUF(56:14)
           .

       promoeva-pev-k-fittizia-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-fittizia-SPLITBUF
           MOVE pev-fittizia OF promoeva(1:1) TO 
           promoeva-pev-k-fittizia-SPLITBUF(1:1)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-fittizia-SPLITBUF(2:14)
           .

       promoeva-pev-k-promo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-promo-SPLITBUF
           MOVE pev-tpr-codice OF promoeva(1:15) TO 
           promoeva-pev-k-promo-SPLITBUF(1:15)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-promo-SPLITBUF(16:14)
           .

       promoeva-pev-k-descr-promo-MERGE-SPLITBUF.
           INITIALIZE promoeva-pev-k-descr-promo-SPLITBUF
           MOVE pev-tpr-descrizione OF promoeva(1:50) TO 
           promoeva-pev-k-descr-promo-SPLITBUF(1:50)
           MOVE pev-chiave OF promoeva(1:14) TO 
           promoeva-pev-k-descr-promo-SPLITBUF(51:14)
           .

       DataSet1-promoeva-INITSTART.
           IF DataSet1-promoeva-KEY-Asc
              MOVE Low-Value TO pev-chiave OF promoeva
           ELSE
              MOVE High-Value TO pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-INITEND.
           IF DataSet1-promoeva-KEY-Asc
              MOVE High-Value TO pev-chiave OF promoeva
           ELSE
              MOVE Low-Value TO pev-chiave OF promoeva
           END-IF
           .

      * promoeva
       DataSet1-promoeva-START.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY >= pev-chiave OF promoeva
           ELSE
              START promoeva KEY <= pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-NOTGREATER.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY <= pev-chiave OF promoeva
           ELSE
              START promoeva KEY >= pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-GREATER.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY > pev-chiave OF promoeva
           ELSE
              START promoeva KEY < pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-START-LESS.
           IF DataSet1-promoeva-KEY-Asc
              START promoeva KEY < pev-chiave OF promoeva
           ELSE
              START promoeva KEY > pev-chiave OF promoeva
           END-IF
           .

       DataSet1-promoeva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-promoeva-LOCK
              READ promoeva WITH LOCK 
              KEY pev-chiave OF promoeva
           ELSE
              READ promoeva WITH NO LOCK 
              KEY pev-chiave OF promoeva
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT 
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-promoeva-KEY-Asc
              IF DataSet1-promoeva-LOCK
                 READ promoeva NEXT WITH LOCK
              ELSE
                 READ promoeva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-promoeva-LOCK
                 READ promoeva PREVIOUS WITH LOCK
              ELSE
                 READ promoeva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-promoeva-KEY-Asc
              IF DataSet1-promoeva-LOCK
                 READ promoeva PREVIOUS WITH LOCK
              ELSE
                 READ promoeva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-promoeva-LOCK
                 READ promoeva NEXT WITH LOCK
              ELSE
                 READ promoeva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM promoeva-pev-k-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-art-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-gdo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-fittizia-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-promo-MERGE-SPLITBUF
           PERFORM promoeva-pev-k-descr-promo-MERGE-SPLITBUF
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-promoeva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-promoeva TO TOTEM-ERR-STAT
           MOVE "promoeva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:promoeva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-agenti-INITSTART.
           IF DataSet1-agenti-KEY-Asc
              MOVE Low-Value TO age-chiave
           ELSE
              MOVE High-Value TO age-chiave
           END-IF
           .

       DataSet1-agenti-INITEND.
           IF DataSet1-agenti-KEY-Asc
              MOVE High-Value TO age-chiave
           ELSE
              MOVE Low-Value TO age-chiave
           END-IF
           .

      * agenti
       DataSet1-agenti-START.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY >= age-chiave
           ELSE
              START agenti KEY <= age-chiave
           END-IF
           .

       DataSet1-agenti-START-NOTGREATER.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY <= age-chiave
           ELSE
              START agenti KEY >= age-chiave
           END-IF
           .

       DataSet1-agenti-START-GREATER.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY > age-chiave
           ELSE
              START agenti KEY < age-chiave
           END-IF
           .

       DataSet1-agenti-START-LESS.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY < age-chiave
           ELSE
              START agenti KEY > age-chiave
           END-IF
           .

       DataSet1-agenti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-agenti-LOCK
              READ agenti WITH LOCK 
              KEY age-chiave
           ELSE
              READ agenti WITH NO LOCK 
              KEY age-chiave
           END-IF
           MOVE STATUS-agenti TO TOTEM-ERR-STAT 
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-agenti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-agenti-KEY-Asc
              IF DataSet1-agenti-LOCK
                 READ agenti NEXT WITH LOCK
              ELSE
                 READ agenti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-agenti-LOCK
                 READ agenti PREVIOUS WITH LOCK
              ELSE
                 READ agenti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-agenti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-agenti-KEY-Asc
              IF DataSet1-agenti-LOCK
                 READ agenti PREVIOUS WITH LOCK
              ELSE
                 READ agenti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-agenti-LOCK
                 READ agenti NEXT WITH LOCK
              ELSE
                 READ agenti NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-agenti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-agenti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-agenti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       tgrupgdo-gdo-k-g2-MERGE-SPLITBUF.
           INITIALIZE tgrupgdo-gdo-k-g2-SPLITBUF
           MOVE gdo-codice-G2 OF tgrupgdo(1:3) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(1:3)
           MOVE gdo-chiave OF tgrupgdo(1:5) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(4:5)
           .

       DataSet1-tgrupgdo-INITSTART.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-INITEND.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

      * tgrupgdo
       DataSet1-tgrupgdo-START.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-NOTGREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-GREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-LESS.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-LOCK
              READ tgrupgdo WITH LOCK 
              KEY gdo-chiave OF tgrupgdo
           ELSE
              READ tgrupgdo WITH NO LOCK 
              KEY gdo-chiave OF tgrupgdo
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT 
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       tmp-k-mrordini-k-mro-promo-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mrordini-k-mro-promo-SPLITBUF
           MOVE k-mro-promo(1:15) TO 
           tmp-k-mrordini-k-mro-promo-SPLITBUF(1:15)
           MOVE k-mro-articolo(1:6) TO 
           tmp-k-mrordini-k-mro-promo-SPLITBUF(16:6)
           MOVE k-mro-chiave(1:17) TO 
           tmp-k-mrordini-k-mro-promo-SPLITBUF(22:17)
           .

       tmp-k-mrordini-k-mro-blister-MERGE-SPLITBUF.
           INITIALIZE tmp-k-mrordini-k-mro-blister-SPLITBUF
           MOVE k-mro-chiave(1:17) TO 
           tmp-k-mrordini-k-mro-blister-SPLITBUF(1:17)
           MOVE k-mro-bli-codice(1:6) TO 
           tmp-k-mrordini-k-mro-blister-SPLITBUF(18:6)
           .

       DataSet1-tmp-k-mrordini-INITSTART.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              MOVE Low-Value TO k-mro-chiave
           ELSE
              MOVE High-Value TO k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-INITEND.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              MOVE High-Value TO k-mro-chiave
           ELSE
              MOVE Low-Value TO k-mro-chiave
           END-IF
           .

      * tmp-k-mrordini
       DataSet1-tmp-k-mrordini-START.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY >= k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY <= k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-START-NOTGREATER.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY <= k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY >= k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-START-GREATER.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY > k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY < k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-START-LESS.
           IF DataSet1-tmp-k-mrordini-KEY-Asc
              START tmp-k-mrordini KEY < k-mro-chiave
           ELSE
              START tmp-k-mrordini KEY > k-mro-chiave
           END-IF
           .

       DataSet1-tmp-k-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeWrite>
      * <TOTEM:END>
           WRITE k-mro-rec OF tmp-k-mrordini.
           MOVE STATUS-tmp-k-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-k-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-k-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-k-mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-k-mrordini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ricerca-SPLITBUF
           MOVE tpr-chiave-ricerca OF tpromo(1:21) TO 
           tpromo-tpr-chiave-ricerca-SPLITBUF(1:21)
           .

       tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-gdo-fine-SPLITBUF
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(1:5)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(6:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(14:8)
           .

       tpromo-tpr-chiave-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-fine-SPLITBUF
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(1:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-ini-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ini-SPLITBUF
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(1:8)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-volantino-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-volantino-SPLITBUF
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(1:8)
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(17:5)
           .

       tpromo-tpr-k-fine-vol-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-fine-vol-SPLITBUF
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(1:8)
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(17:5)
           .

       tpromo-tpr-k-data-ins-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-data-ins-SPLITBUF
           MOVE tpr-data-creazione OF tpromo(1:8) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(1:8)
           MOVE tpr-codice OF tpromo(1:15) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(9:15)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(24:5)
           .

       DataSet1-tpromo-INITSTART.
           IF DataSet1-tpromo-KEY-Asc
              MOVE Low-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE High-Value TO tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-INITEND.
           IF DataSet1-tpromo-KEY-Asc
              MOVE High-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE Low-Value TO tpr-chiave OF tpromo
           END-IF
           .

      * tpromo
       DataSet1-tpromo-START.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY >= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY <= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-NOTGREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY <= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY >= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-GREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY > tpr-chiave OF tpromo
           ELSE
              START tpromo KEY < tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-LESS.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY < tpr-chiave OF tpromo
           ELSE
              START tpromo KEY > tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpromo-LOCK
              READ tpromo WITH LOCK 
              KEY tpr-chiave OF tpromo
           ELSE
              READ tpromo WITH NO LOCK 
              KEY tpr-chiave OF tpromo
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT 
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeWrite>
      * <TOTEM:END>
           WRITE tpr-rec OF tpromo.
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tpr-rec OF tpromo.
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeDelete>
      * <TOTEM:END>
           DELETE tpromo.
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-INITSTART.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              MOVE Low-Value TO tqe-chiave
           ELSE
              MOVE High-Value TO tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-INITEND.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              MOVE High-Value TO tqe-chiave
           ELSE
              MOVE Low-Value TO tqe-chiave
           END-IF
           .

      * tmp-qta-eva
       DataSet1-tmp-qta-eva-START.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY >= tqe-chiave
           ELSE
              START tmp-qta-eva KEY <= tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-START-NOTGREATER.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY <= tqe-chiave
           ELSE
              START tmp-qta-eva KEY >= tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-START-GREATER.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY > tqe-chiave
           ELSE
              START tmp-qta-eva KEY < tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-START-LESS.
           IF DataSet1-tmp-qta-eva-KEY-Asc
              START tmp-qta-eva KEY < tqe-chiave
           ELSE
              START tmp-qta-eva KEY > tqe-chiave
           END-IF
           .

       DataSet1-tmp-qta-eva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeWrite>
      * <TOTEM:END>
           WRITE tqe-rec OF tmp-qta-eva.
           MOVE STATUS-tmp-qta-eva TO TOTEM-ERR-STAT
           MOVE "tmp-qta-eva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-eva TO TOTEM-ERR-STAT
           MOVE "tmp-qta-eva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-eva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-eva TO TOTEM-ERR-STAT
           MOVE "tmp-qta-eva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-eva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-INITSTART.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              MOVE Low-Value TO tqp-chiave
           ELSE
              MOVE High-Value TO tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-INITEND.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              MOVE High-Value TO tqp-chiave
           ELSE
              MOVE Low-Value TO tqp-chiave
           END-IF
           .

      * tmp-qta-pren
       DataSet1-tmp-qta-pren-START.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY >= tqp-chiave
           ELSE
              START tmp-qta-pren KEY <= tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-START-NOTGREATER.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY <= tqp-chiave
           ELSE
              START tmp-qta-pren KEY >= tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-START-GREATER.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY > tqp-chiave
           ELSE
              START tmp-qta-pren KEY < tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-START-LESS.
           IF DataSet1-tmp-qta-pren-KEY-Asc
              START tmp-qta-pren KEY < tqp-chiave
           ELSE
              START tmp-qta-pren KEY > tqp-chiave
           END-IF
           .

       DataSet1-tmp-qta-pren-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeWrite>
      * <TOTEM:END>
           WRITE tqp-rec OF tmp-qta-pren.
           MOVE STATUS-tmp-qta-pren TO TOTEM-ERR-STAT
           MOVE "tmp-qta-pren" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-pren TO TOTEM-ERR-STAT
           MOVE "tmp-qta-pren" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-qta-pren-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-qta-pren TO TOTEM-ERR-STAT
           MOVE "tmp-qta-pren" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-qta-pren, AfterDelete>
      * <TOTEM:END>
           .

       blister-k-magaz-MERGE-SPLITBUF.
           INITIALIZE blister-k-magaz-SPLITBUF
           MOVE bli-magazzino(1:3) TO blister-k-magaz-SPLITBUF(1:3)
           MOVE bli-codice(1:6) TO blister-k-magaz-SPLITBUF(4:6)
           .

       blister-k-des-MERGE-SPLITBUF.
           INITIALIZE blister-k-des-SPLITBUF
           MOVE bli-descrizione(1:50) TO blister-k-des-SPLITBUF(1:50)
           .

       DataSet1-blister-INITSTART.
           IF DataSet1-blister-KEY-Asc
              MOVE Low-Value TO bli-chiave
           ELSE
              MOVE High-Value TO bli-chiave
           END-IF
           .

       DataSet1-blister-INITEND.
           IF DataSet1-blister-KEY-Asc
              MOVE High-Value TO bli-chiave
           ELSE
              MOVE Low-Value TO bli-chiave
           END-IF
           .

      * blister
       DataSet1-blister-START.
           IF DataSet1-blister-KEY-Asc
              START blister KEY >= bli-chiave
           ELSE
              START blister KEY <= bli-chiave
           END-IF
           .

       DataSet1-blister-START-NOTGREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY <= bli-chiave
           ELSE
              START blister KEY >= bli-chiave
           END-IF
           .

       DataSet1-blister-START-GREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY > bli-chiave
           ELSE
              START blister KEY < bli-chiave
           END-IF
           .

       DataSet1-blister-START-LESS.
           IF DataSet1-blister-KEY-Asc
              START blister KEY < bli-chiave
           ELSE
              START blister KEY > bli-chiave
           END-IF
           .

       DataSet1-blister-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-blister-LOCK
              READ blister WITH LOCK 
              KEY bli-chiave
           ELSE
              READ blister WITH NO LOCK 
              KEY bli-chiave
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT 
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterDelete>
      * <TOTEM:END>
           .

       tmp-group-eva-tgr-k-ord-MERGE-SPLITBUF.
           INITIALIZE tmp-group-eva-tgr-k-ord-SPLITBUF
           MOVE tgr-cli-ragsoc(1:40) TO 
           tmp-group-eva-tgr-k-ord-SPLITBUF(1:40)
           MOVE tgr-des-ragsoc(1:40) TO 
           tmp-group-eva-tgr-k-ord-SPLITBUF(41:40)
           MOVE tgr-destino(1:5) TO 
           tmp-group-eva-tgr-k-ord-SPLITBUF(81:5)
           MOVE tgr-evasione(1:12) TO 
           tmp-group-eva-tgr-k-ord-SPLITBUF(86:12)
           .

       DataSet1-tmp-group-eva-INITSTART.
           IF DataSet1-tmp-group-eva-KEY-Asc
              MOVE Low-Value TO tgr-chiave
           ELSE
              MOVE High-Value TO tgr-chiave
           END-IF
           .

       DataSet1-tmp-group-eva-INITEND.
           IF DataSet1-tmp-group-eva-KEY-Asc
              MOVE High-Value TO tgr-chiave
           ELSE
              MOVE Low-Value TO tgr-chiave
           END-IF
           .

      * tmp-group-eva
       DataSet1-tmp-group-eva-START.
           IF DataSet1-tmp-group-eva-KEY-Asc
              START tmp-group-eva KEY >= tgr-chiave
           ELSE
              START tmp-group-eva KEY <= tgr-chiave
           END-IF
           .

       DataSet1-tmp-group-eva-START-NOTGREATER.
           IF DataSet1-tmp-group-eva-KEY-Asc
              START tmp-group-eva KEY <= tgr-chiave
           ELSE
              START tmp-group-eva KEY >= tgr-chiave
           END-IF
           .

       DataSet1-tmp-group-eva-START-GREATER.
           IF DataSet1-tmp-group-eva-KEY-Asc
              START tmp-group-eva KEY > tgr-chiave
           ELSE
              START tmp-group-eva KEY < tgr-chiave
           END-IF
           .

       DataSet1-tmp-group-eva-START-LESS.
           IF DataSet1-tmp-group-eva-KEY-Asc
              START tmp-group-eva KEY < tgr-chiave
           ELSE
              START tmp-group-eva KEY > tgr-chiave
           END-IF
           .

       DataSet1-tmp-group-eva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-group-eva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-group-eva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-group-eva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeWrite>
      * <TOTEM:END>
           WRITE tgr-rec OF tmp-group-eva.
           MOVE STATUS-tmp-group-eva TO TOTEM-ERR-STAT
           MOVE "tmp-group-eva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-group-eva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-group-eva TO TOTEM-ERR-STAT
           MOVE "tmp-group-eva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-group-eva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-group-eva TO TOTEM-ERR-STAT
           MOVE "tmp-group-eva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-group-eva, AfterDelete>
      * <TOTEM:END>
           .

       tagli-k2-MERGE-SPLITBUF.
           INITIALIZE tagli-k2-SPLITBUF
           MOVE tag-data(1:8) TO tagli-k2-SPLITBUF(1:8)
           .

       DataSet1-tagli-INITSTART.
           IF DataSet1-tagli-KEY-Asc
              MOVE Low-Value TO tag-chiave
           ELSE
              MOVE High-Value TO tag-chiave
           END-IF
           .

       DataSet1-tagli-INITEND.
           IF DataSet1-tagli-KEY-Asc
              MOVE High-Value TO tag-chiave
           ELSE
              MOVE Low-Value TO tag-chiave
           END-IF
           .

      * tagli
       DataSet1-tagli-START.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY >= tag-chiave
           ELSE
              START tagli KEY <= tag-chiave
           END-IF
           .

       DataSet1-tagli-START-NOTGREATER.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY <= tag-chiave
           ELSE
              START tagli KEY >= tag-chiave
           END-IF
           .

       DataSet1-tagli-START-GREATER.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY > tag-chiave
           ELSE
              START tagli KEY < tag-chiave
           END-IF
           .

       DataSet1-tagli-START-LESS.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY < tag-chiave
           ELSE
              START tagli KEY > tag-chiave
           END-IF
           .

       DataSet1-tagli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tagli-LOCK
              READ tagli WITH LOCK 
              KEY tag-chiave
           ELSE
              READ tagli WITH NO LOCK 
              KEY tag-chiave
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT 
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tagli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tagli-KEY-Asc
              IF DataSet1-tagli-LOCK
                 READ tagli NEXT WITH LOCK
              ELSE
                 READ tagli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tagli-LOCK
                 READ tagli PREVIOUS WITH LOCK
              ELSE
                 READ tagli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tagli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tagli-KEY-Asc
              IF DataSet1-tagli-LOCK
                 READ tagli PREVIOUS WITH LOCK
              ELSE
                 READ tagli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tagli-LOCK
                 READ tagli NEXT WITH LOCK
              ELSE
                 READ tagli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeWrite>
      * <TOTEM:END>
           WRITE tag-rec OF tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tag-rec OF tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeDelete>
      * <TOTEM:END>
           DELETE tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tscorte-INITSTART.
           IF DataSet1-tscorte-KEY-Asc
              MOVE Low-Value TO sco-chiave
           ELSE
              MOVE High-Value TO sco-chiave
           END-IF
           .

       DataSet1-tscorte-INITEND.
           IF DataSet1-tscorte-KEY-Asc
              MOVE High-Value TO sco-chiave
           ELSE
              MOVE Low-Value TO sco-chiave
           END-IF
           .

      * tscorte
       DataSet1-tscorte-START.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY >= sco-chiave
           ELSE
              START tscorte KEY <= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-NOTGREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY <= sco-chiave
           ELSE
              START tscorte KEY >= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-GREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY > sco-chiave
           ELSE
              START tscorte KEY < sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-LESS.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY < sco-chiave
           ELSE
              START tscorte KEY > sco-chiave
           END-IF
           .

       DataSet1-tscorte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tscorte-LOCK
              READ tscorte WITH LOCK 
              KEY sco-chiave
           ELSE
              READ tscorte WITH NO LOCK 
              KEY sco-chiave
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT 
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-INITSTART.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE Low-Value TO tcl-chiave
           ELSE
              MOVE High-Value TO tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-INITEND.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE High-Value TO tcl-chiave
           ELSE
              MOVE Low-Value TO tcl-chiave
           END-IF
           .

      * ttipocli
       DataSet1-ttipocli-START.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY >= tcl-chiave
           ELSE
              START ttipocli KEY <= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-NOTGREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY <= tcl-chiave
           ELSE
              START ttipocli KEY >= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-GREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY > tcl-chiave
           ELSE
              START ttipocli KEY < tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-LESS.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY < tcl-chiave
           ELSE
              START ttipocli KEY > tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ttipocli-LOCK
              READ ttipocli WITH LOCK 
              KEY tcl-chiave
           ELSE
              READ ttipocli WITH NO LOCK 
              KEY tcl-chiave
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT 
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-recapiti-INITSTART.
           IF DataSet1-recapiti-KEY-Asc
              MOVE Low-Value TO rec-chiave
           ELSE
              MOVE High-Value TO rec-chiave
           END-IF
           .

       DataSet1-recapiti-INITEND.
           IF DataSet1-recapiti-KEY-Asc
              MOVE High-Value TO rec-chiave
           ELSE
              MOVE Low-Value TO rec-chiave
           END-IF
           .

      * recapiti
       DataSet1-recapiti-START.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY >= rec-chiave
           ELSE
              START recapiti KEY <= rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-NOTGREATER.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY <= rec-chiave
           ELSE
              START recapiti KEY >= rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-GREATER.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY > rec-chiave
           ELSE
              START recapiti KEY < rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-LESS.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY < rec-chiave
           ELSE
              START recapiti KEY > rec-chiave
           END-IF
           .

       DataSet1-recapiti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-recapiti-LOCK
              READ recapiti WITH LOCK 
              KEY rec-chiave
           ELSE
              READ recapiti WITH NO LOCK 
              KEY rec-chiave
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT 
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-recapiti-KEY-Asc
              IF DataSet1-recapiti-LOCK
                 READ recapiti NEXT WITH LOCK
              ELSE
                 READ recapiti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-recapiti-LOCK
                 READ recapiti PREVIOUS WITH LOCK
              ELSE
                 READ recapiti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-recapiti-KEY-Asc
              IF DataSet1-recapiti-LOCK
                 READ recapiti PREVIOUS WITH LOCK
              ELSE
                 READ recapiti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-recapiti-LOCK
                 READ recapiti NEXT WITH LOCK
              ELSE
                 READ recapiti NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-tevacli-INITSTART.
           IF DataSet1-tmp-tevacli-KEY-Asc
              MOVE Low-Value TO tte-chiave
           ELSE
              MOVE High-Value TO tte-chiave
           END-IF
           .

       DataSet1-tmp-tevacli-INITEND.
           IF DataSet1-tmp-tevacli-KEY-Asc
              MOVE High-Value TO tte-chiave
           ELSE
              MOVE Low-Value TO tte-chiave
           END-IF
           .

      * tmp-tevacli
       DataSet1-tmp-tevacli-START.
           IF DataSet1-tmp-tevacli-KEY-Asc
              START tmp-tevacli KEY >= tte-chiave
           ELSE
              START tmp-tevacli KEY <= tte-chiave
           END-IF
           .

       DataSet1-tmp-tevacli-START-NOTGREATER.
           IF DataSet1-tmp-tevacli-KEY-Asc
              START tmp-tevacli KEY <= tte-chiave
           ELSE
              START tmp-tevacli KEY >= tte-chiave
           END-IF
           .

       DataSet1-tmp-tevacli-START-GREATER.
           IF DataSet1-tmp-tevacli-KEY-Asc
              START tmp-tevacli KEY > tte-chiave
           ELSE
              START tmp-tevacli KEY < tte-chiave
           END-IF
           .

       DataSet1-tmp-tevacli-START-LESS.
           IF DataSet1-tmp-tevacli-KEY-Asc
              START tmp-tevacli KEY < tte-chiave
           ELSE
              START tmp-tevacli KEY > tte-chiave
           END-IF
           .

       DataSet1-tmp-tevacli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-tevacli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-tevacli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-tevacli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeWrite>
      * <TOTEM:END>
           WRITE tte-rec OF tmp-tevacli.
           MOVE STATUS-tmp-tevacli TO TOTEM-ERR-STAT
           MOVE "tmp-tevacli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-tevacli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-tevacli TO TOTEM-ERR-STAT
           MOVE "tmp-tevacli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-tevacli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-tevacli TO TOTEM-ERR-STAT
           MOVE "tmp-tevacli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-tevacli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq.
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-multigest-INITSTART.
           IF DataSet1-multigest-KEY-Asc
              MOVE Low-Value TO mul-chiave
           ELSE
              MOVE High-Value TO mul-chiave
           END-IF
           .

       DataSet1-multigest-INITEND.
           IF DataSet1-multigest-KEY-Asc
              MOVE High-Value TO mul-chiave
           ELSE
              MOVE Low-Value TO mul-chiave
           END-IF
           .

      * multigest
       DataSet1-multigest-START.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY >= mul-chiave
           ELSE
              START multigest KEY <= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-NOTGREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY <= mul-chiave
           ELSE
              START multigest KEY >= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-GREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY > mul-chiave
           ELSE
              START multigest KEY < mul-chiave
           END-IF
           .

       DataSet1-multigest-START-LESS.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY < mul-chiave
           ELSE
              START multigest KEY > mul-chiave
           END-IF
           .

       DataSet1-multigest-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-multigest-LOCK
              READ multigest WITH LOCK 
              KEY mul-chiave
           ELSE
              READ multigest WITH NO LOCK 
              KEY mul-chiave
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT 
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeWrite>
      * <TOTEM:END>
           WRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeDelete>
      * <TOTEM:END>
           DELETE multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterDelete>
      * <TOTEM:END>
           .

       rpromo-k-stampa-MERGE-SPLITBUF.
           INITIALIZE rpromo-k-stampa-SPLITBUF
           MOVE rpr-codice(1:15) TO rpromo-k-stampa-SPLITBUF(1:15)
           MOVE rpr-data-creazione(1:8) TO 
           rpromo-k-stampa-SPLITBUF(16:8)
           MOVE rpr-ora-creazione(1:8) TO rpromo-k-stampa-SPLITBUF(24:8)
           .

       DataSet1-rpromo-INITSTART.
           IF DataSet1-rpromo-KEY-Asc
              MOVE Low-Value TO rpr-chiave
           ELSE
              MOVE High-Value TO rpr-chiave
           END-IF
           .

       DataSet1-rpromo-INITEND.
           IF DataSet1-rpromo-KEY-Asc
              MOVE High-Value TO rpr-chiave
           ELSE
              MOVE Low-Value TO rpr-chiave
           END-IF
           .

      * rpromo
       DataSet1-rpromo-START.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY >= rpr-chiave
           ELSE
              START rpromo KEY <= rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-NOTGREATER.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY <= rpr-chiave
           ELSE
              START rpromo KEY >= rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-GREATER.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY > rpr-chiave
           ELSE
              START rpromo KEY < rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-LESS.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY < rpr-chiave
           ELSE
              START rpromo KEY > rpr-chiave
           END-IF
           .

       DataSet1-rpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rpromo-LOCK
              READ rpromo WITH LOCK 
              KEY rpr-chiave
           ELSE
              READ rpromo WITH NO LOCK 
              KEY rpr-chiave
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT 
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rpromo-KEY-Asc
              IF DataSet1-rpromo-LOCK
                 READ rpromo NEXT WITH LOCK
              ELSE
                 READ rpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rpromo-LOCK
                 READ rpromo PREVIOUS WITH LOCK
              ELSE
                 READ rpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rpromo-KEY-Asc
              IF DataSet1-rpromo-LOCK
                 READ rpromo PREVIOUS WITH LOCK
              ELSE
                 READ rpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rpromo-LOCK
                 READ rpromo NEXT WITH LOCK
              ELSE
                 READ rpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeWrite>
      * <TOTEM:END>
           WRITE rpr-rec OF rpromo.
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRewrite>
      * <TOTEM:END>
           REWRITE rpr-rec OF rpromo.
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeDelete>
      * <TOTEM:END>
           DELETE rpromo.
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tregioni-INITSTART.
           IF DataSet1-tregioni-KEY-Asc
              MOVE Low-Value TO reg-chiave
           ELSE
              MOVE High-Value TO reg-chiave
           END-IF
           .

       DataSet1-tregioni-INITEND.
           IF DataSet1-tregioni-KEY-Asc
              MOVE High-Value TO reg-chiave
           ELSE
              MOVE Low-Value TO reg-chiave
           END-IF
           .

      * tregioni
       DataSet1-tregioni-START.
           IF DataSet1-tregioni-KEY-Asc
              START tregioni KEY >= reg-chiave
           ELSE
              START tregioni KEY <= reg-chiave
           END-IF
           .

       DataSet1-tregioni-START-NOTGREATER.
           IF DataSet1-tregioni-KEY-Asc
              START tregioni KEY <= reg-chiave
           ELSE
              START tregioni KEY >= reg-chiave
           END-IF
           .

       DataSet1-tregioni-START-GREATER.
           IF DataSet1-tregioni-KEY-Asc
              START tregioni KEY > reg-chiave
           ELSE
              START tregioni KEY < reg-chiave
           END-IF
           .

       DataSet1-tregioni-START-LESS.
           IF DataSet1-tregioni-KEY-Asc
              START tregioni KEY < reg-chiave
           ELSE
              START tregioni KEY > reg-chiave
           END-IF
           .

       DataSet1-tregioni-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tregioni-LOCK
              READ tregioni WITH LOCK 
              KEY reg-chiave
           ELSE
              READ tregioni WITH NO LOCK 
              KEY reg-chiave
           END-IF
           MOVE STATUS-tregioni TO TOTEM-ERR-STAT 
           MOVE "tregioni" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tregioni-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tregioni-KEY-Asc
              IF DataSet1-tregioni-LOCK
                 READ tregioni NEXT WITH LOCK
              ELSE
                 READ tregioni NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tregioni-LOCK
                 READ tregioni PREVIOUS WITH LOCK
              ELSE
                 READ tregioni PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tregioni TO TOTEM-ERR-STAT
           MOVE "tregioni" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tregioni-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tregioni-KEY-Asc
              IF DataSet1-tregioni-LOCK
                 READ tregioni PREVIOUS WITH LOCK
              ELSE
                 READ tregioni PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tregioni-LOCK
                 READ tregioni NEXT WITH LOCK
              ELSE
                 READ tregioni NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tregioni TO TOTEM-ERR-STAT
           MOVE "tregioni" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tregioni-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tregioni TO TOTEM-ERR-STAT
           MOVE "tregioni" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tregioni-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tregioni TO TOTEM-ERR-STAT
           MOVE "tregioni" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tregioni-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tregioni TO TOTEM-ERR-STAT
           MOVE "tregioni" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tregioni, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tprov-INITSTART.
           IF DataSet1-tprov-KEY-Asc
              MOVE Low-Value TO prv-chiave
           ELSE
              MOVE High-Value TO prv-chiave
           END-IF
           .

       DataSet1-tprov-INITEND.
           IF DataSet1-tprov-KEY-Asc
              MOVE High-Value TO prv-chiave
           ELSE
              MOVE Low-Value TO prv-chiave
           END-IF
           .

      * tprov
       DataSet1-tprov-START.
           IF DataSet1-tprov-KEY-Asc
              START tprov KEY >= prv-chiave
           ELSE
              START tprov KEY <= prv-chiave
           END-IF
           .

       DataSet1-tprov-START-NOTGREATER.
           IF DataSet1-tprov-KEY-Asc
              START tprov KEY <= prv-chiave
           ELSE
              START tprov KEY >= prv-chiave
           END-IF
           .

       DataSet1-tprov-START-GREATER.
           IF DataSet1-tprov-KEY-Asc
              START tprov KEY > prv-chiave
           ELSE
              START tprov KEY < prv-chiave
           END-IF
           .

       DataSet1-tprov-START-LESS.
           IF DataSet1-tprov-KEY-Asc
              START tprov KEY < prv-chiave
           ELSE
              START tprov KEY > prv-chiave
           END-IF
           .

       DataSet1-tprov-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tprov-LOCK
              READ tprov WITH LOCK 
              KEY prv-chiave
           ELSE
              READ tprov WITH NO LOCK 
              KEY prv-chiave
           END-IF
           MOVE STATUS-tprov TO TOTEM-ERR-STAT 
           MOVE "tprov" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tprov-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tprov-KEY-Asc
              IF DataSet1-tprov-LOCK
                 READ tprov NEXT WITH LOCK
              ELSE
                 READ tprov NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tprov-LOCK
                 READ tprov PREVIOUS WITH LOCK
              ELSE
                 READ tprov PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tprov TO TOTEM-ERR-STAT
           MOVE "tprov" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tprov-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tprov-KEY-Asc
              IF DataSet1-tprov-LOCK
                 READ tprov PREVIOUS WITH LOCK
              ELSE
                 READ tprov PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tprov-LOCK
                 READ tprov NEXT WITH LOCK
              ELSE
                 READ tprov NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tprov TO TOTEM-ERR-STAT
           MOVE "tprov" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tprov-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeWrite>
      * <TOTEM:END>
           WRITE prv-rec OF tprov.
           MOVE STATUS-tprov TO TOTEM-ERR-STAT
           MOVE "tprov" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tprov-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeRewrite>
      * <TOTEM:END>
           REWRITE prv-rec OF tprov.
           MOVE STATUS-tprov TO TOTEM-ERR-STAT
           MOVE "tprov" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tprov-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, BeforeDelete>
      * <TOTEM:END>
           DELETE tprov.
           MOVE STATUS-tprov TO TOTEM-ERR-STAT
           MOVE "tprov" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tprov, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-INITSTART.
           IF DataSet1-paramSHI-KEY-Asc
              MOVE Low-Value TO shi-chiave OF PARAMSHI
           ELSE
              MOVE High-Value TO shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-INITEND.
           IF DataSet1-paramSHI-KEY-Asc
              MOVE High-Value TO shi-chiave OF PARAMSHI
           ELSE
              MOVE Low-Value TO shi-chiave OF PARAMSHI
           END-IF
           .

      * paramSHI
       DataSet1-paramSHI-START.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY >= shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY <= shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-NOTGREATER.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY <= shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY >= shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-GREATER.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY > shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY < shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-START-LESS.
           IF DataSet1-paramSHI-KEY-Asc
              START paramSHI KEY < shi-chiave OF PARAMSHI
           ELSE
              START paramSHI KEY > shi-chiave OF PARAMSHI
           END-IF
           .

       DataSet1-paramSHI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-paramSHI-LOCK
              READ paramSHI WITH LOCK 
              KEY shi-chiave OF PARAMSHI
           ELSE
              READ paramSHI WITH NO LOCK 
              KEY shi-chiave OF PARAMSHI
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT 
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-paramSHI-KEY-Asc
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI NEXT WITH LOCK
              ELSE
                 READ paramSHI NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI PREVIOUS WITH LOCK
              ELSE
                 READ paramSHI PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-paramSHI-KEY-Asc
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI PREVIOUS WITH LOCK
              ELSE
                 READ paramSHI PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-paramSHI-LOCK
                 READ paramSHI NEXT WITH LOCK
              ELSE
                 READ paramSHI NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-paramSHI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-paramshi TO TOTEM-ERR-STAT
           MOVE "paramSHI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:paramSHI, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-riep-INITSTART.
           IF DataSet1-tmp-eva-riep-KEY-Asc
              MOVE Low-Value TO ter-chiave
           ELSE
              MOVE High-Value TO ter-chiave
           END-IF
           .

       DataSet1-tmp-eva-riep-INITEND.
           IF DataSet1-tmp-eva-riep-KEY-Asc
              MOVE High-Value TO ter-chiave
           ELSE
              MOVE Low-Value TO ter-chiave
           END-IF
           .

      * tmp-eva-riep
       DataSet1-tmp-eva-riep-START.
           IF DataSet1-tmp-eva-riep-KEY-Asc
              START tmp-eva-riep KEY >= ter-chiave
           ELSE
              START tmp-eva-riep KEY <= ter-chiave
           END-IF
           .

       DataSet1-tmp-eva-riep-START-NOTGREATER.
           IF DataSet1-tmp-eva-riep-KEY-Asc
              START tmp-eva-riep KEY <= ter-chiave
           ELSE
              START tmp-eva-riep KEY >= ter-chiave
           END-IF
           .

       DataSet1-tmp-eva-riep-START-GREATER.
           IF DataSet1-tmp-eva-riep-KEY-Asc
              START tmp-eva-riep KEY > ter-chiave
           ELSE
              START tmp-eva-riep KEY < ter-chiave
           END-IF
           .

       DataSet1-tmp-eva-riep-START-LESS.
           IF DataSet1-tmp-eva-riep-KEY-Asc
              START tmp-eva-riep KEY < ter-chiave
           ELSE
              START tmp-eva-riep KEY > ter-chiave
           END-IF
           .

       DataSet1-tmp-eva-riep-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-riep-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-riep-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-riep-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeWrite>
      * <TOTEM:END>
           WRITE ter-rec OF tmp-eva-riep.
           MOVE STATUS-tmp-eva-riep TO TOTEM-ERR-STAT
           MOVE "tmp-eva-riep" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-riep-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-eva-riep TO TOTEM-ERR-STAT
           MOVE "tmp-eva-riep" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-eva-riep-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-eva-riep TO TOTEM-ERR-STAT
           MOVE "tmp-eva-riep" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-eva-riep, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-INITSTART.
           IF DataSet1-macrobatch-KEY-Asc
              MOVE Low-Value TO mb-chiave
           ELSE
              MOVE High-Value TO mb-chiave
           END-IF
           .

       DataSet1-macrobatch-INITEND.
           IF DataSet1-macrobatch-KEY-Asc
              MOVE High-Value TO mb-chiave
           ELSE
              MOVE Low-Value TO mb-chiave
           END-IF
           .

      * macrobatch
       DataSet1-macrobatch-START.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY >= mb-chiave
           ELSE
              START macrobatch KEY <= mb-chiave
           END-IF
           .

       DataSet1-macrobatch-START-NOTGREATER.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY <= mb-chiave
           ELSE
              START macrobatch KEY >= mb-chiave
           END-IF
           .

       DataSet1-macrobatch-START-GREATER.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY > mb-chiave
           ELSE
              START macrobatch KEY < mb-chiave
           END-IF
           .

       DataSet1-macrobatch-START-LESS.
           IF DataSet1-macrobatch-KEY-Asc
              START macrobatch KEY < mb-chiave
           ELSE
              START macrobatch KEY > mb-chiave
           END-IF
           .

       DataSet1-macrobatch-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-macrobatch-LOCK
              READ macrobatch WITH LOCK 
              KEY mb-chiave
           ELSE
              READ macrobatch WITH NO LOCK 
              KEY mb-chiave
           END-IF
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT 
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-macrobatch-KEY-Asc
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch NEXT WITH LOCK
              ELSE
                 READ macrobatch NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch PREVIOUS WITH LOCK
              ELSE
                 READ macrobatch PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-macrobatch-KEY-Asc
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch PREVIOUS WITH LOCK
              ELSE
                 READ macrobatch PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-macrobatch-LOCK
                 READ macrobatch NEXT WITH LOCK
              ELSE
                 READ macrobatch NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeWrite>
      * <TOTEM:END>
           WRITE mb-rec OF macrobatch.
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mb-rec OF macrobatch.
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-macrobatch-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, BeforeDelete>
      * <TOTEM:END>
           DELETE macrobatch.
           MOVE STATUS-macrobatch TO TOTEM-ERR-STAT
           MOVE "macrobatch" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:macrobatch, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-INITSTART.
           .

       DataSet1-log-macrobatch-INITEND.
           .

       DataSet1-log-macrobatch-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeWrite>
      * <TOTEM:END>
           WRITE lm-riga OF log-macrobatch.
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-log-macrobatch-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-log-macrobatch TO TOTEM-ERR-STAT
           MOVE "log-macrobatch" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:log-macrobatch, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-INITSTART.
           IF DataSet1-usr-tel-KEY-Asc
              MOVE Low-Value TO usr-chiave
           ELSE
              MOVE High-Value TO usr-chiave
           END-IF
           .

       DataSet1-usr-tel-INITEND.
           IF DataSet1-usr-tel-KEY-Asc
              MOVE High-Value TO usr-chiave
           ELSE
              MOVE Low-Value TO usr-chiave
           END-IF
           .

      * usr-tel
       DataSet1-usr-tel-START.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY >= usr-chiave
           ELSE
              START usr-tel KEY <= usr-chiave
           END-IF
           .

       DataSet1-usr-tel-START-NOTGREATER.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY <= usr-chiave
           ELSE
              START usr-tel KEY >= usr-chiave
           END-IF
           .

       DataSet1-usr-tel-START-GREATER.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY > usr-chiave
           ELSE
              START usr-tel KEY < usr-chiave
           END-IF
           .

       DataSet1-usr-tel-START-LESS.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY < usr-chiave
           ELSE
              START usr-tel KEY > usr-chiave
           END-IF
           .

       DataSet1-usr-tel-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-usr-tel-LOCK
              READ usr-tel WITH LOCK 
              KEY usr-chiave
           ELSE
              READ usr-tel WITH NO LOCK 
              KEY usr-chiave
           END-IF
           MOVE status-usr-tel TO TOTEM-ERR-STAT 
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-usr-tel-KEY-Asc
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel NEXT WITH LOCK
              ELSE
                 READ usr-tel NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel PREVIOUS WITH LOCK
              ELSE
                 READ usr-tel PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-usr-tel-KEY-Asc
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel PREVIOUS WITH LOCK
              ELSE
                 READ usr-tel PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel NEXT WITH LOCK
              ELSE
                 READ usr-tel NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeWrite>
      * <TOTEM:END>
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRewrite>
      * <TOTEM:END>
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeDelete>
      * <TOTEM:END>
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-INITSTART.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE Low-Value TO tsi-chiave
           ELSE
              MOVE High-Value TO tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-INITEND.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE High-Value TO tsi-chiave
           ELSE
              MOVE Low-Value TO tsi-chiave
           END-IF
           .

      * tsetinvio
       DataSet1-tsetinvio-START.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY >= tsi-chiave
           ELSE
              START tsetinvio KEY <= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-NOTGREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY <= tsi-chiave
           ELSE
              START tsetinvio KEY >= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-GREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY > tsi-chiave
           ELSE
              START tsetinvio KEY < tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-LESS.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY < tsi-chiave
           ELSE
              START tsetinvio KEY > tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-LOCK
              READ tsetinvio WITH LOCK 
              KEY tsi-chiave
           ELSE
              READ tsetinvio WITH NO LOCK 
              KEY tsi-chiave
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT 
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE tpa-rec OF tparameva
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE cli-rec OF clienti
           INITIALIZE des-rec OF destini
           INITIALIZE mro-rec OF mrordini
           INITIALIZE mto-rec OF mtordini
           INITIALIZE k-mto-rec OF tmp-k-mtordini
           INITIALIZE lck-rec OF lockfile
           INITIALIZE ror-rec OF rordini
           INITIALIZE tor-rec OF tordini
           INITIALIZE pev-rec OF promoeva
           INITIALIZE age-rec OF agenti
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE gdo-rec OF tgrupgdo
           INITIALIZE art-rec OF articoli
           INITIALIZE k-mro-rec OF tmp-k-mrordini
           INITIALIZE imb-rec OF timballi
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE tpr-rec OF tpromo
           INITIALIZE prg-rec OF progmag
           INITIALIZE tqe-rec OF tmp-qta-eva
           INITIALIZE tqp-rec OF tmp-qta-pren
           INITIALIZE bli-rec OF blister
           INITIALIZE tgr-rec OF tmp-group-eva
           INITIALIZE tag-rec OF tagli
           INITIALIZE sco-rec OF tscorte
           INITIALIZE tcl-rec OF ttipocli
           INITIALIZE rec-rec OF recapiti
           INITIALIZE tge-rec OF tparamge
           INITIALIZE imp-rec OF timposte
           INITIALIZE tte-rec OF tmp-tevacli
           INITIALIZE prm-rec OF param
           INITIALIZE line-riga OF lineseq
           INITIALIZE mul-rec OF multigest
           INITIALIZE rpr-rec OF rpromo
           INITIALIZE mar-rec OF tmarche
           INITIALIZE reg-rec OF tregioni
           INITIALIZE prv-rec OF tprov
           INITIALIZE shi-rec OF paramSHI
           INITIALIZE ter-rec OF tmp-eva-riep
           INITIALIZE mb-rec OF macrobatch
           INITIALIZE lm-riga OF log-macrobatch
           INITIALIZE usr-rec OF usr-tel
           INITIALIZE tsi-rec OF tsetinvio
           .


      * GRID
       gd-tipocli-Content.
      * CELLS' SETTING
              MODIFY gd-tipocli, X = 1, Y = 1,
                CELL-DATA = "Codice",
      * CELLS' SETTING
              MODIFY gd-tipocli, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
           .

      * GRID
       gd-art-Content.
      * CELLS' SETTING
              MODIFY gd-art, X = 1, Y = 1,
                CELL-DATA = "Codice",
      * CELLS' SETTING
              MODIFY gd-art, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
           .

      * GRID
       gd1-Content.
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 1,
                CELL-DATA = "Anno",
      * CELLS' SETTING
              MODIFY gd1, X = 2, Y = 1,
                CELL-COLOR = 5,
                CELL-DATA = "Numero",
      * CELLS' SETTING
              MODIFY gd1, X = 3, Y = 1,
                CELL-DATA = "Cliente",
      * CELLS' SETTING
              MODIFY gd1, X = 4, Y = 1,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd1, X = 5, Y = 1,
                CELL-DATA = "N. Ord Cli",
      * CELLS' SETTING
              MODIFY gd1, X = 6, Y = 1,
                CELL-DATA = "Data",
      * CELLS' SETTING
              MODIFY gd1, X = 7, Y = 1,
                CELL-DATA = "Agente",
           .

      * GRID
       gd2-Content.
      * CELLS' SETTING
              MODIFY gd2, X = 1, Y = 1,
                CELL-DATA = "Art.",
      * CELLS' SETTING
              MODIFY gd2, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd2, X = 3, Y = 1,
                CELL-DATA = "Imb.",
      * CELLS' SETTING
              MODIFY gd2, X = 4, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd2, X = 5, Y = 1,
                CELL-DATA = "Ordinata",
      * CELLS' SETTING
              MODIFY gd2, X = 6, Y = 1,
                CELL-DATA = "Evasa",
      * CELLS' SETTING
              MODIFY gd2, X = 7, Y = 1,
                CELL-DATA = "Evadere",
      * COLUMNS' SETTING
              MODIFY gd2, X = 7  
                COLUMN-COLOR = 481,
           .

      * GRID
       gd3-Content.
      * CELLS' SETTING
              MODIFY gd3, X = 1, Y = 1,
                CELL-DATA = "Anno",
      * CELLS' SETTING
              MODIFY gd3, X = 2, Y = 1,
                CELL-DATA = "Num",
      * CELLS' SETTING
              MODIFY gd3, X = 3, Y = 1,
                CELL-COLOR = 5,
                CELL-DATA = "Cliente",
      * CELLS' SETTING
              MODIFY gd3, X = 4, Y = 1,
                CELL-COLOR = 5,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd3, X = 5, Y = 1,
                CELL-DATA = "Art",
      * CELLS' SETTING
              MODIFY gd3, X = 6, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd3, X = 7, Y = 1,
                CELL-DATA = "Imb",
      * CELLS' SETTING
              MODIFY gd3, X = 8, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd3, X = 9, Y = 1,
                CELL-DATA = "Qta",
      * CELLS' SETTING
              MODIFY gd3, X = 10, Y = 1,
                CELL-DATA = "O",
      * CELLS' SETTING
              MODIFY gd3, X = 11, Y = 1,
                CELL-DATA = "B",
      * CELLS' SETTING
              MODIFY gd3, X = 12, Y = 1,
                CELL-DATA = "P",
           .

      * GRID
       gd-riep-Content.
      * CELLS' SETTING
              MODIFY gd-riep, X = 1, Y = 1,
                CELL-DATA = "Magazzino",
      * CELLS' SETTING
              MODIFY gd-riep, X = 2, Y = 1,
                CELL-DATA = "Colli",
      * CELLS' SETTING
              MODIFY gd-riep, X = 3, Y = 1,
                CELL-DATA = "Quintali",
      * CELLS' SETTING
              MODIFY gd-riep, X = 4, Y = 1,
                CELL-DATA = "Articoli",
           .

      * FD's Initialize Paragraph
       DataSet1-tparameva-INITREC.
           INITIALIZE tpa-rec OF tparameva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destini-INITREC.
           INITIALIZE des-rec OF destini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-mrordini-INITREC.
           INITIALIZE mro-rec OF mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-mtordini-INITREC.
           INITIALIZE mto-rec OF mtordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-k-mtordini-INITREC.
           INITIALIZE k-mto-rec OF tmp-k-mtordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lockfile-INITREC.
           INITIALIZE lck-rec OF lockfile
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordini-INITREC.
           INITIALIZE ror-rec OF rordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordini-INITREC.
           INITIALIZE tor-rec OF tordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-promoeva-INITREC.
           INITIALIZE pev-rec OF promoeva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-agenti-INITREC.
           INITIALIZE age-rec OF agenti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tgrupgdo-INITREC.
           INITIALIZE gdo-rec OF tgrupgdo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-k-mrordini-INITREC.
           INITIALIZE k-mro-rec OF tmp-k-mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpromo-INITREC.
           INITIALIZE tpr-rec OF tpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-qta-eva-INITREC.
           INITIALIZE tqe-rec OF tmp-qta-eva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-qta-pren-INITREC.
           INITIALIZE tqp-rec OF tmp-qta-pren
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-blister-INITREC.
           INITIALIZE bli-rec OF blister
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-group-eva-INITREC.
           INITIALIZE tgr-rec OF tmp-group-eva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tagli-INITREC.
           INITIALIZE tag-rec OF tagli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tscorte-INITREC.
           INITIALIZE sco-rec OF tscorte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ttipocli-INITREC.
           INITIALIZE tcl-rec OF ttipocli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-recapiti-INITREC.
           INITIALIZE rec-rec OF recapiti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-tevacli-INITREC.
           INITIALIZE tte-rec OF tmp-tevacli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-multigest-INITREC.
           INITIALIZE mul-rec OF multigest
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rpromo-INITREC.
           INITIALIZE rpr-rec OF rpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tregioni-INITREC.
           INITIALIZE reg-rec OF tregioni
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tprov-INITREC.
           INITIALIZE prv-rec OF tprov
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-paramSHI-INITREC.
           INITIALIZE shi-rec OF paramSHI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-eva-riep-INITREC.
           INITIALIZE ter-rec OF tmp-eva-riep
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-macrobatch-INITREC.
           INITIALIZE mb-rec OF macrobatch
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-log-macrobatch-INITREC.
           INITIALIZE lm-riga OF log-macrobatch
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-usr-tel-INITREC.
           INITIALIZE usr-rec OF usr-tel
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tsetinvio-INITREC.
           INITIALIZE tsi-rec OF tsetinvio
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 2 ALSO 0
                  PERFORM Screen2-Buf-To-Fld
           END-EVALUATE
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 34,33,
              SIZE 44,40,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS FORM1-HANDLE,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form1 UPON FORM1-HANDLE
      * DISPLAY-COLUMNS settings
              MODIFY gd-tipocli, DISPLAY-COLUMNS (1, 8)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           move low-value to tcl-rec.
           start ttipocli key >= tcl-chiave
                 invalid continue
             not invalid
                 move 2 to riga
                 perform until 1 = 2
                    read ttipocli next at end exit perform end-read
                    move tcl-codice      to col-tcl-codice
                    move tcl-descrizione to col-tcl-descrizione
                    move 1 to hid-col-sel
                    modify gd-tipocli(riga, 1), cell-data col-tcl-codice
                    modify gd-tipocli(riga, 2), cell-data 
           col-tcl-descrizione
                    modify gd-tipocli(riga, 1), hidden-data hid-col-sel
                    modify gd-tipocli(riga), row-color 480
                    add 1 to riga
                 end-perform
           end-start.
           if RichiamoBatch
              move 1 to tipo-evasione
              perform PB-ESEGUI-LINKTO
              move 27 to key-status
           else
              move 1 to video-on
              modify form1-handle, visible video-on
           end-if

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY FORM1-HANDLE
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1010
                 PERFORM pb-sel-LinkTo
              WHEN Key-Status = 1020
                 PERFORM pb-desel-LinkTo
              WHEN Key-Status = 1002
                 PERFORM rb-normale-LinkTo
              WHEN Key-Status = 1003
                 PERFORM rb-immediata-LinkTo
              WHEN Key-Status = 1000
                 PERFORM chk-tutto-LinkTo
              WHEN Key-Status = 1001
                 PERFORM PB-ESEGUI-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1 UPON FORM1-HANDLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-tipocli-Content
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .

       Screen2-Open-Routine.
           PERFORM Screen2-Scrn
           PERFORM Screen2-Proc
           .

       Screen2-Scrn.
           PERFORM Screen2-Create-Win
           PERFORM Screen2-Init-Value
           PERFORM Screen2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1aa
           PERFORM Screen2-DISPLAY
           .

       Screen2-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 53,31,
              SIZE 145,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana8-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Screen2-Handle,
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,69,   
              HANDLE IN Form1-Tb-1-Handleaa
           DISPLAY Form1-Tb-1aa UPON Form1-Tb-1-Handleaa

      * Status-bar
           DISPLAY Screen2 UPON Screen2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-art, DISPLAY-COLUMNS (1, 9)
              MODIFY gd1, DISPLAY-COLUMNS (1, 7, 16, 48, 80, 97, 109)
              MODIFY gd2, DISPLAY-COLUMNS (1, 8, 61, 68, 78, 87, 96)
              MODIFY gd3, DISPLAY-COLUMNS (1, 6, 13, 42, 69, 75, 110, 
           116, 126, 132, 135, 138)
              MODIFY gd-riep, DISPLAY-COLUMNS (1, 23, 30, 43)
           .

       Screen2-PROC.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAccept>
           if not RichiamoBatch
              move 1 to video-on
              modify screen2-handle, visible video-on
           end-if.

           accept versione-evasione from environment "VERSIONE_EVASIONE"
           move 0 to num-cicli.
           set ingresso to true.
           perform SCRIVI-LOCKFILE.
           perform varying idx-mag from 1 by 1 until 1 = 2
              if save-el-deposito(idx-mag) = spaces
                 move 27 to key-status
                 exit perform
              end-if
              move save-el-deposito(idx-mag) to save-magazzino 
           mag-codice
              move save-el-gg-cons-max(idx-mag) to save-gg-cons-max
              read tmagaz no lock 

              if mag-sco-codice(1) not = spaces
                 perform SCR-ELAB-OPEN-ROUTINE
                 if tot-master not = 0
                    exit perform
                 end-if
              else
                 if RichiamoBatch
                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    string r-output                delimited size
                           "SCORTA NON IMPOSTATA " delimited size
                           save-magazzino          delimited size
                      into lm-riga
                    end-string
                    write lm-riga
                 end-if
              end-if
           end-perform.

           if RichiamoBatch
              perform varying idx-gen from 1 by 1 
                      until idx-gen > 25
                 if save-el-deposito(idx-gen) = spaces
                    exit perform
                 end-if  

                 perform PB-GENERA-LINKTO
              end-perform
              move 27 to key-status
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen2
                 ON EXCEPTION
                    PERFORM Screen2-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen2-Handle
           INITIALIZE Key-Status
           .

       Screen2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen2-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-applica-LinkTo
              WHEN Key-Status = 1004
                 PERFORM pb-genera-LinkTo
              WHEN Key-Status = 1001
                 PERFORM pb-prossimo-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA2-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen2-CLEAR.
           PERFORM Screen2-INIT-VALUE
           PERFORM Screen2-DISPLAY
           .

       Screen2-DISPLAY.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1aa
           DISPLAY Screen2 UPON Screen2-Handle
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Screen2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeExit>
           initialize line-riga
           perform SETTA-INIZIO-RIGA
           string r-inizio                      delimited size
                  "USCITA PROGRAMMA - UTENTE: " delimited size
                  user-codi                     delimited size
             into line-riga
           end-string.
           write line-riga.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen2-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-art-Content
      * GRID
           PERFORM gd1-Content
      * GRID
           PERFORM gd2-Content
      * GRID
           PERFORM gd3-Content
      * GRID
           PERFORM gd-riep-Content
           .

       Screen2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tmagaz-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tmagaz-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Update-Key.
           MOVE mag-rec OF tmagaz TO
                     Screen2-MULKEY-TMPBUF
           PERFORM Screen2-CLEAR
           PERFORM Screen2-INIT-DATA
           MOVE Screen2-MULKEY-TMPBUF TO
                     mag-rec OF tmagaz
           PERFORM DataSet1-tmagaz-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
           .

       Screen2-DUPLICATE-MOVEKEY.
           .

       Screen2-First.
           PERFORM Screen2-DUMMY-FIRST
           PERFORM DataSet1-tmagaz-INITSTART
           PERFORM DataSet1-tmagaz-START
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-tmagaz-Read-Next
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFirst>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Previous.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tmagaz-START-LESS
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-tmagaz-Read-Prev
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-PREVIOUS
           PERFORM Screen2-IUD-Display
           .

       Screen2-Next.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tmagaz-START-GREATER
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-tmagaz-Read-Next
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterNext>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-NEXT
           PERFORM Screen2-IUD-Display
           .
      
       Screen2-Last.
           PERFORM Screen2-DUMMY-LAST
           PERFORM DataSet1-tmagaz-INITEND
           PERFORM DataSet1-tmagaz-START-NOTGREATER
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-tmagaz-Read-Prev
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterLast>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Curr.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tmagaz-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCurrent>
      * <TOTEM:END>
           .

       Screen2-IUD-Display.
           IF Valid-STATUS-tmagaz
              PERFORM Screen2-ALLGRID-RESET
              PERFORM Screen2-Fld-To-Buf
              PERFORM Screen2-NAVI-FOR-MASTERGRID
              PERFORM Screen2-DISPLAY
           ELSE
              IF Screen2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Screen2-Extended-File-Status
              END-IF
           END-IF
           .

       Screen2-Add.
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-ADD
           PERFORM DataSet1-tmagaz-INITREC
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tmagaz-Rec-Write
           IF Valid-STATUS-tmagaz
              PERFORM Screen2-RESUMMARY-INS
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAdd>
      * <TOTEM:END>
           .
     
       Screen2-Update.
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tmagaz-START              
           IF NOT Valid-STATUS-tmagaz
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-tmagaz-Read
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-UPDATE
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tmagaz-Rec-Rewrite
           IF Valid-STATUS-tmagaz
              PERFORM Screen2-RESUMMARY-DEL
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterUpdate>
      * <TOTEM:END>
           .

       Screen2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Screen2-DUMMY-DELETE
      * delete
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tmagaz-Rec-Delete
           IF Valid-STATUS-tmagaz
              PERFORM Screen2-CLEAR
              PERFORM Screen2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-tmagaz
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDelete>
      * <TOTEM:END>
           PERFORM Screen2-ERR-CHECKING
           .

       Screen2-NAVI-FOR-MASTERGRID.
           .

       Screen2-ERR-CHECKING.
           IF Valid-STATUS-tmagaz
              PERFORM Screen2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Screen2-Extended-File-Status
           END-IF
           .

       Screen2-RESUMMARY-INS.
           .

       Screen2-RESUMMARY-DEL.
           .


       Screen2-DUMMY-FIRST.
           .

       Screen2-DUMMY-PREVIOUS.
           .

       Screen2-DUMMY-NEXT.
           .

       Screen2-DUMMY-LAST.
           .

       Screen2-DUMMY-CURR.
           .

       Screen2-DUMMY-ADD.
           .

       Screen2-DUMMY-UPDATE.
           .

       Screen2-DUMMY-UPDATE-INIT.
           .

       Screen2-DUMMY-DELETE.
           .

       Screen2-DUMMY-DELETE-INIT.
           .

       Screen2-Init-Value.
      * FORM : Screen2
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, SetDefault>
      * <TOTEM:END>
           PERFORM Screen2-FLD-TO-BUF
           .


       Screen2-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen2-SHOW-MSG-ROUTINE
           .

       Screen2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen2-DISPLAY-MESSAGE
           .

       Screen2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen2-Save-Status.
           MOVE DataSet1-tmagaz-KEY1-ORDER TO TMP-Screen2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Screen2-KEYIS
           MOVE mag-rec OF tmagaz TO 
              TMP-Screen2-tmagaz-RESTOREBUF
           .             

       Screen2-Restore-Status.
           MOVE TMP-Screen2-KEY1-ORDER TO DataSet1-tmagaz-KEY1-ORDER
           MOVE TMP-Screen2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Screen2-tmagaz-RESTOREBUF TO
              mag-rec OF tmagaz
           PERFORM DataSet1-tmagaz-START
           IF Valid-STATUS-tmagaz
              PERFORM DataSet1-tmagaz-Read-Next
           ELSE
              PERFORM DataSet1-tmagaz-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-tmagaz OR
              (Valid-STATUS-tmagaz AND
                 mag-rec OF tmagaz = 
                   TMP-Screen2-tmagaz-RESTOREBUF)
              PERFORM DataSet1-tmagaz-Read-Next
           END-PERFORM
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen Screen2
      ***---
       Screen2-BEFORE-SCREEN.
           evaluate control-id
           |78-ID-ef-cli è l'ID del campo ef-cli
           when 78-ID-ef-cli
                move 1 to StatusHelp
                perform STATUS-HELP
           |78-ID-ef-gdo è l'ID del campo ef-gdo
           when 78-ID-ef-gdo
                move 1 to StatusHelp
                perform STATUS-HELP
           |78-ID-ef-age è l'ID del campo ef-age
           when 78-ID-ef-age
                move 1 to StatusHelp
                perform STATUS-HELP
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","

      * Paragrafo per la struttura del codice in AFTER sulla screen Screen2
      ***---
       Screen2-AFTER-SCREEN.
           evaluate control-id
           |78-ID-ef-cli è l'ID del campo ef-cli
           when 78-ID-ef-cli
                move 0 to StatusHelp
                perform STATUS-HELP

           |78-ID-ef-gdo è l'ID del campo ef-gdo
           when 78-ID-ef-gdo
                move 0 to StatusHelp
                perform STATUS-HELP

           |78-ID-ef-age è l'ID del campo ef-age
           when 78-ID-ef-age
                move 0 to StatusHelp
                perform STATUS-HELP

           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."

      * Generazione stringa perform CONTROLLO

       scr-elab-Open-Routine.
           PERFORM scr-elab-Scrn
           PERFORM scr-elab-Proc
           .

       scr-elab-Scrn.
           PERFORM scr-elab-Create-Win
           PERFORM scr-elab-Init-Value
           PERFORM scr-elab-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 4,80,
              SIZE 72,20,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              RESIZABLE,
              NO SCROLL,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-elab-HANDLE,
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab UPON scr-elab-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-elab-PROC.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeAccept>
           if not RichiamoBatch
              move 1 to video-on
              modify scr-elab-handle, visible video-on
           end-if.

           if FiltraRecord perform FILTRA-RECORD
           else            perform EVASIONE-CLIENTI
           end-if.
           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab-HANDLE
           INITIALIZE Key-Status
           .

       scr-elab-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab-CLEAR.
           PERFORM scr-elab-INIT-VALUE
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab UPON scr-elab-HANDLE
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-elab-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab-FLD-TO-BUF
           .


       scr-elab-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab-SHOW-MSG-ROUTINE
           .

       scr-elab-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab-DISPLAY-MESSAGE
           .

       scr-elab-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab-Save-Status.
           .             

       scr-elab-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen scr-elab
      ***---
       scr-elab-BEFORE-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","

      * Paragrafo per la struttura del codice in AFTER sulla screen scr-elab
      ***---
       scr-elab-AFTER-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."

      * Generazione stringa perform CONTROLLO

       scr-elab-evasioni-Open-Routine.
           PERFORM scr-elab-evasioni-Scrn
           PERFORM scr-elab-evasioni-Proc
           .

       scr-elab-evasioni-Scrn.
           PERFORM scr-elab-evasioni-Create-Win
           PERFORM scr-elab-evasioni-Init-Value
           PERFORM scr-elab-evasioni-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab-evasioni-DISPLAY
           .

       scr-elab-evasioni-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 4,80,
              SIZE 72,20,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              RESIZABLE,
              NO SCROLL,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-elab-HANDLE,
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab-evasioni UPON scr-elab-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-elab-evasioni-PROC.
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, BeforeAccept>
           if not RichiamoBatch
              move 1 to video-on
              modify scr-elab-handle, visible video-on
           end-if.

           perform GENERA-EVASIONI.
           move 27 to key-status.

      *****     if tutto-ok
      *****        set ExitPerform to false
      *****        close    mtordini mrordini
      *****        open i-o mtordini mrordini
      *****
      *****        initialize tab-ordini tab-master
      *****        move 1 to idx
      *****        move 0 to tot-idx-m
      *****
      *****        move 0 to save-cli
      *****        move 0 to save-des
      *****        move 0 to tot-peso
      *****        move 0 to save-prog
      *****        set record-ok to true
      *****        move low-value to tmeva-rec
      *****        start tmp-evaart key >= tmeva-k-ord
      *****              invalid continue
      *****          not invalid
      *****              perform until 1 = 2
      *****                 |Mi ritorna dal blister
      *****                 if ExitPerform
      *****                    exit perform
      *****                 end-if
      *****                 read tmp-evaart next 
      *****                      at end
      *****                      exit perform
      *****                 end-read
      *****
      *****                 if tmeva-prog not = save-prog
      *****                    if el-sw-valore(tmeva-prog) = 0
      *****                       move tmeva-prog to save-prog
      *****                       if tmeva-ritira-si
      *****                          display message 
      *****                          "Evasione OMAGGIO!!!!"
      *****                   x"0d0a""Cliente:  "tmeva-cliente
      *****                   x"0d0a""Destino: "tmeva-destino
      *****                   x"0d0a""Con ritiro presso Lubex."
      *****                   x"0d0a""Confermi?"
      *****                                title titolo
      *****                                 type mb-yes-no
      *****                                 icon 2
      *****                               giving scelta
      *****                       else
      *****                          display message 
      *****                          "Evasione OMAGGIO!!!!"
      *****                   x"0d0a""Cliente:  "tmeva-cliente
      *****                   x"0d0a""Destino: "tmeva-destino
      *****                   x"0d0a""Merce franco destino."
      *****                   x"0d0a""Confermi?"
      *****                                title titolo
      *****                                 type mb-yes-no
      *****                                 icon 2
      *****                               giving scelta
      *****                       end-if
      *****                       if scelta = mb-yes
      *****                          set record-ok to true
      *****                       else
      *****                          set record-ok   to false
      *****                       end-if
      *****                    else
      *****                       set record-ok to true
      *****                    end-if
      *****                 end-if
      *****
      *****                 if record-ok
      *****                    
      *****                    move tmeva-chiave-testa to mto-chiave                       
      *****                    read mtordini no lock                       
      *****                    set idx-m to 1
      *****
      *****                    search el-chiave-m
      *****                    at end
      *****                       add 1 to tot-idx-m
      *****                       move mto-chiave to el-chiave-m(tot-idx-m)
      *****                    when el-chiave-m(idx-m) = mto-chiave
      *****                         continue |MI serve solo aggiungere
      *****                    end-search
      *****
      *****                    if tmeva-cod-cli     not = save-cli or
      *****                       tmeva-prg-destino not = save-des or
      *****                       tmeva-ritira      not = save-ritira
      *****                       move tmeva-cod-cli     to save-cli
      *****                                                 mto-cod-cli
      *****                                                 cli-codice 
      *****                                                 des-codice
      *****                       move tmeva-prg-destino to save-des
      *****                                                 des-prog
      *****                                                 mto-prg-destino
      *****                       move tmeva-ritira      to save-ritira
      *****                       set  cli-tipo-C      to true
      *****                       read clienti no lock invalid continue end-read
      *****                       if des-prog not = 0
      *****                          read destini no lock invalid continue end-read
      *****                       else
      *****                          move cli-utf to des-deposito-utf
      *****                       end-if
      *****                       perform SCRIVI-TESTA
      *****                       |lOCK SUI CONTATORI ESCO SUBITO
      *****                       if contatore-lock
      *****                          exit perform
      *****                       end-if
      *****                    end-if
      *****
      *****                    perform SCRIVI-RIGHE
      *****                 end-if
      *****           
      *****              end-perform
      *****        end-start
      *****
      *****        perform FINE-OPERAZIONE
      *****
      *****     end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab-evasioni-Evaluate-Func
                 MOVE 4 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab-HANDLE
           INITIALIZE Key-Status
           .

       scr-elab-evasioni-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab-evasioni-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab-evasioni-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab-evasioni-CLEAR.
           PERFORM scr-elab-evasioni-INIT-VALUE
           PERFORM scr-elab-evasioni-DISPLAY
           .

       scr-elab-evasioni-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab-evasioni UPON scr-elab-HANDLE
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-elab-evasioni-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab-evasioni-Init-Data.
           MOVE 4 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab-evasioni-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab-evasioni-FLD-TO-BUF
           .


       scr-elab-evasioni-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab-evasioni-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab-evasioni-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab-evasioni-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab-evasioni, FORM:scr-elab-evasioni, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab-evasioni-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab-evasioni-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab-evasioni-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab-evasioni-SHOW-MSG-ROUTINE
           .

       scr-elab-evasioni-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab-evasioni-DISPLAY-MESSAGE
           .

       scr-elab-evasioni-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab-evasioni-Save-Status.
           .             

       scr-elab-evasioni-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen scr-elab-evasioni
      ***---
       scr-elab-evasioni-BEFORE-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","

      * Paragrafo per la struttura del codice in AFTER sulla screen scr-elab-evasioni
      ***---
       scr-elab-evasioni-AFTER-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."

      * Generazione stringa perform CONTROLLO

       scr-fine-Open-Routine.
           PERFORM scr-fine-Scrn
           PERFORM scr-fine-Proc
           .

       scr-fine-Scrn.
           PERFORM scr-fine-Create-Win
           PERFORM scr-fine-Init-Value
           PERFORM scr-fine-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 20,30,
              SIZE 30,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              RESIZABLE,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Operazione conclusa - Riepilogo",
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-fine-SF-HANDLE,
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-fine UPON scr-fine-SF-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-fine-PROC.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeAccept>
           if not RichiamoBatch
              move 1 to video-on
              modify scr-fine-sf-handle, visible video-on
           end-if.

           compute tot-ordini = ultimo-numero - primo-numero + 1.
           move primo-numero  to primo-numero-z.
           move ultimo-numero to ultimo-numero-z.
           move tot-ordini    to tot-ordini-z.
           display scr-fine.

           if RichiamoBatch 
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga       
              string r-output                  delimited size
                     "GENERATE EVASIONI PER: " delimited size
                     save-magazzino            delimited size
                     " DAL N. "                delimited size
                     primo-numero-z            delimited size
                     " AL N. "                 delimited size
                     ultimo-numero-z           delimited size
                     " - TOTALE EVASIONI: "    delimited size
                     tot-ordini-z              delimited size
                     " - UTENTE: "             delimited size
                     user-codi                 delimited size
               into lm-riga
              end-string
              write lm-riga               

              move lk-mb-id to mb-id
              read macrobatch no lock 
              add 1 to idx-mag-gen
              move save-magazzino to mb-evacli-mag-codice(idx-mag-gen)
              move primo-numero   to mb-evacli-primo-numero(idx-mag-gen)
              move ultimo-numero  to 
           mb-evacli-ultimo-numero(idx-mag-gen)
              move tot-ordini     to mb-evacli-tot-ordini(idx-mag-gen)
              move idx-mag-gen    to mb-evacli-tot-mag
              rewrite mb-rec
              move 27 to key-status
           end-if.

           initialize line-riga.
           perform SETTA-INIZIO-RIGA.
           string r-inizio                  delimited size
                  "GENERATE EVASIONI PER: " delimited size
                  save-magazzino            delimited size
                  " DAL N. "                delimited size
                  primo-numero-z            delimited size
                  " AL N. "                 delimited size
                  ultimo-numero-z           delimited size
                  " - TOTALE EVASIONI: "    delimited size
                  tot-ordini-z              delimited size
                  " - UTENTE: "             delimited size
                  user-codi                 delimited size
            into line-riga
           end-string.
           write line-riga.
           add 1 to primo-numero.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-fine
                 ON EXCEPTION
                    PERFORM scr-fine-Evaluate-Func
                 MOVE 5 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-fine-SF-HANDLE
           INITIALIZE Key-Status
           .

       scr-fine-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-fine-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-fine-Exit
                 END-IF
              WHEN Key-Status = 100
                 PERFORM pb-si-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-fine-CLEAR.
           PERFORM scr-fine-INIT-VALUE
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-DISPLAY.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-fine UPON scr-fine-SF-HANDLE
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-fine-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeExit>
           display message "Confermi l'uscita?"
                    x"0d0a""PRENDERE NOTA DEI NUMERI ASSEGNATI"
                    title titolo
                  default mb-no
                   giving scelta
                     icon 2
                     type mb-yes-no
           if scelta = mb-no
              move 26 to key-status
              exit paragraph
           end-if.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-fine-Init-Data.
           MOVE 5 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-fine-Init-Value.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, SetDefault>
      * <TOTEM:END>
           PERFORM scr-fine-FLD-TO-BUF
           .


       scr-fine-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-fine-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-fine-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-fine-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-fine-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-fine-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-fine-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-fine-SHOW-MSG-ROUTINE
           .

       scr-fine-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-fine-DISPLAY-MESSAGE
           .

       scr-fine-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-fine-Save-Status.
           .             

       scr-fine-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen scr-fine
      ***---
       scr-fine-BEFORE-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","

      * Paragrafo per la struttura del codice in AFTER sulla screen scr-fine
      ***---
       scr-fine-AFTER-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."

      * Generazione stringa perform CONTROLLO

       scr-elab-tprev-Open-Routine.
           PERFORM scr-elab-tprev-Scrn
           PERFORM scr-elab-tprev-Proc
           .

       scr-elab-tprev-Scrn.
           PERFORM scr-elab-tprev-Create-Win
           PERFORM scr-elab-tprev-Init-Value
           PERFORM scr-elab-tprev-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab-tprev-DISPLAY
           .

       scr-elab-tprev-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 5,00,
              SIZE 50,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              RESIZABLE,
              NO SCROLL,
              USER-GRAY,
           VISIBLE video-on,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-elab-tprev-HANDLE,
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab-tprev UPON scr-elab-tprev-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-elab-tprev-PROC.
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, BeforeAccept>
           if not RichiamoBatch
              move 1 to video-on
              modify scr-elab-tprev-handle, visible video-on
              move user-codi             to link-tprev-user
           else
              move "MACROBATCH" to link-tprev-user
           end-if.            
           move scr-elab-tprev-handle to link-tprev-handle.
           call   "tprev-p"  using tprev-linkage.
           cancel "tprev-p".
           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab-tprev-Evaluate-Func
                 MOVE 6 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab-tprev-HANDLE
           INITIALIZE Key-Status
           .

       scr-elab-tprev-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab-tprev-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab-tprev-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab-tprev-CLEAR.
           PERFORM scr-elab-tprev-INIT-VALUE
           PERFORM scr-elab-tprev-DISPLAY
           .

       scr-elab-tprev-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab-tprev UPON scr-elab-tprev-HANDLE
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-elab-tprev-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab-tprev-Init-Data.
           MOVE 6 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab-tprev-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab-tprev-FLD-TO-BUF
           .


       scr-elab-tprev-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab-tprev-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab-tprev-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab-tprev-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab-tprev, FORM:scr-elab-tprev, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab-tprev-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab-tprev-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab-tprev-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab-tprev-SHOW-MSG-ROUTINE
           .

       scr-elab-tprev-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab-tprev-DISPLAY-MESSAGE
           .

       scr-elab-tprev-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab-tprev-Save-Status.
           .             

       scr-elab-tprev-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen scr-elab-tprev
      ***---
       scr-elab-tprev-BEFORE-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","

      * Paragrafo per la struttura del codice in AFTER sulla screen scr-elab-tprev
      ***---
       scr-elab-tprev-AFTER-SCREEN.
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."

      * Generazione stringa perform CONTROLLO



       Screen1-Event-Proc.
           .

       Screen4-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 14 ALSO
                    FORM1-HANDLE 
              PERFORM gd-tipocli-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

       Screen2-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Begin-Drag
           WHEN Msg-End-Drag ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       Screen2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5005 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5005 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5005 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 5005 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5005 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5005 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Begin-Drag ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    Screen2-Handle 
              PERFORM gd-riep-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

       gd-r-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 5006 ALSO
                    Screen2-Handle 
              PERFORM gd3-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate CONTROL-ID
           when 78-ID-ef-cli
                set cli-tipo-C    to true
                move "clienti-CF" to como-file
      
                inquire ef-cli,  value in cli-codice
                call "zoom-gt"   using como-file, cli-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move cli-codice   to ef-cli-buf
                   move cli-ragsoc-1 to lab-cli-buf
                   display ef-cli lab-cli
                end-if
      
           when 78-ID-ef-gdo
                move "tgrupgdo" to como-file
                inquire ef-gdo, value in gdo-codice
                call "zoom-gt"   using como-file, gdo-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move gdo-codice       to ef-gdo-buf
                   move gdo-intestazione to lab-gdo-buf
                   display ef-gdo lab-gdo
                end-if
      
           when 78-ID-ef-age
                move "agenti" to como-file
                inquire ef-age, value in age-codice
                call "zoom-gt"   using como-file, age-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move age-codice   to ef-age-buf
                   move age-ragsoc-1 to lab-age-buf
                   display ef-age lab-age
                end-if
      
           when 78-ID-gd-art
                inquire gd-art, cursor-y in store-riga
                move "articoli"    to como-file
                inquire gd-art(store-riga, 1), cell-data in art-codice
                call "zoom-gt"   using como-file, art-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move art-codice      to col-cod
                   move art-descrizione to col-des
                   modify gd-art(store-riga, 1), cell-data col-cod
                   modify gd-art(store-riga, 2), cell-data col-des
                end-if
           end-evaluate               
           .
      * <TOTEM:END>

       CONTROLLA-EVASIONE-NO-GIACENZA.
      * <TOTEM:PARA. CONTROLLA-EVASIONE-NO-GIACENZA>
      *****     call   "prog-after-evas" using save-magazzino user-codi.
      *****     cancel "prog-after-evas" 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.
           evaluate control-id
           when 78-ID-ef-cli
                inquire ef-cli, value in cli-codice
                if cli-codice = 0
                   move "TUTTI I CLIENTI" to cli-ragsoc-1
                else
                   set cli-tipo-C to true
                   read clienti no lock 
                      invalid
                         move spaces to cli-ragsoc-1
                         set errori to true
                         display message "Cliente non valido"
                                 title tit-err
                                  icon 2
                   end-read
                end-if
                move cli-ragsoc-1 to lab-cli-buf
                display lab-cli

           when 78-ID-ef-gdo
                inquire ef-gdo, value in gdo-codice
                if gdo-codice = spaces
                   move "TUTTI I GRUPPI" to gdo-intestazione
                else
                   read tgrupgdo no lock 
                        invalid
                        move spaces to gdo-intestazione
                        set errori to true
                        display message "Gruppo GDO non valido"
                                  title tit-err
                                   icon 2
                   end-read
                end-if
                move gdo-intestazione to lab-gdo-buf
                display lab-gdo

           when 78-ID-ef-age
                inquire ef-age, value in age-codice
                if age-codice = 0
                   move "TUTTI GLI AGENTI" to age-ragsoc-1
                else
                   read agenti no lock 
                      invalid
                         move spaces to age-ragsoc-1
                         set errori to true
                         display message "Agente non valido"
                                   title tit-err
                                    icon 2
                   end-read
                end-if
                move age-ragsoc-1 to lab-age-buf
                display lab-age

           end-evaluate.
      
           if errori
              perform CANCELLA-COLORE
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       COUNTER-VIDEO.
      * <TOTEM:PARA. COUNTER-VIDEO>
           if RichiamoBatch exit paragraph end-if.
           add 1 to counter.
           add 1 to counter2.
           if counter2 = 10
              move counter to counter-edit
              display counter-edit
                 upon scr-elab-Handle at column 19
                                           line 01
              move 0 to counter2
           end-if 
           .
      * <TOTEM:END>

       CREA-FILES.
      * <TOTEM:PARA. CREA-FILES>
           if path-tmp-k-mtordini not = spaces
              close       tmp-k-mtordini
              open output tmp-k-mtordini
              close       tmp-k-mtordini
              open i-o    tmp-k-mtordini

              close       tmp-k-mrordini
              open output tmp-k-mrordini
              close       tmp-k-mrordini
              open i-o    tmp-k-mrordini

              close       tmp-qta-eva 
              open output tmp-qta-eva   
              close       tmp-qta-eva 
              open i-o    tmp-qta-eva 

              close       tmp-qta-pren
              open output tmp-qta-pren
              close       tmp-qta-pren
              open i-o    tmp-qta-pren 

           end-if.

           close       tmp-tevacli.
           open output tmp-tevacli.
           close       tmp-tevacli.
           open i-o    tmp-tevacli.

           close       tmp-group-eva.
           open output tmp-group-eva.
           close       tmp-group-eva.
           open i-o    tmp-group-eva 
           .
      * <TOTEM:END>

       DELETE-LOCKFILE.
      * <TOTEM:PARA. DELETE-LOCKFILE>
           move 78-evacli to lck-nome-pgm.
           delete lockfile invalid continue end-delete.
           if status-lockfile = "49"
              open i-o lockfile
              move 78-evacli to lck-nome-pgm
              delete lockfile invalid continue end-delete
           end-if 
           .
      * <TOTEM:END>

       DISPLAY-GIACENZA.
      * <TOTEM:PARA. DISPLAY-GIACENZA>
           move mro-prg-cod-articolo to tqp-articolo.
           move mro-promo            to tqp-promo.
           read tmp-qta-pren no lock
                invalid move 0 to tqp-prenotata-orig
           end-read.

           move mro-prg-cod-articolo to tqe-articolo.
           read tmp-qta-eva no lock
                invalid move 0 to tqe-giac-utile
      *****      not invalid
      *****          if tqp-prenotata = 0 and mro-promo = 0
      *****             move tqe-tot-pren to tqp-prenotata
      *****          end-if
           end-read.
           move tqe-giac-utile to lab-giac-buf.
           display lab-giac.
           if tqe-giac-utile > 0
              modify lab-giac, color 3
              modify lab1,     color 3
           else
              modify lab-giac, color 5
              modify lab1,     color 5
           end-if.

           move tqp-prenotata-orig to lab-pren-buf.
           display lab-pren.

           move mro-promo to lab-promo-buf.
           display lab-promo 
           .
      * <TOTEM:END>

       EVASIONE-CLIENTI.
      * <TOTEM:PARA. EVASIONE-CLIENTI>
           perform CREA-FILES.               

           if RichiamoBatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output         delimited size
                     "EVASIONE "      delimited size
                     save-magazzino   delimited size
                     "..."            delimited size
                into lm-riga
              end-string
              write lm-riga
           end-if.

           if save-el-deposito(idx-mag + 1) = spaces
              move spaces to lab-mag-next-buf
              move 0 to v-next
           else
              move save-el-deposito(idx-mag + 1) to save-magazzino-next
              move save-magazzino-next to mag-codice
              read tmagaz no lock invalid continue end-read
              initialize lab-mag-next-buf
              string mag-codice      delimited size
                     " - "           delimited size
                     mag-descrizione delimited size
                     into lab-mag-next-buf
              end-string
              move 1 to v-next
           end-if.
           display lab-mag-next pb-prossimo.

           move save-magazzino to mag-codice.
           read tmagaz no lock invalid continue end-read.
           initialize lab-mag-buf.
           string mag-codice      delimited size
                  " - "           delimited size
                  mag-descrizione delimited size
                  into lab-mag-buf
           end-string.
           move mag-blocco-24000 to save-mag-blocco-24000.
           display lab-mag.
      *****     if mag-complete-si
      *****        set EvasioneIntera to true
      *****     else
      *****        set EvasioneIntera to false
      *****     end-if.

           move 0 to counter counter2.
           move 0 to tot-master.
           move spaces to tge-chiave.
           read tparamge no lock invalid continue end-read.
           move low-value to mto-rec.
           set mto-registrato to true.
           start mtordini key >= k-mto-stato
                 invalid continue
             not invalid perform LOOP-MTORDINI
           end-start.

           if tot-master > 0
              perform CICLO-PROMO
              perform CICLO-EVADIBILITA-PROMO
              perform CICLO-BANCO
              perform CICLO-EVADIBILITA-BANCO
              perform RIEMPI-GD1
      *****        if EvasioneIntera
                 perform EVASIONE-INTERA
      *****        end-if
              perform RIEMPI-GD3
              perform RIEMPI-GD-RIEP
              move 2 to event-data-2
              perform SPOSTAMENTO-1

              initialize line-riga
              perform SETTA-INIZIO-RIGA
              string r-inizio               delimited size
                     "EVASIONE RICHIESTA: " delimited size
                     save-magazzino         delimited size
                into line-riga
              end-string
              write line-riga
           else
              if RichiamoBatch
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output                              delimited 
           size
                        "NON CI SONO MASTER DA EVADERE PER "  delimited 
           size
                        save-magazzino                        delimited 
           size
                   into lm-riga
                 end-string
                 write lm-riga  
              else
                 display message "Non ci sono master da evadere per " 
           save-magazzino
                           title titolo
                            icon 2
              end-if

              initialize line-riga
              perform SETTA-INIZIO-RIGA
              string r-inizio                             delimited size
                     "Non ci sono master da evadere per " delimited size
                     save-magazzino                       delimited size
                into line-riga
              end-string
              write line-riga
           end-if.

      ***---
       LOOP-MTORDINI.
           |FILTRO TUTTI I MASTER APPARTENENTI ALL'EVASIONE SCELTA E NON CHIUSI
           |FILTRO TUTTI I MASTER CON DATA CONSEGNA < DI OGGI+GG-CONSEGNA-MAX 
           |SE EVADI TUTTO=NO, ALTRIMENTI NON GUARDO NEMMENO I GIORNI DI CONSEGNA
           perform until 1 = 2
              set record-ok to false
              read mtordini next at end exit perform end-read
              if mto-chiuso exit perform end-if

              perform COUNTER-VIDEO

              |CONTROLLI PRELIMINARI
              if mto-chiuso-man or mto-sped-tot or
                 mto-causale-blocco-manuale|     or
                 |mto-causale-blocco-fido
                 continue
              else
                 set cli-tipo-C to true
                 move mto-cod-cli to cli-codice
                 read clienti no lock invalid continue end-read
                 if cli-attivo   or
                  ( cli-bloccato and cli-fuori-fido )
                    if mto-prg-destino not = 0
                       move mto-cod-cli     to des-codice
                       move mto-prg-destino to des-prog
                       read destini no lock invalid continue end-read
                       if des-attivo
                          set record-ok to true
                       end-if
                    else
                       set record-ok to true
                    end-if
                 end-if
              end-if

              if record-ok
                 |NORMALE 
                 if tipo-evasione = 1 and mto-immediato-si
                    set record-ok to false
                 end-if
                 |IMMEDIATA 
                 if tipo-evasione = 2 and mto-immediato-no
                    set record-ok to false
                 end-if   
              end-if

              if record-ok
                 move mto-cod-cli     to como-prm-cliente
                 move mto-prg-destino to como-prm-destino
                 perform TROVA-PARAMETRO
                 perform MASTER-NUOVI-CONTROLLI
              end-if
           end-perform 
           .
      * <TOTEM:END>

       FILTRA-RECORD.
      * <TOTEM:PARA. FILTRA-RECORD>
           move 0 to lab-giac-buf.
           display lab-giac.
           modify lab-giac, color 3.
           modify lab1,     color 3.

           move cli-codice to como-cli-codice.
           move gdo-codice to como-gdo-codice.
           move age-codice to como-age-codice.
           initialize tab-articoli.
           move 0 to tot-articoli.
           perform varying idx-art from 1 by 1 
                     until idx-art > 100
              inquire gd-art(idx-art + 1, 1), cell-data in art-codice
              if art-codice = 0
                 exit perform
              end-if
              move art-codice to el-articolo(idx-art)
              add 1 to tot-articoli
           end-perform.

           perform RIEMPI-GD1.
           modify pb-applica, bitmap-number = 1.
           move 78-ID-ef-cli to control-id.
           move 4 to accept-control.
           perform CANCELLA-COLORE.
           inquire gd1, last-row in tot-righe.
           if tot-righe > 1
              move 2 to event-data-2
              perform SPOSTAMENTO-1
           else
              modify gd2, reset-grid = 1
              perform GD2-CONTENT
           end-if 
           .
      * <TOTEM:END>

       FINE-OPERAZIONE.
      * <TOTEM:PARA. FINE-OPERAZIONE>
           if not contatore-lock and stordc-da-num not = 0
              set evasioni-generate to true
              modify scr-elab-HANDLE, visible false 
      
              perform SCR-FINE-OPEN-ROUTINE
                              
      *****        set ok-messaggio to true
      *****        perform CONTROLLA-CLIENTE
      
              if not RichiamoBatch
                 set PrintXX to true
                 perform ACCESSOXX                 
                 modify scr-elab-HANDLE, visible true
                 modify pb-applica,      visible false
                 modify pb-genera,       visible false
                 modify lab-attendere,   visible true 
              end-if                                

              set no-mail to true
              set ordine-evaso to true
              perform varying idx-m from 1 by 1 
                        until idx-m > tot-idx-m
                 move el-chiave-m(idx-m) to mto-chiave
                 perform AGGIORNA-STATO-MASTER
              end-perform
                                      
              perform varying idx-tipocli from 1 by 1 
                        until idx-tipocli > tot-idx-tipocli
                 move el-tipocli(idx-tipocli) to stordc-tipocli
                 set stordc-evasioni to true
                 call   "stordcp" using stordcp-limiti
                 cancel "stordcp"
              end-perform
      
      *****        set ok-messaggio to false
      *****        perform CONTROLLA-CLIENTE
                                        
              if not RichiamoBatch
                 modify scr-elab-HANDLE, visible false
                 modify pb-applica,      visible true
                 modify pb-genera,       visible true
                 modify lab-attendere,   visible false
              end-if

              perform DELETE-LOCKFILE
              perform SCR-ELAB-TPREV-OPEN-ROUTINE
                                              
              set no-mail to true
              set ordine-evaso to true
              perform varying idx-m from 1 by 1 
                        until idx-m > tot-idx-m
                 move el-chiave-m(idx-m) to mto-chiave
                 perform AGGIORNA-STATO-MASTER
              end-perform

              perform CONTROLLA-EVASIONE-NO-GIACENZA

              move 0 to num-cicli
              move 0 to stordc-da-anno
              move 0 to stordc-da-num
              move 0 to primo-numero
              if not RichiamoBatch
                 perform DESTROYXX
              end-if

           end-if 
           .
      * <TOTEM:END>

       GENERA-EVASIONI.
      * <TOTEM:PARA. GENERA-EVASIONI>
           move spaces to mess.
           accept mess from environment "SW_MESS_EVASIONE".
           if RichiamoBatch
              move "N" to mess
           end-if.

           set PrimaVolta to true.
           set contatore-lock to false.
           move 0 to counter counter2 save-id-evasione idx-m.
           inquire gd3, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              inquire gd3(riga, 1), hidden-data in g3-hidden

              if hid-id-evasione not = save-id-evasione
                 move hid-id-evasione to tte-id-evasione
                 read tmp-tevacli no lock
                 if tte-blocco-peso-si
                    set record-ok to false
                 else
                    perform DOMANDE-EVASIONE
                    if record-ok
                       perform CONTROLLI-EVASIONE-TIPOLOGIE
                    end-if
                    if record-ok
                       perform SCRIVI-TESTA
                       if contatore-lock
                          exit perform
                       end-if
                       perform SCRIVI-RIGA
                    end-if
                    move hid-id-evasione to save-id-evasione
                 end-if
              else
                 if record-ok
                    perform SCRIVI-RIGA
                 end-if
              end-if

              perform COUNTER-VIDEO

           end-perform.

           call   "evaomag" using tge-anno primo-numero ultimo-numero.
           cancel "evaomag".

           call   "evacontras" using tge-anno primo-numero 
           ultimo-numero.
           cancel "evacontras".

      ***---
       DOMANDE-EVASIONE.
           set record-ok to true
           if tte-righe = tte-righe-omaggio
              set cli-tipo-C   to true
              move tte-cliente to cli-codice
              read clienti     no lock
              if tte-destino not = 0
                 move tte-cliente to des-codice
                 move tte-destino to des-prog
                 read destini no lock
              else
                 move cli-ragsoc-1 to des-ragsoc-1
              end-if

              if mess not = "N"
                 if tte-ritira-si
                    if RichiamoBatch
                       move mb-yes to scelta
                    else
                       display message 
                             "Evasione OMAGGIO!!!!"
                      x"0d0a""Cliente:  " cli-ragsoc-1
                      x"0d0a""Destino: "  des-ragsoc-1
                      x"0d0a""Con ritiro presso Lubex."
                      x"0d0a""Confermi?"
                                title titolo
                                 type mb-yes-no
                                 icon 2
                               giving scelta
                    end-if
                 else            
                    if RichiamoBatch
                       move mb-yes to scelta
                    else
                       display message 
                          "Evasione OMAGGIO!!!!"
                   x"0d0a""Cliente:  " cli-ragsoc-1
                   x"0d0a""Destino: "  des-ragsoc-1
                   x"0d0a""Merce franco destino."
                   x"0d0a""Confermi?"
                                title titolo
                                 type mb-yes-no
                                 icon 2
                               giving scelta
                    end-if
                 end-if
                 if scelta = mb-no
                    set record-ok   to false
                 end-if
              end-if
                
           end-if.

      ***---
       CONTROLLI-EVASIONE-TIPOLOGIE.
           move hid-chiave-testa to mto-chiave.
           read mtordini no lock.
           move mto-cod-cli to cli-codice.
           read clienti no lock.

           if RichiamoBatch
              move cli-tipo to tcl-codice
              read ttipocli no lock
              if tcl-edi-auto-no
                 set record-ok to false
              end-if
           else
              set record-ok to false
              perform varying idx-tipologie from 1 by 1 
                        until idx-tipologie > 200
                 if el-tcl-codice(idx-tipologie) = 0
                    exit perform
                 end-if
                 if el-tcl-codice(idx-tipologie) = cli-tipo
                    if el-sel(idx-tipologie) = 1
                       set record-ok to true
                    end-if
                    exit perform
                 end-if
              end-perform
           end-if.

      ***---
       SCRIVI-TESTA.
           move 0 to store-riga.
           if PrimaVolta |sono al primo giro
              set PrimaVolta to false
              move spaces to tge-chiave
              read tparamge no lock

              move save-magazzino to mag-codice
              read tmagaz no lock

              set modifica to true
              perform SCRIVI-LOCKFILE
           end-if.

           initialize tor-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           perform VALORIZZA-NUMERO.

           if errori
              set contatore-lock to true
              set ingresso to true
              perform SCRIVI-LOCKFILE
           else

              set  cli-tipo-C  to true
              move tte-cliente to cli-codice
              read clienti no lock 

              set idx-tipocli to 1
              search el-tipocli
              at end
                 add 1 to tot-idx-tipocli
                 move cli-tipo to el-tipocli(tot-idx-tipocli)
              when el-tipocli(idx-tipocli) = cli-tipo
                  continue |MI serve solo aggiungere
              end-search

              move tge-anno to tor-anno
              move 0 to tot-peso tot-peso-reale
              move 0 to tot-utf  tot-utf-reale
              if tte-righe = tte-righe-omaggio
                 move mag-causale-omag to tor-causale tca-codice
                 initialize geslock-linkage
                            replacing numeric data by zeroes
                                 alphanumeric data by spaces
                 move 1 to geslock-v-salva
                 set geslock-omom to true
                 move tor-numero to tor-numero-x
                 inspect tor-numero-x replacing leading x"30" by x"20"
                 call "C$JUSTIFY" using tor-numero-x, "L"
                 inspect tor-numero-x replacing trailing spaces by 
           low-value
                 string "RICORDARSI D'INSERIRE " delimited size
                        "DETTAGLI PROMOZIONE SU" delimited size
                        " EVASIONE N.   "        delimited size
                        tor-numero-x             delimited low-value
                        into geslock-messaggio
                 end-string
                 if mess not = "N"
                    perform 3 times
                       call   "geslock" using geslock-linkage
                       cancel "geslock"
                    end-perform
                 end-if
              else
                 move mag-causale-eva    to tor-causale tca-codice
              end-if
              read tcaumag no lock invalid continue end-read
              move tte-cliente        to tor-cod-cli
              move tte-destino        to tor-prg-destino   
              if tte-num-master = 1
                 move tte-num-ord-cli-m(1) to tor-num-ord-cli
                 move tte-data-ordine-m(1) to tor-data-ordine
              else
                 move "VARI"             to tor-num-ord-cli
                 move 0                  to tor-data-ordine
              end-if
              accept tor-data-passaggio-ordine from century-date
              move tte-cod-agente-m(1)    to tor-cod-agente
              move tte-cod-pagamento-m(1) to tor-cod-pagamento
              move tte-cod-ese-iva-m(1)   to tor-cod-ese-iva

              set tor-no-ric-ago    to true
              set tor-no-ric-dic    to true
              set tor-attivo        to true
              
              move cli-gdo  to tor-gdo
              move cli-tipo to tor-tipocli
                              
              if tte-ritira-no
                 if mag-vettore not = 0
                    move mag-vettore to tor-vettore
                 else
                    move tte-vettore to tor-vettore
                 end-if
              end-if
              if tte-data-cons(1) < data-oggi
                 move "URGENTE!!!"  to tor-note1
              else
                 move tte-note1-m(1)   to tor-note1
                 move tte-data-cons(1) to tor-data-note1
              end-if
              move tte-note2-m(1)    to tor-note2
              move tte-note3-m(1)    to tor-note3
              move tte-note4-m(1)    to tor-note4        
              move tte-note-bolla-1-m(1) to tor-note-bolla-1
              move tte-note-bolla-2-m(1) to tor-note-bolla-2

              move tte-cliente to rec-codice
              read recapiti no lock invalid continue end-read
              move rec-invio to tor-invio
              if tor-invio = spaces
                 set tor-invio-postel to true 
              end-if
                        
              set tor-no-ric-ago          to true
              set tor-no-ric-dic          to true                   
              set tor-bolla-no-prenotata  to true
              set tor-fatt-no-prenotata   to true
              set tor-manuale             to true
              set tor-no-agg-contab       to true
              set tor-ordine              to true
              set tor-da-ordine-si        to true
              move tca-contropartita      to tor-contropartita
              accept tor-data-creazione from century-date
              accept tor-ora-creazione  from time
              move user-codi                 to tor-utente-creazione
              move tte-stato-attivazione-m(1)to tor-stato
              move tor-causale to tca-codice
              read tcaumag no lock
      *****        move spaces to shi-codice
      *****        read paramSHI no lock
      *****        if tca-cod-magaz = shi-mag-shi-1 or
      *****           tca-cod-magaz = shi-mag-shi-2
      *****           set tor-da-inviare-si to true
      *****        else                            
      *****           set tor-da-inviare-no to true
      *****        end-if         
              move tca-cod-magaz to mag-codice
              read tmagaz no lock
                   invalid set tor-da-inviare-no to true
               not invalid 
                   if mag-da-inviare-si
                      set tor-da-inviare-si to true
                   else                            
                      set tor-da-inviare-no to true
                   end-if
              end-read
              if tipo-evasione = 1 set tor-ev-normale   to true
              else                 set tor-ev-immediata to true
              end-if
              write tor-rec
              if stordc-da-anno = 0 or
                 stordc-da-num  = 0
                 move tor-anno   to stordc-da-anno
                 move tor-numero to stordc-da-num
              end-if
              move tor-anno      to stordc-a-anno
              move tor-numero    to stordc-a-num

           end-if.

      ***---
       SCRIVI-RIGA.
           set idx-m to 1.
           search el-chiave-m
           at end
              add 1 to tot-idx-m
              move hid-chiave-testa to el-chiave-m(tot-idx-m)
           when el-chiave-m(idx-m) = hid-chiave-testa
               continue |MI serve solo aggiungere
           end-search.

           move hid-chiave-m to mro-chiave k-mro-chiave.
           read mrordini       no lock.
           read tmp-k-mrordini no lock.

           perform IMPEGNATO-RIGA.
           move k-mro-prg-chiave to prg-chiave.
           read progmag no lock.

           |Sono in un ordine con split dei 500 KG UTF
           if tte-split-500-si or tte-split-24000-si
              if tte-split-500-si
                 if k-mro-blister-no
                    |La riga per intero non ci sta tutta
                    if ( tot-utf + ( prg-peso-utf * k-mro-evadibile-ok 
           )) > 500
                       compute utf-riga = prg-peso-utf  * k-mro-qta-imb
                       if utf-riga > 500
                          move 500 to utf-riga
                       end-if
                       move 0 to num-imballi
                       compute num-imballi-tot = k-mro-evadibile-ok / 
           k-mro-qta-imb
                       perform until 1 = 2
                          add 1 to num-imballi
                          if num-imballi > num-imballi-tot
                             |Se non sono finiti gli imballi disponibili
                             if num-imballi-tot not = 0
                                subtract 1 from num-imballi
                                compute k-mro-evadibile-ok = 
           k-mro-qta-imb * num-imballi
                                perform RIGA-EVASIONE
                             end-if
                             exit perform
                          end-if
                          |Li supererò con la prossima riga
                          if ( utf-riga + tot-utf ) > 500
                             |Significa che la prima riga sfora pertanto
                             |necessita di una nuova testa
                             if num-imballi = 1
                                perform SCRIVI-TESTA
                                move 0 to num-imballi |e ricomincio
                             else
                                subtract 1 from num-imballi
                                compute k-mro-evadibile-ok = 
           k-mro-qta-imb * num-imballi
                                perform RIGA-EVASIONE
                                perform SCRIVI-TESTA
                 
                                |Calcolo gli imballi rimanente (ciclici)
                                subtract  num-imballi from 
           num-imballi-tot
                                move 0 to num-imballi
                 
                             end-if
                          else
                             add utf-riga to tot-utf
                          end-if
                       end-perform
                    else
                       perform RIGA-EVASIONE
                    end-if
                 else
                    if k-mro-blister-testa
                       |Il blister non sarà splittato internamente
                       if ( tot-utf + 
           el-peso-utf-blister-ok(blister-id) ) > 500
                          perform SCRIVI-TESTA
                       end-if
                    end-if
                    perform RIGA-EVASIONE
                 end-if
              end-if
              if tte-split-24000-si
                 if k-mro-blister-no
                    |La riga per intero non ci sta tutta
                    if save-mag-blocco-24000-si
                       move 24000 to max-peso
                    else
                       move 999999999999999999 to max-peso
                    end-if
                    if ( tot-peso + ( prg-peso * k-mro-evadibile-ok )) 
           > max-peso
                       compute peso-riga = prg-peso  * k-mro-qta-imb
                       move 0 to num-imballi
                       compute num-imballi-tot = k-mro-evadibile-ok / 
           k-mro-qta-imb
                       perform until 1 = 2
                          add 1 to num-imballi
                          if num-imballi > num-imballi-tot
                             |Se non sono finiti gli imballi disponibili
                             if num-imballi-tot not = 0
                                subtract 1 from num-imballi
                                compute k-mro-evadibile-ok = 
                                        k-mro-qta-imb * num-imballi
                                perform RIGA-EVASIONE
                             end-if
                             exit perform
                          end-if
                          |Li supererò con la prossima riga
                          if ( peso-riga + tot-peso ) > max-peso
                             |Significa che la prima riga sfora pertanto
                             |necessita di una nuova testa
                             if num-imballi = 1
                                perform SCRIVI-TESTA
                                move 0 to num-imballi |e ricomincio
                             else
                                subtract 1 from num-imballi
                                compute k-mro-evadibile-ok = 
                                        k-mro-qta-imb * num-imballi
                                perform RIGA-EVASIONE
                                perform SCRIVI-TESTA
                 
                                |Calcolo gli imballi rimanente (ciclici)
                                subtract  num-imballi from 
           num-imballi-tot
                                move 0 to num-imballi
                 
                             end-if
                          else
                             add peso-riga to tot-peso
                          end-if
                       end-perform
                    else
                       perform RIGA-EVASIONE
                    end-if
                 else
                    if k-mro-blister-testa
                       |Il blister non sarà splittato internamente
                       if ( tot-peso + 
           el-peso-peso-blister-ok(blister-id) ) > 500
                          perform SCRIVI-TESTA
                          perform RIGA-EVASIONE
                       else
                          |Questo blister ci sta
                          perform RIGA-EVASIONE
                       end-if
                    else
                       perform RIGA-EVASIONE
                    end-if
                 end-if
              end-if
           else
              perform RIGA-EVASIONE
           end-if.  
              
      ***---
       RIGA-EVASIONE.
           initialize ror-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.

           move tge-anno   to ror-anno.
           move tor-numero to ror-num-ordine.
           add  1          to store-riga.
           move store-riga to ror-num-riga.
           move k-mro-evadibile-ok  to ror-qta.
           
           move mro-prz-unitario  to ror-prz-unitario.
           move mro-imp-consumo   to ror-imp-consumo.
           move mro-imp-cou-cobat to ror-imp-cou-cobat.
           move mro-add-piombo    to ror-add-piombo.
           move mro-imponib-merce to ror-imponib-merce.
                                                           
           move k-mro-prg-chiave     to ror-prg-chiave.
           move ror-prg-cod-articolo to ror-cod-articolo.
           move mro-blister          to ror-blister.

           move prg-peso-utf      to ror-peso-utf.
           move prg-peso-non-utf  to ror-peso-non-utf.

           if ror-si-blister
              if k-mro-blister-testa
                 move ror-qta  to ror-num-colli
                 compute ror-qta-imballi = 
                         ror-qta / ( mro-qta / mro-qta-imballi )
              else
                 move 0 to ror-num-colli
                           ror-qta-imballi
              end-if
              move mro-bli-codice to ror-bli-codice
           else
              move 0 to ror-bli-codice
              move k-mro-qta-imb to ror-qta-imballi
              compute ror-num-colli = ror-qta / ror-qta-imballi
           end-if.

           move mro-cod-imballo  to ror-cod-imballo.
           move mro-des-imballo  to ror-des-imballo.
           move mro-cod-art-cli  to ror-cod-art-cli.
           move mro-cod-iva      to ror-cod-iva.
           move mro-promo        to ror-promo.
           set  ror-attivo       to true.
           accept ror-data-creazione from century-date.
           accept ror-ora-creazione  from time.
           move user-codi        to ror-utente-creazione.

           move mro-chiave-testa to ror-chiave-ordine-testa.
           move mro-progr        to ror-progr-master.
           if mro-prz-unitario > 99999
              set ror-bloccato to true
           end-if.
           if ( ror-prz-unitario  + ror-imp-consumo +
                ror-imp-cou-cobat + ror-add-piombo  +
                ror-imponib-merce ) = 0
              set ror-si-omaggio to true
           else
              set ror-no-omaggio to true
           end-if.
           write ror-rec.

           |REALE PERCHE' VENGONO SOMMATE SOLO AL MOMENTO 
           |DELLA SCRITTURA EFFETTIVA SU FILE
           compute tot-utf-reale =
                   tot-utf-reale + ( ror-peso-utf * ror-qta ).

           compute tot-peso-reale =
                   tot-peso-reale + ( ( ror-peso-utf + 
                                        ror-peso-non-utf ) * ror-qta ).

           move tot-utf-reale  to tot-utf.
           move tot-peso-reale to tot-peso 
           .
      * <TOTEM:END>

       IMPEGNATO-RIGA.
      * <TOTEM:PARA. IMPEGNATO-RIGA>
           perform READ-MRORDINI-LOCK.
      
           initialize link-wprogmag.
      
           compute como-qta-e = mro-qta-e + k-mro-evadibile-ok.
           |SE EVADO PIU' DELL'ORDINATO (SICURAMENTE LA QTA EVASA
           |POTRA' ESSERE SOLAMENTE AUMENTATA NON DIMINUITA DATO
           |CHE IN QUETO PROGRAMMA NON POSSO STORNARE NULLA MA 
           |SOLO EVADERE )
           |--->IMPEGNATO IN AUMENTO!!!!!
           if como-qta-e > mro-qta
              |SE ERA GIA' TUTTO EVASO NON ENTRA NEMMENO IN GIOCO
              |PERCIO' AUMENTO L'IMPEGNATO SE EVADO PIU' DI
              |QUANTO AVEVO ORDINATO
              compute link-valore = como-qta-e - mro-qta
              set link-update-um      to true
              set link-update         to true
              move k-mro-prg-chiave   to link-key
              move tor-causale        to link-causale
              move "0100000000000000" to link-array
              move user-codi          to link-user
              call   "wprogmag"   using link-wprogmag
              cancel "wprogmag" 
           end-if.
      
           perform DIREZIONA-IMPEGNATO.
      
           |IMPEGNATO GIA' LAVORATO
           move 0 to link-valore.   
              
           set link-update-um  to true.
           set link-update     to true.
           move mro-prg-chiave to link-key.
           move tor-causale    to link-causale.
      
      *****     |STORNO TUTTO
      *****     move mro-qta-e          to link-impegnato.
      *****     move "0100000000000000" to link-array.
      *****     move user-codi          to link-user.
      *****     call   "wprogmag"    using link-wprogmag.
      *****     cancel "wprogmag".
      
           |DIMINUISCO LA NUOVA EVASIONE (MAX QTA ORDINATA)
           if como-qta-e > mro-qta
      *****        move mro-qta    to link-impegnato
              compute link-impegnato = mro-qta - mro-qta-e
           else
      *****        move como-qta-e to link-impegnato
              compute link-impegnato = k-mro-evadibile-ok
           end-if.
           move "0000000000000000" to link-array.
           move -1                 to multiplyer(2).
           move user-codi          to link-user.
           call   "wprogmag"    using link-wprogmag.
           cancel "wprogmag".
      
           if not RecLocked
              add k-mro-evadibile-ok to mro-qta-e
              rewrite mro-rec invalid continue end-rewrite
              unlock mrordini all records
           end-if.

           |Nel caso in cui ordino su un progressivo diverso da quello 
           |che evado (es. ordino su LBX ed evado in SHI) l'impegnato
           |dovrà passare dal vecchio sul nuovo progressivo
           if mro-prg-chiave not = k-mro-prg-chiave  
              move mro-chiave-testa to mto-chiave
              read mtordini       no lock

              initialize link-wprogmag
              move mro-qta-e to link-valore
              set link-update-um      to true
              set link-update         to true
              move mro-prg-chiave     to link-key
              move mto-causale        to link-causale
              move "0000000000000000" to link-array
              move -1                 to multiplyer(2)
              move user-codi          to link-user
              call   "wprogmag"   using link-wprogmag
              cancel "wprogmag" 

              move k-mro-prg-chiave   to link-key
              move tor-causale        to link-causale
              move "0000000000000000" to link-array
              move 1                  to multiplyer(2)
              call   "wprogmag"   using link-wprogmag
              cancel "wprogmag" 
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy".
           copy "utydata.cpy".
           copy "aggiorna-stato-master.cpy".
           copy "direziona-impegnato-common.cpy".
           copy "trova-parametro.cpy".
           copy "evacli-giang.cpy".
           copy "multigest.cpy".
           copy "accessoxx.cpy". 
           copy "setta-inizio-riga.cpy".
           copy "mail.cpy".

      ***--- DUMMY: NON TOCCARE
       AGGIORNA-IMPEGNATO-MASTER 
           .
      * <TOTEM:END>

       READ-MRORDINI-LOCK.
      * <TOTEM:PARA. READ-MRORDINI-LOCK>
           move mro-numero to numero-edit.
           initialize geslock-linkage.
           string "Ordine anno: " mro-anno, " - N. ", numero-edit
           x"0d0a""risulta in uso su altro terminale." delimited size
              into geslock-messaggio
           end-string. 

           perform until 1 = 2
              set RecLocked to false
              read mrordini with lock invalid continue end-read
              if not RecLocked
                 exit perform
              end-if

              move 1 to geslock-v-riprova
              move 1 to geslock-v-ignora
              move 0 to geslock-v-termina
              move "mtordini" to geslock-nome-file
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova continue
              when ignora  
                   read mrordini no lock
                   exit perform
              end-evaluate
           end-perform 
           .
      * <TOTEM:END>

       RIEMPI-GD1.
      * <TOTEM:PARA. RIEMPI-GD1>
           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.
           modify gd1, mass-update = 1.
           move low-value to k-mto-rec.
           start tmp-k-mtordini key >= k-mto-chiave
                 invalid continue
           end-start.
           move 1 to riga.
           perform until 1 = 2
              set record-ok to true
              read tmp-k-mtordini next at end exit perform end-read
              move k-mto-chiave to mto-chiave
              read mtordini no lock

              perform COUNTER-VIDEO

              set cli-tipo-C to true
              move mto-cod-cli to cli-codice
              read clienti no lock invalid continue end-read

              if como-cli-codice not = 0 and
                 como-cli-codice not = mto-cod-cli
                 set record-ok to false
              end-if
              if como-gdo-codice not = spaces and
                 como-gdo-codice not = cli-gdo
                 set record-ok to false
              end-if
              if como-age-codice not = 0 and
                 como-age-codice not = mto-cod-agente
                 set record-ok to false
              end-if

              if record-ok
                 if tot-articoli not = 0
                    move low-value  to mro-rec
                    move mto-chiave to mro-chiave-testa
                    start mrordini key >= mro-chiave
                          invalid continue
                    end-start
                    set record-ok to false
                    perform until 1 = 2
                       read mrordini next at end exit perform end-read
                       if mro-chiave-testa not = mto-chiave
                          exit perform
                       end-if
                       if mro-qta <= mro-qta-e or
                          mro-chiuso
                          continue
                       else
                         set idx-art to 1
                         search el-articolo
                         when mro-prg-cod-articolo = 
           el-articolo(idx-art)
                              set record-ok to true
                              exit perform
                          end-search
                       end-if
                    end-perform
                 end-if
              end-if

              if record-ok
                 add 1 to riga
                 move mto-anno    to col1-anno
                 move mto-numero  to col1-numero
                 move cli-ragsoc-1 to col1-cliente
                 if mto-prg-destino = 0
                    move spaces to col1-destino
                 else
                    move mto-cod-cli     to des-codice
                    move mto-prg-destino to des-prog
                    read destini no lock invalid continue end-read
                    move des-ragsoc-1 to col1-destino
                 end-if
                 move mto-num-ord-cli to col1-num-cli
                 move mto-data-ordine to como-data
                 perform DATE-TO-SCREEN
                 move como-data       to col1-data
                 move mto-cod-agente  to age-codice
                 read agenti no lock 
                      invalid move spaces       to col1-agente
                  not invalid move age-ragsoc-1 to col1-agente   
                 end-read
                 modify gd1(riga, 1), cell-data col1-anno
                 modify gd1(riga, 2), cell-data col1-numero
                 modify gd1(riga, 3), cell-data col1-cliente
                 modify gd1(riga, 4), cell-data col1-destino
                 modify gd1(riga, 5), cell-data col1-num-cli
                 modify gd1(riga, 6), cell-data col1-data
                 modify gd1(riga, 7), cell-data col1-agente
              end-if
           end-perform.
           modify gd1, mass-update = 0 
           .
      * <TOTEM:END>

       RIEMPI-GD2.
      * <TOTEM:PARA. RIEMPI-GD2>
           move 2 to riga.
           modify gd2, mass-update = 1.
           move low-value  to mro-rec.
           move mto-chiave to mro-chiave-testa.
           start mrordini key >= mro-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read mrordini next at end exit perform end-read
      
                    if mro-chiave-testa not = mto-chiave
                       exit perform
                    end-if
                    if mro-qta <= mro-qta-e or
                       mro-chiuso
                       continue
                    else
                       set record-ok to false
                       if tot-articoli not = 0
                          set idx-art to 1
                          search el-articolo
                          when mro-prg-cod-articolo = 
           el-articolo(idx-art)
                               set record-ok to true
                          end-search
                       else
                          set record-ok to true
                       end-if
                       
                       if record-ok
                          move mro-prg-cod-articolo to col2-articolo 
           art-codice
                          read articoli no lock
                          move art-descrizione to col2-descrizione
                          if mro-si-blister
                             move "BLI"                to col2-imb
                          else
                             move mro-prg-tipo-imballo to col2-imb     
                          end-if
                          move mro-prg-peso  to col2-peso
                          move mro-qta       to col2-qta-o
                          move mro-qta-e     to col2-qta-e
                          move mro-chiave to k-mro-chiave
                          read tmp-k-mrordini record
                               invalid move 0 to k-mro-evadibile
                          end-read
                          move k-mro-evadibile to col2-qta
                       
                          move mro-prg-chiave  to hid-prg-chiave
                          move mro-chiave      to hid-chiave
                          move mro-blister     to hid-blister
                          move mro-qta-imballi to hid-qta-imballi
                          modify gd2(riga,  1), hidden-data g2-hidden
                          modify gd2(riga,  1), cell-data col2-articolo
                          modify gd2(riga,  2), cell-data 
           col2-descrizione
                          modify gd2(riga,  3), cell-data col2-imb
                          modify gd2(riga,  4), cell-data col2-peso
                          modify gd2(riga,  5), cell-data col2-qta-o
                          modify gd2(riga,  6), cell-data col2-qta-e
                          modify gd2(riga,  7), cell-data col2-qta
                       
                          if mro-evadi-dal > data-oggi
                             modify gd2(riga, 7) cell-color = 449
                          else
                             modify gd2(riga, 7) cell-color = 481
                          end-if
                          add 1 to riga
                       end-if
                    end-if
                 end-perform
           end-start.
           modify gd2, mass-update = 0 
           .
      * <TOTEM:END>

       RIEMPI-GD3.
      * <TOTEM:PARA. RIEMPI-GD3>
           perform OPERAZIONI-BLISTER.

           initialize save-chiave-master-interno.

           move spaces     to tge-chiave.
           read tparamge   no lock.

           set GeneraEvasioni to false.
           set trovato        to false.          

           move 0 to id-evasione.
           move low-value to k-mto-rec.
           set k-mto-evadibile-si to true.
           start tmp-k-mtordini key >= tmp-k-valutare
                 invalid continue
             not invalid
                 modify gd3, reset-grid = 1
                 perform GD3-CONTENT
                 move 1   to riga
                 initialize save-cliente save-destino save-chiave-testa 
           save-cod-pagamento
                 move 481 to colore
                 perform until 1 = 2
                    read tmp-k-mtordini next at end exit perform 
           end-read
                    if k-mto-evadibile-forse 
                       exit perform 
                    end-if
                    move k-mto-chiave to mto-chiave
                    read mtordini no lock invalid continue end-read
                    move mto-cod-cli     to como-prm-cliente
                    move mto-prg-destino to como-prm-destino
                    perform TROVA-PARAMETRO
                    perform COUNTER-VIDEO
                    move low-value    to mro-rec
                    move k-mto-chiave to mro-chiave-testa
                    start mrordini key >= mro-chiave
                          invalid continue
                      not invalid
                          perform until 1 = 2
                             read mrordini next at end exit perform 
           end-read
                             if mro-chiave-testa not = k-mto-chiave
                                exit perform
                             end-if
                             move mro-chiave to k-mro-chiave
                             read tmp-k-mrordini no lock
                                  invalid continue
                              not invalid
                                  if k-mro-evadibile-ok not = 0
                                     move mto-cod-cli         to 
           tgr-cliente
                                     move mto-prg-destino     to 
           tgr-destino
                                     move mto-chiave          to 
           tgr-evasione
                                     move mto-ritira-in-lubex to 
           tgr-ritira
                                     move mto-cod-pagamento   to 
           tgr-cod-pagamento

                                     set cli-tipo-C   to true
                                     move mto-cod-cli to cli-codice
                                     read clienti     no lock
                                     move cli-ragsoc-1 to tgr-cli-ragsoc
                                     if mto-prg-destino not = 0
                                        move mto-cod-cli     to 
           des-codice
                                        move mto-prg-destino to des-prog
                                        read destini no lock
                                        move des-ragsoc-1 to 
           tgr-des-ragsoc
                                     else
                                        move cli-ragsoc-1 to 
           tgr-cli-ragsoc
                                     end-if
                                     write tgr-rec
                                     set trovato to true
                                     exit perform
                                  end-if
                             end-read
                          end-perform
                    end-start
                 end-perform
           end-start.

           if trovato
              move low-value to tgr-rec
              start tmp-group-eva key >= tgr-k-ord
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read tmp-group-eva next at end exit perform 
           end-read
                       move tgr-cliente to como-prm-cliente
                       move tgr-destino to como-prm-destino
                       perform TROVA-PARAMETRO
                       move tgr-evasione to k-mto-chiave
                       move k-mto-chiave to mto-chiave
                       read mtordini no lock invalid continue end-read
                       perform COUNTER-VIDEO
                       move low-value    to mro-rec
                       move k-mto-chiave to mro-chiave-testa
                       start mrordini key >= mro-chiave
                             invalid continue
                         not invalid
                             perform until 1 = 2
                                read mrordini next at end exit perform 
           end-read
                                if mro-chiave-testa not = k-mto-chiave
                                   exit perform
                                end-if
                                move mro-chiave to k-mro-chiave
                                read tmp-k-mrordini no lock
                                     invalid continue
                                 not invalid
                                     if k-mro-evadibile-ok not = 0
                                        perform AGGIUNGI-RIGA
                                     end-if
                                end-read
                             end-perform
                       end-start
                    end-perform
              end-start

              inquire gd3, last-row in tot-righe
              perform varying riga from 2 by 1 
                        until riga > tot-righe
                 inquire gd3(riga, 1), hidden-data in g3-hidden

                 move hid-id-evasione to tte-id-evasione
                 read tmp-tevacli no lock
                 move tte-master(1) to mto-chiave
                 read mtordini no lock

                 move tte-cliente to como-prm-cliente
                 move tte-destino to como-prm-destino
                 perform TROVA-PARAMETRO
                                    
                 if save-mag-blocco-24000-si
                    move 24000 to max-peso
                 else
                    move 999999999999999999 to max-peso
                 end-if

                 if tte-peso > max-peso
                    set tte-split-24000-si to true
                 else
                    set tte-split-24000-no to true
                 end-if   

                 if tte-destino = 0
                    set cli-tipo-C to true
                    move tte-cliente to cli-codice
                    read clienti no lock
                    move cli-utf  to des-deposito-utf
                    move cli-prov to des-prov
                 else
                    move tte-cliente to des-codice
                    move tte-destino to des-prog
                    read destini no lock     
                 end-if

                 initialize prv-rec reg-rec
                            replacing numeric data by zeroes
                                 alphanumeric data by spaces
                 move des-prov to prv-codice
                 read tprov no lock
                      invalid 
                      if not RichiamoBatch
                         display message prv-codice " ERRORE PROVINCIA N
      -    "ON TROVATA"
                                    icon 2
                      end-if
                 end-read
                 move prv-regione to reg-codice
                 read tregioni no lock
                      invalid continue |Cliente estero
                 end-read

                 if tte-peso-utf > 500
                    if des-deposito-utf = "N"
                       set tte-split-500-si to true
                    else
                       set tte-split-500-no to true
                    end-if
                 else
                    set tte-split-500-no to true
                 end-if

                 |21/11/2012: il vettore va impostato da parametri
                 |solamente se è presente, MAI se DIRETTO (0)
                 if mto-ritira-si or mto-vettore = 0
                    move 0 to tte-vettore
                 else
                    if tte-num-master = 1
                       move tte-vettore-m(1) to mto-vettore
                    end-if

                    |MASTER
                    if tte-vettore = 0
                       move mto-vettore    to tte-vettore
                    end-if           

                    |REGIONI
                    if tte-peso <= reg-al-5 and
                       tte-peso >= reg-dal-5
                       move reg-vet-5 to tte-vettore
                    end-if  
                    if tte-peso <= reg-al-4 and
                       tte-peso >= reg-dal-4
                       move reg-vet-4 to tte-vettore
                    end-if
                    if tte-peso <= reg-al-3 and
                       tte-peso >= reg-dal-3
                       move reg-vet-3 to tte-vettore
                    end-if
                    if tte-peso <= reg-al-2 and
                       tte-peso >= reg-dal-2
                       move reg-vet-2 to tte-vettore
                    end-if
                    if tte-peso <= reg-al-1 and
                       tte-peso >= reg-dal-1
                       move reg-vet-1 to tte-vettore
                    end-if

                    |PROVINCE
                    if tte-peso <= prv-al-5 and
                       tte-peso >= prv-dal-5
                       move prv-vet-5 to tte-vettore
                    end-if  
                    if tte-peso <= prv-al-4 and
                       tte-peso >= prv-dal-4
                       move prv-vet-4 to tte-vettore
                    end-if  
                    if tte-peso <= prv-al-3 and
                       tte-peso >= prv-dal-3
                       move prv-vet-3 to tte-vettore
                    end-if  
                    if tte-peso <= prv-al-2 and
                       tte-peso >= prv-dal-2
                       move prv-vet-2 to tte-vettore
                    end-if  
                    if tte-peso <= prv-al-1 and
                       tte-peso >= prv-dal-1
                       move prv-vet-1 to tte-vettore
                    end-if  

                    |ASSEGNO IL VETTORE
                    if prm-minore-kg2 not = 0 and tte-peso <
                       prm-minore-kg2
                       move prm-vet-minore-kg2 to tte-vettore
                    end-if

                    if prm-minore-kg1 not = 0 and tte-peso <
                       prm-minore-kg1
                       move prm-vet-minore-kg1 to tte-vettore
                    end-if

                    if prm-maggiore-kg not = 0 and tte-peso >
                       prm-maggiore-kg
                       move prm-vet-maggiore-kg to tte-vettore
                    end-if

                    |Il vettore del magazzino verrà forzato dopo
                    |al momento della scrittura di tordini che ho in linea il magazzino

                 end-if

                 if hid-colore = 513
                    if tte-righe = tte-righe-omaggio
                       modify gd3(riga, 10),
                              bitmap        = regalo-bmp,
                              bitmap-number = 1,
                              bitmap-width  = 16 
                    else
                       modify gd3(riga, 10),
                              bitmap        = regalo-bmp,
                              bitmap-number = 2,
                              bitmap-width  = 16
                    end-if

                    if tte-bloccato-si
                       modify gd3(riga, 11),
                              bitmap        = bloccato-eva-bmp,
                              bitmap-number = 1,
                              bitmap-width  = 16 
                    else
                       modify gd3(riga, 11),
                              bitmap        = bloccato-eva-bmp,
                              bitmap-number = 2,
                              bitmap-width  = 16
                    end-if

                    |Se tte-master-REG = 0 sono TUTTI SALDI
                    if ( tte-peso < prm-blocco-kg  | and 
                        )| tte-master-REG = 0 ) or 
                        or
                       ( tte-split-24000-si  and
                         tte-split-500-si ) |per ora la blocco
                       set tte-blocco-peso-si to true
                       modify gd3(riga, 12),
                              bitmap        = peso-bmp,
                              bitmap-number = 1,
                              bitmap-width  = 16 
                    else
                       set tte-blocco-peso-no to true
                       set GeneraEvasioni to true
                       modify gd3(riga, 12),
                              bitmap        = peso-bmp,
                              bitmap-number = 2,
                              bitmap-width  = 16
                    end-if

                 else
                    if tte-righe = tte-righe-omaggio
                       modify gd3(riga, 10),
                              bitmap        = regalo2-bmp,
                              bitmap-number = 1,
                              bitmap-width  = 16 
                    else
                       modify gd3(riga, 10),
                              bitmap        = regalo2-bmp,
                              bitmap-number = 2,
                              bitmap-width  = 16
                    end-if
      
                    if tte-bloccato-si
                       modify gd3(riga, 11),
                              bitmap        = bloccato-eva2-bmp,
                              bitmap-number = 1,
                              bitmap-width  = 16 
                    else
                       modify gd3(riga, 11),
                              bitmap        = bloccato-eva2-bmp,
                              bitmap-number = 2,
                              bitmap-width  = 16
                    end-if

                    |Se tte-master-REG = 0 sono TUTTI SALDI
                    if ( tte-peso < prm-blocco-kg |  and 
                        )| tte-master-REG = 0 ) or 
                        or
                       ( tte-split-24000-si  and
                         tte-split-500-si ) |per ora la blocco
                       set tte-blocco-peso-si to true
                       modify gd3(riga, 12),
                              bitmap        = peso2-bmp,
                              bitmap-number = 1,
                              bitmap-width  = 16 
                    else
                       set tte-blocco-peso-no to true
                       set GeneraEvasioni to true
                       modify gd3(riga, 12),
                              bitmap        = peso2-bmp,
                              bitmap-number = 2,
                              bitmap-width  = 16
                    end-if
                 end-if
                 rewrite tte-rec

              end-perform
           end-if.
           if GeneraEvasioni
              modify pb-genera, visible true
           else
              if RichiamoBatch             
                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output                     delimited size
                        "MASTER NON DISPOINILI ALL'EVASIONE PER "  
                                                     delimited size
                        save-magazzino               delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if

              modify pb-genera, visible false
           end-if.

      ***---
       AGGIUNGI-RIGA.
           add 1 to riga.
           if ( tgr-cliente       not = save-cliente   or
                tgr-destino       not = save-destino   or
                tgr-cod-pagamento not = save-cod-pagamento) or
              ( tgr-evasione      not = save-chiave-testa and 
           prm-accorpa-no ) or
              ( tgr-ritira        not = save-ritira  )
              if colore = 481
                 move 513 to colore
              else
                 move 481 to colore
              end-if
              move tgr-cliente       to save-cliente
              move tgr-destino       to save-destino
              move tgr-evasione      to save-chiave-testa
              move tgr-ritira        to save-ritira
              move tgr-cod-pagamento to save-cod-pagamento
              add 1 to id-evasione
           end-if.

           move k-mro-anno   to col3-anno.
           move k-mro-numero to col3-numero.
           set  cli-tipo-C   to true.
           move mto-cod-cli  to cli-codice.
           read clienti no lock invalid continue end-read.
           move cli-ragsoc-1 to col3-cliente.
           if mto-prg-destino = 0
              move cli-ragsoc-1 to col3-destino
           else
              move mto-cod-cli     to des-codice
              move mto-prg-destino to des-prog
              read destini no lock invalid continue end-read
              move des-ragsoc-1 to col3-destino
           end-if.
           move k-mro-articolo   to art-codice col3-articolo.
           read articoli no lock invalid continue end-read.
           move art-descrizione  to col3-descr.
           if mro-si-blister
              move "BLI"                to col3-imb
           else
              move k-mro-prg-tipo-imballo to col3-imb
           end-if.
           move k-mro-prg-peso      to col3-peso.
           move k-mro-evadibile-ok  to col3-qta.

           modify gd3(riga, 1), cell-data col3-anno.
           modify gd3(riga, 2), cell-data col3-numero.
           modify gd3(riga, 3), cell-data col3-cliente.
           modify gd3(riga, 4), cell-data col3-destino.
           modify gd3(riga, 5), cell-data col3-articolo.
           modify gd3(riga, 6), cell-data col3-descr.
           modify gd3(riga, 7), cell-data col3-imb.
           modify gd3(riga, 8), cell-data col3-peso.
           modify gd3(riga, 9), cell-data col3-qta .

           modify gd3(riga,  1), row-color   colore.
           move id-evasione to hid-id-evasione.
           move colore      to hid-colore.
           move mro-chiave  to hid-chiave-m.
           modify gd3(riga,  1), hidden-data g3-hidden.
           
           initialize tte-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           move id-evasione to tte-chiave.
           read tmp-tevacli no lock invalid continue end-read.
           add 1 to tte-righe.
           if mto-bloccato
              set tte-bloccato-si to true
           end-if.
           if mro-si-omaggio
              add 1 to tte-righe-omaggio
           end-if.
           move mto-ritira-in-lubex to tte-ritira.

           move k-mro-prg-chiave to prg-chiave.
           read progmag no lock.
           compute tte-peso     = 
                   tte-peso     + k-mro-prg-peso * k-mro-evadibile-ok.
           compute tte-peso-utf = 
                   tte-peso-utf + prg-peso-utf   * k-mro-evadibile-ok.

           move mto-cod-cli       to tte-cliente.
           move mto-prg-destino   to tte-destino.

           if mto-chiave not = save-chiave-master-interno
              if mto-registrato
                 add 1 to tte-master-REG
              end-if
              add 1                  to tte-num-master
              move mto-chiave        to tte-master(tte-num-master)
              move mto-vettore       to tte-vettore-m(tte-num-master)
              move mto-num-ord-cli   to 
           tte-num-ord-cli-m(tte-num-master)
              move mto-data-ordine   to 
           tte-data-ordine-m(tte-num-master)
              move mto-cod-agente    to tte-cod-agente-m(tte-num-master)
              move mto-cod-pagamento to 
           tte-cod-pagamento-m(tte-num-master)
              move mto-cod-ese-iva   to 
           tte-cod-ese-iva-m(tte-num-master)

              move mto-note1         to tte-note1-m(tte-num-master)
              move mto-data-note1    to tte-data-cons(tte-num-master)
              move mto-note2         to tte-note2-m(tte-num-master)
              move mto-note3         to tte-note3-m(tte-num-master)
              move mto-note4         to tte-note4-m(tte-num-master)
              move mto-note-bolla-1  to 
           tte-note-bolla-1-m(tte-num-master)
              move mto-note-bolla-2  to 
           tte-note-bolla-2-m(tte-num-master)

              if mto-bloccato and mto-causale-blocco-fido
                 move "A" to tte-stato-attivazione-m(tte-num-master)
              else
                 move mto-stato-attivazione to 
           tte-stato-attivazione-m(tte-num-master)
              end-if

              move mto-chiave to save-chiave-master-interno
           end-if.

           write tte-rec invalid rewrite tte-rec end-write 
           .
      * <TOTEM:END>

       RIEMPI-GD-RIEP.
      * <TOTEM:PARA. RIEMPI-GD-RIEP>
           modify gd-riep, reset-grid  = 1.                       
           modify gd-riep, mass-update = 1.
           initialize path-tmp-eva-riep.
           accept como-data from century-date.
           accept como-ora  from time.
           accept  path-tmp-eva-riep from environment "PATH_ST".
           inspect path-tmp-eva-riep replacing trailing spaces by 
           low-value.
           string  path-tmp-eva-riep delimited low-value
                   "TMP-EVA-RIEP_"   delimited size
                   como-data         delimited size
                   "_"               delimited size
                   como-ora          delimited size
              into path-tmp-eva-riep
           end-string.
           inspect path-tmp-eva-riep replacing trailing low-value by 
           spaces.
           open output tmp-eva-riep.
           close       tmp-eva-riep.
           open i-o    tmp-eva-riep.
           inquire gd3, last-row in tot-righe-riep.
           move 0 to tot-bozze s-anno s-numero.
           perform varying como-riga-riep from 2 by 1 
                     until como-riga-riep > tot-righe-riep
              if s-anno   not = como-anno or
                 s-numero not = como-numero
                 add 1 to tot-bozze
                 move como-anno   to s-anno
                 move como-numero to s-numero
              end-if
              inquire gd3(como-riga-riep, 1), cell-data in como-anno
              inquire gd3(como-riga-riep, 2), cell-data in como-numero  
            
              inquire gd3(como-riga-riep, 5), cell-data in art-codice
              inquire gd3(como-riga-riep, 7), cell-data in col3-imb
              inquire gd3(como-riga-riep, 8), cell-data in col3-peso
              inquire gd3(como-riga-riep, 9), cell-data in col3-qta
              read articoli no lock 
                   invalid continue
               not invalid
                   move art-mag-std to ter-mag
                   move art-codice  to ter-art
                   read tmp-eva-riep
                        invalid 
                        initialize ter-dati replacing numeric data by 
           zeroes
                                                 alphanumeric data by 
           spaces
                        write ter-rec
                   end-read
                   move col3-imb   to imq-codice   
                   read timbalqta no lock invalid continue end-read
                   move col3-qta to como-qta                            
             
                   move 0 to resto
                   divide como-qta by imq-qta-imb 
                               giving como-colli
                            remainder resto
                   if resto > 0
                      add 1 to como-colli
                   end-if
                   compute ter-colli = ter-colli + como-colli

                   move col3-peso to como-peso
                   compute ter-quintali rounded = ter-quintali + 
                                          ( como-peso * como-qta / 100)
                   rewrite ter-rec
                                       
              end-read                                                  
                    
           end-perform.  
           move tot-bozze to tot-bozze-x.
           inspect tot-bozze-x replacing leading x"30" by x"20".
           call "C$JUSTIFY" using tot-bozze-x, "L".
           initialize lab-tot-bozze-buf.
           string "Numero bozze: " delimited size
                  tot-bozze-x      delimited size
             into lab-tot-bozze-buf
           end-string.
           display lab-tot-bozze.  
           perform GD-RIEP-CONTENT.
           move 1 to como-riga-riep.
           move low-value to ter-chiave.
           start tmp-eva-riep key >= ter-chiave
                 invalid continue
             not invalid
                 move spaces to s-mag 
                 move 0 to como-qta como-peso como-codici
                 perform until 1 = 2
                    read tmp-eva-riep next 
                         at end             
                         perform AGGIUNGI-RIGA-RIEP
                         exit perform 
                    end-read
                    if s-mag = spaces
                       move ter-mag to s-mag
                    end-if
                    if s-mag not = ter-mag
                       perform AGGIUNGI-RIGA-RIEP
                    end-if
                    add 1 to como-codici
                    add ter-quintali to como-peso
                    add ter-colli    to como-qta
                 end-perform
           end-start.
           modify gd-riep, mass-update = 0.      

      ***---
       AGGIUNGI-RIGA-RIEP.
           add 1 to como-riga-riep.
           move como-qta    to col-colli.
           move como-peso   to col-quintali.
           move como-codici to col-codici.
           move s-mag to mag-codice.
           read tmagaz no lock invalid continue end-read.
           initialize col-mag.
           string s-mag           delimited size
                  " - "           delimited size
                  mag-descrizione delimited size
             into col-mag
           end-string.
           modify gd-riep(como-riga-riep, 1), cell-data = col-mag.
           modify gd-riep(como-riga-riep, 2), cell-data = col-colli.
           modify gd-riep(como-riga-riep, 3), cell-data = col-quintali.
           modify gd-riep(como-riga-riep, 4), cell-data = col-codici.
           move 0 to como-qta como-peso como-codici.
           move ter-mag to s-mag 
           .
      * <TOTEM:END>

       SCRIVI-LOCKFILE.
      * <TOTEM:PARA. SCRIVI-LOCKFILE>
           move 78-evacli to lck-nome-pgm.
           accept lck-data-creazione from century-date.
           accept lck-ora-creazione  from time.
           move user-codi            to lck-utente-creazione.
           write lck-rec invalid rewrite lck-rec end-write.
           read lockfile lock 
           .
      * <TOTEM:END>

       SPOSTAMENTO-1.
      * <TOTEM:PARA. SPOSTAMENTO-1>
           inquire gd1, last-row in tot-righe.
           if event-data-2 > 1 and event-data-2 <= tot-righe
              modify gd1, y = event-data-2, start-y = event-data-2,
                          x = 1,            start-x = 7,
                          region-color = 144

              inquire gd1(event-data-2, 1), cell-data in mto-anno
              inquire gd1(event-data-2, 2), cell-data in mto-numero

              modify  gd2, reset-grid 1
              perform GD2-CONTENT
      
              perform RIEMPI-GD2

      *****        move 2 to event-data-2
      *****        perform SPOSTAMENTO-2
           end-if 
           .
      * <TOTEM:END>

       SPOSTAMENTO-2.
      * <TOTEM:PARA. SPOSTAMENTO-2>
           inquire gd2, last-row in tot-righe.
           if event-data-2 > 1 and
              event-data-2 <= tot-righe
              modify gd2, cursor-y event-data-2, cursor-x 7
              set event-action to event-action-fail
              modify gd2, y = event-data-2, start-y = event-data-2,
                          x = 1,            start-x = 6,
                          region-color = 144
              inquire gd2(event-data-2, 1), hidden-data in g2-hidden
              initialize prg-chiave replacing numeric data by zeroes
                                         alphanumeric data by spaces
              move hid-art to prg-cod-articolo
              read progmag no lock invalid continue end-read
              move prg-ordinato-1 to lab-ord-buf
              display lab-ord

              move hid-chiave to mro-chiave
              read mrordini no lock 
                   invalid
                   perform 5 times
                      display message
                               "ERRORE GRAVE!!!"
                    X"0D0A""MASTER CORRISPONDENZA " mro-chiave
                    X"0D0A""RISULTA INESISTENTE!!!"
                    X"0D0A""CONTATTARE ASSISTENZA!!!"
                              title tit-err
                               icon 2
                   end-perform
                   move 0 to lab-evadi-dal-buf
               not invalid
                   move mro-evadi-dal to como-data
                   perform DATE-TO-SCREEN
                   move como-data to lab-evadi-dal-buf

                   move mro-chiave-testa to mto-chiave
                   read mtordini no lock

                   move mto-data-ordine to como-data
                   perform DATE-TO-SCREEN
                   move como-data to lab-data-ord-buf

                   move mto-data-note1 to como-data
                   perform DATE-TO-SCREEN
                   move como-data to lab-data-cons-buf
                   
                   move mto-cod-cli     to como-prm-cliente
                   move mto-prg-destino to como-prm-destino
                   perform TROVA-PARAMETRO

                   move mro-promo to tpr-codice
                   read tpromo no lock
                        invalid move 0 to como-data
                    not invalid
                        compute como-data = function integer-of-date ( 
           tpr-fine-volantino )
                        add prm-gg-val-vol to como-data
                        compute como-data = function date-of-integer ( 
           como-data )
                        if data-oggi >= como-data
                           modify lab1aaaa,      color 5
                           modify lab-data-scad, color 5
                        else
                           modify lab1aaaa,      color 3
                           modify lab-data-scad, color 3
                        end-if
                        perform DATE-TO-SCREEN
                   end-read
                   move como-data to lab-data-scad-buf

                   if como-data = 0
                      modify lab1aaaa,       visible 0
                      modify lab-data-scad,  visible 0
                   else
                      modify lab1aaaa,       visible 1
                      modify lab-data-scad,  visible 1
                   end-if

                   compute como-data = function 
           integer-of-date(mto-data-note1)
                   subtract prm-gg-parziale from como-data
                   compute como-data = function 
           date-of-integer(como-data)

                   if data-oggi >= como-data
                      modify lab1aaa,       color 5
                      modify lab-data-cons, color 5
                   else
                      modify lab1aaa,       color 3
                      modify lab-data-cons, color 3
                   end-if

              end-read
              display lab-evadi-dal lab-data-ord lab-data-cons 
           lab-data-scad

              perform DISPLAY-GIACENZA
           end-if 
           .
      * <TOTEM:END>

       SPOSTAMENTO-ART.
      * <TOTEM:PARA. SPOSTAMENTO-ART>
           inquire gd-art, last-row in tot-righe.
           if event-data-2 > tot-righe
              add 1 to tot-righe giving riga
           else
              move event-data-2 to riga
           end-if.
                                    
           modify gd-art, cursor-y riga, cursor-x 1
           set event-action to event-action-fail.

           modify gd-art, start-x = 1, x = 2,
                          start-y = riga, y = riga,
                          region-color = 144        
           .
      * <TOTEM:END>

       STATUS-HELP.
      * <TOTEM:PARA. STATUS-HELP>
      ***--- DUMMY
           .
      * <TOTEM:END>

       VALORIZZA-NUMERO.
      * <TOTEM:PARA. VALORIZZA-NUMERO>
           move spaces to tge-codice
           read tparamge no lock

           move tge-anno     to link-anno.

           set  link-gordc    to true.
           set  link-crea     to true.

           call   "nambar" using link-nambar.
           cancel "nambar".
           
           if primo-numero = 0
              move link-numero to primo-numero
           end-if.
           move link-numero    to ultimo-numero.
           
           if link-status-nambar = -1 set errori       to true
           else                       move link-numero to tor-numero
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       Form1-Pb-2-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2-BeforeProcedure>
           modify Form1-Pb-2, bitmap-number 2 
           .
      * <TOTEM:END>
       Form1-Pb-2-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2-AfterProcedure>
           modify Form1-Pb-2, bitmap-number 1 
           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify PB-ESEGUI, bitmap-number 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify PB-ESEGUI, bitmap-number 1 
           .
      * <TOTEM:END>
       aggmese-Ev-Before-Program.
      * <TOTEM:PARA. aggmese-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           if lk-bl-prog-id = "macrobatch"
              set RichiamoBatch to true

              open i-o macrobatch
              move lk-mb-id to mb-id
              read macrobatch no lock
              move mb-path-log to path-log-macrobatch

              open extend log-macrobatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output              delimited size
                     "|=> INGRESSO EVACLI" delimited size
                into lm-riga
              end-string
              write lm-riga
           end-if.  

      *Queste istruzioni son anchein "multigest.cpy", ma le duplico perchè
      *serve un comportamento un pò differente, ossia nessun msg a video
           set RecLocked to false.
           open i-o multigest.
           move spaces to mul-chiave.
           read multigest lock invalid continue end-read.
           if RecLocked
              read multigest no lock invalid continue end-read
              if mul-ricalcolo          
      
                 if RichiamoBatch  
                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    string r-output            delimited size
                           "RICALCOLO IMPEGNATO IN CORSO. IMPOSSIBILE PR
      -    "OSEGUIRE" 
                                               delimited size
                      into lm-riga
                    end-string
                    write lm-riga  

                    move lk-mb-id to mb-id
                    read macrobatch no lock
                    set mb-evacli-stato-err to true
                    rewrite mb-rec

                    close multigest

                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    string r-output            delimited size
                           "<=| USCITA EVACLI" delimited size
                      into lm-riga
                    end-string
                    write lm-riga
                    close log-macrobatch
                    close macrobatch      
                    goback
                 else
                    display message "Ricalcolo impegnato in corso..."
                             x"0d0a""Attendere e poi riprovare"
                              title titolo
                               icon 2
                    close multigest
                    SET LK-BL-CANCELLAZIONE TO TRUE
                    MOVE COMO-PROG-ID       TO LK-BL-PROG-ID
                    CALL "BLOCKPGM"  USING LK-BLOCKPGM       
                    goback
                 end-if

              end-if
           else
              set mul-funzione to true
              rewrite mul-rec
              read multigest lock
           end-if.

           set environment "EVASIONE_IN_USO" to "1".
           set RecLocked to false.
           set tutto-ok  to true.
           open i-o lockfile.
           perform DELETE-LOCKFILE.
           if RecLocked
              move 78-evacli to lck-nome-pgm
              read lockfile  no lock invalid continue end-read
              if lck-utente-creazione = "RICALIMP"
                 display message "Ricalcolo impegnato in corso..."
                          x"0d0a""Attendere e poi riprovare"
                           title titolo
                            icon 2
              else
                 if RichiamoBatch   

                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    string r-output                    delimited size
                           "FUNZIONE GIA' IN USO DA: " delimited size
                           lck-utente-creazione        delimited size
                      into lm-riga
                    end-string
                    write lm-riga       

                    move lk-mb-id to mb-id
                    read macrobatch no lock
                    set mb-evacli-stato-err to true
                    rewrite mb-rec

                 else
                    display message "Funzione già in uso da: " 
           lck-utente-creazione
                              title titolo
                               icon 2      
                 end-if
              end-if
              perform EVACLI-EV-AFTER-PROGRAM
              set environment "EVASIONE_IN_USO" to "0"
              goback
           end-if.
           set ingresso to true.
           perform SCRIVI-LOCKFILE.
           close lockfile.

           initialize path-tmp-k-mtordini.
           accept como-ora  from time.
           accept como-data from century-date.
           accept  path-tmp-k-mtordini from environment "PATH_ST".
           inspect path-tmp-k-mtordini replacing trailing spaces by 
           low-value.
           string  path-tmp-k-mtordini delimited low-value
                   "tmp-k-mtordini_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
                   ".tmp"              delimited size
                   into path-tmp-k-mtordini
           end-string.
           open output tmp-k-mtordini.

           initialize path-tmp-k-mrordini.
           accept  path-tmp-k-mrordini from environment "PATH_ST".
           inspect path-tmp-k-mrordini replacing trailing spaces by 
           low-value.
           string  path-tmp-k-mrordini delimited low-value
                   "tmp-k-mrordini_"   delimited size
                   como-data           delimited size
                   "_"                 delimited size
                   como-ora            delimited size
                   ".tmp"              delimited size
                   into path-tmp-k-mrordini
           end-string.
           open output tmp-k-mrordini.

           initialize path-tmp-qta-eva.
           accept  path-tmp-qta-eva from environment "PATH_ST".
           inspect path-tmp-qta-eva replacing trailing spaces by 
           low-value.
           string  path-tmp-qta-eva delimited low-value
                   "tmp-qta-eva"    delimited size
                   como-data        delimited size
                   "_"              delimited size
                   como-ora         delimited size
                   ".tmp"           delimited size
                   into path-tmp-qta-eva
           end-string.
           open output tmp-qta-eva. 

           initialize path-tmp-qta-pren.
           accept  path-tmp-qta-pren from environment "PATH_ST".
           inspect path-tmp-qta-pren replacing trailing spaces by 
           low-value.
           string  path-tmp-qta-pren delimited low-value
                   "tmp-qta-pren"    delimited size
                   como-data         delimited size
                   "_"               delimited size
                   como-ora          delimited size
                   ".tmp"            delimited size
                   into path-tmp-qta-pren
           end-string.
           open output tmp-qta-pren.

           initialize path-tmp-tevacli.
           accept  path-tmp-tevacli from environment "PATH_ST".
           inspect path-tmp-tevacli replacing trailing spaces by 
           low-value.
           string  path-tmp-tevacli delimited low-value
                   "tmp-tevacli"    delimited size
                   como-data        delimited size
                   "_"              delimited size
                   como-ora         delimited size
                   ".tmp"           delimited size
                   into path-tmp-tevacli
           end-string.
           open output tmp-tevacli.

           initialize path-tmp-group-eva.
           accept  path-tmp-group-eva from environment "PATH_ST".
           inspect path-tmp-group-eva replacing trailing spaces by 
           low-value.
           string  path-tmp-group-eva delimited low-value
                   "tmp-group-eva"    delimited size
                   como-data          delimited size
                   "_"                delimited size
                   como-ora           delimited size
                   ".tmp"             delimited size
                   into path-tmp-group-eva
           end-string.
           open output tmp-group-eva.

           move como-data to data-oggi.

           accept GdoInUsoFlag from environment "GDO_IN_USO".

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\REGALO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "REGALO.BMP", 
                   GIVING REGALO-BMP.

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\bloccato-eva.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "bloccato-eva.BMP", 
                   GIVING BLOCCATO-EVA-BMP.   
                   
           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\PESO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "PESO.BMP", 
                   GIVING PESO-BMP.

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\REGALO2.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "REGALO2.BMP", 
                   GIVING REGALO2-BMP.

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\bloccato-eva2.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "bloccato-eva2.BMP", 
                   GIVING BLOCCATO-EVA2-BMP.  
                   
           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\PESO2.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "PESO2.BMP", 
                   GIVING PESO2-BMP 
           .
      * <TOTEM:END>
       Screen1-Cb-1-BeforeProcedure.
      * <TOTEM:PARA. Screen1-Cb-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           if chk-tutto-buf = 1
              modify chk-tutto, bitmap-number = 4
           else
              modify chk-tutto, bitmap-number = 2
           end-if.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen1-Cb-1-AfterProcedure.
      * <TOTEM:PARA. Screen1-Cb-1-AfterProcedure>
           if chk-tutto-buf = 1
              modify chk-tutto, bitmap-number = 3
           else
              modify chk-tutto, bitmap-number = 1
           end-if.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       chk-tutto-LinkTo.
      * <TOTEM:PARA. chk-tutto-LinkTo>
           if chk-tutto-buf = 0
              modify chk-tutto, bitmap-number = 4
           else
              modify chk-tutto, bitmap-number = 2
           end-if 
           .
      * <TOTEM:END>
       PB-ESEGUI-LinkTo.
      * <TOTEM:PARA. PB-ESEGUI-LinkTo>
           inquire gd-tipocli, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              inquire gd-tipocli(riga, 1), hidden-data in hid-col-sel
              if hid-col-sel = 1
                 exit perform
              end-if
           end-perform.

           if hid-col-sel = 0  
              display message "Nessuna tipologia selezionata"
                        title tit-err
                         icon 2
              set errori  to true
              exit paragraph
           end-if.

           if tipo-evasione = 1
              move user-codi    to pgme-utente
              if not RichiamoBatch
                 set pgme-evasione to true
              else                        
                 set pgme-RichiamoBatch-evasione to true
              end-if

              call   "gpgmexe" using gpgmexe-linkage
              cancel "gpgmexe"
           else
              set pgme-ok to true
           end-if.
           if pgme-pgm-attivi
              set errori to true  

              if RichiamoBatch
                 move lk-mb-id to mb-id
                 read macrobatch no lock 
                 set mb-evacli-stato-err to true
                 rewrite mb-rec                 

                 call   "set-ini-log" using r-output
                 cancel "set-ini-log"
                 initialize lm-riga
                 string r-output                delimited size
                        "PROCESSO GIA' ATTIVO " delimited size
                   into lm-riga
                 end-string
                 write lm-riga
              end-if

           else
              if tipo-evasione = 0   
                 exit paragraph                                     
              end-if

              set tutto-ok to true
              set trovato  to false
              move low-value to tpa-rec
              start tparameva key >= tpa-chiave
                    invalid
                    display message "Nessun parametro d'evasione imposta
      -    "to"
                              title tit-err
                               icon 2
                    set errori  to true
                    set trovato to true
                not invalid
                    perform until 1 = 2
                       read tparameva next at end exit perform end-read
                       if tipo-evasione = 1 and tpa-solo-immediate-no
                          set trovato to true
                          exit perform
                       end-if
                       if tipo-evasione = 2 and tpa-solo-immediate-si
                          set trovato to true
                          exit perform
                       end-if
                    end-perform
              end-start
              if not trovato
                 set errori to true
                 display message "Parametri per evasione scelta non impo
      -    "stato"
                            title tit-err
                             icon 2
              end-if
           end-if.

           if tutto-ok
              initialize  wstampa
              accept  data-stampa from century-date
              accept  ora-stampa  from time
              accept  wstampa     from environment "PATH_ST"
              inspect wstampa     replacing trailing spaces by low-value
              string  wstampa     delimited low-value
                      "EVACLI_"   delimited size
                      data-stampa delimited size
                      "_"         delimited size
                      ora-stampa  delimited size
                      ".txt"      delimited size
                      into wstampa
              end-string
              inspect wstampa   replacing trailing low-value by spaces
              open output lineseq
              initialize line-riga
              perform SETTA-INIZIO-RIGA
              if tipo-evasione = 1
                 move "NORMALE"   to evades
              else
                 move "IMMEDIATA" to evades
              end-if
              string r-inizio           delimited size
                     "EVASIONE "        delimited size
                     evades             delimited size
                     " - EVADI TUTTO: " delimited size
                     chk-tutto-buf      delimited size
                     " - UTENTE: "      delimited size
                     user-codi          delimited size
                into line-riga
              end-string
              write line-riga

              move tpa-codice       to save-evasione

              if RichiamoBatch
                 move 0 to mag-idx
                 perform varying idx from 1 by 1 
                           until idx > 25
                    if tpa-el-deposito(idx) = spaces
                       exit perform 
                    end-if
                    move tpa-el-deposito(idx) to mag-codice
                    read tmagaz no lock
                    if mag-gen-auto-si
                       add 1 to mag-idx
                       move tpa-el-deposito(idx) 
                         to save-el-deposito(mag-idx)
                       move tpa-el-gg-cons-max(idx) 
                         to save-el-gg-cons-max(mag-idx)
                    end-if     
                 end-perform
                 if mag-idx = 0     
                    call   "set-ini-log" using r-output
                    cancel "set-ini-log"
                    initialize lm-riga
                    string r-output                     delimited size
                           "NESSUN MAGAZZINO IMPOSTATO" delimited size
                      into lm-riga
                    end-string
                    write lm-riga
                 end-if
                    
              else
                 move tpa-tab-depositi to save-depositi    
                 inquire gd-tipocli, last-row in tot-righe
                 initialize tab-tipologie replacing numeric data by 
           spaces
                                               alphanumeric data by 
           zeroes
                 perform varying riga from 2 by 1 
                           until riga > tot-righe
                    inquire gd-tipocli(riga, 1), 
                            hidden-data in el-sel(riga - 1)
                    inquire gd-tipocli(riga, 1), 
                            cell-data in el-tcl-codice(riga - 1)
                 end-perform
              end-if

              perform SCR-ELAB-TPREV-OPEN-ROUTINE
                                   
              initialize tab-articoli 
                         como-gdo-codice 
                         como-cli-codice 
                         como-age-codice
                         tot-articoli

              perform CANCELLA-COLORE
              modify pb-esegui, bitmap-number = 1
              if chk-tutto-buf = 1
                 modify chk-tutto, bitmap-number = 3
              else
                 modify chk-tutto, bitmap-number = 1
              end-if
              modify form1-handle, visible false
              perform SCREEN2-OPEN-ROUTINE
              if num-cicli not = 0
                 perform FINE-OPERAZIONE
              end-if
              close lineseq            

              if not RichiamoBatch and evasioni-generate
                 move user-codi to usr-codice
                 read usr-tel
                      invalid move spaces to usr-ind-from
                 end-read
                 if usr-ind-from not = spaces
                    move usr-ind-from to LinkAddress
                    move wstampa      to LinkAttach
                    initialize LinkSubject
                    string "RIEPILOGO BOZZE GENERATE IL " delimited size
                           como-data(7:2) delimited size
                           "/"            delimited size
                           como-data(5:2) delimited size
                           "/"            delimited size
                           como-data(1:4) delimited size
                           " ALLE "       delimited size
                           como-ora(1:2)  delimited size
                           ":"            delimited size
                           como-ora(3:2)  delimited size
                      into LinkSubject
                    end-string
                    move "In allegato riepilogo generazioni" to LinkBody
                    perform SEND-MAIL
                 end-if
              end-if

              move 27 to key-status
           end-if 
           .
      * <TOTEM:END>
       evacli-Ev-After-Program.
      * <TOTEM:PARA. evacli-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           unlock multigest all records.
           close  multigest.

           if path-tmp-k-mtordini not = spaces
              close       tmp-k-mtordini
              delete file tmp-k-mtordini
              close       tmp-k-mrordini
              delete file tmp-k-mrordini
              close       tmp-qta-eva 
              delete file tmp-qta-eva 
              close       tmp-qta-pren
              delete file tmp-qta-pren
              close       tmp-tevacli
              delete file tmp-tevacli
              close       tmp-group-eva
              delete file tmp-group-eva

              perform DELETE-LOCKFILE

              destroy REGALO-BMP
              destroy BLOCCATO-EVA-BMP
              destroy PESO-BMP
              destroy REGALO2-BMP
              destroy BLOCCATO-EVA2-BMP
              destroy PESO2-BMP
           end-if.          
      
           if RichiamoBatch
              call   "set-ini-log" using r-output
              cancel "set-ini-log"
              initialize lm-riga
              string r-output            delimited size
                     "<=| USCITA EVACLI" delimited size
                into lm-riga
              end-string
              write lm-riga
              close log-macrobatch
              close macrobatch
           end-if 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-End-Drag>
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Finish-Entry>
           inquire gd-art(event-data-2, 1), cell-data in art-codice.
           if art-codice = 0
              modify gd-art, record-to-delete event-data-2
           else
              read articoli no lock 
                   invalid 
                   move spaces to art-descrizione
                   set event-action to event-action-fail
                   display message "Articolo non valido"
                             title tit-err
                              icon 2
              end-read
              move art-descrizione to col-des
              modify gd-art(event-data-2, 2), cell-data col-des
           end-if 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-BeforeProcedure.
      * <TOTEM:PARA. gd-articoli-BeforeProcedure>
           .
      * <TOTEM:END>
       gd-articoli-AfterProcedure.
      * <TOTEM:PARA. gd-articoli-AfterProcedure>
           .
      * <TOTEM:END>
       pb-applica-BeforeProcedure.
      * <TOTEM:PARA. pb-applica-BeforeProcedure>
           modify pb-applica, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-applica-AfterProcedure.
      * <TOTEM:PARA. pb-applica-AfterProcedure>
           modify pb-applica, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-applica-LinkTo.
      * <TOTEM:PARA. pb-applica-LinkTo>
           set tutto-ok to true.
           perform varying control-id from 78-ID-ef-cli by 1
                     until control-id > 78-ID-ef-age
              perform CONTROLLO
              if errori
                 exit perform
              end-if
           end-perform.
           if tutto-ok
              set FiltraRecord to true
              perform SCR-ELAB-OPEN-ROUTINE
              set FiltraRecord to false
           end-if 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd2-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd2-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd2-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd2-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd2-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd2-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd3-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd3-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       pb-genera-BeforeProcedure.
      * <TOTEM:PARA. pb-genera-BeforeProcedure>
           modify pb-genera, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-genera-AfterProcedure.
      * <TOTEM:PARA. pb-genera-AfterProcedure>
           modify pb-genera, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-genera-LinkTo.
      * <TOTEM:PARA. pb-genera-LinkTo>
           if RichiamoBatch
              move mb-yes to scelta
           else
              display message "Generare evasioni?"
                        title titolo
                         icon 2
                         type mb-yes-no
                       giving scelta
                      default mb-no
           end-if.

           if scelta = mb-yes
              set tutto-ok to true
              move 78-evacli to lck-nome-pgm
              read lockfile  no lock
                   invalid   continue
               not invalid
                   if lck-operazione = "M"
                      set errori to true
                      display message "Tabella contatori in uso da: " 
           lck-utente-creazione
                               x"0d0a""per evasione automatica ordini ma
      -    "ster GDO"
                               x"0d0a""Operazione impossibile! Attendere
      -    " termine operazione!"
                                title titolo
                                 icon 2
                   end-if
              end-read
              if tutto-ok
                 perform SCR-ELAB-EVASIONI-OPEN-ROUTINE
              end-if
              
              perform until 1 = 2
                 add 1 to num-cicli
                 add 1 to idx-mag
                 if num-cicli not = 0
                    perform FINE-OPERAZIONE
                 end-if
                 if save-el-deposito(idx-mag) = spaces
                    move 27 to key-status
                    exit perform
                 else
                    move save-el-deposito(idx-mag) to save-magazzino 
           mag-codice
                    move save-el-gg-cons-max(idx-mag) to 
           save-gg-cons-max
                    read tmagaz no lock
                    if mag-sco-codice(1) not = spaces
                       perform SCR-ELAB-OPEN-ROUTINE
                       if tot-master not = 0
                          exit perform
                       end-if
                    end-if
                 end-if
              end-perform
              
           end-if 
           .
      * <TOTEM:END>
       ef-cli-BeforeProcedure.
      * <TOTEM:PARA. ef-cli-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca2, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-cli-AfterProcedure.
      * <TOTEM:PARA. ef-cli-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca2, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-gdo-BeforeProcedure.
      * <TOTEM:PARA. ef-gdo-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca2, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-gdo-AfterProcedure.
      * <TOTEM:PARA. ef-gdo-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca2, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-age-BeforeProcedure.
      * <TOTEM:PARA. ef-age-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca2, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-age-AfterProcedure.
      * <TOTEM:PARA. ef-age-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca2, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       pb-sia-BeforeProcedure.
      * <TOTEM:PARA. pb-sia-BeforeProcedure>
           modify pb-sia, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-sia-AfterProcedure.
      * <TOTEM:PARA. pb-sia-AfterProcedure>
           modify pb-sia, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-si-LinkTo.
      * <TOTEM:PARA. pb-si-LinkTo>
           perform SCR-FINE-EXIT 
           .
      * <TOTEM:END>
       TOOL-CERCA2-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA2-LinkTo>
           inquire tool-cerca2, enabled in e-cerca.
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       Screen1-Rb-1-BeforeProcedure.
      * <TOTEM:PARA. Screen1-Rb-1-BeforeProcedure>
           modify control-handle, color = colore-nu
           modify control-handle, color = colore-nu
           if tipo-evasione = 2
              modify rb-immediata, bitmap-number = 4
           else
              modify rb-immediata, bitmap-number = 2
           end-if 
           .
      * <TOTEM:END>
       Screen1-Rb-1-AfterProcedure.
      * <TOTEM:PARA. Screen1-Rb-1-AfterProcedure>
           modify control-handle, color = colore-or
           modify control-handle, color = colore-or
           if tipo-evasione = 2
              modify rb-immediata, bitmap-number = 3
           else
              modify rb-immediata, bitmap-number = 1
           end-if 
           .
      * <TOTEM:END>
       rb-normale-LinkTo.
      * <TOTEM:PARA. rb-normale-LinkTo>
           modify rb-normale,   bitmap-number = 4.
           modify rb-immediata, bitmap-number = 1.
           move 1 to tipo-evasione 
           .
      * <TOTEM:END>
       rb-immediata-LinkTo.
      * <TOTEM:PARA. rb-immediata-LinkTo>
           modify rb-immediata, bitmap-number = 4.
           modify rb-normale,   bitmap-number = 1.
           move 2 to tipo-evasione 
           .
      * <TOTEM:END>
       rb-normale-BeforeProcedure.
      * <TOTEM:PARA. rb-normale-BeforeProcedure>
           if tipo-evasione = 1
              modify rb-normale, bitmap-number = 4
           else
              modify rb-normale, bitmap-number = 2
           end-if.
           modify control-handle, color = colore-nu
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       rb-normale-AfterProcedure.
      * <TOTEM:PARA. rb-normale-AfterProcedure>
           if tipo-evasione = 1
              modify rb-normale, bitmap-number = 3
           else
              modify rb-normale, bitmap-number = 1
           end-if.
           modify control-handle, color = colore-or
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       pb-prossimo-BeforeProcedure.
      * <TOTEM:PARA. pb-prossimo-BeforeProcedure>
           modify pb-prossimo, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-prossimo-AfterProcedure.
      * <TOTEM:PARA. pb-prossimo-AfterProcedure>
           modify pb-prossimo, bitmap-number 1 
           .
      * <TOTEM:END>
       pb-prossimo-LinkTo.
      * <TOTEM:PARA. pb-prossimo-LinkTo>
           perform until 1 = 2
              add 1 to idx-mag
              if save-el-deposito(idx-mag) = spaces
                 if num-cicli not = 0
                    perform FINE-OPERAZIONE
                 end-if
                 move 27 to key-status
                 exit perform
              else
                 move save-el-deposito(idx-mag) to save-magazzino 
           mag-codice
                 move save-el-gg-cons-max(idx-mag) to save-gg-cons-max
                 read tmagaz no lock
                 if mag-sco-codice(1) not = spaces
                    perform SCR-ELAB-OPEN-ROUTINE
                    if tot-master not = 0
                       exit perform
                    end-if
                 end-if
              end-if
           end-perform 
           .
      * <TOTEM:END>
       gd-riep-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-riep-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-tipocli-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-tipocli-Ev-Msg-Begin-Entry>
           inquire gd-tipocli, entry-reason in como-x.

           set EVENT-ACTION to EVENT-ACTION-FAIL-TERMINATE.
           evaluate como-x
           when X"00"|doppio click
           when X"0D"|invio
           when x"20"|space
                inquire gd-tipocli, CURSOR-Y = riga
                inquire gd-tipocli(riga, 1), hidden-data in hid-col-sel
                if hid-col-sel = 1
                   move 0 to hid-col-sel
                   modify gd-tipocli(riga), row-color = 513
                else
                   move 1 to hid-col-sel
                   modify gd-tipocli(riga), row-color = 480
                end-if
                modify gd-tipocli(riga, 1), hidden-data hid-col-sel
           end-evaluate 
           .
      * <TOTEM:END>
       pb-sel-BeforeProcedure.
      * <TOTEM:PARA. pb-sel-BeforeProcedure>
           modify pb-sel, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-sel-AfterProcedure.
      * <TOTEM:PARA. pb-sel-AfterProcedure>
           modify pb-sel, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-sel-LinkTo.
      * <TOTEM:PARA. pb-sel-LinkTo>
           inquire gd-tipocli, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              move 1 to hid-col-sel
              modify gd-tipocli(riga, 1), hidden-data hid-col-sel
              modify gd-tipocli(riga), row-color = 480
           end-perform 
           .
      * <TOTEM:END>
       pb-desel-BeforeProcedure.
      * <TOTEM:PARA. pb-desel-BeforeProcedure>
           modify pb-desel, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-desel-AfterProcedure.
      * <TOTEM:PARA. pb-desel-AfterProcedure>
           modify pb-desel, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-desel-LinkTo.
      * <TOTEM:PARA. pb-desel-LinkTo>
           inquire gd-tipocli, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe
              move 0 to hid-col-sel
              modify gd-tipocli(riga, 1), hidden-data hid-col-sel
              modify gd-tipocli(riga), row-color = 513
           end-perform 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

