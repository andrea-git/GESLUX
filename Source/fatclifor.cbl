      *{TOTEM}PRG-COMMENT
      * fatclifor.Cbl
      * fatclifor.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          fatclifor.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        lunedì 2 dicembre 2013 18:05:05.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:fatclifor, INIT:fatclifor, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "clienti.sl".
           COPY "tmp-fatclifor.sl".
           COPY "tparamge.sl".
           COPY "PNI.sl".
           COPY "PNR.sl".
           COPY "tconvanno.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "clienti.fd".
           COPY "tmp-fatclifor.fd".
           COPY "tparamge.fd".
           COPY "PNI.fd".
           COPY "PNR.fd".
           COPY "tconvanno.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "comune.def".
               COPY "utydata.def".
               COPY "custom.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "GESLUX - Fatturato Clienti - Fornitori". 
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-NUOVO          PIC  9
                  VALUE IS 1.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE.
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-ESCI-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-EXIT-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 tipo-cod         PIC  9
                  VALUE IS 1.
       77 lab-des-buf      PIC  x(100).
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 ef-cod-buf       PIC  9(5).
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 anno-corr        PIC  9(4).
       77 counter          PIC  9(10).
       77 counter2         PIC  9(10).
       77 counter-edit     PIC  z(10).
       77 anno-pass        PIC  9(4).
       77 como-valore      PIC  s9(15)v99.
       77 path-tmp         PIC  x(256).
       77 anno-pass-g2     PIC  x(2).
       77 anno-corr-g2     PIC  x(2).
       01 rec-grid.
           05 col-pass         PIC  zzz.zzz.zzz.zz9,99-.
           05 col-corr         PIC  zzz.zzz.zzz.zz9,99-.
       77 fatto-bmp        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 tot-corr         PIC  s9(12)v99.
       77 tot-pass         PIC  s9(12)v99.
       77 codice-z         PIC  z(8).
       77 codice           PIC  x(8).
       77 tit-lab          PIC  z(5).
       77 lab-dati-buf     PIC  X(100).
       77 lab-cod-buf      PIC  z(5).
       77 lab-tipo-buf     PIC  X(9)
                  VALUE IS "Fornitore".
       77 lab-ragsoc-buf   PIC  X(100).
       01 FILLER           PIC  9.
           88 record-ok VALUE IS 1    WHEN SET TO FALSE  0. 
       77 STATUS-tmp-fatclifor         PIC  X(2).
           88 Valid-STATUS-tmp-fatclifor VALUE IS "00" THRU "09". 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       77 STATUS-PNI       PIC  X(2).
           88 Valid-STATUS-PNI VALUE IS "00" THRU "09". 
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 scr-oper-handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-PNR       PIC  X(2).
           88 Valid-STATUS-PNR VALUE IS "00" THRU "09". 
       77 STATUS-tconvanno PIC  X(2).
           88 Valid-STATUS-tconvanno VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form1-clienti-RESTOREBUF  PIC X(1356).
       77 TMP-Form1-KEYIS  PIC 9(3) VALUE 1.
       77 Form1-MULKEY-TMPBUF   PIC X(1356).
       77 STATUS-Screen2-FLAG-REFRESH PIC  9.
          88 Screen2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-oper-FLAG-REFRESH PIC  9.
          88 scr-oper-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-clienti-BUF     PIC X(1356).
       77 TMP-DataSet1-tmp-fatclifor-BUF     PIC X(20).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-PNI-BUF     PIC X(3000).
       77 TMP-DataSet1-PNR-BUF     PIC X(300).
       77 TMP-DataSet1-tconvanno-BUF     PIC X(163).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-clienti-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY1-Asc  VALUE "A".
          88 DataSet1-clienti-KEY1-Desc VALUE "D".
       77 DataSet1-tmp-fatclifor-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-fatclifor-LOCK  VALUE "Y".
       77 DataSet1-tmp-fatclifor-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-fatclifor-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-fatclifor-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-PNI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PNI-LOCK  VALUE "Y".
       77 DataSet1-PNI-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PNI-KEY-Asc  VALUE "A".
          88 DataSet1-PNI-KEY-Desc VALUE "D".
       77 DataSet1-PNR-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PNR-LOCK  VALUE "Y".
       77 DataSet1-PNR-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PNR-KEY-Asc  VALUE "A".
          88 DataSet1-PNR-KEY-Desc VALUE "D".
       77 DataSet1-tconvanno-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tconvanno-LOCK  VALUE "Y".
       77 DataSet1-tconvanno-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tconvanno-KEY-Asc  VALUE "A".
          88 DataSet1-tconvanno-KEY-Desc VALUE "D".

       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 PNR-PNR-CODICE1-SPLITBUF  PIC X(33).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-cod VALUE 5001.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 2,00, 
           LINE 1,56,
           LINES 3,67 ,
           SIZE 28,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Tipo Codice",
           TITLE-POSITION 2,
           .

      * RADIO BUTTON
       05
           rb-cli, 
           Radio-Button, 
           COL 4,00, 
           LINE 3,06,
           LINES 1,31 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1000
           FLAT,
           GROUP 1,
           GROUP-VALUE 1,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&C",
           VALUE tipo-cod,
           AFTER PROCEDURE rb-cli-AfterProcedure, 
           BEFORE PROCEDURE rb-cli-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           rb-for, 
           Radio-Button, 
           COL 17,00, 
           LINE 3,06,
           LINES 1,31 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1002
           FLAT,
           GROUP 1,
           GROUP-VALUE 2,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "&F",
           VALUE tipo-cod,
           AFTER PROCEDURE rb-for-AfterProcedure, 
           BEFORE PROCEDURE rb-for-BeforeProcedure, 
           .
      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 20,00, 
           LINE 3,06,
           LINES 1,31 ,
           SIZE 8,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "&Fornitore",
           .

      * LABEL
       05
           Screen1-La-2, 
           Label, 
           COL 7,00, 
           LINE 3,06,
           LINES 1,31 ,
           SIZE 6,00 ,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "&Cliente",
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 24,60, 
           LINE 1,56,
           LINES 1,00 ,
           SIZE 1,00 ,
           FONT IS Default-Font,
           ID IS 14,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * ENTRY FIELD
       05
           ef-cod, 
           Entry-Field, 
           COL 13,10, 
           LINE 8,00,
           LINES 1,33 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-cod,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-cod-buf,
           AFTER PROCEDURE ef-cod-AfterProcedure, 
           BEFORE PROCEDURE ef-cod-BeforeProcedure, 
           .

      * FRAME
       05
           Screen1-Fr-1a, 
           Frame, 
           COL 1,00, 
           LINE 12,83,
           LINES 2,78 ,
           SIZE 30,30 ,
           LOWERED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUI, 
           Push-Button, 
           COL 15,30, 
           LINE 13,50,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           PB-CANCEL, 
           Push-Button, 
           COL 23,10, 
           LINE 13,50,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2b-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2b-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-blockpgm-1, 
           Label, 
           COL 3,17, 
           LINE 1,77,
           LINES 0,62 ,
           SIZE 9,33 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-La-3, 
           Label, 
           COL 13,10, 
           LINE 6,50,
           LINES 1,06 ,
           SIZE 6,00 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Codice",
           .

      * LABEL
       05
           lab-des, 
           Label, 
           COL 2,10, 
           LINE 10,00,
           LINES 2,50 ,
           SIZE 28,00 ,
           COLOR IS 5,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-des-buf,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 11,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 12,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           Screen2, 
           .

      * PUSH BUTTON
       05
           pb-fatto, 
           Push-Button, 
           COL 19,70, 
           LINE 29,67,
           LINES 2,06 ,
           SIZE 8,10 ,
           BITMAP-HANDLE FATTO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           FONT IS Small-Font,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           ESCAPE-BUTTON,
           TITLE "Push Button",
           AFTER PROCEDURE pb-fatto-AfterProcedure, 
           BEFORE PROCEDURE pb-fatto-BeforeProcedure, 
           .

      * GRID
       05
           gd1, 
           Grid, 
           COL 2,40, 
           LINE 6,00,
           LINES 23,44 ,
           SIZE 42,20 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 11, 30),
           ALIGNMENT ("C", "R", "R"),
           SEPARATION (5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NO-TAB,
           NUM-ROWS 15,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VPADDING 50,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * LABEL
       05
           lab-tipo, 
           Label, 
           COL 2,00, 
           LINE 2,00,
           LINES 1,00 ,
           SIZE 8,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-tipo-buf,
           .

      * LABEL
       05
           lab-cod, 
           Label, 
           COL 11,00, 
           LINE 2,00,
           LINES 1,00 ,
           SIZE 6,00 ,
           COLOR IS 2,
           FONT IS Verdana12B-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE lab-cod-buf,
           .

      * LABEL
       05
           lab-ragsoc, 
           Label, 
           COL 19,00, 
           LINE 2,00,
           LINES 1,00 ,
           SIZE 26,00 ,
           COLOR IS 2,
           FONT IS Verdana12B-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-ragsoc-buf,
           .

      * LABEL
       05
           lab-dati, 
           Label, 
           COL 2,00, 
           LINE 4,00,
           LINES 1,33 ,
           SIZE 43,00 ,
           COLOR IS 2,
           FONT IS Verdana12B-Occidentale,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-dati-buf,
           .

      * LABEL
       05
           lab-datia, 
           Label, 
           COL 2,00, 
           LINE 31,83,
           LINES 1,00 ,
           SIZE 43,00 ,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "IMPORTI AL NETTO DEL'I.V.A.",
           .

      * FORM
       01 
           scr-oper, 
           .

      * LABEL
       05
           Screen1-La-1b, 
           Label, 
           COL 2,00, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 23,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Calcolo fatturati in corso...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:fatclifor, INIT:fatclifor, BeforeDeclarative>
      ***---
       CLIENTI-ERR SECTION.
           use after error procedure on clienti.
           set tutto-ok  to true.
           evaluate status-clienti
           when "35"
                display message "File [CLIENTI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [CLIENTI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[CLIENTI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMP-FATCLIFOR-ERR SECTION.
           use after error procedure on tmp-fatclifor.
           set tutto-ok  to true.
           evaluate status-tmp-fatclifor
           when "35"
                display message "File [TMP-FATCLIFOR] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMP-FATCLIFOR] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMP-FATCLIFOR] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       PNI-ERR SECTION.
           use after error procedure on pni.
           set tutto-ok  to true.
           evaluate status-pni
           when "35"
                display message "File [PNI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PNI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PNI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       PNR-ERR SECTION.
           use after error procedure on pnr.
           set tutto-ok  to true.
           evaluate status-pnr
           when "35"
                display message "File [PNR] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PNR] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PNR] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TPARAMGE-ERR SECTION.
           use after error procedure on tparamge.
           set tutto-ok  to true.
           evaluate status-tparamge
           when "35"
                display message "File [TPARAMGE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TPARAMGE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TPARAMGE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ginqui-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:fatclifor, INIT:fatclifor, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana12BI-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, FATTO-BMP
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * PB-ESEGUI
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * PB-CANCEL
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
      * pb-fatto
           COPY RESOURCE "FATTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "FATTO.BMP", 
                   GIVING FATTO-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-clienti
      *    tmp-fatclifor OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-fatclifor
           PERFORM OPEN-tparamge
           PERFORM OPEN-PNI
           PERFORM OPEN-PNR
           PERFORM OPEN-tconvanno
      *    After Open
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:fatclifor, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:fatclifor, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-fatclifor.
      * <TOTEM:EPT. INIT:fatclifor, FD:tmp-fatclifor, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-fatclifor
           IF NOT Valid-STATUS-tmp-fatclifor
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:fatclifor, FD:tmp-fatclifor, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:fatclifor, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:fatclifor, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PNI.
      * <TOTEM:EPT. INIT:fatclifor, FD:PNI, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT PNI
           IF NOT Valid-STATUS-PNI
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:fatclifor, FD:PNI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PNR.
      * <TOTEM:EPT. INIT:fatclifor, FD:PNR, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT PNR
           IF NOT Valid-STATUS-PNR
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:fatclifor, FD:PNR, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tconvanno.
      * <TOTEM:EPT. INIT:fatclifor, FD:tconvanno, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tconvanno
           IF NOT Valid-STATUS-tconvanno
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:fatclifor, FD:tconvanno, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-clienti
      *    tmp-fatclifor CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-fatclifor
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-PNI
           PERFORM CLOSE-PNR
           PERFORM CLOSE-tconvanno
      *    After Close
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:fatclifor, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-tmp-fatclifor.
      * <TOTEM:EPT. INIT:fatclifor, FD:tmp-fatclifor, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:fatclifor, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-PNI.
      * <TOTEM:EPT. INIT:fatclifor, FD:PNI, BeforeClose>
      * <TOTEM:END>
           CLOSE PNI
           .

       CLOSE-PNR.
      * <TOTEM:EPT. INIT:fatclifor, FD:PNR, BeforeClose>
      * <TOTEM:END>
           CLOSE PNR
           .

       CLOSE-tconvanno.
      * <TOTEM:EPT. INIT:fatclifor, FD:tconvanno, BeforeClose>
      * <TOTEM:END>
           CLOSE tconvanno
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 MOVE Low-Value TO cli-chiave OF clienti
              ELSE
                 MOVE High-Value TO cli-chiave OF clienti
              END-IF
           END-EVALUATE
           .

       DataSet1-clienti-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 MOVE High-Value TO cli-chiave OF clienti
              ELSE
                 MOVE Low-Value TO cli-chiave OF clienti
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-clienti-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-clienti-KEY1-ORDER
           END-EVALUATE
           .

      * clienti
       DataSet1-clienti-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 START clienti KEY >= cli-chiave OF clienti
              ELSE
                 START clienti KEY <= cli-chiave OF clienti
              END-IF
           END-EVALUATE
           .

       DataSet1-clienti-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 START clienti KEY <= cli-chiave OF clienti
              ELSE
                 START clienti KEY >= cli-chiave OF clienti
              END-IF
           END-EVALUATE
           .

       DataSet1-clienti-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 START clienti KEY > cli-chiave OF clienti
              ELSE
                 START clienti KEY < cli-chiave OF clienti
              END-IF
           END-EVALUATE
           .

       DataSet1-clienti-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 START clienti KEY < cli-chiave OF clienti
              ELSE
                 START clienti KEY > cli-chiave OF clienti
              END-IF
           END-EVALUATE
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-LOCK
                 READ clienti WITH LOCK 
                 KEY cli-chiave OF clienti
              ELSE
                 READ clienti WITH NO LOCK 
                 KEY cli-chiave OF clienti
              END-IF
           END-EVALUATE
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 IF DataSet1-clienti-LOCK
                    READ clienti NEXT WITH LOCK
                 ELSE
                    READ clienti NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-clienti-LOCK
                    READ clienti PREVIOUS WITH LOCK
                 ELSE
                    READ clienti PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-clienti-KEY1-Asc
                 IF DataSet1-clienti-LOCK
                    READ clienti PREVIOUS WITH LOCK
                 ELSE
                    READ clienti PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-clienti-LOCK
                    READ clienti NEXT WITH LOCK
                 ELSE
                    READ clienti NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-fatclifor-INITSTART.
           IF DataSet1-tmp-fatclifor-KEY-Asc
              MOVE Low-Value TO tmfc-chiave
           ELSE
              MOVE High-Value TO tmfc-chiave
           END-IF
           .

       DataSet1-tmp-fatclifor-INITEND.
           IF DataSet1-tmp-fatclifor-KEY-Asc
              MOVE High-Value TO tmfc-chiave
           ELSE
              MOVE Low-Value TO tmfc-chiave
           END-IF
           .

      * tmp-fatclifor
       DataSet1-tmp-fatclifor-START.
           IF DataSet1-tmp-fatclifor-KEY-Asc
              START tmp-fatclifor KEY >= tmfc-chiave
           ELSE
              START tmp-fatclifor KEY <= tmfc-chiave
           END-IF
           .

       DataSet1-tmp-fatclifor-START-NOTGREATER.
           IF DataSet1-tmp-fatclifor-KEY-Asc
              START tmp-fatclifor KEY <= tmfc-chiave
           ELSE
              START tmp-fatclifor KEY >= tmfc-chiave
           END-IF
           .

       DataSet1-tmp-fatclifor-START-GREATER.
           IF DataSet1-tmp-fatclifor-KEY-Asc
              START tmp-fatclifor KEY > tmfc-chiave
           ELSE
              START tmp-fatclifor KEY < tmfc-chiave
           END-IF
           .

       DataSet1-tmp-fatclifor-START-LESS.
           IF DataSet1-tmp-fatclifor-KEY-Asc
              START tmp-fatclifor KEY < tmfc-chiave
           ELSE
              START tmp-fatclifor KEY > tmfc-chiave
           END-IF
           .

       DataSet1-tmp-fatclifor-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-fatclifor-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-fatclifor-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-fatclifor-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeWrite>
      * <TOTEM:END>
           WRITE tmfc-rec OF tmp-fatclifor.
           MOVE STATUS-tmp-fatclifor TO TOTEM-ERR-STAT
           MOVE "tmp-fatclifor" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-fatclifor-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-fatclifor TO TOTEM-ERR-STAT
           MOVE "tmp-fatclifor" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-fatclifor-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-fatclifor TO TOTEM-ERR-STAT
           MOVE "tmp-fatclifor" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-fatclifor, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-PNI-INITSTART.
           IF DataSet1-PNI-KEY-Asc
              MOVE Low-Value TO PNI-CODICE
           ELSE
              MOVE High-Value TO PNI-CODICE
           END-IF
           .

       DataSet1-PNI-INITEND.
           IF DataSet1-PNI-KEY-Asc
              MOVE High-Value TO PNI-CODICE
           ELSE
              MOVE Low-Value TO PNI-CODICE
           END-IF
           .

      * PNI
       DataSet1-PNI-START.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY >= PNI-CODICE
           ELSE
              START PNI KEY <= PNI-CODICE
           END-IF
           .

       DataSet1-PNI-START-NOTGREATER.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY <= PNI-CODICE
           ELSE
              START PNI KEY >= PNI-CODICE
           END-IF
           .

       DataSet1-PNI-START-GREATER.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY > PNI-CODICE
           ELSE
              START PNI KEY < PNI-CODICE
           END-IF
           .

       DataSet1-PNI-START-LESS.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY < PNI-CODICE
           ELSE
              START PNI KEY > PNI-CODICE
           END-IF
           .

       DataSet1-PNI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PNI-LOCK
              READ PNI WITH LOCK 
              KEY PNI-CODICE
           ELSE
              READ PNI WITH NO LOCK 
              KEY PNI-CODICE
           END-IF
           MOVE STATUS-PNI TO TOTEM-ERR-STAT 
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PNI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PNI-KEY-Asc
              IF DataSet1-PNI-LOCK
                 READ PNI NEXT WITH LOCK
              ELSE
                 READ PNI NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNI-LOCK
                 READ PNI PREVIOUS WITH LOCK
              ELSE
                 READ PNI PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PNI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PNI-KEY-Asc
              IF DataSet1-PNI-LOCK
                 READ PNI PREVIOUS WITH LOCK
              ELSE
                 READ PNI PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNI-LOCK
                 READ PNI NEXT WITH LOCK
              ELSE
                 READ PNI NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PNI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PNI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PNI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterDelete>
      * <TOTEM:END>
           .

       PNR-PNR-CODICE1-MERGE-SPLITBUF.
           INITIALIZE PNR-PNR-CODICE1-SPLITBUF
           MOVE PNR-CODICE-CONTO(1:9) TO PNR-PNR-CODICE1-SPLITBUF(1:9)
           MOVE PNR-ESERCIZIO(1:2) TO PNR-PNR-CODICE1-SPLITBUF(10:2)
           MOVE PNR-DATA-REGISTRAZIONE(1:8) TO 
           PNR-PNR-CODICE1-SPLITBUF(12:8)
           MOVE PNR-CODICE(1:13) TO PNR-PNR-CODICE1-SPLITBUF(20:13)
           .

       DataSet1-PNR-INITSTART.
           IF DataSet1-PNR-KEY-Asc
              MOVE Low-Value TO PNR-CODICE
           ELSE
              MOVE High-Value TO PNR-CODICE
           END-IF
           .

       DataSet1-PNR-INITEND.
           IF DataSet1-PNR-KEY-Asc
              MOVE High-Value TO PNR-CODICE
           ELSE
              MOVE Low-Value TO PNR-CODICE
           END-IF
           .

      * PNR
       DataSet1-PNR-START.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY >= PNR-CODICE
           ELSE
              START PNR KEY <= PNR-CODICE
           END-IF
           .

       DataSet1-PNR-START-NOTGREATER.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY <= PNR-CODICE
           ELSE
              START PNR KEY >= PNR-CODICE
           END-IF
           .

       DataSet1-PNR-START-GREATER.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY > PNR-CODICE
           ELSE
              START PNR KEY < PNR-CODICE
           END-IF
           .

       DataSet1-PNR-START-LESS.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY < PNR-CODICE
           ELSE
              START PNR KEY > PNR-CODICE
           END-IF
           .

       DataSet1-PNR-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PNR-LOCK
              READ PNR WITH LOCK 
              KEY PNR-CODICE
           ELSE
              READ PNR WITH NO LOCK 
              KEY PNR-CODICE
           END-IF
           PERFORM PNR-PNR-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PNR TO TOTEM-ERR-STAT 
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PNR-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PNR-KEY-Asc
              IF DataSet1-PNR-LOCK
                 READ PNR NEXT WITH LOCK
              ELSE
                 READ PNR NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNR-LOCK
                 READ PNR PREVIOUS WITH LOCK
              ELSE
                 READ PNR PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM PNR-PNR-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PNR-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PNR-KEY-Asc
              IF DataSet1-PNR-LOCK
                 READ PNR PREVIOUS WITH LOCK
              ELSE
                 READ PNR PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNR-LOCK
                 READ PNR NEXT WITH LOCK
              ELSE
                 READ PNR NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM PNR-PNR-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PNR-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PNR-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PNR-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tconvanno-INITSTART.
           IF DataSet1-tconvanno-KEY-Asc
              MOVE Low-Value TO cnv-chiave
           ELSE
              MOVE High-Value TO cnv-chiave
           END-IF
           .

       DataSet1-tconvanno-INITEND.
           IF DataSet1-tconvanno-KEY-Asc
              MOVE High-Value TO cnv-chiave
           ELSE
              MOVE Low-Value TO cnv-chiave
           END-IF
           .

      * tconvanno
       DataSet1-tconvanno-START.
           IF DataSet1-tconvanno-KEY-Asc
              START tconvanno KEY >= cnv-chiave
           ELSE
              START tconvanno KEY <= cnv-chiave
           END-IF
           .

       DataSet1-tconvanno-START-NOTGREATER.
           IF DataSet1-tconvanno-KEY-Asc
              START tconvanno KEY <= cnv-chiave
           ELSE
              START tconvanno KEY >= cnv-chiave
           END-IF
           .

       DataSet1-tconvanno-START-GREATER.
           IF DataSet1-tconvanno-KEY-Asc
              START tconvanno KEY > cnv-chiave
           ELSE
              START tconvanno KEY < cnv-chiave
           END-IF
           .

       DataSet1-tconvanno-START-LESS.
           IF DataSet1-tconvanno-KEY-Asc
              START tconvanno KEY < cnv-chiave
           ELSE
              START tconvanno KEY > cnv-chiave
           END-IF
           .

       DataSet1-tconvanno-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tconvanno-LOCK
              READ tconvanno WITH LOCK 
              KEY cnv-chiave
           ELSE
              READ tconvanno WITH NO LOCK 
              KEY cnv-chiave
           END-IF
           MOVE STATUS-tconvanno TO TOTEM-ERR-STAT 
           MOVE "tconvanno" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tconvanno-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tconvanno-KEY-Asc
              IF DataSet1-tconvanno-LOCK
                 READ tconvanno NEXT WITH LOCK
              ELSE
                 READ tconvanno NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tconvanno-LOCK
                 READ tconvanno PREVIOUS WITH LOCK
              ELSE
                 READ tconvanno PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tconvanno TO TOTEM-ERR-STAT
           MOVE "tconvanno" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tconvanno-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tconvanno-KEY-Asc
              IF DataSet1-tconvanno-LOCK
                 READ tconvanno PREVIOUS WITH LOCK
              ELSE
                 READ tconvanno PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tconvanno-LOCK
                 READ tconvanno NEXT WITH LOCK
              ELSE
                 READ tconvanno NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tconvanno TO TOTEM-ERR-STAT
           MOVE "tconvanno" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tconvanno-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tconvanno TO TOTEM-ERR-STAT
           MOVE "tconvanno" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tconvanno-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tconvanno TO TOTEM-ERR-STAT
           MOVE "tconvanno" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tconvanno-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tconvanno TO TOTEM-ERR-STAT
           MOVE "tconvanno" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tconvanno, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE cli-rec OF clienti
           INITIALIZE tmfc-rec OF tmp-fatclifor
           INITIALIZE tge-rec OF tparamge
           INITIALIZE record-pni OF PNI
           INITIALIZE RECORD-PNR OF PNR
           INITIALIZE cnv-rec OF tconvanno
           .


      * GRID
       gd1-Content.
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 1,
                CELL-DATA = "Periodo",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 2,
                CELL-DATA = "Gennaio",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 3,
                CELL-DATA = "Febbraio",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 4,
                CELL-DATA = "Marzo",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 5,
                CELL-DATA = "Aprile",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 6,
                CELL-DATA = "Maggio",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 7,
                CELL-DATA = "Giugno",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 8,
                CELL-DATA = "Luglio",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 9,
                CELL-DATA = "Agosto",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 10,
                CELL-DATA = "Settembre",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 11,
                CELL-DATA = "Ottobre",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 12,
                CELL-DATA = "Novembre",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 13,
                CELL-DATA = "Dicembre",
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 15,
                CELL-DATA = "TOT. ANNO",
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-fatclifor-INITREC.
           INITIALIZE tmfc-rec OF tmp-fatclifor
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PNI-INITREC.
           INITIALIZE record-pni OF PNI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PNR-INITREC.
           INITIALIZE RECORD-PNR OF PNR
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tconvanno-INITREC.
           INITIALIZE cnv-rec OF tconvanno
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form1-Buf-To-Fld
           END-EVALUATE
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 14,61,
              SIZE 30,30,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 1,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>


           .
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           set tutto-ok to true.
           move 1 to tipo-cod.

           move spaces to tge-chiave.
           read tparamge no lock invalid continue end-read.
           move tge-anno(1:4) to anno-corr.
           subtract 1 from anno-corr giving anno-pass.

           move anno-corr to cnv-anno-geslux.
           read tconvanno no lock 
                invalid
                set errori to true
                display message "Anno corrente non intabellato per conve
      -    "rsione"
                         x"0d0a""Utilizzare funzione apposita e riprovar
      -    "e"
                          title tit-err
                           icon 2
            not invalid
                if cnv-anno-g2 = spaces
                   set errori to true
                   display message "Anno corrente non intabellato per co
      -    "nversione"
                            x"0d0a""Utilizzare funzione apposita e ripro
      -    "vare"
                             title tit-err
                              icon 2
                end-if
           end-read.

           if tutto-ok
              move cnv-anno-g2 to anno-corr-g2
              move anno-pass to cnv-anno-geslux
              read tconvanno no lock 
                   invalid
                   set errori to true
                   display message "Anno passato non intabellato per con
      -    "versione"
                            x"0d0a""Utilizzare funzione apposita e ripro
      -    "vare"
                             title tit-err
                              icon 2
               not invalid
                   if cnv-anno-g2 = spaces
                      set errori to true
                      display message "Anno passato non intabellato per 
      -    "conversione"
                               x"0d0a""Utilizzare funzione apposita e ri
      -    "provare"
                                title tit-err
                                 icon 2
                   end-if
              end-read
           end-if.

           if errori move 27          to key-status
           else      move cnv-anno-g2 to anno-pass-g2
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM rb-cli-LinkTo
              WHEN Key-Status = 1002
                 PERFORM rb-for-LinkTo
              WHEN Key-Status = 1001
                 PERFORM PB-ESEGUI-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-clienti-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-clienti-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Update-Key.
           MOVE cli-rec OF clienti TO
                     Form1-MULKEY-TMPBUF
           PERFORM Form1-CLEAR
           PERFORM Form1-INIT-DATA
           MOVE Form1-MULKEY-TMPBUF TO
                     cli-rec OF clienti
           PERFORM DataSet1-clienti-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
           .

       Form1-DUPLICATE-MOVEKEY.
           .

       Form1-First.
           PERFORM Form1-DUMMY-FIRST
           PERFORM DataSet1-clienti-INITSTART
           PERFORM DataSet1-clienti-START
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-clienti-Read-Next
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFirst>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Previous.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-clienti-START-LESS
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-clienti-Read-Prev
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-PREVIOUS
           PERFORM Form1-IUD-Display
           .

       Form1-Next.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-clienti-START-GREATER
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-clienti-Read-Next
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterNext>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-NEXT
           PERFORM Form1-IUD-Display
           .
      
       Form1-Last.
           PERFORM Form1-DUMMY-LAST
           PERFORM DataSet1-clienti-INITEND
           PERFORM DataSet1-clienti-START-NOTGREATER
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-clienti-Read-Prev
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterLast>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Curr.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-clienti-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCurrent>
      * <TOTEM:END>
           .

       Form1-IUD-Display.
           IF Valid-STATUS-clienti
              PERFORM Form1-ALLGRID-RESET
              PERFORM Form1-Fld-To-Buf
              PERFORM Form1-NAVI-FOR-MASTERGRID
              PERFORM Form1-DISPLAY
           ELSE
              IF Form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form1-Extended-File-Status
              END-IF
           END-IF
           .

       Form1-Add.
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-ADD
           PERFORM DataSet1-clienti-INITREC
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-clienti-Rec-Write
           IF Valid-STATUS-clienti
              PERFORM Form1-RESUMMARY-INS
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAdd>
      * <TOTEM:END>
           .
     
       Form1-Update.
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-clienti-START              
           IF NOT Valid-STATUS-clienti
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-clienti-Read
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-UPDATE
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-clienti-Rec-Rewrite
           IF Valid-STATUS-clienti
              PERFORM Form1-RESUMMARY-DEL
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterUpdate>
      * <TOTEM:END>
           .

       Form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form1-DUMMY-DELETE
      * delete
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-clienti-Rec-Delete
           IF Valid-STATUS-clienti
              PERFORM Form1-CLEAR
              PERFORM Form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-clienti
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDelete>
      * <TOTEM:END>
           PERFORM Form1-ERR-CHECKING
           .

       Form1-NAVI-FOR-MASTERGRID.
           .

       Form1-ERR-CHECKING.
           IF Valid-STATUS-clienti
              PERFORM Form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form1-Extended-File-Status
           END-IF
           .

       Form1-RESUMMARY-INS.
           .

       Form1-RESUMMARY-DEL.
           .


       Form1-DUMMY-FIRST.
           .

       Form1-DUMMY-PREVIOUS.
           .

       Form1-DUMMY-NEXT.
           .

       Form1-DUMMY-LAST.
           .

       Form1-DUMMY-CURR.
           .

       Form1-DUMMY-ADD.
           .

       Form1-DUMMY-UPDATE.
           .

       Form1-DUMMY-UPDATE-INIT.
           .

       Form1-DUMMY-DELETE.
           .

       Form1-DUMMY-DELETE-INIT.
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * FORM : Form1
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           MOVE DataSet1-clienti-KEY1-ORDER TO TMP-Form1-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form1-KEYIS
           MOVE cli-rec OF clienti TO 
              TMP-Form1-clienti-RESTOREBUF
           .             

       Form1-Restore-Status.
           MOVE TMP-Form1-KEY1-ORDER TO DataSet1-clienti-KEY1-ORDER
           MOVE TMP-Form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form1-clienti-RESTOREBUF TO
              cli-rec OF clienti
           PERFORM DataSet1-clienti-START
           IF Valid-STATUS-clienti
              PERFORM DataSet1-clienti-Read-Next
           ELSE
              PERFORM DataSet1-clienti-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-clienti OR
              (Valid-STATUS-clienti AND
                 cli-rec OF clienti = 
                   TMP-Form1-clienti-RESTOREBUF)
              PERFORM DataSet1-clienti-Read-Next
           END-PERFORM
           .

       Screen2-Open-Routine.
           PERFORM Screen2-Scrn
           PERFORM Screen2-Proc
           .

       Screen2-Scrn.
           PERFORM Screen2-Create-Win
           PERFORM Screen2-Init-Value
           PERFORM Screen2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen2-DISPLAY
           .

       Screen2-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 32,44,
              SIZE 45,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Screen2-Handle,
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen2 UPON Screen2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd1, DISPLAY-COLUMNS (1, 13, 28)
           .

       Screen2-PROC.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAccept>
           perform SCR-OPER-OPEN-ROUTINE.

           if trovato
              if tipo-cod = 1 move "Cliente"   to lab-tipo-buf
              else            move "Fornitore" to lab-tipo-buf
              end-if

              move ef-cod-buf  to lab-cod-buf
              move lab-des-buf to lab-ragsoc-buf

              inspect cli-indirizzo 
                      replacing trailing spaces by low-value
              inspect cli-localita
                      replacing trailing spaces by low-value

              initialize lab-dati-buf
              string cli-indirizzo delimited low-value
                     " - "         delimited size
                     cli-cap       delimited size
                     " "           delimited size
                     cli-localita  delimited low-value
                     into lab-dati-buf
              end-string
              display screen2
              modify screen2-handle, visible true
              perform RIEMPI-GRID
           else
              display message "Nessun dato di fatturazione"
                        title titolo
                         icon 2
              perform SCREEN2-EXIT
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen2
                 ON EXCEPTION
                    PERFORM Screen2-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen2-Handle
           INITIALIZE Key-Status
           .

       Screen2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen2-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen2-CLEAR.
           PERFORM Screen2-INIT-VALUE
           PERFORM Screen2-DISPLAY
           .

       Screen2-DISPLAY.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen2 UPON Screen2-Handle
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Screen2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeExit>
           close tmp-fatclifor.
           delete file tmp-fatclifor.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen2-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd1-Content
           .

       Screen2-Init-Value.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, SetDefault>
      * <TOTEM:END>
           PERFORM Screen2-FLD-TO-BUF
           .


       Screen2-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen2-SHOW-MSG-ROUTINE
           .

       Screen2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen2-DISPLAY-MESSAGE
           .

       Screen2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen2-Save-Status.
           .             

       Screen2-Restore-Status.
           .

       scr-oper-Open-Routine.
           PERFORM scr-oper-Scrn
           PERFORM scr-oper-Proc
           .

       scr-oper-Scrn.
           PERFORM scr-oper-Create-Win
           PERFORM scr-oper-Init-Value
           PERFORM scr-oper-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-oper-DISPLAY
           .

       scr-oper-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 3,00,
              SIZE 25,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-oper-handle,
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-oper UPON scr-oper-handle
      * DISPLAY-COLUMNS settings
           .

       scr-oper-PROC.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeAccept>
           initialize path-tmp.
           accept  path-tmp  from environment "PATH_ST".
           inspect path-tmp  replacing trailing spaces by low-value.
           accept  como-data from century-date.
           accept  como-ora  from time.
           string  path-tmp       delimited low-value
                   "tmp-fatclifor" delimited size
                   "_"             delimited size
                   como-data       delimited size
                   "_"             delimited size
                   como-ora        delimited size
                   ".tmp"          delimited size
                   into path-tmp
           end-string.

           open output tmp-fatclifor.
           close       tmp-fatclifor.
           open i-o    tmp-fatclifor.

           perform RIEMPI-TMP.

           perform SCR-OPER-EXIT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-oper-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-oper-handle
           INITIALIZE Key-Status
           .

       scr-oper-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-oper-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-oper-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-oper-CLEAR.
           PERFORM scr-oper-INIT-VALUE
           PERFORM scr-oper-DISPLAY
           .

       scr-oper-DISPLAY.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-oper UPON scr-oper-handle
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-oper-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-oper-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-oper-Init-Value.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, SetDefault>
      * <TOTEM:END>
           PERFORM scr-oper-FLD-TO-BUF
           .


       scr-oper-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-oper-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-oper-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-oper-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-oper-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-oper-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-oper-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-oper-SHOW-MSG-ROUTINE
           .

       scr-oper-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-oper-DISPLAY-MESSAGE
           .

       scr-oper-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-oper-Save-Status.
           .             

       scr-oper-Restore-Status.
           .



       Screen1-Event-Proc.
           .

       Screen2-Event-Proc.
           .

       Screen2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CERCA.
      * <TOTEM:PARA. CERCA>
           move "clienti-CF-all"    to como-file.
           if tipo-cod = 1 set cli-tipo-C to true
           else            set cli-tipo-F to true
           end-if.
           inquire ef-cod, value in cli-codice.

           call "zoom-gt"   using como-file, cli-rec
                           giving stato-zoom
           end-call.
           cancel "zoom-gt".

           if stato-zoom = 0
              move cli-ragsoc-1 to lab-des-buf
              move cli-codice   to ef-cod-buf
              display ef-cod lab-des
           end-if 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

           evaluate control-id
           when 78-ID-ef-cod
                if tipo-cod = 1
                   set cli-tipo-C to true
                else
                   set cli-tipo-F to true
                end-if
                inquire ef-cod, value in cli-codice
                read clienti no lock
                     invalid
                     set errori to true
                     display message "Codice NON valido"
                               title tit-err
                                icon 2
                     move space to lab-des-buf
                 not invalid
                     move cli-ragsoc-1 to lab-des-buf
                end-read
                display lab-des
           end-evaluate.

           if errori
              perform CANCELLA-COLORE
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy" 
           .
      * <TOTEM:END>

       RIEMPI-TMP.
      * <TOTEM:PARA. RIEMPI-TMP>
           set trovato  to false.
           set tutto-ok to true.
           move low-value  to record-pnr.
           if tipo-cod = 1 
              set pnr-tipo-cfm-cli to true
              set cli-tipo-C       to true
           else            
              set pnr-tipo-cfm-frn to true
              set cli-tipo-F       to true
           end-if.
           move ef-cod-buf     to codice.
           inspect codice replacing leading x"20" by x"30".
           move codice         to pnr-codice-cfm.
           
           move anno-pass-G2   to pnr-esercizio.
           string anno-pass delimited size
                  "0101"    delimited size
                  into pnr-data-registrazione
           end-string.
           start pnr key is >= pnr-codice1
                 invalid set errori to true
           end-start.

           move 0 to counter counter2.
           if tutto-ok
              perform until 1 = 2

                 initialize record-pni replacing numeric data by zeroes
                                            alphanumeric data by spaces

                 add 1 to counter
                 add 1 to counter2
                 if counter2 = 200
                    move counter to counter-edit
                    display counter-edit
                       upon scr-oper-handle at column 15,00
                                                 line  3,00
                    move 0 to counter2
                 end-if

                 read pnr next at end exit perform end-read

                 if pnr-tipo-cfm not = cli-tipo-CF
                    exit perform
                 end-if

                 if pnr-data-registrazione(1:4) > anno-corr
                    exit perform
                 end-if

                 if pnr-codice-cfm not = codice
                    exit perform
                 end-if

                 if pnr-esercizio = anno-pass-G2 or
                    pnr-esercizio = anno-corr-G2
                    move pnr-progressivo to pni-progressivo
                    read pni no lock invalid continue end-read
                    initialize tmfc-rec replacing numeric data by zeroes
                                             alphanumeric data by spaces
                    move aa of pnr-data-registrazione to tmfc-anno
                    move mm of pnr-data-registrazione to tmfc-mese
                    read tmp-fatclifor no lock
                         invalid continue
                    end-read
                    move 0 to como-valore
                    perform varying idx from 1 by 1
                              until idx > 20
                       if pnr-dare
                          if pnr-tipo-cfm-cli
                             compute como-valore =
                                     como-valore +
                                     pni-imponibile(idx)
                          else
                             compute como-valore =
                                     como-valore -
                                     pni-imponibile(idx)
                          end-if
                       else
                          if pnr-tipo-cfm-cli
                             compute como-valore =
                                     como-valore -
                                     pni-imponibile(idx)
                          else
                             compute como-valore =
                                     como-valore +
                                     pni-imponibile(idx)
                          end-if
                       end-if
                    end-perform
                    compute tmfc-importo =
                            tmfc-importo + como-valore
                    rewrite tmfc-rec invalid write tmfc-rec end-rewrite
                    set trovato to true
                 end-if
              end-perform
           end-if 
           .
      * <TOTEM:END>

       RIEMPI-GRID.
      * <TOTEM:PARA. RIEMPI-GRID>
           move 0 to tot-corr tot-pass.
           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.
           modify gd1(1, 2), cell-data anno-pass.
           modify gd1(1, 3), cell-data anno-corr.

           perform varying idx from 1 by 1 
                      until idx > 12
              initialize rec-grid

              move idx       to tmfc-mese
              move anno-pass to tmfc-anno
              read tmp-fatclifor no lock 
                   invalid move 0 to tmfc-importo
              end-read
              move tmfc-importo to col-pass
              add  tmfc-importo to tot-pass

              move idx       to tmfc-mese  
              move anno-corr to tmfc-anno
              read tmp-fatclifor no lock
                   invalid move 0 to tmfc-importo
              end-read
              move tmfc-importo to col-corr
              add  tmfc-importo to tot-corr
              
              add 1 to idx giving riga        
              modify gd1(riga, 2), cell-data = col-pass
              modify gd1(riga, 3), cell-data = col-corr

           end-perform.
           
           move tot-pass to col-pass.
           move tot-corr to col-corr.
           modify gd1(15, 2), cell-data = col-pass.
           modify gd1(15, 3), cell-data = col-corr 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       ginqui-Ev-Before-Program.
      * <TOTEM:PARA. ginqui-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify pb-esegui, bitmap-number = 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify pb-esegui, bitmap-number = 1 
           .
      * <TOTEM:END>
       PB-ESEGUI-LinkTo.
      * <TOTEM:PARA. PB-ESEGUI-LinkTo>
           set tutto-ok to true.
           perform varying control-id from 78-ID-ef-cod by 1
                     until control-id > 78-ID-ef-cod
              perform CONTROLLO
              if errori exit perform end-if
           end-perform.

           if tutto-ok
              modify form1-Handle, visible 0
              perform SCREEN2-OPEN-ROUTINE
              modify form1-Handle, visible 1
              modify pb-esegui,    bitmap-number = 1
              move 78-ID-ef-cod to control-id
              move 4            to accept-control
           end-if 
           .
      * <TOTEM:END>
       Form1-Pb-2b-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2b-BeforeProcedure>
           modify pb-cancel, bitmap-number = 2 
           .
      * <TOTEM:END>
       Form1-Pb-2b-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2b-AfterProcedure>
           modify pb-cancel, bitmap-number = 1 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       ef-cod-BeforeProcedure.
      * <TOTEM:PARA. ef-cod-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-cod-AfterProcedure.
      * <TOTEM:PARA. ef-cod-AfterProcedure>

           perform CONTROLLO.

           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       rb-cli-LinkTo.
      * <TOTEM:PARA. rb-cli-LinkTo>
           move 1 to tipo-cod 
           .
      * <TOTEM:END>
       rb-for-LinkTo.
      * <TOTEM:PARA. rb-for-LinkTo>
           move 2 to tipo-cod 
           .
      * <TOTEM:END>
       rb-cli-BeforeProcedure.
      * <TOTEM:PARA. rb-cli-BeforeProcedure>
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       rb-for-BeforeProcedure.
      * <TOTEM:PARA. rb-for-BeforeProcedure>
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       rb-cli-AfterProcedure.
      * <TOTEM:PARA. rb-cli-AfterProcedure>
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       rb-for-AfterProcedure.
      * <TOTEM:PARA. rb-for-AfterProcedure>
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       pb-fatto-BeforeProcedure.
      * <TOTEM:PARA. pb-fatto-BeforeProcedure>
           modify pb-fatto, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-fatto-AfterProcedure.
      * <TOTEM:PARA. pb-fatto-AfterProcedure>
           modify pb-fatto, bitmap-number = 1 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

