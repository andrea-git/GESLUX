      *{TOTEM}PRG-COMMENT
      * contab.Cbl
      * contab.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          contab.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        martedì 19 febbraio 2019 16:43:23.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:contab, INIT:contab, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tordini.sl".
           COPY "tmovmag.sl".
           COPY "rordini.sl".
           COPY "rmovmag.sl".
           COPY "tcontat.sl".
           COPY "clienti.sl".
           COPY "articoli.sl".
           COPY "tnotacr.sl".
           COPY "rnotacr.sl".
           COPY "tcaumag.sl".
           COPY "DOCCN.sl".
           COPY "TBLCO.sl".
           COPY "TBLDO.sl".
           COPY "tivaese.sl".
           COPY "CLZ.sl".
           COPY "MAZ.sl".
           COPY "G2.sl".
           COPY "tmp-iva.sl".
           COPY "ABI.sl".
           COPY "tmovtrat.sl".
           COPY "tparamge.sl".
           COPY "CLI.sl".
           COPY "tgrupgdo.sl".
           COPY "ttipocli.sl".
           COPY "PAR.sl".
           COPY "PAS.sl".
           COPY "PAT.sl".
           COPY "PNI.sl".
           COPY "PNR.sl".
           COPY "PNT.sl".
           COPY "lineseq.sl".
           COPY "TBLVA.sl".
           COPY "multigest.sl".
           COPY "GDVR.sl".
           COPY "GDVT.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tordini.fd".
           COPY "tmovmag.fd".
           COPY "rordini.fd".
           COPY "rmovmag.fd".
           COPY "tcontat.fd".
           COPY "clienti.fd".
           COPY "articoli.fd".
           COPY "tnotacr.fd".
           COPY "rnotacr.fd".
           COPY "tcaumag.fd".
           COPY "DOCCN.fd".
           COPY "TBLCO.fd".
           COPY "TBLDO.fd".
           COPY "tivaese.fd".
           COPY "CLZ.fd".
           COPY "MAZ.fd".
           COPY "G2.fd".
           COPY "tmp-iva.fd".
           COPY "ABI.fd".
           COPY "tmovtrat.fd".
           COPY "tparamge.fd".
           COPY "CLI.fd".
           COPY "tgrupgdo.fd".
           COPY "ttipocli.fd".
           COPY "PAR.fd".
           COPY "PAS.fd".
           COPY "PAT.fd".
           COPY "PNI.fd".
           COPY "PNR.fd".
           COPY "PNT.fd".
           COPY "lineseq.fd".
           COPY "TBLVA.fd".
           COPY "multigest.fd".
           COPY "GDVR.fd".
           COPY "GDVT.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 TITOLO VALUE IS "Geslux - Aggiornamenti da fatturazione". 
           COPY  "LINK-GESLOCK.DEF".
           COPY  "LINK-PRIMANOTAESCAD.DEF".
           COPY  "VARSCA".
           COPY  "LINK-ESTFEL.DEF".
       77 var1 PIC  9(4).
       77 fe-attiva        PIC  x
                  VALUE IS spaces.
       77 path-contab      PIC  x(256).
       77 como-qta         PIC  9(8).
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 save-fatt        PIC  9(8).
       77 save-nc          PIC  9(8).
       77 save-ult-movim   PIC  zz.zzz.zz9.
       77 save-ult-tras    PIC  zz.zzz.zz9.
       77 save-ult-provv   PIC  zz.zzz.zz9.
       77 counter2         PIC  9(10).
       77 counter3         PIC  9(10).
       77 save-nome-file   PIC  x(50).
       77 counter-edit     PIC  z(10).
       77 link-result      PIC  9.
       77 imponibile-riga  PIC  s9(12)v99.
       77 link-data        PIC  9(8).
       77 UltimoNumeroRiga PIC  9(15).
       77 da-fattura-edit  PIC  zzzzzzz9.
       77 a-fattura-edit   PIC  zzzzzzz9.
       77 link-user        PIC  x(20).
       77 tot-iva          PIC  s9(15)v99.
       77 tot-fattura      PIC  s9(15)v99.
       77 como-iva         PIC  s9(15)v999.
       77 como-iva-2dec    PIC  s9(15)v99.
       77 idx-iva          PIC  9.
       01 tabellino-iva.
           05 riga-iva
                      OCCURS 6 TIMES.
               10 el-cod-iva       PIC  x(3).
               10 el-iva           PIC  9(12)v99.
               10 el-imponibile    PIC  9(12)v99.
       01 aaaammgg.
           05 anno PIC  9999.
           05 mese PIC  99.
           05 giorno           PIC  99.
       01 FILLER           PIC  9.
           88 CreatoMovim VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 record-ok VALUE IS 1    WHEN SET TO FALSE  0. 
       01 tipo-doc         PIC  x.
           88 Merce VALUE IS "F". 
           88 Manuali VALUE IS "M". 
           88 Note VALUE IS "N". 
       77 fatture-in-magaz PIC  9(8).
       77 fatture-elaborate            PIC  9(8)
                  VALUE IS ZERO.
       77 tot-fatt-from-provv          PIC  9(5)
                  VALUE IS ZERO.
       77 ult-num-fatt     PIC  9(8)
                  VALUE IS ZERO.
       77 tot-mov-from-tras            PIC  9(5)
                  VALUE IS ZERO.
       77 ult-num-mov      PIC  9(8)
                  VALUE IS ZERO.
       77 fatture-elaborate-edit       PIC  zz.zzz.zz9.
       77 si-no-bmp        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 tor-num-fattura-edit         PIC  zz.zzz.zz9.
       77 counter          PIC  9(5).
       77 STATUS-tordini   PIC  X(2).
           88 Valid-STATUS-tordini VALUE IS "00" THRU "09". 
       77 STATUS-rordini   PIC  X(2).
           88 Valid-STATUS-rordini VALUE IS "00" THRU "09". 
       77 STATUS-tmovmag   PIC  X(2).
           88 Valid-STATUS-tmovmag VALUE IS "00" THRU "09". 
       77 STATUS-rmovmag   PIC  X(2).
           88 Valid-STATUS-rmovmag VALUE IS "00" THRU "09". 
       77 STATUS-tcontat   PIC  X(2).
           88 Valid-STATUS-tcontat VALUE IS "00" THRU "09". 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 FORM1-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana18B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Arial10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       01 FILLER           PIC  XX.
           88 Primo-Ordine VALUE IS "SI"    WHEN SET TO FALSE  "NO". 
       77 data-stampa      PIC  99/99/9999.
       77 data-oggi        PIC  9(8)
                  VALUE IS 0.
       77 Verdana18-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana20-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 bottone-no-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-si-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 AGFATT-BMP       PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-rnotacr   PIC  X(2).
           88 Valid-STATUS-rnotacr VALUE IS "00" THRU "09". 
       77 STATUS-tnotacr   PIC  X(2).
           88 Valid-STATUS-tnotacr VALUE IS "00" THRU "09". 
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-DOCCN     PIC  X(2).
           88 Valid-STATUS-DOCCN VALUE IS "00" THRU "09". 
       77 STATUS-DOCDI     PIC  X(2).
           88 Valid-STATUS-DOCDI VALUE IS "00" THRU "09". 
       77 SELDVR           PIC  X(32).
       77 SELDVT           PIC  X(32).
       77 STATUS-DVT       PIC  X(2).
           88 Valid-STATUS-DVT VALUE IS "00" THRU "09". 
       77 STATUS-TBLCO     PIC  X(2).
           88 Valid-STATUS-TBLCO VALUE IS "00" THRU "09". 
       77 STATUS-TBLDO     PIC  X(2).
           88 Valid-STATUS-TBLDO VALUE IS "00" THRU "09". 
       77 STATUS-tbanche   PIC  X(2).
           88 Valid-STATUS-tbanche VALUE IS "00" THRU "09". 
       77 status-tvalute   PIC  X(2).
           88 Valid-status-tvalute VALUE IS "00" THRU "09". 
       77 STATUS-G2        PIC  X(2).
           88 Valid-STATUS-G2 VALUE IS "00" THRU "09". 
       77 STATUS-tmovtrat  PIC  X(2).
           88 Valid-STATUS-tmovtrat VALUE IS "00" THRU "09". 
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 lab-provv-tot-buf            PIC  zzz.zzz.zz9.
       77 lab-provv-ultimo-buf         PIC  zzzzzzz9.
       77 v-merce          PIC  9
                  VALUE IS 1.
       77 fr-lines         PIC  S9(4)V9(2)
                  VALUE IS 31,50.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 scr-conf-1-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 scr-fine-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 scr-calprovv-handle
                  USAGE IS HANDLE OF WINDOW.
       77 scr-conf-2-handle
                  USAGE IS HANDLE OF WINDOW.
       77 lab-tras-tot-buf PIC  zzz.zzz.zz9.
       77 lab-tras-ultimo-buf          PIC  zzzzzzz9.
       77 Screen4-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 scr-elab-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 PathFile1        PIC  x(256).
       77 PathFile2        PIC  x(256).
       77 PathFile3        PIC  x(256).
       77 STATUS-tivaese   PIC  X(2).
           88 Valid-STATUS-tivaese VALUE IS "00" THRU "09". 
       77 SELCLZ           PIC  x(1024).
       77 STATUS-CLZ       PIC  X(2).
           88 Valid-STATUS-CLZ VALUE IS "00" THRU "09". 
       77 SELMAZ           PIC  x(1024).
       77 STATUS-MAZ       PIC  X(2).
           88 Valid-STATUS-MAZ VALUE IS "00" THRU "09". 
       77 scr-prima-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 scr-prima-MN-1-HANDLE
                  USAGE IS HANDLE OF MENU.
       77 path-tmp-iva     PIC  X(256)
                  VALUE IS spaces.
       77 STATUS-tmp-iva   PIC  X(2).
           88 Valid-STATUS-tmp-iva VALUE IS "00" THRU "09". 
       77 scr-oper-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 v-screen         PIC  9
                  VALUE IS 0.
       77 v-push           PIC  9
                  VALUE IS 1.
       77 ok-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-ABI       PIC  X(2).
           88 Valid-STATUS-ABI VALUE IS "00" THRU "09". 
       77 STATUS-CLI       PIC  X(2).
           88 Valid-STATUS-CLI VALUE IS "00" THRU "09". 
       77 lab-anno-buf     PIC  x(20).
       77 STATUS-tgrupgdo  PIC  X(2).
           88 Valid-STATUS-tgrupgdo VALUE IS "00" THRU "09". 
       77 STATUS-ttipocli  PIC  X(2).
           88 Valid-STATUS-ttipocli VALUE IS "00" THRU "09". 
       77 STATUS-PAR       PIC  X(2).
           88 Valid-STATUS-PAR VALUE IS "00" THRU "09". 
       77 status-pas       PIC  X(2).
           88 Valid-status-pas VALUE IS "00" THRU "09". 
       77 status-pat       PIC  X(2).
           88 Valid-status-pat VALUE IS "00" THRU "09". 
       77 STATUS-PNI       PIC  X(2).
           88 Valid-STATUS-PNI VALUE IS "00" THRU "09". 
       77 STATUS-PNR       PIC  X(2).
           88 Valid-STATUS-PNR VALUE IS "00" THRU "09". 
       77 STATUS-PNT       PIC  X(2).
           88 Valid-STATUS-PNT VALUE IS "00" THRU "09". 
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 Screen6-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 path-file        PIC  X(256).
       77 STATUS-TBLVA     PIC  X(2).
           88 Valid-STATUS-TBLVA VALUE IS "00" THRU "09". 
       77 FILLER           PIC  9.
           88 aggiorna-tparamge VALUE IS 1    WHEN SET TO FALSE  0. 
       77 como-data-contab PIC  9(8).
       77 como-ora-contab  PIC  9(8).
       77 STATUS-multigest PIC  X(2).
           88 Valid-STATUS-multigest VALUE IS "00" THRU "09". 
       77 status-gdvr      PIC  X(2).
           88 Valid-status-gdvr VALUE IS "00" THRU "09". 
       77 status-gdvt      PIC  X(2).
           88 Valid-status-gdvt VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-scr-conf-1-FLAG-REFRESH PIC  9.
          88 scr-conf-1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-conf-2-FLAG-REFRESH PIC  9.
          88 scr-conf-2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-fine-FLAG-REFRESH PIC  9.
          88 scr-fine-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-Form-doc-FLAG-REFRESH PIC  9.
          88 Form-doc-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-calprovv-FLAG-REFRESH PIC  9.
          88 scr-calprovv-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-caltras-FLAG-REFRESH PIC  9.
          88 scr-caltras-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-statmese-FLAG-REFRESH PIC  9.
          88 scr-statmese-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-prima-nota-FLAG-REFRESH PIC  9.
          88 scr-prima-nota-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-oper-FLAG-REFRESH PIC  9.
          88 scr-oper-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tordini-BUF     PIC X(3898).
       77 TMP-DataSet1-tmovmag-BUF     PIC X(256).
       77 TMP-DataSet1-rordini-BUF     PIC X(667).
       77 TMP-DataSet1-rmovmag-BUF     PIC X(446).
       77 TMP-DataSet1-tcontat-BUF     PIC X(3270).
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-tnotacr-BUF     PIC X(752).
       77 TMP-DataSet1-rnotacr-BUF     PIC X(545).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-DOCCN-BUF     PIC X(2100).
       77 TMP-DataSet1-TBLCO-BUF     PIC X(1380).
       77 TMP-DataSet1-TBLDO-BUF     PIC X(1380).
       77 TMP-DataSet1-tivaese-BUF     PIC X(1380).
       77 TMP-DataSet1-CLZ-BUF     PIC X(256).
       77 TMP-DataSet1-MAZ-BUF     PIC X(256).
       77 TMP-DataSet1-G2-BUF     PIC X(174).
       77 TMP-DataSet1-tmp-iva-BUF     PIC X(194).
       77 TMP-DataSet1-ABI-BUF     PIC X(167).
       77 TMP-DataSet1-tmovtrat-BUF     PIC X(183).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-CLI-BUF     PIC X(2520).
       77 TMP-DataSet1-tgrupgdo-BUF     PIC X(1206).
       77 TMP-DataSet1-ttipocli-BUF     PIC X(889).
       77 TMP-DataSet1-PAR-BUF     PIC X(256).
       77 TMP-DataSet1-PAS-BUF     PIC X(512).
       77 TMP-DataSet1-PAT-BUF     PIC X(256).
       77 TMP-DataSet1-PNI-BUF     PIC X(3000).
       77 TMP-DataSet1-PNR-BUF     PIC X(300).
       77 TMP-DataSet1-PNT-BUF     PIC X(512).
       77 TMP-DataSet1-lineseq-BUF     PIC X(900).
       77 TMP-DataSet1-TBLVA-BUF     PIC X(1380).
       77 TMP-DataSet1-multigest-BUF     PIC X(3).
       77 TMP-DataSet1-GDVR-BUF     PIC X(1899).
       77 TMP-DataSet1-GDVT-BUF     PIC X(3056).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordini-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tordini-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tordini-KEY1-Asc  VALUE "A".
          88 DataSet1-tordini-KEY1-Desc VALUE "D".
       77 DataSet1-tmovmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmovmag-LOCK  VALUE "Y".
       77 DataSet1-tmovmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmovmag-KEY-Asc  VALUE "A".
          88 DataSet1-tmovmag-KEY-Desc VALUE "D".
       77 DataSet1-rordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordini-LOCK  VALUE "Y".
       77 DataSet1-rordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordini-KEY-Asc  VALUE "A".
          88 DataSet1-rordini-KEY-Desc VALUE "D".
       77 DataSet1-rmovmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rmovmag-LOCK  VALUE "Y".
       77 DataSet1-rmovmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rmovmag-KEY-Asc  VALUE "A".
          88 DataSet1-rmovmag-KEY-Desc VALUE "D".
       77 DataSet1-tcontat-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcontat-LOCK  VALUE "Y".
       77 DataSet1-tcontat-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcontat-KEY-Asc  VALUE "A".
          88 DataSet1-tcontat-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-tnotacr-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tnotacr-LOCK  VALUE "Y".
       77 DataSet1-tnotacr-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tnotacr-KEY-Asc  VALUE "A".
          88 DataSet1-tnotacr-KEY-Desc VALUE "D".
       77 DataSet1-rnotacr-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rnotacr-LOCK  VALUE "Y".
       77 DataSet1-rnotacr-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rnotacr-KEY-Asc  VALUE "A".
          88 DataSet1-rnotacr-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-DOCCN-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-DOCCN-LOCK  VALUE "Y".
       77 DataSet1-DOCCN-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-DOCCN-KEY-Asc  VALUE "A".
          88 DataSet1-DOCCN-KEY-Desc VALUE "D".
       77 DataSet1-TBLCO-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-TBLCO-LOCK  VALUE "Y".
       77 DataSet1-TBLCO-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-TBLCO-KEY-Asc  VALUE "A".
          88 DataSet1-TBLCO-KEY-Desc VALUE "D".
       77 DataSet1-TBLDO-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-TBLDO-LOCK  VALUE "Y".
       77 DataSet1-TBLDO-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-TBLDO-KEY-Asc  VALUE "A".
          88 DataSet1-TBLDO-KEY-Desc VALUE "D".
       77 DataSet1-tivaese-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tivaese-LOCK  VALUE "Y".
       77 DataSet1-tivaese-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tivaese-KEY-Asc  VALUE "A".
          88 DataSet1-tivaese-KEY-Desc VALUE "D".
       77 DataSet1-CLZ-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-CLZ-LOCK  VALUE "Y".
       77 DataSet1-CLZ-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-CLZ-KEY-Asc  VALUE "A".
          88 DataSet1-CLZ-KEY-Desc VALUE "D".
       77 DataSet1-MAZ-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-MAZ-LOCK  VALUE "Y".
       77 DataSet1-MAZ-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-MAZ-KEY-Asc  VALUE "A".
          88 DataSet1-MAZ-KEY-Desc VALUE "D".
       77 DataSet1-G2-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-G2-LOCK  VALUE "Y".
       77 DataSet1-G2-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-G2-KEY-Asc  VALUE "A".
          88 DataSet1-G2-KEY-Desc VALUE "D".
       77 DataSet1-tmp-iva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-iva-LOCK  VALUE "Y".
       77 DataSet1-tmp-iva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-iva-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-iva-KEY-Desc VALUE "D".
       77 DataSet1-ABI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ABI-LOCK  VALUE "Y".
       77 DataSet1-ABI-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ABI-KEY-Asc  VALUE "A".
          88 DataSet1-ABI-KEY-Desc VALUE "D".
       77 DataSet1-tmovtrat-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmovtrat-LOCK  VALUE "Y".
       77 DataSet1-tmovtrat-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmovtrat-KEY-Asc  VALUE "A".
          88 DataSet1-tmovtrat-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-CLI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-CLI-LOCK  VALUE "Y".
       77 DataSet1-CLI-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-CLI-KEY-Asc  VALUE "A".
          88 DataSet1-CLI-KEY-Desc VALUE "D".
       77 DataSet1-tgrupgdo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tgrupgdo-LOCK  VALUE "Y".
       77 DataSet1-tgrupgdo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Asc  VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Desc VALUE "D".
       77 DataSet1-ttipocli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ttipocli-LOCK  VALUE "Y".
       77 DataSet1-ttipocli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ttipocli-KEY-Asc  VALUE "A".
          88 DataSet1-ttipocli-KEY-Desc VALUE "D".
       77 DataSet1-PAR-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PAR-LOCK  VALUE "Y".
       77 DataSet1-PAR-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PAR-KEY-Asc  VALUE "A".
          88 DataSet1-PAR-KEY-Desc VALUE "D".
       77 DataSet1-PAS-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PAS-LOCK  VALUE "Y".
       77 DataSet1-PAS-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PAS-KEY-Asc  VALUE "A".
          88 DataSet1-PAS-KEY-Desc VALUE "D".
       77 DataSet1-PAT-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PAT-LOCK  VALUE "Y".
       77 DataSet1-PAT-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PAT-KEY-Asc  VALUE "A".
          88 DataSet1-PAT-KEY-Desc VALUE "D".
       77 DataSet1-PNI-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PNI-LOCK  VALUE "Y".
       77 DataSet1-PNI-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PNI-KEY-Asc  VALUE "A".
          88 DataSet1-PNI-KEY-Desc VALUE "D".
       77 DataSet1-PNR-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PNR-LOCK  VALUE "Y".
       77 DataSet1-PNR-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PNR-KEY-Asc  VALUE "A".
          88 DataSet1-PNR-KEY-Desc VALUE "D".
       77 DataSet1-PNT-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-PNT-LOCK  VALUE "Y".
       77 DataSet1-PNT-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-PNT-KEY-Asc  VALUE "A".
          88 DataSet1-PNT-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-TBLVA-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-TBLVA-LOCK  VALUE "Y".
       77 DataSet1-TBLVA-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-TBLVA-KEY-Asc  VALUE "A".
          88 DataSet1-TBLVA-KEY-Desc VALUE "D".
       77 DataSet1-multigest-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-multigest-LOCK  VALUE "Y".
       77 DataSet1-multigest-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-multigest-KEY-Asc  VALUE "A".
          88 DataSet1-multigest-KEY-Desc VALUE "D".
       77 DataSet1-GDVR-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-GDVR-LOCK  VALUE "Y".
       77 DataSet1-GDVR-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-GDVR-KEY-Asc  VALUE "A".
          88 DataSet1-GDVR-KEY-Desc VALUE "D".
       77 DataSet1-GDVT-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-GDVT-LOCK  VALUE "Y".
       77 DataSet1-GDVT-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-GDVT-KEY-Asc  VALUE "A".
          88 DataSet1-GDVT-KEY-Desc VALUE "D".

       77 tordini-k-causale-SPLITBUF  PIC X(17).
       77 tordini-k1-SPLITBUF  PIC X(23).
       77 tordini-k2-SPLITBUF  PIC X(21).
       77 tordini-k-bolla-SPLITBUF  PIC X(13).
       77 tordini-k3-SPLITBUF  PIC X(22).
       77 tordini-k-fattura-SPLITBUF  PIC X(13).
       77 tordini-k4-SPLITBUF  PIC X(30).
       77 tordini-k-contab-SPLITBUF  PIC X(14).
       77 tordini-k-tipo-SPLITBUF  PIC X(14).
       77 tordini-k-data-SPLITBUF  PIC X(17).
       77 tordini-k-agfatt-SPLITBUF  PIC X(42).
       77 tordini-k-stbolle-SPLITBUF  PIC X(34).
       77 tordini-k-andamento-data-SPLITBUF  PIC X(10).
       77 tordini-k-andamento-cliente-SPLITBUF  PIC X(15).
       77 tordini-k-andamento-clides-SPLITBUF  PIC X(20).
       77 tordini-k-promo-SPLITBUF  PIC X(29).
       77 tordini-k-or-SPLITBUF  PIC X(21).
       77 tordini-k-tor-inviare-SPLITBUF  PIC X(14).
       77 tordini-k-tor-tipocli-SPLITBUF  PIC X(25).
       77 tordini-k-tor-gdo-SPLITBUF  PIC X(28).
       77 tmovmag-key01-SPLITBUF  PIC X(17).
       77 tmovmag-k2-SPLITBUF  PIC X(20).
       77 tmovmag-k-data-SPLITBUF  PIC X(17).
       77 rordini-ror-k-promo-SPLITBUF  PIC X(16).
       77 rordini-ror-k-articolo-SPLITBUF  PIC X(24).
       77 rordini-ror-k-master-SPLITBUF  PIC X(35).
       77 rordini-ror-k-stbolle-SPLITBUF  PIC X(30).
       77 rmovmag-k-articolo-SPLITBUF  PIC X(19).
       77 rmovmag-rmo-chiave-ricerca-SPLITBUF  PIC X(25).
       77 rmovmag-k-progmag-SPLITBUF  PIC X(21).
       77 rmovmag-k-art-data-SPLITBUF  PIC X(15).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 tnotacr-k-causale-SPLITBUF  PIC X(17).
       77 tnotacr-k1-SPLITBUF  PIC X(23).
       77 tnotacr-k2-SPLITBUF  PIC X(21).
       77 tnotacr-k-fattura-SPLITBUF  PIC X(13).
       77 tnotacr-k4-SPLITBUF  PIC X(30).
       77 tnotacr-k-contab-SPLITBUF  PIC X(14).
       77 tnotacr-k-data-SPLITBUF  PIC X(17).
       77 tnotacr-k-agfatt-SPLITBUF  PIC X(42).
       77 tnotacr-k-andamento-data-SPLITBUF  PIC X(10).
       77 tnotacr-k-andamento-cliente-SPLITBUF  PIC X(15).
       77 tnotacr-k-andamento-clides-SPLITBUF  PIC X(20).
       77 rnotacr-rno-k-articolo-SPLITBUF  PIC X(24).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 TBLCO-TBLCO-CODICE-01-SPLITBUF  PIC X(53).
       77 TBLDO-TBLDO-CODICE-01-SPLITBUF  PIC X(53).
       77 tivaese-key01-SPLITBUF  PIC X(53).
       77 ABI-ABI-CODICE1-SPLITBUF  PIC X(101).
       77 ABI-ABI-CODICE2-SPLITBUF  PIC X(101).
       77 CLI-CLI-CODICE1-SPLITBUF  PIC X(39).
       77 CLI-CLI-CODICE2-SPLITBUF  PIC X(39).
       77 CLI-CLI-CODICE3-SPLITBUF  PIC X(20).
       77 CLI-CLI-CODICE4-SPLITBUF  PIC X(25).
       77 tgrupgdo-gdo-k-g2-SPLITBUF  PIC X(9).
       77 PAR-PAR-CODICE1-SPLITBUF  PIC X(27).
       77 PAR-PAR-CODICE2-SPLITBUF  PIC X(27).
       77 PAS-PAS-CODICE1-SPLITBUF  PIC X(22).
       77 PAS-PAS-CODICE2-SPLITBUF  PIC X(31).
       77 PAS-PAS-CODICE3-SPLITBUF  PIC X(43).
       77 PAS-PAS-CODICE4-SPLITBUF  PIC X(32).
       77 PAT-PAT-CODICE1-SPLITBUF  PIC X(38).
       77 PNR-PNR-CODICE1-SPLITBUF  PIC X(33).
       77 PNT-PNT-CODICE1-SPLITBUF  PIC X(17).
       77 PNT-PNT-CODICE2-SPLITBUF  PIC X(27).
       77 PNT-PNT-CODICE3-SPLITBUF  PIC X(29).
       77 TBLVA-TBLVA-CODICE-01-SPLITBUF  PIC X(53).
       77 GDVR-DVR-CODICE1-SPLITBUF  PIC X(30).
       77 GDVR-DVR-CODICE2-SPLITBUF  PIC X(31).
       77 GDVR-DVR-CODICE3-SPLITBUF  PIC X(37).
       77 GDVR-DVR-CODICE4-SPLITBUF  PIC X(46).
       77 GDVT-DVT-CODICE1-SPLITBUF  PIC X(26).
       77 GDVT-DVT-CODICE2-SPLITBUF  PIC X(25).
       77 GDVT-DVT-CODICE3-SPLITBUF  PIC X(29).
       77 GDVT-DVT-CODICE4-SPLITBUF  PIC X(27).
       77 GDVT-DVT-CODICE5-SPLITBUF  PIC X(25).
       77 GDVT-DVT-CODICE6-SPLITBUF  PIC X(22).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           scr-conf-1, 
           .

      * PUSH BUTTON
       05
           pb-no, 
           Push-Button, 
           COL 29,43, 
           LINE 12,77,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-NO-BMP,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           FONT IS Small-Font,
           ID IS 6,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&No",
           AFTER PROCEDURE pb-no-AfterProcedure, 
           BEFORE PROCEDURE pb-no-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-si, 
           Push-Button, 
           COL 13,43, 
           LINE 12,77,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-SI-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 7,
           TITLE "&Si",
           AFTER PROCEDURE pb-si-AfterProcedure, 
           BEFORE PROCEDURE pb-si-BeforeProcedure, 
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 3,00, 
           LINE 1,38,
           LINES 10,00 ,
           SIZE 48,00 ,
           RAISED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 5,00, 
           LINE 2,38,
           LINES 6,00 ,
           SIZE 44,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "ATTENZIONE! Questa fase comporta l'aggiornamento defin
      -    "itivo delle fatture / note credito. NON sarà più possibile c
      -    "orreggere eventuali errori.",
           .

      * LABEL
       05
           Screen1-La-3, 
           Label, 
           COL 5,00, 
           LINE 9,38,
           LINES 1,31 ,
           SIZE 44,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Procedere con l'elaborazione?",
           .

      * BAR
       05
           Screen1-Br-1, 
           Bar,
           COL 1,00, 
           LINE 12,23,
           SIZE 52,71 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * FORM
       01 
           scr-conf-2, 
           .

      * PUSH BUTTON
       05
           pb-noa, 
           Push-Button, 
           COL 29,43, 
           LINE 12,77,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-NO-BMP,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001,
           FLAT,
           FONT IS Small-Font,
           ID IS 6,
           SELF-ACT,
           TITLE "&No",
           AFTER PROCEDURE pb-noa-AfterProcedure, 
           BEFORE PROCEDURE pb-noa-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-sia, 
           Push-Button, 
           COL 13,43, 
           LINE 12,77,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-SI-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 7,
           TITLE "&Si",
           AFTER PROCEDURE pb-sia-AfterProcedure, 
           BEFORE PROCEDURE pb-sia-BeforeProcedure, 
           .

      * FRAME
       05
           Screen1-Fr-1a, 
           Frame, 
           COL 3,00, 
           LINE 1,38,
           LINES 10,00 ,
           SIZE 48,00 ,
           RAISED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * LABEL
       05
           Screen1-La-1a, 
           Label, 
           COL 5,00, 
           LINE 5,78,
           LINES 2,40 ,
           SIZE 44,00 ,
           COLOR IS 5,
           FONT IS Verdana20-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "ULTIMA CONFERMA!",
           .

      * LABEL
       05
           Screen1-La-3a, 
           Label, 
           COL 5,00, 
           LINE 9,38,
           LINES 1,31 ,
           SIZE 44,00 ,
           FONT IS Verdana12-Occidentale,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Procedere con l'elaborazione?",
           .

      * LABEL
       05
           lab-anno2, 
           Label, 
           COL 4,43, 
           LINE 2,68,
           LINES 2,40 ,
           SIZE 45,00 ,
           COLOR IS 5,
           FONT IS Verdana20-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-anno-buf,
           .

      * BAR
       05
           Screen1-Br-1a, 
           Bar,
           COL 1,00, 
           LINE 12,23,
           SIZE 52,71 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * FORM
       01 
           scr-fine, 
           HELP-ID 1,
           .

      * FRAME
       05
           freim, 
           Frame, 
           COL 2,20, 
           LINE 1,20,
           LINES fr-lines CELLS,
           SIZE 32,60 CELLS,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * LABEL
       05
           scr-fine-La-4, 
           Label, 
           COL 10,50, 
           LINE 2,80,
           LINES 2,00 CELLS,
           SIZE 16,00 CELLS,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Numeri assegnati",
           .

      * BAR
       05
           scr-fine-Br-1, 
           Bar,
           COL 27,00, 
           LINE 3,60,
           SIZE 7,20 CELLS,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8),
           SHADING (-1),
           WIDTH 1,
           .

      * BAR
       05
           scr-fine-Br-1a, 
           Bar,
           COL 2,80, 
           LINE 3,60,
           SIZE 7,20 CELLS,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8),
           SHADING (-1),
           WIDTH 1,
           .

      * LABEL
       05
           scr-fine-La-5, 
           Label, 
           COL 4,20, 
           LINE 5,10,
           LINES 2,00 CELLS,
           SIZE 3,00 CELLS,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Da",
           .

      * LABEL
       05
           scr-fine-La-6, 
           Label, 
           COL 20,20, 
           LINE 5,10,
           LINES 2,00 CELLS,
           SIZE 2,00 CELLS,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "a",
           .

      * LABEL
       05
           scr-fine-La-7, 
           Label, 
           COL 8,20, 
           LINE 5,10,
           LINES 2,00 CELLS,
           SIZE 10,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE da-fattura-edit,
           .

      * LABEL
       05
           scr-fine-La-8, 
           Label, 
           COL 23,20, 
           LINE 5,10,
           LINES 2,00 CELLS,
           SIZE 10,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE a-fattura-edit,
           .

      * LABEL
       05
           scr-fine-La-4a, 
           Label, 
           COL 4,20, 
           LINE 7,60,
           LINES 2,00 CELLS,
           SIZE 15,00 CELLS,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Fatture Elaborate",
           .

      * LABEL
       05
           lbl-tot-fat, 
           Label, 
           COL 23,20, 
           LINE 7,70,
           LINES 2,00 CELLS,
           SIZE 10,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE fatture-elaborate-edit,
           .

      * LABEL
       05
           scr-fine-La-4b, 
           Label, 
           COL 10,50, 
           LINE 12,10,
           LINES 2,00 CELLS,
           SIZE 16,00 CELLS,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Calcolo Trasporti",
           .

      * BAR
       05
           scr-fine-Br-1b, 
           Bar,
           COL 27,00, 
           LINE 12,90,
           SIZE 7,20 CELLS,
           ID IS 20,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8),
           SHADING (-1),
           WIDTH 1,
           .

      * LABEL
       05
           scr-fine-La-4aa, 
           Label, 
           COL 4,20, 
           LINE 15,20,
           LINES 2,00 CELLS,
           SIZE 20,00 CELLS,
           ID IS 26,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Tot. movim. elaborati",
           .

      * LABEL
       05
           lab-provv-tot, 
           Label, 
           COL 24,20, 
           LINE 25,20,
           LINES 2,00 CELLS,
           SIZE 9,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 27,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE lab-provv-tot-buf,
           VISIBLE v-merce,
           .

      * LABEL
       05
           scr-fine-La-4aaa, 
           Label, 
           COL 4,20, 
           LINE 18,20,
           LINES 2,00 CELLS,
           SIZE 20,00 CELLS,
           ID IS 28,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Ultimo numero trattato",
           .

      * BAR
       05
           scr-fine-Br-1aa, 
           Bar,
           COL 2,80, 
           LINE 12,90,
           SIZE 7,20 CELLS,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8),
           SHADING (-1),
           WIDTH 1,
           .

      * LABEL
       05
           lab-provv-ultimo, 
           Label, 
           COL 24,20, 
           LINE 28,20,
           LINES 2,00 CELLS,
           SIZE 9,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE lab-provv-ultimo-buf,
           VISIBLE v-merce,
           .

      * LABEL
       05
           scr-fine-La-4ba, 
           Label, 
           COL 10,50, 
           LINE 21,90,
           LINES 2,00 CELLS,
           SIZE 16,00 CELLS,
           ID IS 31,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Calcolo Provvigioni",
           VISIBLE v-merce,
           .

      * BAR
       05
           scr-fine-Br-1ba, 
           Bar,
           COL 27,00, 
           LINE 22,70,
           SIZE 7,20 CELLS,
           ID IS 32,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8),
           SHADING (-1),
           WIDTH 1,
           VISIBLE v-merce,
           .

      * LABEL
       05
           scr-fine-La-4aab, 
           Label, 
           COL 4,40, 
           LINE 25,20,
           LINES 2,00 CELLS,
           SIZE 19,00 CELLS,
           ID IS 33,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Totale ordini elaborati",
           VISIBLE v-merce,
           .

      * LABEL
       05
           lab-tras-tot, 
           Label, 
           COL 24,40, 
           LINE 15,20,
           LINES 2,00 CELLS,
           SIZE 9,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 34,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE lab-tras-tot-buf,
           VISIBLE v-merce,
           .

      * LABEL
       05
           scr-fine-La-4aaaa, 
           Label, 
           COL 4,40, 
           LINE 28,20,
           LINES 2,00 CELLS,
           SIZE 20,00 CELLS,
           ID IS 35,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE "Ultimo numero trattato",
           VISIBLE v-merce,
           .

      * BAR
       05
           scr-fine-Br-1aaa, 
           Bar,
           COL 2,80, 
           LINE 22,70,
           SIZE 7,20 CELLS,
           ID IS 36,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8),
           SHADING (-1),
           WIDTH 1,
           VISIBLE v-merce,
           .

      * LABEL
       05
           lab-tras-ultimo, 
           Label, 
           COL 24,40, 
           LINE 18,20,
           LINES 2,00 CELLS,
           SIZE 9,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 37,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE lab-tras-ultimo-buf,
           VISIBLE v-merce,
           .

      * PUSH BUTTON
       05
           pb-siaa, 
           Push-Button, 
           COL 14,40, 
           LINE 32,70,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 10,
           AFTER PROCEDURE pb-siaa-AfterProcedure, 
           BEFORE PROCEDURE pb-siaa-BeforeProcedure, 
           .

      * FORM
       01 
           Form-doc, 
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 2,00, 
           LINE 3,72,
           LINES 9,17 ,
           SIZE 18,60 ,
           COLOR IS 2,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Esc",
           TITLE-POSITION 6,
           .

      * PUSH BUTTON
       05
           pb-merce, 
           Push-Button, 
           COL 4,00, 
           LINE 4,72,
           LINES 29,00 ,
           SIZE 138,00 ,
           BITMAP-HANDLE AGFATT-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 100,
           TITLE "&Fatture Merce",
           AFTER PROCEDURE pb-merce-AfterProcedure, 
           BEFORE PROCEDURE pb-merce-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-man, 
           Push-Button, 
           COL 4,00, 
           LINE 7,22,
           LINES 29,00 ,
           SIZE 138,00 ,
           BITMAP-HANDLE AGFATT-BMP,
           BITMAP-NUMBER 3,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001,
           FLAT,
           FONT IS Small-Font,
           ID IS 200,
           TITLE "Fatture &Manuali",
           AFTER PROCEDURE pb-man-AfterProcedure, 
           BEFORE PROCEDURE pb-man-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-note, 
           Push-Button, 
           COL 4,00, 
           LINE 9,72,
           LINES 29,00 ,
           SIZE 138,00 ,
           BITMAP-HANDLE AGFATT-BMP,
           BITMAP-NUMBER 5,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002,
           FLAT,
           FONT IS Small-Font,
           ID IS 300,
           TITLE "&Note Credito",
           AFTER PROCEDURE pb-note-AfterProcedure, 
           BEFORE PROCEDURE pb-note-BeforeProcedure, 
           .

      * LABEL
       05
           Screen2-blockpgm-1, 
           Label, 
           COL 2,40, 
           LINE 4,00,
           LINES 0,61 ,
           SIZE 2,20 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen2-La-1, 
           Label, 
           COL 6,30, 
           LINE 3,28,
           LINES 1,00 ,
           SIZE 10,00 ,
           COLOR IS 2,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TITLE "Documento",
           .

      * LABEL
       05
           lab-anno, 
           Label, 
           COL 2,00, 
           LINE 1,80,
           LINES 1,31 ,
           SIZE 18,60 ,
           COLOR IS 2,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-anno-buf,
           .

      * WEB-BROWSER
       05
           scr-oper-Wb-1, 
           Web-Browser, 
           COL 22,80, 
           LINE 3,72,
           LINES 9,17 ,
           SIZE 39,30 ,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NO-TAB,
           VALUE path-file,
           .

      * FORM
       01 
           scr-calprovv, 
           .

      * LABEL
       05
           Screen1-La-1b, 
           Label, 
           COL 2,00, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 23,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Calcolo provvigioni in corso...",
           .

      * FORM
       01 
           scr-caltras, 
           .

      * LABEL
       05
           Screen1-La-1ba, 
           Label, 
           COL 2,00, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 22,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Calcolo trasporti in corso...",
           .

      * FORM
       01 
           scr-statmese, 
           .

      * LABEL
       05
           Screen1-La-1bb, 
           Label, 
           COL 2,00, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 35,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Aggiornamento statistiche mensili in corso...",
           .

      * FORM
       01 
           scr-prima-nota, 
           .

      * LABEL
       05
           Screen1-La-1bc, 
           Label, 
           COL 2,00, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 37,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Creazione Prima Nota e Scadenziari in corso...",
           .

      * FORM
       01 
           scr-oper, 
           .

      * PUSH BUTTON
       05
           pb-ok-oper, 
           Push-Button, 
           COL 20,73, 
           LINE 24,78,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 13,
           FLAT,
           FONT IS Small-Font,
           ID IS 2,
           OK-BUTTON,
           TITLE "OK",
           VISIBLE v-push,
           .

      * FRAME
       05
           scr-oper-Fr-1, 
           Frame, 
           COL 2,60, 
           LINE 1,56,
           LINES 22,89 ,
           SIZE 43,64 ,
           RAISED,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           HEAVY,
           .

      * LABEL
       05
           lab-provv1, 
           Label, 
           COL 3,87, 
           LINE 3,06,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "PROVVIGIONI",
           .

      * LABEL
       05
           lab-provv2, 
           Label, 
           COL 3,87, 
           LINE 4,56,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "RISULTATO",
           .

      * LABEL
       05
           lab-tras1, 
           Label, 
           COL 3,87, 
           LINE 10,56,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "TRASPORTI",
           .

      * LABEL
       05
           lab-tras2, 
           Label, 
           COL 3,87, 
           LINE 12,06,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "RISULTATO",
           .

      * LABEL
       05
           lab-stat1, 
           Label, 
           COL 3,87, 
           LINE 14,56,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "STATISTICHE",
           .

      * LABEL
       05
           lab-stat2, 
           Label, 
           COL 3,87, 
           LINE 16,06,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "RISULTATO",
           .

      * LABEL
       05
           lab-prima1, 
           Label, 
           COL 3,87, 
           LINE 18,56,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "PRIMA NOTA",
           .

      * LABEL
       05
           lab-prima2, 
           Label, 
           COL 3,87, 
           LINE 20,06,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "RISULTATO",
           .

      * LABEL
       05
           lab-doc, 
           Label, 
           COL 3,87, 
           LINE 22,56,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "DOCUMENTI",
           .

      * BAR
       05
           scr-oper-Br-1, 
           Bar,
           COL 3,15, 
           LINE 6,23,
           SIZE 42,45 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * BAR
       05
           scr-oper-Br-1a, 
           Bar,
           COL 3,15, 
           LINE 13,67,
           SIZE 42,45 ,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * BAR
       05
           scr-oper-Br-1c, 
           Bar,
           COL 3,15, 
           LINE 21,73,
           SIZE 42,45 ,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * BAR
       05
           scr-oper-Br-1ca, 
           Bar,
           COL 3,15, 
           LINE 17,78,
           SIZE 42,45 ,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           lab-calc1, 
           Label, 
           COL 3,87, 
           LINE 7,06,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "CONTAB",
           .

      * LABEL
       05
           lab-calc2, 
           Label, 
           COL 3,87, 
           LINE 8,56,
           LINES 1,00 ,
           SIZE 41,00 ,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "RISULTATO",
           .

      * BAR
       05
           scr-oper-Br-1b, 
           Bar,
           COL 3,15, 
           LINE 10,12,
           SIZE 42,45 ,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:contab, INIT:contab, BeforeDeclarative>
       TORDINI-ERR SECTION.
           use after error procedure on tordini.
           evaluate status-tordini
           when "39"
                display message "File Mismatch size!"
                          title "TORDINI"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "TORDINI"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

LUBEXX***** TMOVTRAT-ERR SECTION.
      *****     use after error procedure on tmovtrat.
      *****     evaluate status-tmovtrat
      *****     when "39"
      *****          display message "File Mismatch size!"
      *****                    title "TMOVTRAT"
      *****                     icon 3
      *****          set errori to true
      *****     when "98"
      *****          display message "Indexed file corrupt!"
      *****                    title "TMOVTRAT"
      *****                     icon 3
      *****          set errori to true
      *****     when "93"
      *****     when "99"
      *****          set RecLocked to true
      *****          set errori    to true
      *****     end-evaluate.
           
       TCONTAT-ERR SECTION.
           use after error procedure on tcontat.
           evaluate status-tcontat
           when "39"
                display message "File Mismatch size!"
                          title "TCONTAT"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "TCONTAT"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       TNOTACR-ERR SECTION.
           use after error procedure on tnotacr.
           evaluate status-tnotacr
           when "39"
                display message "File Mismatch size!"
                          title "TNOTACR"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "TNOTACR"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       DOCCN-ERR SECTION.
           use after error procedure on doccn.
           evaluate status-doccn
           when "39"
                display message "File Mismatch size!"
                          title "DOCCN"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "DOCCN"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       PAT-ERR SECTION.
           use after error procedure on PAT.
           evaluate status-PAT
           when "39"
                display message "File Mismatch size!"
                          title "PAT"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "PAT"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate. 

       PAS-ERR SECTION.
           use after error procedure on PAS.
           evaluate status-PAS
           when "39"
                display message "File Mismatch size!"
                          title "PAS"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "PAS"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       PAR-ERR SECTION.
           use after error procedure on PAR.
           evaluate status-PAR
           when "39"
                display message "File Mismatch size!"
                          title "PAR"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "PAR"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       PNT-ERR SECTION.
           use after error procedure on PNT.
           evaluate status-PNT
           when "39"
                display message "File Mismatch size!"
                          title "PNT"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "PNT"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       PNR-ERR SECTION.
           use after error procedure on PNR.
           evaluate status-PNR
           when "39"
                display message "File Mismatch size!"
                          title "PNR"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "PNR"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       PNI-ERR SECTION.
           use after error procedure on PNI.
           evaluate status-PNI
           when "39"
                display message "File Mismatch size!"
                          title "PNI"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "PNI"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       G2-ERR SECTION.
           use after error procedure on G2.
           evaluate status-G2
           when "39"
                display message "File Mismatch size!"
                          title "G2"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "G2"
                           icon 3
                set errori to true
           when "35"
                set errori to true
           end-evaluate.

       MAZ-ERR SECTION.
           use after error procedure on MAZ.
           evaluate status-MAZ
           when "39"
                display message "File Mismatch size!"
                          title "MAZ"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "MAZ"
                           icon 3
                set errori to true
           when "35"
                set errori to true
           end-evaluate.

       CLZ-ERR SECTION.
           use after error procedure on CLZ.
           evaluate status-CLZ
           when "39"
                display message "File Mismatch size!"
                          title "CLZ"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "CLZ"
                           icon 3
                set errori to true
           when "35"
                set errori to true
           end-evaluate.

       GDVT-ERR SECTION.
           use after error procedure on gdvt.
           evaluate status-gdvt
           when "39"
                display message "File Mismatch size!"
                          title "GDVT"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "GDVT"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       GDVR-ERR SECTION.
           use after error procedure on gdvr.
           evaluate status-gdvr
           when "39"
                display message "File Mismatch size!"
                          title "GDVR"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "GDVR"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.

       TPARAMGE-ERR SECTION.
           use after error procedure on tparamge.
           evaluate status-tparamge
           when "39"
                display message "File Mismatch size!"
                          title "TPARAMGE"
                           icon 3
                set errori to true
           when "98"
                display message "Indexed file corrupt!"
                          title "TPARAMGE"
                           icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
                set errori    to true
           end-evaluate.


      ***---
       MULTIGEST-ERR SECTION.
           use after error procedure on multigest.
           set tutto-ok  to true.
           evaluate status-multigest
           when "35"
                display message "File [MULTIGEST] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MULTIGEST] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MULTIGEST] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM contab-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form-doc-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:contab, INIT:contab, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana20-Occidentale
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana12BI-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-NO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-SI-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, AGFATT-BMP
      *    After-Program
           PERFORM contab-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
      * Verdana20-Occidentale
           INITIALIZE WFONT-DATA Verdana20-Occidentale
           MOVE 20 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana20-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-no
           COPY RESOURCE "BOTTONE-NO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-NO.BMP", 
                   GIVING BOTTONE-NO-BMP.
      * pb-si
           COPY RESOURCE "BOTTONE-SI.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-SI.BMP", 
                   GIVING BOTTONE-SI-BMP.
      * pb-siaa
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-merce
           COPY RESOURCE "AGFATT.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "AGFATT.BMP", 
                   GIVING AGFATT-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tordini
           PERFORM OPEN-tmovmag
           PERFORM OPEN-rordini
           PERFORM OPEN-rmovmag
      *    tcontat OPEN MODE IS FALSE
      *    PERFORM OPEN-tcontat
           PERFORM OPEN-clienti
           PERFORM OPEN-articoli
           PERFORM OPEN-tnotacr
           PERFORM OPEN-rnotacr
           PERFORM OPEN-tcaumag
           PERFORM OPEN-DOCCN
           PERFORM OPEN-TBLCO
           PERFORM OPEN-TBLDO
           PERFORM OPEN-tivaese
      *    CLZ OPEN MODE IS FALSE
      *    PERFORM OPEN-CLZ
      *    MAZ OPEN MODE IS FALSE
      *    PERFORM OPEN-MAZ
      *    G2 OPEN MODE IS FALSE
      *    PERFORM OPEN-G2
      *    tmp-iva OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-iva
           PERFORM OPEN-ABI
      *    tmovtrat OPEN MODE IS FALSE
      *    PERFORM OPEN-tmovtrat
           PERFORM OPEN-tparamge
           PERFORM OPEN-CLI
           PERFORM OPEN-tgrupgdo
           PERFORM OPEN-ttipocli
           PERFORM OPEN-PAR
           PERFORM OPEN-PAS
           PERFORM OPEN-PAT
           PERFORM OPEN-PNI
           PERFORM OPEN-PNR
           PERFORM OPEN-PNT
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
           PERFORM OPEN-TBLVA
      *    multigest OPEN MODE IS FALSE
      *    PERFORM OPEN-multigest
           PERFORM OPEN-GDVR
           PERFORM OPEN-GDVT
      *    After Open
           .

       OPEN-tordini.
      * <TOTEM:EPT. INIT:contab, FD:tordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordini
           IF STATUS-tordini = "35"
              OPEN OUTPUT tordini
                IF Valid-STATUS-tordini
                   CLOSE tordini
                   OPEN I-O tordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordini
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmovmag.
      * <TOTEM:EPT. INIT:contab, FD:tmovmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tmovmag
           IF STATUS-tmovmag = "35"
              OPEN OUTPUT tmovmag
                IF Valid-STATUS-tmovmag
                   CLOSE tmovmag
                   OPEN I-O tmovmag
                END-IF
           END-IF
           IF NOT Valid-STATUS-tmovmag
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tmovmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordini.
      * <TOTEM:EPT. INIT:contab, FD:rordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rordini
           IF NOT Valid-STATUS-rordini
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:rordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rmovmag.
      * <TOTEM:EPT. INIT:contab, FD:rmovmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rmovmag
           IF STATUS-rmovmag = "35"
              OPEN OUTPUT rmovmag
                IF Valid-STATUS-rmovmag
                   CLOSE rmovmag
                   OPEN I-O rmovmag
                END-IF
           END-IF
           IF NOT Valid-STATUS-rmovmag
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:rmovmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcontat.
      * <TOTEM:EPT. INIT:contab, FD:tcontat, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tcontat
           IF STATUS-tcontat = "35"
              OPEN OUTPUT tcontat
                IF Valid-STATUS-tcontat
                   CLOSE tcontat
                   OPEN I-O tcontat
                END-IF
           END-IF
           IF NOT Valid-STATUS-tcontat
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tcontat, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:contab, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:contab, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tnotacr.
      * <TOTEM:EPT. INIT:contab, FD:tnotacr, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tnotacr
           IF STATUS-tnotacr = "35"
              OPEN OUTPUT tnotacr
                IF Valid-STATUS-tnotacr
                   CLOSE tnotacr
                   OPEN I-O tnotacr
                END-IF
           END-IF
           IF NOT Valid-STATUS-tnotacr
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tnotacr, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rnotacr.
      * <TOTEM:EPT. INIT:contab, FD:rnotacr, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rnotacr
           IF NOT Valid-STATUS-rnotacr
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:rnotacr, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:contab, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-DOCCN.
      * <TOTEM:EPT. INIT:contab, FD:DOCCN, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O DOCCN
           IF STATUS-DOCCN = "35"
              OPEN OUTPUT DOCCN
                IF Valid-STATUS-DOCCN
                   CLOSE DOCCN
                   OPEN I-O DOCCN
                END-IF
           END-IF
           IF NOT Valid-STATUS-DOCCN
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:DOCCN, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-TBLCO.
      * <TOTEM:EPT. INIT:contab, FD:TBLCO, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT TBLCO
           IF NOT Valid-STATUS-TBLCO
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:TBLCO, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-TBLDO.
      * <TOTEM:EPT. INIT:contab, FD:TBLDO, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT TBLDO
           IF NOT Valid-STATUS-TBLDO
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:TBLDO, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tivaese.
      * <TOTEM:EPT. INIT:contab, FD:tivaese, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tivaese
           IF NOT Valid-STATUS-tivaese
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tivaese, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-CLZ.
      * <TOTEM:EPT. INIT:contab, FD:CLZ, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT CLZ
           IF NOT Valid-STATUS-CLZ
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:CLZ, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-MAZ.
      * <TOTEM:EPT. INIT:contab, FD:MAZ, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT MAZ
           IF NOT Valid-STATUS-MAZ
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:MAZ, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-G2.
      * <TOTEM:EPT. INIT:contab, FD:G2, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT G2
           IF NOT Valid-STATUS-G2
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:G2, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-iva.
      * <TOTEM:EPT. INIT:contab, FD:tmp-iva, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-iva
           IF NOT Valid-STATUS-tmp-iva
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tmp-iva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ABI.
      * <TOTEM:EPT. INIT:contab, FD:ABI, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ABI
           IF NOT Valid-STATUS-ABI
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:ABI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmovtrat.
      * <TOTEM:EPT. INIT:contab, FD:tmovtrat, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmovtrat
           IF NOT Valid-STATUS-tmovtrat
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tmovtrat, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:contab, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-CLI.
      * <TOTEM:EPT. INIT:contab, FD:CLI, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT CLI
           IF NOT Valid-STATUS-CLI
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:CLI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tgrupgdo.
      * <TOTEM:EPT. INIT:contab, FD:tgrupgdo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tgrupgdo
           IF NOT Valid-STATUS-tgrupgdo
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:tgrupgdo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ttipocli.
      * <TOTEM:EPT. INIT:contab, FD:ttipocli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ttipocli
           IF NOT Valid-STATUS-ttipocli
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:ttipocli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PAR.
      * <TOTEM:EPT. INIT:contab, FD:PAR, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O PAR
           IF STATUS-PAR = "35"
              OPEN OUTPUT PAR
                IF Valid-STATUS-PAR
                   CLOSE PAR
                   OPEN I-O PAR
                END-IF
           END-IF
           IF NOT Valid-STATUS-PAR
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:PAR, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PAS.
      * <TOTEM:EPT. INIT:contab, FD:PAS, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O PAS
           IF STATUS-PAS = "35"
              OPEN OUTPUT PAS
                IF Valid-status-pas
                   CLOSE PAS
                   OPEN I-O PAS
                END-IF
           END-IF
           IF NOT Valid-status-pas
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:PAS, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PAT.
      * <TOTEM:EPT. INIT:contab, FD:PAT, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O PAT
           IF STATUS-PAT = "35"
              OPEN OUTPUT PAT
                IF Valid-status-pat
                   CLOSE PAT
                   OPEN I-O PAT
                END-IF
           END-IF
           IF NOT Valid-status-pat
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:PAT, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PNI.
      * <TOTEM:EPT. INIT:contab, FD:PNI, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O PNI
           IF STATUS-PNI = "35"
              OPEN OUTPUT PNI
                IF Valid-STATUS-PNI
                   CLOSE PNI
                   OPEN I-O PNI
                END-IF
           END-IF
           IF NOT Valid-STATUS-PNI
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:PNI, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PNR.
      * <TOTEM:EPT. INIT:contab, FD:PNR, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O PNR
           IF STATUS-PNR = "35"
              OPEN OUTPUT PNR
                IF Valid-STATUS-PNR
                   CLOSE PNR
                   OPEN I-O PNR
                END-IF
           END-IF
           IF NOT Valid-STATUS-PNR
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:PNR, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-PNT.
      * <TOTEM:EPT. INIT:contab, FD:PNT, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O PNT
           IF STATUS-PNT = "35"
              OPEN OUTPUT PNT
                IF Valid-STATUS-PNT
                   CLOSE PNT
                   OPEN I-O PNT
                END-IF
           END-IF
           IF NOT Valid-STATUS-PNT
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:PNT, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:contab, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-TBLVA.
      * <TOTEM:EPT. INIT:contab, FD:TBLVA, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT TBLVA
           IF NOT Valid-STATUS-TBLVA
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:TBLVA, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-multigest.
      * <TOTEM:EPT. INIT:contab, FD:multigest, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O multigest
           IF STATUS-multigest = "35"
              OPEN OUTPUT multigest
                IF Valid-STATUS-multigest
                   CLOSE multigest
                   OPEN I-O multigest
                END-IF
           END-IF
           IF NOT Valid-STATUS-multigest
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:multigest, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-GDVR.
      * <TOTEM:EPT. INIT:contab, FD:GDVR, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O GDVR
           IF status-gdvr = "35"
              OPEN OUTPUT GDVR
                IF Valid-status-gdvr
                   CLOSE GDVR
                   OPEN I-O GDVR
                END-IF
           END-IF
           IF NOT Valid-status-gdvr
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:GDVR, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-GDVT.
      * <TOTEM:EPT. INIT:contab, FD:GDVT, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O GDVT
           IF status-gdvt = "35"
              OPEN OUTPUT GDVT
                IF Valid-status-gdvt
                   CLOSE GDVT
                   OPEN I-O GDVT
                END-IF
           END-IF
           IF NOT Valid-status-gdvt
              PERFORM  Form-doc-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:contab, FD:GDVT, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tordini
           PERFORM CLOSE-tmovmag
           PERFORM CLOSE-rordini
           PERFORM CLOSE-rmovmag
      *    tcontat CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tcontat
           PERFORM CLOSE-clienti
           PERFORM CLOSE-articoli
           PERFORM CLOSE-tnotacr
           PERFORM CLOSE-rnotacr
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-DOCCN
           PERFORM CLOSE-TBLCO
           PERFORM CLOSE-TBLDO
           PERFORM CLOSE-tivaese
      *    CLZ CLOSE MODE IS FALSE
      *    PERFORM CLOSE-CLZ
      *    MAZ CLOSE MODE IS FALSE
      *    PERFORM CLOSE-MAZ
      *    G2 CLOSE MODE IS FALSE
      *    PERFORM CLOSE-G2
      *    tmp-iva CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-iva
           PERFORM CLOSE-ABI
      *    tmovtrat CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmovtrat
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-CLI
           PERFORM CLOSE-tgrupgdo
           PERFORM CLOSE-ttipocli
           PERFORM CLOSE-PAR
           PERFORM CLOSE-PAS
           PERFORM CLOSE-PAT
           PERFORM CLOSE-PNI
           PERFORM CLOSE-PNR
           PERFORM CLOSE-PNT
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
           PERFORM CLOSE-TBLVA
      *    multigest CLOSE MODE IS FALSE
      *    PERFORM CLOSE-multigest
           PERFORM CLOSE-GDVR
           PERFORM CLOSE-GDVT
      *    After Close
           .

       CLOSE-tordini.
      * <TOTEM:EPT. INIT:contab, FD:tordini, BeforeClose>
      * <TOTEM:END>
           CLOSE tordini
           .

       CLOSE-tmovmag.
      * <TOTEM:EPT. INIT:contab, FD:tmovmag, BeforeClose>
      * <TOTEM:END>
           CLOSE tmovmag
           .

       CLOSE-rordini.
      * <TOTEM:EPT. INIT:contab, FD:rordini, BeforeClose>
      * <TOTEM:END>
           CLOSE rordini
           .

       CLOSE-rmovmag.
      * <TOTEM:EPT. INIT:contab, FD:rmovmag, BeforeClose>
      * <TOTEM:END>
           CLOSE rmovmag
           .

       CLOSE-tcontat.
      * <TOTEM:EPT. INIT:contab, FD:tcontat, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:contab, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:contab, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-tnotacr.
      * <TOTEM:EPT. INIT:contab, FD:tnotacr, BeforeClose>
      * <TOTEM:END>
           CLOSE tnotacr
           .

       CLOSE-rnotacr.
      * <TOTEM:EPT. INIT:contab, FD:rnotacr, BeforeClose>
      * <TOTEM:END>
           CLOSE rnotacr
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:contab, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-DOCCN.
      * <TOTEM:EPT. INIT:contab, FD:DOCCN, BeforeClose>
      * <TOTEM:END>
           CLOSE DOCCN
           .

       CLOSE-TBLCO.
      * <TOTEM:EPT. INIT:contab, FD:TBLCO, BeforeClose>
      * <TOTEM:END>
           CLOSE TBLCO
           .

       CLOSE-TBLDO.
      * <TOTEM:EPT. INIT:contab, FD:TBLDO, BeforeClose>
      * <TOTEM:END>
           CLOSE TBLDO
           .

       CLOSE-tivaese.
      * <TOTEM:EPT. INIT:contab, FD:tivaese, BeforeClose>
      * <TOTEM:END>
           CLOSE tivaese
           .

       CLOSE-CLZ.
      * <TOTEM:EPT. INIT:contab, FD:CLZ, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-MAZ.
      * <TOTEM:EPT. INIT:contab, FD:MAZ, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-G2.
      * <TOTEM:EPT. INIT:contab, FD:G2, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-iva.
      * <TOTEM:EPT. INIT:contab, FD:tmp-iva, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-ABI.
      * <TOTEM:EPT. INIT:contab, FD:ABI, BeforeClose>
      * <TOTEM:END>
           CLOSE ABI
           .

       CLOSE-tmovtrat.
      * <TOTEM:EPT. INIT:contab, FD:tmovtrat, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:contab, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-CLI.
      * <TOTEM:EPT. INIT:contab, FD:CLI, BeforeClose>
      * <TOTEM:END>
           CLOSE CLI
           .

       CLOSE-tgrupgdo.
      * <TOTEM:EPT. INIT:contab, FD:tgrupgdo, BeforeClose>
      * <TOTEM:END>
           CLOSE tgrupgdo
           .

       CLOSE-ttipocli.
      * <TOTEM:EPT. INIT:contab, FD:ttipocli, BeforeClose>
      * <TOTEM:END>
           CLOSE ttipocli
           .

       CLOSE-PAR.
      * <TOTEM:EPT. INIT:contab, FD:PAR, BeforeClose>
      * <TOTEM:END>
           CLOSE PAR
           .

       CLOSE-PAS.
      * <TOTEM:EPT. INIT:contab, FD:PAS, BeforeClose>
      * <TOTEM:END>
           CLOSE PAS
           .

       CLOSE-PAT.
      * <TOTEM:EPT. INIT:contab, FD:PAT, BeforeClose>
      * <TOTEM:END>
           CLOSE PAT
           .

       CLOSE-PNI.
      * <TOTEM:EPT. INIT:contab, FD:PNI, BeforeClose>
      * <TOTEM:END>
           CLOSE PNI
           .

       CLOSE-PNR.
      * <TOTEM:EPT. INIT:contab, FD:PNR, BeforeClose>
      * <TOTEM:END>
           CLOSE PNR
           .

       CLOSE-PNT.
      * <TOTEM:EPT. INIT:contab, FD:PNT, BeforeClose>
      * <TOTEM:END>
           CLOSE PNT
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:contab, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-TBLVA.
      * <TOTEM:EPT. INIT:contab, FD:TBLVA, BeforeClose>
      * <TOTEM:END>
           CLOSE TBLVA
           .

       CLOSE-multigest.
      * <TOTEM:EPT. INIT:contab, FD:multigest, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-GDVR.
      * <TOTEM:EPT. INIT:contab, FD:GDVR, BeforeClose>
      * <TOTEM:END>
           CLOSE GDVR
           .

       CLOSE-GDVT.
      * <TOTEM:EPT. INIT:contab, FD:GDVT, BeforeClose>
      * <TOTEM:END>
           CLOSE GDVT
           .

       tordini-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordini-k-causale-SPLITBUF
           MOVE tor-causale(1:4) TO tordini-k-causale-SPLITBUF(1:4)
           MOVE tor-anno(1:4) TO tordini-k-causale-SPLITBUF(5:4)
           MOVE tor-numero(1:8) TO tordini-k-causale-SPLITBUF(9:8)
           .

       tordini-k1-MERGE-SPLITBUF.
           INITIALIZE tordini-k1-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k1-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k1-SPLITBUF(6:5)
           MOVE tor-anno(1:4) TO tordini-k1-SPLITBUF(11:4)
           MOVE tor-numero(1:8) TO tordini-k1-SPLITBUF(15:8)
           .

       tordini-k2-MERGE-SPLITBUF.
           INITIALIZE tordini-k2-SPLITBUF
           MOVE tor-data-passaggio-ordine(1:8) TO 
           tordini-k2-SPLITBUF(1:8)
           MOVE tor-anno(1:4) TO tordini-k2-SPLITBUF(9:4)
           MOVE tor-numero(1:8) TO tordini-k2-SPLITBUF(13:8)
           .

       tordini-k-bolla-MERGE-SPLITBUF.
           INITIALIZE tordini-k-bolla-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-bolla-SPLITBUF(1:4)
           MOVE tor-num-bolla(1:8) TO tordini-k-bolla-SPLITBUF(5:8)
           .

       tordini-k3-MERGE-SPLITBUF.
           INITIALIZE tordini-k3-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k3-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k3-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k3-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO tordini-k3-SPLITBUF(21:1)
           .

       tordini-k-fattura-MERGE-SPLITBUF.
           INITIALIZE tordini-k-fattura-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-fattura-SPLITBUF(1:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-fattura-SPLITBUF(5:8)
           .

       tordini-k4-MERGE-SPLITBUF.
           INITIALIZE tordini-k4-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k4-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k4-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k4-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k4-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO tordini-k4-SPLITBUF(29:1)
           .

       tordini-k-contab-MERGE-SPLITBUF.
           INITIALIZE tordini-k-contab-SPLITBUF
           MOVE tor-agg-contab(1:1) TO tordini-k-contab-SPLITBUF(1:1)
           MOVE tor-anno-fattura(1:4) TO tordini-k-contab-SPLITBUF(2:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-contab-SPLITBUF(6:8)
           .

       tordini-k-tipo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tipo-SPLITBUF
           MOVE tor-tipo(1:1) TO tordini-k-tipo-SPLITBUF(1:1)
           MOVE tor-chiave(1:12) TO tordini-k-tipo-SPLITBUF(2:12)
           .

       tordini-k-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-data-SPLITBUF
           MOVE tor-data-creazione(1:8) TO tordini-k-data-SPLITBUF(1:8)
           MOVE tor-numero(1:8) TO tordini-k-data-SPLITBUF(9:8)
           .

       tordini-k-agfatt-MERGE-SPLITBUF.
           INITIALIZE tordini-k-agfatt-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-agfatt-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k-agfatt-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO 
           tordini-k-agfatt-SPLITBUF(29:1)
           MOVE tor-chiave(1:12) TO tordini-k-agfatt-SPLITBUF(30:12)
           .

       tordini-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE tordini-k-stbolle-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-stbolle-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO 
           tordini-k-stbolle-SPLITBUF(21:1)
           MOVE tor-chiave(1:12) TO tordini-k-stbolle-SPLITBUF(22:12)
           .

       tordini-k-andamento-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-data-SPLITBUF
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-data-SPLITBUF(1:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-data-SPLITBUF(2:8)
           .

       tordini-k-andamento-cliente-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-cliente-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-cliente-SPLITBUF(1:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-cliente-SPLITBUF(6:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-cliente-SPLITBUF(7:8)
           .

       tordini-k-andamento-clides-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-clides-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(6:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-clides-SPLITBUF(11:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-clides-SPLITBUF(12:8)
           .

       tordini-k-promo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-promo-SPLITBUF
           MOVE tor-stato(1:1) TO tordini-k-promo-SPLITBUF(1:1)
           MOVE tor-promo(1:1) TO tordini-k-promo-SPLITBUF(2:1)
           MOVE tor-data-ordine(1:8) TO tordini-k-promo-SPLITBUF(3:8)
           MOVE tor-numero(1:8) TO tordini-k-promo-SPLITBUF(11:8)
           MOVE tor-cod-cli(1:5) TO tordini-k-promo-SPLITBUF(19:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-promo-SPLITBUF(24:5)
           .

       tordini-k-or-MERGE-SPLITBUF.
           INITIALIZE tordini-k-or-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k-or-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-or-SPLITBUF(6:5)
           MOVE tor-num-ord-cli(1:10) TO tordini-k-or-SPLITBUF(11:10)
           .

       tordini-k-tor-inviare-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-inviare-SPLITBUF
           MOVE tor-da-inviare OF tordini(1:1) TO 
           tordini-k-tor-inviare-SPLITBUF(1:1)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-inviare-SPLITBUF(2:12)
           .

       tordini-k-tor-tipocli-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-tipocli-SPLITBUF
           MOVE tor-tipocli OF tordini(1:2) TO 
           tordini-k-tor-tipocli-SPLITBUF(1:2)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(3:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-tipocli-SPLITBUF(8:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-tipocli-SPLITBUF(13:12)
           .

       tordini-k-tor-gdo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-gdo-SPLITBUF
           MOVE tor-gdo OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(1:5)
           MOVE tor-cod-cli OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(6:5)
           MOVE tor-prg-destino OF tordini(1:5) TO 
           tordini-k-tor-gdo-SPLITBUF(11:5)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-gdo-SPLITBUF(16:12)
           .

       DataSet1-tordini-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 MOVE Low-Value TO tor-chiave
              ELSE
                 MOVE High-Value TO tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 MOVE High-Value TO tor-chiave
              ELSE
                 MOVE Low-Value TO tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordini-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordini-KEY1-ORDER
           END-EVALUATE
           .

      * tordini
       DataSet1-tordini-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY >= tor-chiave
              ELSE
                 START tordini KEY <= tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY <= tor-chiave
              ELSE
                 START tordini KEY >= tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY > tor-chiave
              ELSE
                 START tordini KEY < tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 START tordini KEY < tor-chiave
              ELSE
                 START tordini KEY > tor-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-LOCK
                 READ tordini WITH LOCK 
                 KEY tor-chiave
              ELSE
                 READ tordini WITH NO LOCK 
                 KEY tor-chiave
              END-IF
           END-EVALUATE
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT 
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 IF DataSet1-tordini-LOCK
                    READ tordini NEXT WITH LOCK
                 ELSE
                    READ tordini NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordini-LOCK
                    READ tordini PREVIOUS WITH LOCK
                 ELSE
                    READ tordini PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordini-KEY1-Asc
                 IF DataSet1-tordini-LOCK
                    READ tordini PREVIOUS WITH LOCK
                 ELSE
                    READ tordini PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordini-LOCK
                    READ tordini NEXT WITH LOCK
                 ELSE
                    READ tordini NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-or-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           PERFORM tordini-k-tor-tipocli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-gdo-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeWrite>
      * <TOTEM:END>
           WRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeDelete>
      * <TOTEM:END>
           DELETE tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterDelete>
      * <TOTEM:END>
           .

       tmovmag-key01-MERGE-SPLITBUF.
           INITIALIZE tmovmag-key01-SPLITBUF
           MOVE tmo-anno(1:4) TO tmovmag-key01-SPLITBUF(1:4)
           MOVE tmo-causale(1:4) TO tmovmag-key01-SPLITBUF(5:4)
           MOVE tmo-numero(1:8) TO tmovmag-key01-SPLITBUF(9:8)
           .

       tmovmag-k2-MERGE-SPLITBUF.
           INITIALIZE tmovmag-k2-SPLITBUF
           MOVE tmo-tipo(1:1) TO tmovmag-k2-SPLITBUF(1:1)
           MOVE tmo-cod-clifor(1:5) TO tmovmag-k2-SPLITBUF(2:5)
           MOVE tmo-destino(1:5) TO tmovmag-k2-SPLITBUF(7:5)
           MOVE tmo-data-movim(1:8) TO tmovmag-k2-SPLITBUF(12:8)
           .

       tmovmag-k-data-MERGE-SPLITBUF.
           INITIALIZE tmovmag-k-data-SPLITBUF
           MOVE tmo-data-movim(1:8) TO tmovmag-k-data-SPLITBUF(1:8)
           MOVE tmo-numero(1:8) TO tmovmag-k-data-SPLITBUF(9:8)
           .

       DataSet1-tmovmag-INITSTART.
           IF DataSet1-tmovmag-KEY-Asc
              MOVE Low-Value TO tmo-chiave
           ELSE
              MOVE High-Value TO tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-INITEND.
           IF DataSet1-tmovmag-KEY-Asc
              MOVE High-Value TO tmo-chiave
           ELSE
              MOVE Low-Value TO tmo-chiave
           END-IF
           .

      * tmovmag
       DataSet1-tmovmag-START.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY >= tmo-chiave
           ELSE
              START tmovmag KEY <= tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-NOTGREATER.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY <= tmo-chiave
           ELSE
              START tmovmag KEY >= tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-GREATER.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY > tmo-chiave
           ELSE
              START tmovmag KEY < tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-LESS.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY < tmo-chiave
           ELSE
              START tmovmag KEY > tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmovmag-LOCK
              READ tmovmag WITH LOCK 
              KEY tmo-chiave
           ELSE
              READ tmovmag WITH NO LOCK 
              KEY tmo-chiave
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT 
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmovmag-KEY-Asc
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag NEXT WITH LOCK
              ELSE
                 READ tmovmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag PREVIOUS WITH LOCK
              ELSE
                 READ tmovmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmovmag-KEY-Asc
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag PREVIOUS WITH LOCK
              ELSE
                 READ tmovmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag NEXT WITH LOCK
              ELSE
                 READ tmovmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeWrite>
      * <TOTEM:END>
           WRITE tmo-rec OF tmovmag.
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tmo-rec OF tmovmag.
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeDelete>
      * <TOTEM:END>
           DELETE tmovmag.
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterDelete>
      * <TOTEM:END>
           .

       rordini-ror-k-promo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-promo-SPLITBUF
           MOVE ror-promo OF rordini(1:15) TO 
           rordini-ror-k-promo-SPLITBUF(1:15)
           .

       rordini-ror-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-articolo-SPLITBUF
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-articolo-SPLITBUF(1:6)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-articolo-SPLITBUF(7:17)
           .

       rordini-ror-k-master-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-master-SPLITBUF
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(1:17)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(18:17)
           .

       rordini-ror-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-stbolle-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-stbolle-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-stbolle-SPLITBUF(5:8)
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-stbolle-SPLITBUF(13:17)
           .

       DataSet1-rordini-INITSTART.
           IF DataSet1-rordini-KEY-Asc
              MOVE Low-Value TO ror-chiave of rordini
           ELSE
              MOVE High-Value TO ror-chiave of rordini
           END-IF
           .

       DataSet1-rordini-INITEND.
           IF DataSet1-rordini-KEY-Asc
              MOVE High-Value TO ror-chiave of rordini
           ELSE
              MOVE Low-Value TO ror-chiave of rordini
           END-IF
           .

      * rordini
       DataSet1-rordini-START.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY >= ror-chiave of rordini
           ELSE
              START rordini KEY <= ror-chiave of rordini
           END-IF
           .

       DataSet1-rordini-START-NOTGREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY <= ror-chiave of rordini
           ELSE
              START rordini KEY >= ror-chiave of rordini
           END-IF
           .

       DataSet1-rordini-START-GREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY > ror-chiave of rordini
           ELSE
              START rordini KEY < ror-chiave of rordini
           END-IF
           .

       DataSet1-rordini-START-LESS.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY < ror-chiave of rordini
           ELSE
              START rordini KEY > ror-chiave of rordini
           END-IF
           .

       DataSet1-rordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordini-LOCK
              READ rordini WITH LOCK 
              KEY ror-chiave of rordini
           ELSE
              READ rordini WITH NO LOCK 
              KEY ror-chiave of rordini
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT 
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterDelete>
      * <TOTEM:END>
           .

       rmovmag-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-articolo-SPLITBUF
           MOVE rmo-anno OF rmovmag(1:4) TO 
           rmovmag-k-articolo-SPLITBUF(1:4)
           MOVE rmo-movim OF rmovmag(1:8) TO 
           rmovmag-k-articolo-SPLITBUF(5:8)
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-k-articolo-SPLITBUF(13:6)
           .

       rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE rmovmag-rmo-chiave-ricerca-SPLITBUF
           MOVE rmo-tipo OF rmovmag(1:1) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(1:1)
           MOVE rmo-cod-clifor OF rmovmag(1:5) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(2:5)
           MOVE rmo-causale OF rmovmag(1:4) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(7:4)
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(11:6)
           MOVE rmo-data-movim OF rmovmag(1:8) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(17:8)
           .

       rmovmag-k-progmag-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-progmag-SPLITBUF
           MOVE rmo-chiave-progmag OF rmovmag(1:20) TO 
           rmovmag-k-progmag-SPLITBUF(1:20)
           .

       rmovmag-k-art-data-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-art-data-SPLITBUF
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-k-art-data-SPLITBUF(1:6)
           MOVE rmo-data-movim OF rmovmag(1:8) TO 
           rmovmag-k-art-data-SPLITBUF(7:8)
           .

       DataSet1-rmovmag-INITSTART.
           IF DataSet1-rmovmag-KEY-Asc
              MOVE Low-Value TO rmo-chiave OF rmovmag
           ELSE
              MOVE High-Value TO rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-INITEND.
           IF DataSet1-rmovmag-KEY-Asc
              MOVE High-Value TO rmo-chiave OF rmovmag
           ELSE
              MOVE Low-Value TO rmo-chiave OF rmovmag
           END-IF
           .

      * rmovmag
       DataSet1-rmovmag-START.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY >= rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY <= rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-NOTGREATER.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY <= rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY >= rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-GREATER.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY > rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY < rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-LESS.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY < rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY > rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rmovmag-LOCK
              READ rmovmag WITH LOCK 
              KEY rmo-chiave OF rmovmag
           ELSE
              READ rmovmag WITH NO LOCK 
              KEY rmo-chiave OF rmovmag
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT 
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rmovmag-KEY-Asc
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag NEXT WITH LOCK
              ELSE
                 READ rmovmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag PREVIOUS WITH LOCK
              ELSE
                 READ rmovmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rmovmag-KEY-Asc
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag PREVIOUS WITH LOCK
              ELSE
                 READ rmovmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag NEXT WITH LOCK
              ELSE
                 READ rmovmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeWrite>
      * <TOTEM:END>
           WRITE rmo-rec OF rmovmag.
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRewrite>
      * <TOTEM:END>
           REWRITE rmo-rec OF rmovmag.
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeDelete>
      * <TOTEM:END>
           DELETE rmovmag.
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tcontat-INITSTART.
           IF DataSet1-tcontat-KEY-Asc
              MOVE Low-Value TO con-chiave
           ELSE
              MOVE High-Value TO con-chiave
           END-IF
           .

       DataSet1-tcontat-INITEND.
           IF DataSet1-tcontat-KEY-Asc
              MOVE High-Value TO con-chiave
           ELSE
              MOVE Low-Value TO con-chiave
           END-IF
           .

      * tcontat
       DataSet1-tcontat-START.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY >= con-chiave
           ELSE
              START tcontat KEY <= con-chiave
           END-IF
           .

       DataSet1-tcontat-START-NOTGREATER.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY <= con-chiave
           ELSE
              START tcontat KEY >= con-chiave
           END-IF
           .

       DataSet1-tcontat-START-GREATER.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY > con-chiave
           ELSE
              START tcontat KEY < con-chiave
           END-IF
           .

       DataSet1-tcontat-START-LESS.
           IF DataSet1-tcontat-KEY-Asc
              START tcontat KEY < con-chiave
           ELSE
              START tcontat KEY > con-chiave
           END-IF
           .

       DataSet1-tcontat-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcontat-LOCK
              READ tcontat WITH LOCK 
              KEY con-chiave
           ELSE
              READ tcontat WITH NO LOCK 
              KEY con-chiave
           END-IF
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT 
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcontat-KEY-Asc
              IF DataSet1-tcontat-LOCK
                 READ tcontat NEXT WITH LOCK
              ELSE
                 READ tcontat NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcontat-LOCK
                 READ tcontat PREVIOUS WITH LOCK
              ELSE
                 READ tcontat PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcontat-KEY-Asc
              IF DataSet1-tcontat-LOCK
                 READ tcontat PREVIOUS WITH LOCK
              ELSE
                 READ tcontat PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcontat-LOCK
                 READ tcontat NEXT WITH LOCK
              ELSE
                 READ tcontat NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeWrite>
      * <TOTEM:END>
           WRITE con-rec OF tcontat.
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeRewrite>
      * <TOTEM:END>
           REWRITE con-rec OF tcontat.
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcontat-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, BeforeDelete>
      * <TOTEM:END>
           DELETE tcontat.
           MOVE STATUS-tcontat TO TOTEM-ERR-STAT
           MOVE "tcontat" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcontat, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       tnotacr-k-causale-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-causale-SPLITBUF
           MOVE tno-causale(1:4) TO tnotacr-k-causale-SPLITBUF(1:4)
           MOVE tno-anno(1:4) TO tnotacr-k-causale-SPLITBUF(5:4)
           MOVE tno-numero(1:8) TO tnotacr-k-causale-SPLITBUF(9:8)
           .

       tnotacr-k1-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k1-SPLITBUF
           MOVE tno-cod-cli(1:5) TO tnotacr-k1-SPLITBUF(1:5)
           MOVE tno-prg-destino(1:5) TO tnotacr-k1-SPLITBUF(6:5)
           MOVE tno-anno(1:4) TO tnotacr-k1-SPLITBUF(11:4)
           MOVE tno-numero(1:8) TO tnotacr-k1-SPLITBUF(15:8)
           .

       tnotacr-k2-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k2-SPLITBUF
           MOVE tno-data-passaggio-ordine(1:8) TO 
           tnotacr-k2-SPLITBUF(1:8)
           MOVE tno-anno(1:4) TO tnotacr-k2-SPLITBUF(9:4)
           MOVE tno-numero(1:8) TO tnotacr-k2-SPLITBUF(13:8)
           .

       tnotacr-k-fattura-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-fattura-SPLITBUF
           MOVE tno-anno-fattura(1:4) TO tnotacr-k-fattura-SPLITBUF(1:4)
           MOVE tno-num-fattura(1:8) TO tnotacr-k-fattura-SPLITBUF(5:8)
           .

       tnotacr-k4-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k4-SPLITBUF
           MOVE tno-anno-fattura(1:4) TO tnotacr-k4-SPLITBUF(1:4)
           MOVE tno-data-fattura(1:8) TO tnotacr-k4-SPLITBUF(5:8)
           MOVE tno-num-fattura(1:8) TO tnotacr-k4-SPLITBUF(13:8)
           MOVE tno-num-prenot(1:8) TO tnotacr-k4-SPLITBUF(21:8)
           MOVE tno-fatt-prenotata(1:1) TO tnotacr-k4-SPLITBUF(29:1)
           .

       tnotacr-k-contab-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-contab-SPLITBUF
           MOVE tno-agg-contab(1:1) TO tnotacr-k-contab-SPLITBUF(1:1)
           MOVE tno-anno-fattura(1:4) TO tnotacr-k-contab-SPLITBUF(2:4)
           MOVE tno-num-fattura(1:8) TO tnotacr-k-contab-SPLITBUF(6:8)
           .

       tnotacr-k-data-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-data-SPLITBUF
           MOVE tno-data(1:8) TO tnotacr-k-data-SPLITBUF(1:8)
           MOVE tno-numero(1:8) TO tnotacr-k-data-SPLITBUF(9:8)
           .

       tnotacr-k-agfatt-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-agfatt-SPLITBUF
           MOVE tno-anno-fattura(1:4) TO tnotacr-k-agfatt-SPLITBUF(1:4)
           MOVE tno-data-fattura(1:8) TO tnotacr-k-agfatt-SPLITBUF(5:8)
           MOVE tno-num-fattura(1:8) TO tnotacr-k-agfatt-SPLITBUF(13:8)
           MOVE tno-num-prenot(1:8) TO tnotacr-k-agfatt-SPLITBUF(21:8)
           MOVE tno-fatt-prenotata(1:1) TO 
           tnotacr-k-agfatt-SPLITBUF(29:1)
           MOVE tno-chiave(1:12) TO tnotacr-k-agfatt-SPLITBUF(30:12)
           .

       tnotacr-k-andamento-data-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-andamento-data-SPLITBUF
           MOVE tno-agg-contab(1:1) TO 
           tnotacr-k-andamento-data-SPLITBUF(1:1)
           MOVE tno-data-fattura(1:8) TO 
           tnotacr-k-andamento-data-SPLITBUF(2:8)
           .

       tnotacr-k-andamento-cliente-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-andamento-cliente-SPLITBUF
           MOVE tno-cod-cli(1:5) TO 
           tnotacr-k-andamento-cliente-SPLITBUF(1:5)
           MOVE tno-agg-contab(1:1) TO 
           tnotacr-k-andamento-cliente-SPLITBUF(6:1)
           MOVE tno-data-fattura(1:8) TO 
           tnotacr-k-andamento-cliente-SPLITBUF(7:8)
           .

       tnotacr-k-andamento-clides-MERGE-SPLITBUF.
           INITIALIZE tnotacr-k-andamento-clides-SPLITBUF
           MOVE tno-cod-cli(1:5) TO 
           tnotacr-k-andamento-clides-SPLITBUF(1:5)
           MOVE tno-prg-destino(1:5) TO 
           tnotacr-k-andamento-clides-SPLITBUF(6:5)
           MOVE tno-agg-contab(1:1) TO 
           tnotacr-k-andamento-clides-SPLITBUF(11:1)
           MOVE tno-data-fattura(1:8) TO 
           tnotacr-k-andamento-clides-SPLITBUF(12:8)
           .

       DataSet1-tnotacr-INITSTART.
           IF DataSet1-tnotacr-KEY-Asc
              MOVE Low-Value TO tno-chiave
           ELSE
              MOVE High-Value TO tno-chiave
           END-IF
           .

       DataSet1-tnotacr-INITEND.
           IF DataSet1-tnotacr-KEY-Asc
              MOVE High-Value TO tno-chiave
           ELSE
              MOVE Low-Value TO tno-chiave
           END-IF
           .

      * tnotacr
       DataSet1-tnotacr-START.
           IF DataSet1-tnotacr-KEY-Asc
              START tnotacr KEY >= tno-chiave
           ELSE
              START tnotacr KEY <= tno-chiave
           END-IF
           .

       DataSet1-tnotacr-START-NOTGREATER.
           IF DataSet1-tnotacr-KEY-Asc
              START tnotacr KEY <= tno-chiave
           ELSE
              START tnotacr KEY >= tno-chiave
           END-IF
           .

       DataSet1-tnotacr-START-GREATER.
           IF DataSet1-tnotacr-KEY-Asc
              START tnotacr KEY > tno-chiave
           ELSE
              START tnotacr KEY < tno-chiave
           END-IF
           .

       DataSet1-tnotacr-START-LESS.
           IF DataSet1-tnotacr-KEY-Asc
              START tnotacr KEY < tno-chiave
           ELSE
              START tnotacr KEY > tno-chiave
           END-IF
           .

       DataSet1-tnotacr-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tnotacr-LOCK
              READ tnotacr WITH LOCK 
              KEY tno-chiave
           ELSE
              READ tnotacr WITH NO LOCK 
              KEY tno-chiave
           END-IF
           PERFORM tnotacr-k-causale-MERGE-SPLITBUF
           PERFORM tnotacr-k1-MERGE-SPLITBUF
           PERFORM tnotacr-k2-MERGE-SPLITBUF
           PERFORM tnotacr-k-fattura-MERGE-SPLITBUF
           PERFORM tnotacr-k4-MERGE-SPLITBUF
           PERFORM tnotacr-k-contab-MERGE-SPLITBUF
           PERFORM tnotacr-k-data-MERGE-SPLITBUF
           PERFORM tnotacr-k-agfatt-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-data-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-clides-MERGE-SPLITBUF
           MOVE STATUS-tnotacr TO TOTEM-ERR-STAT 
           MOVE "tnotacr" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tnotacr-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tnotacr-KEY-Asc
              IF DataSet1-tnotacr-LOCK
                 READ tnotacr NEXT WITH LOCK
              ELSE
                 READ tnotacr NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tnotacr-LOCK
                 READ tnotacr PREVIOUS WITH LOCK
              ELSE
                 READ tnotacr PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tnotacr-k-causale-MERGE-SPLITBUF
           PERFORM tnotacr-k1-MERGE-SPLITBUF
           PERFORM tnotacr-k2-MERGE-SPLITBUF
           PERFORM tnotacr-k-fattura-MERGE-SPLITBUF
           PERFORM tnotacr-k4-MERGE-SPLITBUF
           PERFORM tnotacr-k-contab-MERGE-SPLITBUF
           PERFORM tnotacr-k-data-MERGE-SPLITBUF
           PERFORM tnotacr-k-agfatt-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-data-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-clides-MERGE-SPLITBUF
           MOVE STATUS-tnotacr TO TOTEM-ERR-STAT
           MOVE "tnotacr" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tnotacr-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tnotacr-KEY-Asc
              IF DataSet1-tnotacr-LOCK
                 READ tnotacr PREVIOUS WITH LOCK
              ELSE
                 READ tnotacr PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tnotacr-LOCK
                 READ tnotacr NEXT WITH LOCK
              ELSE
                 READ tnotacr NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tnotacr-k-causale-MERGE-SPLITBUF
           PERFORM tnotacr-k1-MERGE-SPLITBUF
           PERFORM tnotacr-k2-MERGE-SPLITBUF
           PERFORM tnotacr-k-fattura-MERGE-SPLITBUF
           PERFORM tnotacr-k4-MERGE-SPLITBUF
           PERFORM tnotacr-k-contab-MERGE-SPLITBUF
           PERFORM tnotacr-k-data-MERGE-SPLITBUF
           PERFORM tnotacr-k-agfatt-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-data-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tnotacr-k-andamento-clides-MERGE-SPLITBUF
           MOVE STATUS-tnotacr TO TOTEM-ERR-STAT
           MOVE "tnotacr" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tnotacr-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeWrite>
      * <TOTEM:END>
           WRITE tno-rec OF tnotacr.
           MOVE STATUS-tnotacr TO TOTEM-ERR-STAT
           MOVE "tnotacr" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tnotacr-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tno-rec OF tnotacr.
           MOVE STATUS-tnotacr TO TOTEM-ERR-STAT
           MOVE "tnotacr" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tnotacr-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, BeforeDelete>
      * <TOTEM:END>
           DELETE tnotacr.
           MOVE STATUS-tnotacr TO TOTEM-ERR-STAT
           MOVE "tnotacr" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tnotacr, AfterDelete>
      * <TOTEM:END>
           .

       rnotacr-rno-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rnotacr-rno-k-articolo-SPLITBUF
           MOVE rno-cod-articolo(1:6) TO 
           rnotacr-rno-k-articolo-SPLITBUF(1:6)
           MOVE rno-chiave(1:17) TO 
           rnotacr-rno-k-articolo-SPLITBUF(7:17)
           .

       DataSet1-rnotacr-INITSTART.
           IF DataSet1-rnotacr-KEY-Asc
              MOVE Low-Value TO rno-chiave
           ELSE
              MOVE High-Value TO rno-chiave
           END-IF
           .

       DataSet1-rnotacr-INITEND.
           IF DataSet1-rnotacr-KEY-Asc
              MOVE High-Value TO rno-chiave
           ELSE
              MOVE Low-Value TO rno-chiave
           END-IF
           .

      * rnotacr
       DataSet1-rnotacr-START.
           IF DataSet1-rnotacr-KEY-Asc
              START rnotacr KEY >= rno-chiave
           ELSE
              START rnotacr KEY <= rno-chiave
           END-IF
           .

       DataSet1-rnotacr-START-NOTGREATER.
           IF DataSet1-rnotacr-KEY-Asc
              START rnotacr KEY <= rno-chiave
           ELSE
              START rnotacr KEY >= rno-chiave
           END-IF
           .

       DataSet1-rnotacr-START-GREATER.
           IF DataSet1-rnotacr-KEY-Asc
              START rnotacr KEY > rno-chiave
           ELSE
              START rnotacr KEY < rno-chiave
           END-IF
           .

       DataSet1-rnotacr-START-LESS.
           IF DataSet1-rnotacr-KEY-Asc
              START rnotacr KEY < rno-chiave
           ELSE
              START rnotacr KEY > rno-chiave
           END-IF
           .

       DataSet1-rnotacr-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rnotacr-LOCK
              READ rnotacr WITH LOCK 
              KEY rno-chiave
           ELSE
              READ rnotacr WITH NO LOCK 
              KEY rno-chiave
           END-IF
           PERFORM rnotacr-rno-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-rnotacr TO TOTEM-ERR-STAT 
           MOVE "rnotacr" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rnotacr-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rnotacr-KEY-Asc
              IF DataSet1-rnotacr-LOCK
                 READ rnotacr NEXT WITH LOCK
              ELSE
                 READ rnotacr NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rnotacr-LOCK
                 READ rnotacr PREVIOUS WITH LOCK
              ELSE
                 READ rnotacr PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rnotacr-rno-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-rnotacr TO TOTEM-ERR-STAT
           MOVE "rnotacr" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rnotacr-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rnotacr-KEY-Asc
              IF DataSet1-rnotacr-LOCK
                 READ rnotacr PREVIOUS WITH LOCK
              ELSE
                 READ rnotacr PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rnotacr-LOCK
                 READ rnotacr NEXT WITH LOCK
              ELSE
                 READ rnotacr NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rnotacr-rno-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-rnotacr TO TOTEM-ERR-STAT
           MOVE "rnotacr" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rnotacr-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rnotacr TO TOTEM-ERR-STAT
           MOVE "rnotacr" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rnotacr-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rnotacr TO TOTEM-ERR-STAT
           MOVE "rnotacr" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rnotacr-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rnotacr TO TOTEM-ERR-STAT
           MOVE "rnotacr" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rnotacr, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-DOCCN-INITSTART.
           IF DataSet1-DOCCN-KEY-Asc
              MOVE Low-Value TO DOCCN-CODICE
           ELSE
              MOVE High-Value TO DOCCN-CODICE
           END-IF
           .

       DataSet1-DOCCN-INITEND.
           IF DataSet1-DOCCN-KEY-Asc
              MOVE High-Value TO DOCCN-CODICE
           ELSE
              MOVE Low-Value TO DOCCN-CODICE
           END-IF
           .

      * DOCCN
       DataSet1-DOCCN-START.
           IF DataSet1-DOCCN-KEY-Asc
              START DOCCN KEY >= DOCCN-CODICE
           ELSE
              START DOCCN KEY <= DOCCN-CODICE
           END-IF
           .

       DataSet1-DOCCN-START-NOTGREATER.
           IF DataSet1-DOCCN-KEY-Asc
              START DOCCN KEY <= DOCCN-CODICE
           ELSE
              START DOCCN KEY >= DOCCN-CODICE
           END-IF
           .

       DataSet1-DOCCN-START-GREATER.
           IF DataSet1-DOCCN-KEY-Asc
              START DOCCN KEY > DOCCN-CODICE
           ELSE
              START DOCCN KEY < DOCCN-CODICE
           END-IF
           .

       DataSet1-DOCCN-START-LESS.
           IF DataSet1-DOCCN-KEY-Asc
              START DOCCN KEY < DOCCN-CODICE
           ELSE
              START DOCCN KEY > DOCCN-CODICE
           END-IF
           .

       DataSet1-DOCCN-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-DOCCN-LOCK
              READ DOCCN WITH LOCK 
              KEY DOCCN-CODICE
           ELSE
              READ DOCCN WITH NO LOCK 
              KEY DOCCN-CODICE
           END-IF
           MOVE STATUS-DOCCN TO TOTEM-ERR-STAT 
           MOVE "DOCCN" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-DOCCN-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-DOCCN-KEY-Asc
              IF DataSet1-DOCCN-LOCK
                 READ DOCCN NEXT WITH LOCK
              ELSE
                 READ DOCCN NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-DOCCN-LOCK
                 READ DOCCN PREVIOUS WITH LOCK
              ELSE
                 READ DOCCN PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-DOCCN TO TOTEM-ERR-STAT
           MOVE "DOCCN" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-DOCCN-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-DOCCN-KEY-Asc
              IF DataSet1-DOCCN-LOCK
                 READ DOCCN PREVIOUS WITH LOCK
              ELSE
                 READ DOCCN PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-DOCCN-LOCK
                 READ DOCCN NEXT WITH LOCK
              ELSE
                 READ DOCCN NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-DOCCN TO TOTEM-ERR-STAT
           MOVE "DOCCN" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-DOCCN-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeWrite>
      * <TOTEM:END>
           WRITE RECORD-DOCCN OF DOCCN.
           MOVE STATUS-DOCCN TO TOTEM-ERR-STAT
           MOVE "DOCCN" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-DOCCN-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeRewrite>
      * <TOTEM:END>
           REWRITE RECORD-DOCCN OF DOCCN.
           MOVE STATUS-DOCCN TO TOTEM-ERR-STAT
           MOVE "DOCCN" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-DOCCN-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, BeforeDelete>
      * <TOTEM:END>
           DELETE DOCCN.
           MOVE STATUS-DOCCN TO TOTEM-ERR-STAT
           MOVE "DOCCN" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:DOCCN, AfterDelete>
      * <TOTEM:END>
           .

       TBLCO-TBLCO-CODICE-01-MERGE-SPLITBUF.
           INITIALIZE TBLCO-TBLCO-CODICE-01-SPLITBUF
           MOVE TBLCO-CODICE1(1:2) TO 
           TBLCO-TBLCO-CODICE-01-SPLITBUF(1:2)
           MOVE TBLCO-DESCRIZIONE1(1:30) TO 
           TBLCO-TBLCO-CODICE-01-SPLITBUF(3:30)
           MOVE TBLCO-CODICE2(1:20) TO 
           TBLCO-TBLCO-CODICE-01-SPLITBUF(33:20)
           .

       DataSet1-TBLCO-INITSTART.
           IF DataSet1-TBLCO-KEY-Asc
              MOVE Low-Value TO TBLCO-CODICE
           ELSE
              MOVE High-Value TO TBLCO-CODICE
           END-IF
           .

       DataSet1-TBLCO-INITEND.
           IF DataSet1-TBLCO-KEY-Asc
              MOVE High-Value TO TBLCO-CODICE
           ELSE
              MOVE Low-Value TO TBLCO-CODICE
           END-IF
           .

      * TBLCO
       DataSet1-TBLCO-START.
           IF DataSet1-TBLCO-KEY-Asc
              START TBLCO KEY >= TBLCO-CODICE
           ELSE
              START TBLCO KEY <= TBLCO-CODICE
           END-IF
           .

       DataSet1-TBLCO-START-NOTGREATER.
           IF DataSet1-TBLCO-KEY-Asc
              START TBLCO KEY <= TBLCO-CODICE
           ELSE
              START TBLCO KEY >= TBLCO-CODICE
           END-IF
           .

       DataSet1-TBLCO-START-GREATER.
           IF DataSet1-TBLCO-KEY-Asc
              START TBLCO KEY > TBLCO-CODICE
           ELSE
              START TBLCO KEY < TBLCO-CODICE
           END-IF
           .

       DataSet1-TBLCO-START-LESS.
           IF DataSet1-TBLCO-KEY-Asc
              START TBLCO KEY < TBLCO-CODICE
           ELSE
              START TBLCO KEY > TBLCO-CODICE
           END-IF
           .

       DataSet1-TBLCO-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-TBLCO-LOCK
              READ TBLCO WITH LOCK 
              KEY TBLCO-CODICE
           ELSE
              READ TBLCO WITH NO LOCK 
              KEY TBLCO-CODICE
           END-IF
           PERFORM TBLCO-TBLCO-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLCO TO TOTEM-ERR-STAT 
           MOVE "TBLCO" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-TBLCO-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-TBLCO-KEY-Asc
              IF DataSet1-TBLCO-LOCK
                 READ TBLCO NEXT WITH LOCK
              ELSE
                 READ TBLCO NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-TBLCO-LOCK
                 READ TBLCO PREVIOUS WITH LOCK
              ELSE
                 READ TBLCO PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM TBLCO-TBLCO-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLCO TO TOTEM-ERR-STAT
           MOVE "TBLCO" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-TBLCO-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-TBLCO-KEY-Asc
              IF DataSet1-TBLCO-LOCK
                 READ TBLCO PREVIOUS WITH LOCK
              ELSE
                 READ TBLCO PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-TBLCO-LOCK
                 READ TBLCO NEXT WITH LOCK
              ELSE
                 READ TBLCO NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM TBLCO-TBLCO-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLCO TO TOTEM-ERR-STAT
           MOVE "TBLCO" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-TBLCO-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-TBLCO TO TOTEM-ERR-STAT
           MOVE "TBLCO" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-TBLCO-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-TBLCO TO TOTEM-ERR-STAT
           MOVE "TBLCO" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-TBLCO-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-TBLCO TO TOTEM-ERR-STAT
           MOVE "TBLCO" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLCO, AfterDelete>
      * <TOTEM:END>
           .

       TBLDO-TBLDO-CODICE-01-MERGE-SPLITBUF.
           INITIALIZE TBLDO-TBLDO-CODICE-01-SPLITBUF
           MOVE TBLDO-CODICE1(1:2) TO 
           TBLDO-TBLDO-CODICE-01-SPLITBUF(1:2)
           MOVE TBLDO-DESCRIZIONE1(1:30) TO 
           TBLDO-TBLDO-CODICE-01-SPLITBUF(3:30)
           MOVE TBLDO-CODICE2(1:20) TO 
           TBLDO-TBLDO-CODICE-01-SPLITBUF(33:20)
           .

       DataSet1-TBLDO-INITSTART.
           IF DataSet1-TBLDO-KEY-Asc
              MOVE Low-Value TO TBLDO-CODICE
           ELSE
              MOVE High-Value TO TBLDO-CODICE
           END-IF
           .

       DataSet1-TBLDO-INITEND.
           IF DataSet1-TBLDO-KEY-Asc
              MOVE High-Value TO TBLDO-CODICE
           ELSE
              MOVE Low-Value TO TBLDO-CODICE
           END-IF
           .

      * TBLDO
       DataSet1-TBLDO-START.
           IF DataSet1-TBLDO-KEY-Asc
              START TBLDO KEY >= TBLDO-CODICE
           ELSE
              START TBLDO KEY <= TBLDO-CODICE
           END-IF
           .

       DataSet1-TBLDO-START-NOTGREATER.
           IF DataSet1-TBLDO-KEY-Asc
              START TBLDO KEY <= TBLDO-CODICE
           ELSE
              START TBLDO KEY >= TBLDO-CODICE
           END-IF
           .

       DataSet1-TBLDO-START-GREATER.
           IF DataSet1-TBLDO-KEY-Asc
              START TBLDO KEY > TBLDO-CODICE
           ELSE
              START TBLDO KEY < TBLDO-CODICE
           END-IF
           .

       DataSet1-TBLDO-START-LESS.
           IF DataSet1-TBLDO-KEY-Asc
              START TBLDO KEY < TBLDO-CODICE
           ELSE
              START TBLDO KEY > TBLDO-CODICE
           END-IF
           .

       DataSet1-TBLDO-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-TBLDO-LOCK
              READ TBLDO WITH LOCK 
              KEY TBLDO-CODICE
           ELSE
              READ TBLDO WITH NO LOCK 
              KEY TBLDO-CODICE
           END-IF
           PERFORM TBLDO-TBLDO-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLDO TO TOTEM-ERR-STAT 
           MOVE "TBLDO" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-TBLDO-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-TBLDO-KEY-Asc
              IF DataSet1-TBLDO-LOCK
                 READ TBLDO NEXT WITH LOCK
              ELSE
                 READ TBLDO NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-TBLDO-LOCK
                 READ TBLDO PREVIOUS WITH LOCK
              ELSE
                 READ TBLDO PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM TBLDO-TBLDO-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLDO TO TOTEM-ERR-STAT
           MOVE "TBLDO" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-TBLDO-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-TBLDO-KEY-Asc
              IF DataSet1-TBLDO-LOCK
                 READ TBLDO PREVIOUS WITH LOCK
              ELSE
                 READ TBLDO PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-TBLDO-LOCK
                 READ TBLDO NEXT WITH LOCK
              ELSE
                 READ TBLDO NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM TBLDO-TBLDO-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLDO TO TOTEM-ERR-STAT
           MOVE "TBLDO" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-TBLDO-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-TBLDO TO TOTEM-ERR-STAT
           MOVE "TBLDO" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-TBLDO-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-TBLDO TO TOTEM-ERR-STAT
           MOVE "TBLDO" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-TBLDO-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-TBLDO TO TOTEM-ERR-STAT
           MOVE "TBLDO" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLDO, AfterDelete>
      * <TOTEM:END>
           .

       tivaese-key01-MERGE-SPLITBUF.
           INITIALIZE tivaese-key01-SPLITBUF
           MOVE TBLIV-CODICE1(1:2) TO tivaese-key01-SPLITBUF(1:2)
           MOVE TBLIV-DESCRIZIONE1(1:30) TO tivaese-key01-SPLITBUF(3:30)
           MOVE TBLIV-CODICE2(1:20) TO tivaese-key01-SPLITBUF(33:20)
           .

       DataSet1-tivaese-INITSTART.
           IF DataSet1-tivaese-KEY-Asc
              MOVE Low-Value TO TBLIV-CODICE
           ELSE
              MOVE High-Value TO TBLIV-CODICE
           END-IF
           .

       DataSet1-tivaese-INITEND.
           IF DataSet1-tivaese-KEY-Asc
              MOVE High-Value TO TBLIV-CODICE
           ELSE
              MOVE Low-Value TO TBLIV-CODICE
           END-IF
           .

      * tivaese
       DataSet1-tivaese-START.
           IF DataSet1-tivaese-KEY-Asc
              START tivaese KEY >= TBLIV-CODICE
           ELSE
              START tivaese KEY <= TBLIV-CODICE
           END-IF
           .

       DataSet1-tivaese-START-NOTGREATER.
           IF DataSet1-tivaese-KEY-Asc
              START tivaese KEY <= TBLIV-CODICE
           ELSE
              START tivaese KEY >= TBLIV-CODICE
           END-IF
           .

       DataSet1-tivaese-START-GREATER.
           IF DataSet1-tivaese-KEY-Asc
              START tivaese KEY > TBLIV-CODICE
           ELSE
              START tivaese KEY < TBLIV-CODICE
           END-IF
           .

       DataSet1-tivaese-START-LESS.
           IF DataSet1-tivaese-KEY-Asc
              START tivaese KEY < TBLIV-CODICE
           ELSE
              START tivaese KEY > TBLIV-CODICE
           END-IF
           .

       DataSet1-tivaese-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tivaese-LOCK
              READ tivaese WITH LOCK 
              KEY TBLIV-CODICE
           ELSE
              READ tivaese WITH NO LOCK 
              KEY TBLIV-CODICE
           END-IF
           PERFORM tivaese-key01-MERGE-SPLITBUF
           MOVE STATUS-tivaese TO TOTEM-ERR-STAT 
           MOVE "tivaese" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tivaese-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tivaese-KEY-Asc
              IF DataSet1-tivaese-LOCK
                 READ tivaese NEXT WITH LOCK
              ELSE
                 READ tivaese NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tivaese-LOCK
                 READ tivaese PREVIOUS WITH LOCK
              ELSE
                 READ tivaese PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tivaese-key01-MERGE-SPLITBUF
           MOVE STATUS-tivaese TO TOTEM-ERR-STAT
           MOVE "tivaese" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tivaese-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tivaese-KEY-Asc
              IF DataSet1-tivaese-LOCK
                 READ tivaese PREVIOUS WITH LOCK
              ELSE
                 READ tivaese PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tivaese-LOCK
                 READ tivaese NEXT WITH LOCK
              ELSE
                 READ tivaese NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tivaese-key01-MERGE-SPLITBUF
           MOVE STATUS-tivaese TO TOTEM-ERR-STAT
           MOVE "tivaese" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tivaese-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tivaese TO TOTEM-ERR-STAT
           MOVE "tivaese" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tivaese-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tivaese TO TOTEM-ERR-STAT
           MOVE "tivaese" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tivaese-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tivaese TO TOTEM-ERR-STAT
           MOVE "tivaese" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tivaese, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-CLZ-INITSTART.
           IF DataSet1-CLZ-KEY-Asc
              MOVE Low-Value TO CLZ-CODICE
           ELSE
              MOVE High-Value TO CLZ-CODICE
           END-IF
           .

       DataSet1-CLZ-INITEND.
           IF DataSet1-CLZ-KEY-Asc
              MOVE High-Value TO CLZ-CODICE
           ELSE
              MOVE Low-Value TO CLZ-CODICE
           END-IF
           .

      * CLZ
       DataSet1-CLZ-START.
           IF DataSet1-CLZ-KEY-Asc
              START CLZ KEY >= CLZ-CODICE
           ELSE
              START CLZ KEY <= CLZ-CODICE
           END-IF
           .

       DataSet1-CLZ-START-NOTGREATER.
           IF DataSet1-CLZ-KEY-Asc
              START CLZ KEY <= CLZ-CODICE
           ELSE
              START CLZ KEY >= CLZ-CODICE
           END-IF
           .

       DataSet1-CLZ-START-GREATER.
           IF DataSet1-CLZ-KEY-Asc
              START CLZ KEY > CLZ-CODICE
           ELSE
              START CLZ KEY < CLZ-CODICE
           END-IF
           .

       DataSet1-CLZ-START-LESS.
           IF DataSet1-CLZ-KEY-Asc
              START CLZ KEY < CLZ-CODICE
           ELSE
              START CLZ KEY > CLZ-CODICE
           END-IF
           .

       DataSet1-CLZ-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-CLZ-LOCK
              READ CLZ WITH LOCK 
              KEY CLZ-CODICE
           ELSE
              READ CLZ WITH NO LOCK 
              KEY CLZ-CODICE
           END-IF
           MOVE STATUS-CLZ TO TOTEM-ERR-STAT 
           MOVE "CLZ" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-CLZ-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-CLZ-KEY-Asc
              IF DataSet1-CLZ-LOCK
                 READ CLZ NEXT WITH LOCK
              ELSE
                 READ CLZ NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-CLZ-LOCK
                 READ CLZ PREVIOUS WITH LOCK
              ELSE
                 READ CLZ PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-CLZ TO TOTEM-ERR-STAT
           MOVE "CLZ" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-CLZ-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-CLZ-KEY-Asc
              IF DataSet1-CLZ-LOCK
                 READ CLZ PREVIOUS WITH LOCK
              ELSE
                 READ CLZ PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-CLZ-LOCK
                 READ CLZ NEXT WITH LOCK
              ELSE
                 READ CLZ NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-CLZ TO TOTEM-ERR-STAT
           MOVE "CLZ" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-CLZ-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-CLZ TO TOTEM-ERR-STAT
           MOVE "CLZ" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-CLZ-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-CLZ TO TOTEM-ERR-STAT
           MOVE "CLZ" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-CLZ-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-CLZ TO TOTEM-ERR-STAT
           MOVE "CLZ" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLZ, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-MAZ-INITSTART.
           IF DataSet1-MAZ-KEY-Asc
              MOVE Low-Value TO MAZ-CODICE
           ELSE
              MOVE High-Value TO MAZ-CODICE
           END-IF
           .

       DataSet1-MAZ-INITEND.
           IF DataSet1-MAZ-KEY-Asc
              MOVE High-Value TO MAZ-CODICE
           ELSE
              MOVE Low-Value TO MAZ-CODICE
           END-IF
           .

      * MAZ
       DataSet1-MAZ-START.
           IF DataSet1-MAZ-KEY-Asc
              START MAZ KEY >= MAZ-CODICE
           ELSE
              START MAZ KEY <= MAZ-CODICE
           END-IF
           .

       DataSet1-MAZ-START-NOTGREATER.
           IF DataSet1-MAZ-KEY-Asc
              START MAZ KEY <= MAZ-CODICE
           ELSE
              START MAZ KEY >= MAZ-CODICE
           END-IF
           .

       DataSet1-MAZ-START-GREATER.
           IF DataSet1-MAZ-KEY-Asc
              START MAZ KEY > MAZ-CODICE
           ELSE
              START MAZ KEY < MAZ-CODICE
           END-IF
           .

       DataSet1-MAZ-START-LESS.
           IF DataSet1-MAZ-KEY-Asc
              START MAZ KEY < MAZ-CODICE
           ELSE
              START MAZ KEY > MAZ-CODICE
           END-IF
           .

       DataSet1-MAZ-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-MAZ-LOCK
              READ MAZ WITH LOCK 
              KEY MAZ-CODICE
           ELSE
              READ MAZ WITH NO LOCK 
              KEY MAZ-CODICE
           END-IF
           MOVE STATUS-MAZ TO TOTEM-ERR-STAT 
           MOVE "MAZ" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-MAZ-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-MAZ-KEY-Asc
              IF DataSet1-MAZ-LOCK
                 READ MAZ NEXT WITH LOCK
              ELSE
                 READ MAZ NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-MAZ-LOCK
                 READ MAZ PREVIOUS WITH LOCK
              ELSE
                 READ MAZ PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-MAZ TO TOTEM-ERR-STAT
           MOVE "MAZ" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-MAZ-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-MAZ-KEY-Asc
              IF DataSet1-MAZ-LOCK
                 READ MAZ PREVIOUS WITH LOCK
              ELSE
                 READ MAZ PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-MAZ-LOCK
                 READ MAZ NEXT WITH LOCK
              ELSE
                 READ MAZ NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-MAZ TO TOTEM-ERR-STAT
           MOVE "MAZ" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-MAZ-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-MAZ TO TOTEM-ERR-STAT
           MOVE "MAZ" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-MAZ-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-MAZ TO TOTEM-ERR-STAT
           MOVE "MAZ" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-MAZ-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-MAZ TO TOTEM-ERR-STAT
           MOVE "MAZ" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:MAZ, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-G2-INITSTART.
           IF DataSet1-G2-KEY-Asc
              MOVE Low-Value TO G2-chiave
           ELSE
              MOVE High-Value TO G2-chiave
           END-IF
           .

       DataSet1-G2-INITEND.
           IF DataSet1-G2-KEY-Asc
              MOVE High-Value TO G2-chiave
           ELSE
              MOVE Low-Value TO G2-chiave
           END-IF
           .

      * G2
       DataSet1-G2-START.
           IF DataSet1-G2-KEY-Asc
              START G2 KEY >= G2-chiave
           ELSE
              START G2 KEY <= G2-chiave
           END-IF
           .

       DataSet1-G2-START-NOTGREATER.
           IF DataSet1-G2-KEY-Asc
              START G2 KEY <= G2-chiave
           ELSE
              START G2 KEY >= G2-chiave
           END-IF
           .

       DataSet1-G2-START-GREATER.
           IF DataSet1-G2-KEY-Asc
              START G2 KEY > G2-chiave
           ELSE
              START G2 KEY < G2-chiave
           END-IF
           .

       DataSet1-G2-START-LESS.
           IF DataSet1-G2-KEY-Asc
              START G2 KEY < G2-chiave
           ELSE
              START G2 KEY > G2-chiave
           END-IF
           .

       DataSet1-G2-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-G2-LOCK
              READ G2 WITH LOCK 
              KEY G2-chiave
           ELSE
              READ G2 WITH NO LOCK 
              KEY G2-chiave
           END-IF
           MOVE STATUS-G2 TO TOTEM-ERR-STAT 
           MOVE "G2" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-G2-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-G2-KEY-Asc
              IF DataSet1-G2-LOCK
                 READ G2 NEXT WITH LOCK
              ELSE
                 READ G2 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-G2-LOCK
                 READ G2 PREVIOUS WITH LOCK
              ELSE
                 READ G2 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-G2 TO TOTEM-ERR-STAT
           MOVE "G2" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-G2-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-G2-KEY-Asc
              IF DataSet1-G2-LOCK
                 READ G2 PREVIOUS WITH LOCK
              ELSE
                 READ G2 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-G2-LOCK
                 READ G2 NEXT WITH LOCK
              ELSE
                 READ G2 NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-G2 TO TOTEM-ERR-STAT
           MOVE "G2" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-G2-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-G2 TO TOTEM-ERR-STAT
           MOVE "G2" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-G2-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-G2 TO TOTEM-ERR-STAT
           MOVE "G2" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-G2-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:G2, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-G2 TO TOTEM-ERR-STAT
           MOVE "G2" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:G2, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-iva-INITSTART.
           IF DataSet1-tmp-iva-KEY-Asc
              MOVE Low-Value TO tmp-iv-progressivo
           ELSE
              MOVE High-Value TO tmp-iv-progressivo
           END-IF
           .

       DataSet1-tmp-iva-INITEND.
           IF DataSet1-tmp-iva-KEY-Asc
              MOVE High-Value TO tmp-iv-progressivo
           ELSE
              MOVE Low-Value TO tmp-iv-progressivo
           END-IF
           .

      * tmp-iva
       DataSet1-tmp-iva-START.
           IF DataSet1-tmp-iva-KEY-Asc
              START tmp-iva KEY >= tmp-iv-progressivo
           ELSE
              START tmp-iva KEY <= tmp-iv-progressivo
           END-IF
           .

       DataSet1-tmp-iva-START-NOTGREATER.
           IF DataSet1-tmp-iva-KEY-Asc
              START tmp-iva KEY <= tmp-iv-progressivo
           ELSE
              START tmp-iva KEY >= tmp-iv-progressivo
           END-IF
           .

       DataSet1-tmp-iva-START-GREATER.
           IF DataSet1-tmp-iva-KEY-Asc
              START tmp-iva KEY > tmp-iv-progressivo
           ELSE
              START tmp-iva KEY < tmp-iv-progressivo
           END-IF
           .

       DataSet1-tmp-iva-START-LESS.
           IF DataSet1-tmp-iva-KEY-Asc
              START tmp-iva KEY < tmp-iv-progressivo
           ELSE
              START tmp-iva KEY > tmp-iv-progressivo
           END-IF
           .

       DataSet1-tmp-iva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-iva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-iva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-iva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeWrite>
      * <TOTEM:END>
           WRITE tmp-iv-rec OF tmp-iva.
           MOVE STATUS-tmp-iva TO TOTEM-ERR-STAT
           MOVE "tmp-iva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-iva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-iva TO TOTEM-ERR-STAT
           MOVE "tmp-iva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-iva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-iva TO TOTEM-ERR-STAT
           MOVE "tmp-iva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-iva, AfterDelete>
      * <TOTEM:END>
           .

       ABI-ABI-CODICE1-MERGE-SPLITBUF.
           INITIALIZE ABI-ABI-CODICE1-SPLITBUF
           MOVE ABI-BANCA1(1:30) TO ABI-ABI-CODICE1-SPLITBUF(1:30)
           MOVE ABI-CITTA(1:30) TO ABI-ABI-CODICE1-SPLITBUF(31:30)
           MOVE ABI-BANCA2(1:30) TO ABI-ABI-CODICE1-SPLITBUF(61:30)
           MOVE ABI-CODICE(1:10) TO ABI-ABI-CODICE1-SPLITBUF(91:10)
           .

       ABI-ABI-CODICE2-MERGE-SPLITBUF.
           INITIALIZE ABI-ABI-CODICE2-SPLITBUF
           MOVE ABI-CITTA(1:30) TO ABI-ABI-CODICE2-SPLITBUF(1:30)
           MOVE ABI-BANCA1(1:30) TO ABI-ABI-CODICE2-SPLITBUF(31:30)
           MOVE ABI-BANCA2(1:30) TO ABI-ABI-CODICE2-SPLITBUF(61:30)
           MOVE ABI-CODICE(1:10) TO ABI-ABI-CODICE2-SPLITBUF(91:10)
           .

       DataSet1-ABI-INITSTART.
           IF DataSet1-ABI-KEY-Asc
              MOVE Low-Value TO ABI-CODICE
           ELSE
              MOVE High-Value TO ABI-CODICE
           END-IF
           .

       DataSet1-ABI-INITEND.
           IF DataSet1-ABI-KEY-Asc
              MOVE High-Value TO ABI-CODICE
           ELSE
              MOVE Low-Value TO ABI-CODICE
           END-IF
           .

      * ABI
       DataSet1-ABI-START.
           IF DataSet1-ABI-KEY-Asc
              START ABI KEY >= ABI-CODICE
           ELSE
              START ABI KEY <= ABI-CODICE
           END-IF
           .

       DataSet1-ABI-START-NOTGREATER.
           IF DataSet1-ABI-KEY-Asc
              START ABI KEY <= ABI-CODICE
           ELSE
              START ABI KEY >= ABI-CODICE
           END-IF
           .

       DataSet1-ABI-START-GREATER.
           IF DataSet1-ABI-KEY-Asc
              START ABI KEY > ABI-CODICE
           ELSE
              START ABI KEY < ABI-CODICE
           END-IF
           .

       DataSet1-ABI-START-LESS.
           IF DataSet1-ABI-KEY-Asc
              START ABI KEY < ABI-CODICE
           ELSE
              START ABI KEY > ABI-CODICE
           END-IF
           .

       DataSet1-ABI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ABI-LOCK
              READ ABI WITH LOCK 
              KEY ABI-CODICE
           ELSE
              READ ABI WITH NO LOCK 
              KEY ABI-CODICE
           END-IF
           PERFORM ABI-ABI-CODICE1-MERGE-SPLITBUF
           PERFORM ABI-ABI-CODICE2-MERGE-SPLITBUF
           MOVE STATUS-ABI TO TOTEM-ERR-STAT 
           MOVE "ABI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ABI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ABI-KEY-Asc
              IF DataSet1-ABI-LOCK
                 READ ABI NEXT WITH LOCK
              ELSE
                 READ ABI NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ABI-LOCK
                 READ ABI PREVIOUS WITH LOCK
              ELSE
                 READ ABI PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM ABI-ABI-CODICE1-MERGE-SPLITBUF
           PERFORM ABI-ABI-CODICE2-MERGE-SPLITBUF
           MOVE STATUS-ABI TO TOTEM-ERR-STAT
           MOVE "ABI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ABI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ABI-KEY-Asc
              IF DataSet1-ABI-LOCK
                 READ ABI PREVIOUS WITH LOCK
              ELSE
                 READ ABI PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ABI-LOCK
                 READ ABI NEXT WITH LOCK
              ELSE
                 READ ABI NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM ABI-ABI-CODICE1-MERGE-SPLITBUF
           PERFORM ABI-ABI-CODICE2-MERGE-SPLITBUF
           MOVE STATUS-ABI TO TOTEM-ERR-STAT
           MOVE "ABI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ABI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ABI TO TOTEM-ERR-STAT
           MOVE "ABI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ABI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ABI TO TOTEM-ERR-STAT
           MOVE "ABI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ABI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ABI TO TOTEM-ERR-STAT
           MOVE "ABI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ABI, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmovtrat-INITSTART.
           IF DataSet1-tmovtrat-KEY-Asc
              MOVE Low-Value TO tra-chiave
           ELSE
              MOVE High-Value TO tra-chiave
           END-IF
           .

       DataSet1-tmovtrat-INITEND.
           IF DataSet1-tmovtrat-KEY-Asc
              MOVE High-Value TO tra-chiave
           ELSE
              MOVE Low-Value TO tra-chiave
           END-IF
           .

      * tmovtrat
       DataSet1-tmovtrat-START.
           IF DataSet1-tmovtrat-KEY-Asc
              START tmovtrat KEY >= tra-chiave
           ELSE
              START tmovtrat KEY <= tra-chiave
           END-IF
           .

       DataSet1-tmovtrat-START-NOTGREATER.
           IF DataSet1-tmovtrat-KEY-Asc
              START tmovtrat KEY <= tra-chiave
           ELSE
              START tmovtrat KEY >= tra-chiave
           END-IF
           .

       DataSet1-tmovtrat-START-GREATER.
           IF DataSet1-tmovtrat-KEY-Asc
              START tmovtrat KEY > tra-chiave
           ELSE
              START tmovtrat KEY < tra-chiave
           END-IF
           .

       DataSet1-tmovtrat-START-LESS.
           IF DataSet1-tmovtrat-KEY-Asc
              START tmovtrat KEY < tra-chiave
           ELSE
              START tmovtrat KEY > tra-chiave
           END-IF
           .

       DataSet1-tmovtrat-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmovtrat-LOCK
              READ tmovtrat WITH LOCK 
              KEY tra-chiave
           ELSE
              READ tmovtrat WITH NO LOCK 
              KEY tra-chiave
           END-IF
           MOVE STATUS-tmovtrat TO TOTEM-ERR-STAT 
           MOVE "tmovtrat" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmovtrat-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmovtrat-KEY-Asc
              IF DataSet1-tmovtrat-LOCK
                 READ tmovtrat NEXT WITH LOCK
              ELSE
                 READ tmovtrat NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovtrat-LOCK
                 READ tmovtrat PREVIOUS WITH LOCK
              ELSE
                 READ tmovtrat PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmovtrat TO TOTEM-ERR-STAT
           MOVE "tmovtrat" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmovtrat-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmovtrat-KEY-Asc
              IF DataSet1-tmovtrat-LOCK
                 READ tmovtrat PREVIOUS WITH LOCK
              ELSE
                 READ tmovtrat PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovtrat-LOCK
                 READ tmovtrat NEXT WITH LOCK
              ELSE
                 READ tmovtrat NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmovtrat TO TOTEM-ERR-STAT
           MOVE "tmovtrat" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmovtrat-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmovtrat TO TOTEM-ERR-STAT
           MOVE "tmovtrat" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmovtrat-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmovtrat TO TOTEM-ERR-STAT
           MOVE "tmovtrat" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmovtrat-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmovtrat TO TOTEM-ERR-STAT
           MOVE "tmovtrat" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovtrat, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       CLI-CLI-CODICE1-MERGE-SPLITBUF.
           INITIALIZE CLI-CLI-CODICE1-SPLITBUF
           MOVE CLI-CODICE-ALTERNATIVO(1:30) TO 
           CLI-CLI-CODICE1-SPLITBUF(1:30)
           MOVE CLI-CODICE-G2(1:8) TO CLI-CLI-CODICE1-SPLITBUF(31:8)
           .

       CLI-CLI-CODICE2-MERGE-SPLITBUF.
           INITIALIZE CLI-CLI-CODICE2-SPLITBUF
           MOVE CLI-DESCRIZIONE1(1:30) TO CLI-CLI-CODICE2-SPLITBUF(1:30)
           MOVE CLI-CODICE-G2(1:8) TO CLI-CLI-CODICE2-SPLITBUF(31:8)
           .

       CLI-CLI-CODICE3-MERGE-SPLITBUF.
           INITIALIZE CLI-CLI-CODICE3-SPLITBUF
           MOVE CLI-PARTITA-IVA(1:11) TO CLI-CLI-CODICE3-SPLITBUF(1:11)
           MOVE CLI-CODICE-G2(1:8) TO CLI-CLI-CODICE3-SPLITBUF(12:8)
           .

       CLI-CLI-CODICE4-MERGE-SPLITBUF.
           INITIALIZE CLI-CLI-CODICE4-SPLITBUF
           MOVE CLI-CODICE-FISCALE(1:16) TO 
           CLI-CLI-CODICE4-SPLITBUF(1:16)
           MOVE CLI-CODICE-G2(1:8) TO CLI-CLI-CODICE4-SPLITBUF(17:8)
           .

       DataSet1-CLI-INITSTART.
           IF DataSet1-CLI-KEY-Asc
              MOVE Low-Value TO CLI-CODICE-G2
           ELSE
              MOVE High-Value TO CLI-CODICE-G2
           END-IF
           .

       DataSet1-CLI-INITEND.
           IF DataSet1-CLI-KEY-Asc
              MOVE High-Value TO CLI-CODICE-G2
           ELSE
              MOVE Low-Value TO CLI-CODICE-G2
           END-IF
           .

      * CLI
       DataSet1-CLI-START.
           IF DataSet1-CLI-KEY-Asc
              START CLI KEY >= CLI-CODICE-G2
           ELSE
              START CLI KEY <= CLI-CODICE-G2
           END-IF
           .

       DataSet1-CLI-START-NOTGREATER.
           IF DataSet1-CLI-KEY-Asc
              START CLI KEY <= CLI-CODICE-G2
           ELSE
              START CLI KEY >= CLI-CODICE-G2
           END-IF
           .

       DataSet1-CLI-START-GREATER.
           IF DataSet1-CLI-KEY-Asc
              START CLI KEY > CLI-CODICE-G2
           ELSE
              START CLI KEY < CLI-CODICE-G2
           END-IF
           .

       DataSet1-CLI-START-LESS.
           IF DataSet1-CLI-KEY-Asc
              START CLI KEY < CLI-CODICE-G2
           ELSE
              START CLI KEY > CLI-CODICE-G2
           END-IF
           .

       DataSet1-CLI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-CLI-LOCK
              READ CLI WITH LOCK 
              KEY CLI-CODICE-G2
           ELSE
              READ CLI WITH NO LOCK 
              KEY CLI-CODICE-G2
           END-IF
           PERFORM CLI-CLI-CODICE1-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE2-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE3-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE4-MERGE-SPLITBUF
           MOVE STATUS-CLI TO TOTEM-ERR-STAT 
           MOVE "CLI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-CLI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-CLI-KEY-Asc
              IF DataSet1-CLI-LOCK
                 READ CLI NEXT WITH LOCK
              ELSE
                 READ CLI NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-CLI-LOCK
                 READ CLI PREVIOUS WITH LOCK
              ELSE
                 READ CLI PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM CLI-CLI-CODICE1-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE2-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE3-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE4-MERGE-SPLITBUF
           MOVE STATUS-CLI TO TOTEM-ERR-STAT
           MOVE "CLI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-CLI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-CLI-KEY-Asc
              IF DataSet1-CLI-LOCK
                 READ CLI PREVIOUS WITH LOCK
              ELSE
                 READ CLI PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-CLI-LOCK
                 READ CLI NEXT WITH LOCK
              ELSE
                 READ CLI NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM CLI-CLI-CODICE1-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE2-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE3-MERGE-SPLITBUF
           PERFORM CLI-CLI-CODICE4-MERGE-SPLITBUF
           MOVE STATUS-CLI TO TOTEM-ERR-STAT
           MOVE "CLI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-CLI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-CLI TO TOTEM-ERR-STAT
           MOVE "CLI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-CLI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-CLI TO TOTEM-ERR-STAT
           MOVE "CLI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-CLI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-CLI TO TOTEM-ERR-STAT
           MOVE "CLI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:CLI, AfterDelete>
      * <TOTEM:END>
           .

       tgrupgdo-gdo-k-g2-MERGE-SPLITBUF.
           INITIALIZE tgrupgdo-gdo-k-g2-SPLITBUF
           MOVE gdo-codice-G2 OF tgrupgdo(1:3) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(1:3)
           MOVE gdo-chiave OF tgrupgdo(1:5) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(4:5)
           .

       DataSet1-tgrupgdo-INITSTART.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-INITEND.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

      * tgrupgdo
       DataSet1-tgrupgdo-START.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-NOTGREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-GREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-LESS.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-LOCK
              READ tgrupgdo WITH LOCK 
              KEY gdo-chiave OF tgrupgdo
           ELSE
              READ tgrupgdo WITH NO LOCK 
              KEY gdo-chiave OF tgrupgdo
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT 
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-INITSTART.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE Low-Value TO tcl-chiave
           ELSE
              MOVE High-Value TO tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-INITEND.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE High-Value TO tcl-chiave
           ELSE
              MOVE Low-Value TO tcl-chiave
           END-IF
           .

      * ttipocli
       DataSet1-ttipocli-START.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY >= tcl-chiave
           ELSE
              START ttipocli KEY <= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-NOTGREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY <= tcl-chiave
           ELSE
              START ttipocli KEY >= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-GREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY > tcl-chiave
           ELSE
              START ttipocli KEY < tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-LESS.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY < tcl-chiave
           ELSE
              START ttipocli KEY > tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ttipocli-LOCK
              READ ttipocli WITH LOCK 
              KEY tcl-chiave
           ELSE
              READ ttipocli WITH NO LOCK 
              KEY tcl-chiave
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT 
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterDelete>
      * <TOTEM:END>
           .

       PAR-PAR-CODICE1-MERGE-SPLITBUF.
           INITIALIZE PAR-PAR-CODICE1-SPLITBUF
           MOVE PAR-CODICE-PNR(1:13) TO PAR-PAR-CODICE1-SPLITBUF(1:13)
           MOVE PAR-CODICE(1:13) TO PAR-PAR-CODICE1-SPLITBUF(14:13)
           .

       PAR-PAR-CODICE2-MERGE-SPLITBUF.
           INITIALIZE PAR-PAR-CODICE2-SPLITBUF
           MOVE PAR-CODICE-PAS(1:13) TO PAR-PAR-CODICE2-SPLITBUF(1:13)
           MOVE PAR-CODICE(1:13) TO PAR-PAR-CODICE2-SPLITBUF(14:13)
           .

       DataSet1-PAR-INITSTART.
           IF DataSet1-PAR-KEY-Asc
              MOVE Low-Value TO PAR-CODICE
           ELSE
              MOVE High-Value TO PAR-CODICE
           END-IF
           .

       DataSet1-PAR-INITEND.
           IF DataSet1-PAR-KEY-Asc
              MOVE High-Value TO PAR-CODICE
           ELSE
              MOVE Low-Value TO PAR-CODICE
           END-IF
           .

      * PAR
       DataSet1-PAR-START.
           IF DataSet1-PAR-KEY-Asc
              START PAR KEY >= PAR-CODICE
           ELSE
              START PAR KEY <= PAR-CODICE
           END-IF
           .

       DataSet1-PAR-START-NOTGREATER.
           IF DataSet1-PAR-KEY-Asc
              START PAR KEY <= PAR-CODICE
           ELSE
              START PAR KEY >= PAR-CODICE
           END-IF
           .

       DataSet1-PAR-START-GREATER.
           IF DataSet1-PAR-KEY-Asc
              START PAR KEY > PAR-CODICE
           ELSE
              START PAR KEY < PAR-CODICE
           END-IF
           .

       DataSet1-PAR-START-LESS.
           IF DataSet1-PAR-KEY-Asc
              START PAR KEY < PAR-CODICE
           ELSE
              START PAR KEY > PAR-CODICE
           END-IF
           .

       DataSet1-PAR-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PAR-LOCK
              READ PAR WITH LOCK 
              KEY PAR-CODICE
           ELSE
              READ PAR WITH NO LOCK 
              KEY PAR-CODICE
           END-IF
           PERFORM PAR-PAR-CODICE1-MERGE-SPLITBUF
           PERFORM PAR-PAR-CODICE2-MERGE-SPLITBUF
           MOVE STATUS-PAR TO TOTEM-ERR-STAT 
           MOVE "PAR" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PAR-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PAR-KEY-Asc
              IF DataSet1-PAR-LOCK
                 READ PAR NEXT WITH LOCK
              ELSE
                 READ PAR NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PAR-LOCK
                 READ PAR PREVIOUS WITH LOCK
              ELSE
                 READ PAR PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM PAR-PAR-CODICE1-MERGE-SPLITBUF
           PERFORM PAR-PAR-CODICE2-MERGE-SPLITBUF
           MOVE STATUS-PAR TO TOTEM-ERR-STAT
           MOVE "PAR" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PAR-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PAR-KEY-Asc
              IF DataSet1-PAR-LOCK
                 READ PAR PREVIOUS WITH LOCK
              ELSE
                 READ PAR PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PAR-LOCK
                 READ PAR NEXT WITH LOCK
              ELSE
                 READ PAR NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM PAR-PAR-CODICE1-MERGE-SPLITBUF
           PERFORM PAR-PAR-CODICE2-MERGE-SPLITBUF
           MOVE STATUS-PAR TO TOTEM-ERR-STAT
           MOVE "PAR" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PAR-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeWrite>
      * <TOTEM:END>
           WRITE record-par OF PAR.
           MOVE STATUS-PAR TO TOTEM-ERR-STAT
           MOVE "PAR" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PAR-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeRewrite>
      * <TOTEM:END>
           REWRITE record-par OF PAR.
           MOVE STATUS-PAR TO TOTEM-ERR-STAT
           MOVE "PAR" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PAR-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, BeforeDelete>
      * <TOTEM:END>
           DELETE PAR.
           MOVE STATUS-PAR TO TOTEM-ERR-STAT
           MOVE "PAR" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAR, AfterDelete>
      * <TOTEM:END>
           .

       PAS-PAS-CODICE1-MERGE-SPLITBUF.
           INITIALIZE PAS-PAS-CODICE1-SPLITBUF
           MOVE PAS-DATA-SCADENZA(1:8) TO PAS-PAS-CODICE1-SPLITBUF(1:8)
           MOVE PAS-CODICE(1:13) TO PAS-PAS-CODICE1-SPLITBUF(9:13)
           .

       PAS-PAS-CODICE2-MERGE-SPLITBUF.
           INITIALIZE PAS-PAS-CODICE2-SPLITBUF
           MOVE PAS-CODICE-CONTO(1:9) TO PAS-PAS-CODICE2-SPLITBUF(1:9)
           MOVE PAS-DATA-SCADENZA(1:8) TO PAS-PAS-CODICE2-SPLITBUF(10:8)
           MOVE PAS-CODICE(1:13) TO PAS-PAS-CODICE2-SPLITBUF(18:13)
           .

       PAS-PAS-CODICE3-MERGE-SPLITBUF.
           INITIALIZE PAS-PAS-CODICE3-SPLITBUF
           MOVE PAS-CODICE-CONTO(1:9) TO PAS-PAS-CODICE3-SPLITBUF(1:9)
           MOVE PAS-DATA-RIFERIMENTO(1:8) TO 
           PAS-PAS-CODICE3-SPLITBUF(10:8)
           MOVE PAS-NUMERO-RIFERIMENTO(1:12) TO 
           PAS-PAS-CODICE3-SPLITBUF(18:12)
           MOVE PAS-CODICE(1:13) TO PAS-PAS-CODICE3-SPLITBUF(30:13)
           .

       PAS-PAS-CODICE4-MERGE-SPLITBUF.
           INITIALIZE PAS-PAS-CODICE4-SPLITBUF
           MOVE PAS-CODICE-CONTO(1:9) TO PAS-PAS-CODICE4-SPLITBUF(1:9)
           MOVE PAS-SITUAZIONE(1:1) TO PAS-PAS-CODICE4-SPLITBUF(10:1)
           MOVE PAS-DATA-SCADENZA(1:8) TO PAS-PAS-CODICE4-SPLITBUF(11:8)
           MOVE PAS-CODICE(1:13) TO PAS-PAS-CODICE4-SPLITBUF(19:13)
           .

       DataSet1-PAS-INITSTART.
           IF DataSet1-PAS-KEY-Asc
              MOVE Low-Value TO PAS-CODICE
           ELSE
              MOVE High-Value TO PAS-CODICE
           END-IF
           .

       DataSet1-PAS-INITEND.
           IF DataSet1-PAS-KEY-Asc
              MOVE High-Value TO PAS-CODICE
           ELSE
              MOVE Low-Value TO PAS-CODICE
           END-IF
           .

      * PAS
       DataSet1-PAS-START.
           IF DataSet1-PAS-KEY-Asc
              START PAS KEY >= PAS-CODICE
           ELSE
              START PAS KEY <= PAS-CODICE
           END-IF
           .

       DataSet1-PAS-START-NOTGREATER.
           IF DataSet1-PAS-KEY-Asc
              START PAS KEY <= PAS-CODICE
           ELSE
              START PAS KEY >= PAS-CODICE
           END-IF
           .

       DataSet1-PAS-START-GREATER.
           IF DataSet1-PAS-KEY-Asc
              START PAS KEY > PAS-CODICE
           ELSE
              START PAS KEY < PAS-CODICE
           END-IF
           .

       DataSet1-PAS-START-LESS.
           IF DataSet1-PAS-KEY-Asc
              START PAS KEY < PAS-CODICE
           ELSE
              START PAS KEY > PAS-CODICE
           END-IF
           .

       DataSet1-PAS-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PAS-LOCK
              READ PAS WITH LOCK 
              KEY PAS-CODICE
           ELSE
              READ PAS WITH NO LOCK 
              KEY PAS-CODICE
           END-IF
           PERFORM PAS-PAS-CODICE1-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE2-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE3-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE4-MERGE-SPLITBUF
           MOVE STATUS-PAS TO TOTEM-ERR-STAT 
           MOVE "PAS" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PAS-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PAS-KEY-Asc
              IF DataSet1-PAS-LOCK
                 READ PAS NEXT WITH LOCK
              ELSE
                 READ PAS NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PAS-LOCK
                 READ PAS PREVIOUS WITH LOCK
              ELSE
                 READ PAS PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM PAS-PAS-CODICE1-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE2-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE3-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE4-MERGE-SPLITBUF
           MOVE STATUS-PAS TO TOTEM-ERR-STAT
           MOVE "PAS" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PAS-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PAS-KEY-Asc
              IF DataSet1-PAS-LOCK
                 READ PAS PREVIOUS WITH LOCK
              ELSE
                 READ PAS PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PAS-LOCK
                 READ PAS NEXT WITH LOCK
              ELSE
                 READ PAS NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM PAS-PAS-CODICE1-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE2-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE3-MERGE-SPLITBUF
           PERFORM PAS-PAS-CODICE4-MERGE-SPLITBUF
           MOVE STATUS-PAS TO TOTEM-ERR-STAT
           MOVE "PAS" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PAS-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeWrite>
      * <TOTEM:END>
           WRITE RECORD-PAS OF PAS.
           MOVE STATUS-PAS TO TOTEM-ERR-STAT
           MOVE "PAS" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PAS-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeRewrite>
      * <TOTEM:END>
           REWRITE RECORD-PAS OF PAS.
           MOVE STATUS-PAS TO TOTEM-ERR-STAT
           MOVE "PAS" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PAS-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, BeforeDelete>
      * <TOTEM:END>
           DELETE PAS.
           MOVE STATUS-PAS TO TOTEM-ERR-STAT
           MOVE "PAS" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAS, AfterDelete>
      * <TOTEM:END>
           .

       PAT-PAT-CODICE1-MERGE-SPLITBUF.
           INITIALIZE PAT-PAT-CODICE1-SPLITBUF
           MOVE PAT-CODICE-CONTO(1:9) TO PAT-PAT-CODICE1-SPLITBUF(1:9)
           MOVE PAT-DATA-RIFERIMENTO(1:8) TO 
           PAT-PAT-CODICE1-SPLITBUF(10:8)
           MOVE PAT-NUMERO-RIFERIMENTO(1:12) TO 
           PAT-PAT-CODICE1-SPLITBUF(18:12)
           MOVE PAT-CODICE(1:8) TO PAT-PAT-CODICE1-SPLITBUF(30:8)
           .

       DataSet1-PAT-INITSTART.
           IF DataSet1-PAT-KEY-Asc
              MOVE Low-Value TO PAT-CODICE
           ELSE
              MOVE High-Value TO PAT-CODICE
           END-IF
           .

       DataSet1-PAT-INITEND.
           IF DataSet1-PAT-KEY-Asc
              MOVE High-Value TO PAT-CODICE
           ELSE
              MOVE Low-Value TO PAT-CODICE
           END-IF
           .

      * PAT
       DataSet1-PAT-START.
           IF DataSet1-PAT-KEY-Asc
              START PAT KEY >= PAT-CODICE
           ELSE
              START PAT KEY <= PAT-CODICE
           END-IF
           .

       DataSet1-PAT-START-NOTGREATER.
           IF DataSet1-PAT-KEY-Asc
              START PAT KEY <= PAT-CODICE
           ELSE
              START PAT KEY >= PAT-CODICE
           END-IF
           .

       DataSet1-PAT-START-GREATER.
           IF DataSet1-PAT-KEY-Asc
              START PAT KEY > PAT-CODICE
           ELSE
              START PAT KEY < PAT-CODICE
           END-IF
           .

       DataSet1-PAT-START-LESS.
           IF DataSet1-PAT-KEY-Asc
              START PAT KEY < PAT-CODICE
           ELSE
              START PAT KEY > PAT-CODICE
           END-IF
           .

       DataSet1-PAT-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PAT-LOCK
              READ PAT WITH LOCK 
              KEY PAT-CODICE
           ELSE
              READ PAT WITH NO LOCK 
              KEY PAT-CODICE
           END-IF
           PERFORM PAT-PAT-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PAT TO TOTEM-ERR-STAT 
           MOVE "PAT" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PAT-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PAT-KEY-Asc
              IF DataSet1-PAT-LOCK
                 READ PAT NEXT WITH LOCK
              ELSE
                 READ PAT NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PAT-LOCK
                 READ PAT PREVIOUS WITH LOCK
              ELSE
                 READ PAT PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM PAT-PAT-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PAT TO TOTEM-ERR-STAT
           MOVE "PAT" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PAT-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PAT-KEY-Asc
              IF DataSet1-PAT-LOCK
                 READ PAT PREVIOUS WITH LOCK
              ELSE
                 READ PAT PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PAT-LOCK
                 READ PAT NEXT WITH LOCK
              ELSE
                 READ PAT NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM PAT-PAT-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PAT TO TOTEM-ERR-STAT
           MOVE "PAT" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PAT-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeWrite>
      * <TOTEM:END>
           WRITE RECORD-PAT OF PAT.
           MOVE STATUS-PAT TO TOTEM-ERR-STAT
           MOVE "PAT" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PAT-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeRewrite>
      * <TOTEM:END>
           REWRITE RECORD-PAT OF PAT.
           MOVE STATUS-PAT TO TOTEM-ERR-STAT
           MOVE "PAT" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PAT-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, BeforeDelete>
      * <TOTEM:END>
           DELETE PAT.
           MOVE STATUS-PAT TO TOTEM-ERR-STAT
           MOVE "PAT" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PAT, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-PNI-INITSTART.
           IF DataSet1-PNI-KEY-Asc
              MOVE Low-Value TO PNI-CODICE
           ELSE
              MOVE High-Value TO PNI-CODICE
           END-IF
           .

       DataSet1-PNI-INITEND.
           IF DataSet1-PNI-KEY-Asc
              MOVE High-Value TO PNI-CODICE
           ELSE
              MOVE Low-Value TO PNI-CODICE
           END-IF
           .

      * PNI
       DataSet1-PNI-START.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY >= PNI-CODICE
           ELSE
              START PNI KEY <= PNI-CODICE
           END-IF
           .

       DataSet1-PNI-START-NOTGREATER.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY <= PNI-CODICE
           ELSE
              START PNI KEY >= PNI-CODICE
           END-IF
           .

       DataSet1-PNI-START-GREATER.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY > PNI-CODICE
           ELSE
              START PNI KEY < PNI-CODICE
           END-IF
           .

       DataSet1-PNI-START-LESS.
           IF DataSet1-PNI-KEY-Asc
              START PNI KEY < PNI-CODICE
           ELSE
              START PNI KEY > PNI-CODICE
           END-IF
           .

       DataSet1-PNI-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PNI-LOCK
              READ PNI WITH LOCK 
              KEY PNI-CODICE
           ELSE
              READ PNI WITH NO LOCK 
              KEY PNI-CODICE
           END-IF
           MOVE STATUS-PNI TO TOTEM-ERR-STAT 
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PNI-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PNI-KEY-Asc
              IF DataSet1-PNI-LOCK
                 READ PNI NEXT WITH LOCK
              ELSE
                 READ PNI NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNI-LOCK
                 READ PNI PREVIOUS WITH LOCK
              ELSE
                 READ PNI PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PNI-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PNI-KEY-Asc
              IF DataSet1-PNI-LOCK
                 READ PNI PREVIOUS WITH LOCK
              ELSE
                 READ PNI PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNI-LOCK
                 READ PNI NEXT WITH LOCK
              ELSE
                 READ PNI NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PNI-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeWrite>
      * <TOTEM:END>
           WRITE record-pni OF PNI.
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PNI-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeRewrite>
      * <TOTEM:END>
           REWRITE record-pni OF PNI.
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PNI-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, BeforeDelete>
      * <TOTEM:END>
           DELETE PNI.
           MOVE STATUS-PNI TO TOTEM-ERR-STAT
           MOVE "PNI" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNI, AfterDelete>
      * <TOTEM:END>
           .

       PNR-PNR-CODICE1-MERGE-SPLITBUF.
           INITIALIZE PNR-PNR-CODICE1-SPLITBUF
           MOVE PNR-CODICE-CONTO(1:9) TO PNR-PNR-CODICE1-SPLITBUF(1:9)
           MOVE PNR-ESERCIZIO(1:2) TO PNR-PNR-CODICE1-SPLITBUF(10:2)
           MOVE PNR-DATA-REGISTRAZIONE(1:8) TO 
           PNR-PNR-CODICE1-SPLITBUF(12:8)
           MOVE PNR-CODICE(1:13) TO PNR-PNR-CODICE1-SPLITBUF(20:13)
           .

       DataSet1-PNR-INITSTART.
           IF DataSet1-PNR-KEY-Asc
              MOVE Low-Value TO PNR-CODICE
           ELSE
              MOVE High-Value TO PNR-CODICE
           END-IF
           .

       DataSet1-PNR-INITEND.
           IF DataSet1-PNR-KEY-Asc
              MOVE High-Value TO PNR-CODICE
           ELSE
              MOVE Low-Value TO PNR-CODICE
           END-IF
           .

      * PNR
       DataSet1-PNR-START.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY >= PNR-CODICE
           ELSE
              START PNR KEY <= PNR-CODICE
           END-IF
           .

       DataSet1-PNR-START-NOTGREATER.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY <= PNR-CODICE
           ELSE
              START PNR KEY >= PNR-CODICE
           END-IF
           .

       DataSet1-PNR-START-GREATER.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY > PNR-CODICE
           ELSE
              START PNR KEY < PNR-CODICE
           END-IF
           .

       DataSet1-PNR-START-LESS.
           IF DataSet1-PNR-KEY-Asc
              START PNR KEY < PNR-CODICE
           ELSE
              START PNR KEY > PNR-CODICE
           END-IF
           .

       DataSet1-PNR-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PNR-LOCK
              READ PNR WITH LOCK 
              KEY PNR-CODICE
           ELSE
              READ PNR WITH NO LOCK 
              KEY PNR-CODICE
           END-IF
           PERFORM PNR-PNR-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PNR TO TOTEM-ERR-STAT 
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PNR-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PNR-KEY-Asc
              IF DataSet1-PNR-LOCK
                 READ PNR NEXT WITH LOCK
              ELSE
                 READ PNR NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNR-LOCK
                 READ PNR PREVIOUS WITH LOCK
              ELSE
                 READ PNR PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM PNR-PNR-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PNR-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PNR-KEY-Asc
              IF DataSet1-PNR-LOCK
                 READ PNR PREVIOUS WITH LOCK
              ELSE
                 READ PNR PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNR-LOCK
                 READ PNR NEXT WITH LOCK
              ELSE
                 READ PNR NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM PNR-PNR-CODICE1-MERGE-SPLITBUF
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PNR-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeWrite>
      * <TOTEM:END>
           WRITE RECORD-PNR OF PNR.
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PNR-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeRewrite>
      * <TOTEM:END>
           REWRITE RECORD-PNR OF PNR.
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PNR-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, BeforeDelete>
      * <TOTEM:END>
           DELETE PNR.
           MOVE STATUS-PNR TO TOTEM-ERR-STAT
           MOVE "PNR" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNR, AfterDelete>
      * <TOTEM:END>
           .

       PNT-PNT-CODICE1-MERGE-SPLITBUF.
           INITIALIZE PNT-PNT-CODICE1-SPLITBUF
           MOVE PNT-DATA-REGISTRAZIONE(1:8) TO 
           PNT-PNT-CODICE1-SPLITBUF(1:8)
           MOVE PNT-CODICE(1:8) TO PNT-PNT-CODICE1-SPLITBUF(9:8)
           .

       PNT-PNT-CODICE2-MERGE-SPLITBUF.
           INITIALIZE PNT-PNT-CODICE2-SPLITBUF
           MOVE PNT-PROTOCOLLO(1:10) TO PNT-PNT-CODICE2-SPLITBUF(1:10)
           MOVE PNT-DATA-REGISTRAZIONE(1:8) TO 
           PNT-PNT-CODICE2-SPLITBUF(11:8)
           MOVE PNT-CODICE(1:8) TO PNT-PNT-CODICE2-SPLITBUF(19:8)
           .

       PNT-PNT-CODICE3-MERGE-SPLITBUF.
           INITIALIZE PNT-PNT-CODICE3-SPLITBUF
           MOVE PNT-DOCUMENTO(1:12) TO PNT-PNT-CODICE3-SPLITBUF(1:12)
           MOVE PNT-DATA-DOCUMENTO(1:8) TO 
           PNT-PNT-CODICE3-SPLITBUF(13:8)
           MOVE PNT-CODICE(1:8) TO PNT-PNT-CODICE3-SPLITBUF(21:8)
           .

       DataSet1-PNT-INITSTART.
           IF DataSet1-PNT-KEY-Asc
              MOVE Low-Value TO PNT-CODICE
           ELSE
              MOVE High-Value TO PNT-CODICE
           END-IF
           .

       DataSet1-PNT-INITEND.
           IF DataSet1-PNT-KEY-Asc
              MOVE High-Value TO PNT-CODICE
           ELSE
              MOVE Low-Value TO PNT-CODICE
           END-IF
           .

      * PNT
       DataSet1-PNT-START.
           IF DataSet1-PNT-KEY-Asc
              START PNT KEY >= PNT-CODICE
           ELSE
              START PNT KEY <= PNT-CODICE
           END-IF
           .

       DataSet1-PNT-START-NOTGREATER.
           IF DataSet1-PNT-KEY-Asc
              START PNT KEY <= PNT-CODICE
           ELSE
              START PNT KEY >= PNT-CODICE
           END-IF
           .

       DataSet1-PNT-START-GREATER.
           IF DataSet1-PNT-KEY-Asc
              START PNT KEY > PNT-CODICE
           ELSE
              START PNT KEY < PNT-CODICE
           END-IF
           .

       DataSet1-PNT-START-LESS.
           IF DataSet1-PNT-KEY-Asc
              START PNT KEY < PNT-CODICE
           ELSE
              START PNT KEY > PNT-CODICE
           END-IF
           .

       DataSet1-PNT-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-PNT-LOCK
              READ PNT WITH LOCK 
              KEY PNT-CODICE
           ELSE
              READ PNT WITH NO LOCK 
              KEY PNT-CODICE
           END-IF
           PERFORM PNT-PNT-CODICE1-MERGE-SPLITBUF
           PERFORM PNT-PNT-CODICE2-MERGE-SPLITBUF
           PERFORM PNT-PNT-CODICE3-MERGE-SPLITBUF
           MOVE STATUS-PNT TO TOTEM-ERR-STAT 
           MOVE "PNT" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-PNT-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-PNT-KEY-Asc
              IF DataSet1-PNT-LOCK
                 READ PNT NEXT WITH LOCK
              ELSE
                 READ PNT NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNT-LOCK
                 READ PNT PREVIOUS WITH LOCK
              ELSE
                 READ PNT PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM PNT-PNT-CODICE1-MERGE-SPLITBUF
           PERFORM PNT-PNT-CODICE2-MERGE-SPLITBUF
           PERFORM PNT-PNT-CODICE3-MERGE-SPLITBUF
           MOVE STATUS-PNT TO TOTEM-ERR-STAT
           MOVE "PNT" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-PNT-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-PNT-KEY-Asc
              IF DataSet1-PNT-LOCK
                 READ PNT PREVIOUS WITH LOCK
              ELSE
                 READ PNT PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-PNT-LOCK
                 READ PNT NEXT WITH LOCK
              ELSE
                 READ PNT NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM PNT-PNT-CODICE1-MERGE-SPLITBUF
           PERFORM PNT-PNT-CODICE2-MERGE-SPLITBUF
           PERFORM PNT-PNT-CODICE3-MERGE-SPLITBUF
           MOVE STATUS-PNT TO TOTEM-ERR-STAT
           MOVE "PNT" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-PNT-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeWrite>
      * <TOTEM:END>
           WRITE RECORD-PNT OF PNT.
           MOVE STATUS-PNT TO TOTEM-ERR-STAT
           MOVE "PNT" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-PNT-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeRewrite>
      * <TOTEM:END>
           REWRITE RECORD-PNT OF PNT.
           MOVE STATUS-PNT TO TOTEM-ERR-STAT
           MOVE "PNT" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-PNT-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, BeforeDelete>
      * <TOTEM:END>
           DELETE PNT.
           MOVE STATUS-PNT TO TOTEM-ERR-STAT
           MOVE "PNT" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:PNT, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lineseq-LOCK
              READ lineseq WITH LOCK 
           ELSE
              READ lineseq WITH NO LOCK 
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT 
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lineseq-KEY-Asc
              IF DataSet1-lineseq-LOCK
                 READ lineseq NEXT WITH LOCK
              ELSE
                 READ lineseq NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       TBLVA-TBLVA-CODICE-01-MERGE-SPLITBUF.
           INITIALIZE TBLVA-TBLVA-CODICE-01-SPLITBUF
           MOVE TBLVA-CODICE1(1:2) TO 
           TBLVA-TBLVA-CODICE-01-SPLITBUF(1:2)
           MOVE TBLVA-DESCRIZIONE1(1:30) TO 
           TBLVA-TBLVA-CODICE-01-SPLITBUF(3:30)
           MOVE TBLVA-CODICE2(1:20) TO 
           TBLVA-TBLVA-CODICE-01-SPLITBUF(33:20)
           .

       DataSet1-TBLVA-INITSTART.
           IF DataSet1-TBLVA-KEY-Asc
              MOVE Low-Value TO TBLVA-CODICE
           ELSE
              MOVE High-Value TO TBLVA-CODICE
           END-IF
           .

       DataSet1-TBLVA-INITEND.
           IF DataSet1-TBLVA-KEY-Asc
              MOVE High-Value TO TBLVA-CODICE
           ELSE
              MOVE Low-Value TO TBLVA-CODICE
           END-IF
           .

      * TBLVA
       DataSet1-TBLVA-START.
           IF DataSet1-TBLVA-KEY-Asc
              START TBLVA KEY >= TBLVA-CODICE
           ELSE
              START TBLVA KEY <= TBLVA-CODICE
           END-IF
           .

       DataSet1-TBLVA-START-NOTGREATER.
           IF DataSet1-TBLVA-KEY-Asc
              START TBLVA KEY <= TBLVA-CODICE
           ELSE
              START TBLVA KEY >= TBLVA-CODICE
           END-IF
           .

       DataSet1-TBLVA-START-GREATER.
           IF DataSet1-TBLVA-KEY-Asc
              START TBLVA KEY > TBLVA-CODICE
           ELSE
              START TBLVA KEY < TBLVA-CODICE
           END-IF
           .

       DataSet1-TBLVA-START-LESS.
           IF DataSet1-TBLVA-KEY-Asc
              START TBLVA KEY < TBLVA-CODICE
           ELSE
              START TBLVA KEY > TBLVA-CODICE
           END-IF
           .

       DataSet1-TBLVA-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-TBLVA-LOCK
              READ TBLVA WITH LOCK 
              KEY TBLVA-CODICE
           ELSE
              READ TBLVA WITH NO LOCK 
              KEY TBLVA-CODICE
           END-IF
           PERFORM TBLVA-TBLVA-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLVA TO TOTEM-ERR-STAT 
           MOVE "TBLVA" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-TBLVA-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-TBLVA-KEY-Asc
              IF DataSet1-TBLVA-LOCK
                 READ TBLVA NEXT WITH LOCK
              ELSE
                 READ TBLVA NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-TBLVA-LOCK
                 READ TBLVA PREVIOUS WITH LOCK
              ELSE
                 READ TBLVA PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM TBLVA-TBLVA-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLVA TO TOTEM-ERR-STAT
           MOVE "TBLVA" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-TBLVA-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-TBLVA-KEY-Asc
              IF DataSet1-TBLVA-LOCK
                 READ TBLVA PREVIOUS WITH LOCK
              ELSE
                 READ TBLVA PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-TBLVA-LOCK
                 READ TBLVA NEXT WITH LOCK
              ELSE
                 READ TBLVA NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM TBLVA-TBLVA-CODICE-01-MERGE-SPLITBUF
           MOVE STATUS-TBLVA TO TOTEM-ERR-STAT
           MOVE "TBLVA" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-TBLVA-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-TBLVA TO TOTEM-ERR-STAT
           MOVE "TBLVA" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-TBLVA-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-TBLVA TO TOTEM-ERR-STAT
           MOVE "TBLVA" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-TBLVA-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-TBLVA TO TOTEM-ERR-STAT
           MOVE "TBLVA" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:TBLVA, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-multigest-INITSTART.
           IF DataSet1-multigest-KEY-Asc
              MOVE Low-Value TO mul-chiave
           ELSE
              MOVE High-Value TO mul-chiave
           END-IF
           .

       DataSet1-multigest-INITEND.
           IF DataSet1-multigest-KEY-Asc
              MOVE High-Value TO mul-chiave
           ELSE
              MOVE Low-Value TO mul-chiave
           END-IF
           .

      * multigest
       DataSet1-multigest-START.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY >= mul-chiave
           ELSE
              START multigest KEY <= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-NOTGREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY <= mul-chiave
           ELSE
              START multigest KEY >= mul-chiave
           END-IF
           .

       DataSet1-multigest-START-GREATER.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY > mul-chiave
           ELSE
              START multigest KEY < mul-chiave
           END-IF
           .

       DataSet1-multigest-START-LESS.
           IF DataSet1-multigest-KEY-Asc
              START multigest KEY < mul-chiave
           ELSE
              START multigest KEY > mul-chiave
           END-IF
           .

       DataSet1-multigest-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-multigest-LOCK
              READ multigest WITH LOCK 
              KEY mul-chiave
           ELSE
              READ multigest WITH NO LOCK 
              KEY mul-chiave
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT 
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-multigest-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-multigest-KEY-Asc
              IF DataSet1-multigest-LOCK
                 READ multigest PREVIOUS WITH LOCK
              ELSE
                 READ multigest PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-multigest-LOCK
                 READ multigest NEXT WITH LOCK
              ELSE
                 READ multigest NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeWrite>
      * <TOTEM:END>
           WRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeRewrite>
      * <TOTEM:END>
           REWRITE mul-rec OF multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-multigest-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, BeforeDelete>
      * <TOTEM:END>
           DELETE multigest.
           MOVE STATUS-multigest TO TOTEM-ERR-STAT
           MOVE "multigest" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:multigest, AfterDelete>
      * <TOTEM:END>
           .

       GDVR-DVR-CODICE1-MERGE-SPLITBUF.
           INITIALIZE GDVR-DVR-CODICE1-SPLITBUF
           MOVE DVR-DATA-DOCUMENTO(1:8) TO 
           GDVR-DVR-CODICE1-SPLITBUF(1:8)
           MOVE DVR-DOCUMENTO(1:8) TO GDVR-DVR-CODICE1-SPLITBUF(9:8)
           MOVE DVR-CODICE(1:13) TO GDVR-DVR-CODICE1-SPLITBUF(17:13)
           .

       GDVR-DVR-CODICE2-MERGE-SPLITBUF.
           INITIALIZE GDVR-DVR-CODICE2-SPLITBUF
           MOVE DVR-CODICE-CONTO(1:9) TO GDVR-DVR-CODICE2-SPLITBUF(1:9)
           MOVE DVR-DATA-DOCUMENTO(1:8) TO 
           GDVR-DVR-CODICE2-SPLITBUF(10:8)
           MOVE DVR-CODICE(1:13) TO GDVR-DVR-CODICE2-SPLITBUF(18:13)
           .

       GDVR-DVR-CODICE3-MERGE-SPLITBUF.
           INITIALIZE GDVR-DVR-CODICE3-SPLITBUF
           MOVE DVR-CODICE-ART(1:15) TO GDVR-DVR-CODICE3-SPLITBUF(1:15)
           MOVE DVR-DATA-DOCUMENTO(1:8) TO 
           GDVR-DVR-CODICE3-SPLITBUF(16:8)
           MOVE DVR-CODICE(1:13) TO GDVR-DVR-CODICE3-SPLITBUF(24:13)
           .

       GDVR-DVR-CODICE4-MERGE-SPLITBUF.
           INITIALIZE GDVR-DVR-CODICE4-SPLITBUF
           MOVE DVR-CODICE-ART(1:15) TO GDVR-DVR-CODICE4-SPLITBUF(1:15)
           MOVE DVR-CODICE-INTESTAZIONE(1:9) TO 
           GDVR-DVR-CODICE4-SPLITBUF(16:9)
           MOVE DVR-DATA-DOCUMENTO(1:8) TO 
           GDVR-DVR-CODICE4-SPLITBUF(25:8)
           MOVE DVR-CODICE(1:13) TO GDVR-DVR-CODICE4-SPLITBUF(33:13)
           .

       DataSet1-GDVR-INITSTART.
           IF DataSet1-GDVR-KEY-Asc
              MOVE Low-Value TO DVR-CODICE
           ELSE
              MOVE High-Value TO DVR-CODICE
           END-IF
           .

       DataSet1-GDVR-INITEND.
           IF DataSet1-GDVR-KEY-Asc
              MOVE High-Value TO DVR-CODICE
           ELSE
              MOVE Low-Value TO DVR-CODICE
           END-IF
           .

      * GDVR
       DataSet1-GDVR-START.
           IF DataSet1-GDVR-KEY-Asc
              START GDVR KEY >= DVR-CODICE
           ELSE
              START GDVR KEY <= DVR-CODICE
           END-IF
           .

       DataSet1-GDVR-START-NOTGREATER.
           IF DataSet1-GDVR-KEY-Asc
              START GDVR KEY <= DVR-CODICE
           ELSE
              START GDVR KEY >= DVR-CODICE
           END-IF
           .

       DataSet1-GDVR-START-GREATER.
           IF DataSet1-GDVR-KEY-Asc
              START GDVR KEY > DVR-CODICE
           ELSE
              START GDVR KEY < DVR-CODICE
           END-IF
           .

       DataSet1-GDVR-START-LESS.
           IF DataSet1-GDVR-KEY-Asc
              START GDVR KEY < DVR-CODICE
           ELSE
              START GDVR KEY > DVR-CODICE
           END-IF
           .

       DataSet1-GDVR-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-GDVR-LOCK
              READ GDVR WITH LOCK 
              KEY DVR-CODICE
           ELSE
              READ GDVR WITH NO LOCK 
              KEY DVR-CODICE
           END-IF
           PERFORM GDVR-DVR-CODICE1-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE2-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE3-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE4-MERGE-SPLITBUF
           MOVE status-gdvr TO TOTEM-ERR-STAT 
           MOVE "GDVR" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-GDVR-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-GDVR-KEY-Asc
              IF DataSet1-GDVR-LOCK
                 READ GDVR NEXT WITH LOCK
              ELSE
                 READ GDVR NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-GDVR-LOCK
                 READ GDVR PREVIOUS WITH LOCK
              ELSE
                 READ GDVR PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM GDVR-DVR-CODICE1-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE2-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE3-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE4-MERGE-SPLITBUF
           MOVE status-gdvr TO TOTEM-ERR-STAT
           MOVE "GDVR" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-GDVR-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-GDVR-KEY-Asc
              IF DataSet1-GDVR-LOCK
                 READ GDVR PREVIOUS WITH LOCK
              ELSE
                 READ GDVR PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-GDVR-LOCK
                 READ GDVR NEXT WITH LOCK
              ELSE
                 READ GDVR NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM GDVR-DVR-CODICE1-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE2-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE3-MERGE-SPLITBUF
           PERFORM GDVR-DVR-CODICE4-MERGE-SPLITBUF
           MOVE status-gdvr TO TOTEM-ERR-STAT
           MOVE "GDVR" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-GDVR-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeWrite>
      * <TOTEM:END>
           WRITE RECORD-DVR OF GDVR.
           MOVE status-gdvr TO TOTEM-ERR-STAT
           MOVE "GDVR" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-GDVR-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeRewrite>
      * <TOTEM:END>
           REWRITE RECORD-DVR OF GDVR.
           MOVE status-gdvr TO TOTEM-ERR-STAT
           MOVE "GDVR" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-GDVR-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, BeforeDelete>
      * <TOTEM:END>
           DELETE GDVR.
           MOVE status-gdvr TO TOTEM-ERR-STAT
           MOVE "GDVR" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVR, AfterDelete>
      * <TOTEM:END>
           .

       GDVT-DVT-CODICE1-MERGE-SPLITBUF.
           INITIALIZE GDVT-DVT-CODICE1-SPLITBUF
           MOVE DVT-CODICE-CONTO(1:9) TO GDVT-DVT-CODICE1-SPLITBUF(1:9)
           MOVE DVT-DATA-DOCUMENTO(1:8) TO 
           GDVT-DVT-CODICE1-SPLITBUF(10:8)
           MOVE DVT-CODICE(1:8) TO GDVT-DVT-CODICE1-SPLITBUF(18:8)
           .

       GDVT-DVT-CODICE2-MERGE-SPLITBUF.
           INITIALIZE GDVT-DVT-CODICE2-SPLITBUF
           MOVE DVT-DOCUMENTO(1:8) TO GDVT-DVT-CODICE2-SPLITBUF(1:8)
           MOVE DVT-DATA-DOCUMENTO(1:8) TO 
           GDVT-DVT-CODICE2-SPLITBUF(9:8)
           MOVE DVT-CODICE(1:8) TO GDVT-DVT-CODICE2-SPLITBUF(17:8)
           .

       GDVT-DVT-CODICE3-MERGE-SPLITBUF.
           INITIALIZE GDVT-DVT-CODICE3-SPLITBUF
           MOVE DVT-FATTURA(1:12) TO GDVT-DVT-CODICE3-SPLITBUF(1:12)
           MOVE DVT-DATA-FATTURA(1:8) TO GDVT-DVT-CODICE3-SPLITBUF(13:8)
           MOVE DVT-CODICE(1:8) TO GDVT-DVT-CODICE3-SPLITBUF(21:8)
           .

       GDVT-DVT-CODICE4-MERGE-SPLITBUF.
           INITIALIZE GDVT-DVT-CODICE4-SPLITBUF
           MOVE DVT-PROTOCOLLO(1:10) TO GDVT-DVT-CODICE4-SPLITBUF(1:10)
           MOVE DVT-DATA-PROTOCOLLO(1:8) TO 
           GDVT-DVT-CODICE4-SPLITBUF(11:8)
           MOVE DVT-CODICE(1:8) TO GDVT-DVT-CODICE4-SPLITBUF(19:8)
           .

       GDVT-DVT-CODICE5-MERGE-SPLITBUF.
           INITIALIZE GDVT-DVT-CODICE5-SPLITBUF
           MOVE DVT-DATA-DOCUMENTO(1:8) TO 
           GDVT-DVT-CODICE5-SPLITBUF(1:8)
           MOVE DVT-DOCUMENTO(1:8) TO GDVT-DVT-CODICE5-SPLITBUF(9:8)
           MOVE DVT-CODICE(1:8) TO GDVT-DVT-CODICE5-SPLITBUF(17:8)
           .

       GDVT-DVT-CODICE6-MERGE-SPLITBUF.
           INITIALIZE GDVT-DVT-CODICE6-SPLITBUF
           MOVE DVT-CODICE-CONTO(1:9) TO GDVT-DVT-CODICE6-SPLITBUF(1:9)
           MOVE DVT-CODICE-DO(1:3) TO GDVT-DVT-CODICE6-SPLITBUF(10:3)
           MOVE DVT-SITUAZIONE(1:1) TO GDVT-DVT-CODICE6-SPLITBUF(13:1)
           MOVE DVT-CODICE(1:8) TO GDVT-DVT-CODICE6-SPLITBUF(14:8)
           .

       DataSet1-GDVT-INITSTART.
           IF DataSet1-GDVT-KEY-Asc
              MOVE Low-Value TO DVT-CODICE
           ELSE
              MOVE High-Value TO DVT-CODICE
           END-IF
           .

       DataSet1-GDVT-INITEND.
           IF DataSet1-GDVT-KEY-Asc
              MOVE High-Value TO DVT-CODICE
           ELSE
              MOVE Low-Value TO DVT-CODICE
           END-IF
           .

      * GDVT
       DataSet1-GDVT-START.
           IF DataSet1-GDVT-KEY-Asc
              START GDVT KEY >= DVT-CODICE
           ELSE
              START GDVT KEY <= DVT-CODICE
           END-IF
           .

       DataSet1-GDVT-START-NOTGREATER.
           IF DataSet1-GDVT-KEY-Asc
              START GDVT KEY <= DVT-CODICE
           ELSE
              START GDVT KEY >= DVT-CODICE
           END-IF
           .

       DataSet1-GDVT-START-GREATER.
           IF DataSet1-GDVT-KEY-Asc
              START GDVT KEY > DVT-CODICE
           ELSE
              START GDVT KEY < DVT-CODICE
           END-IF
           .

       DataSet1-GDVT-START-LESS.
           IF DataSet1-GDVT-KEY-Asc
              START GDVT KEY < DVT-CODICE
           ELSE
              START GDVT KEY > DVT-CODICE
           END-IF
           .

       DataSet1-GDVT-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-GDVT-LOCK
              READ GDVT WITH LOCK 
              KEY DVT-CODICE
           ELSE
              READ GDVT WITH NO LOCK 
              KEY DVT-CODICE
           END-IF
           PERFORM GDVT-DVT-CODICE1-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE2-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE3-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE4-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE5-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE6-MERGE-SPLITBUF
           MOVE status-gdvt TO TOTEM-ERR-STAT 
           MOVE "GDVT" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-GDVT-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-GDVT-KEY-Asc
              IF DataSet1-GDVT-LOCK
                 READ GDVT NEXT WITH LOCK
              ELSE
                 READ GDVT NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-GDVT-LOCK
                 READ GDVT PREVIOUS WITH LOCK
              ELSE
                 READ GDVT PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM GDVT-DVT-CODICE1-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE2-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE3-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE4-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE5-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE6-MERGE-SPLITBUF
           MOVE status-gdvt TO TOTEM-ERR-STAT
           MOVE "GDVT" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-GDVT-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-GDVT-KEY-Asc
              IF DataSet1-GDVT-LOCK
                 READ GDVT PREVIOUS WITH LOCK
              ELSE
                 READ GDVT PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-GDVT-LOCK
                 READ GDVT NEXT WITH LOCK
              ELSE
                 READ GDVT NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM GDVT-DVT-CODICE1-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE2-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE3-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE4-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE5-MERGE-SPLITBUF
           PERFORM GDVT-DVT-CODICE6-MERGE-SPLITBUF
           MOVE status-gdvt TO TOTEM-ERR-STAT
           MOVE "GDVT" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-GDVT-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeWrite>
      * <TOTEM:END>
           WRITE RECORD-DVT OF GDVT.
           MOVE status-gdvt TO TOTEM-ERR-STAT
           MOVE "GDVT" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-GDVT-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeRewrite>
      * <TOTEM:END>
           REWRITE RECORD-DVT OF GDVT.
           MOVE status-gdvt TO TOTEM-ERR-STAT
           MOVE "GDVT" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-GDVT-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, BeforeDelete>
      * <TOTEM:END>
           DELETE GDVT.
           MOVE status-gdvt TO TOTEM-ERR-STAT
           MOVE "GDVT" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:GDVT, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE tor-rec OF tordini
           INITIALIZE tmo-rec OF tmovmag
           INITIALIZE ror-rec OF rordini
           INITIALIZE rmo-rec OF rmovmag
           INITIALIZE con-rec OF tcontat
           INITIALIZE cli-rec OF clienti
           INITIALIZE art-rec OF articoli
           INITIALIZE tno-rec OF tnotacr
           INITIALIZE rno-rec OF rnotacr
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE RECORD-DOCCN OF DOCCN
           INITIALIZE record-tblco OF TBLCO
           INITIALIZE record-tbldo OF TBLDO
           INITIALIZE record-tbliv OF tivaese
           INITIALIZE RECORD-CLZ OF CLZ
           INITIALIZE RECORD-MAZ OF MAZ
           INITIALIZE G2-rec OF G2
           INITIALIZE tmp-iv-rec OF tmp-iva
           INITIALIZE RECORD-ABI OF ABI
           INITIALIZE tra-rec OF tmovtrat
           INITIALIZE tge-rec OF tparamge
           INITIALIZE RECORD-CLI OF CLI
           INITIALIZE gdo-rec OF tgrupgdo
           INITIALIZE tcl-rec OF ttipocli
           INITIALIZE record-par OF PAR
           INITIALIZE RECORD-PAS OF PAS
           INITIALIZE RECORD-PAT OF PAT
           INITIALIZE record-pni OF PNI
           INITIALIZE RECORD-PNR OF PNR
           INITIALIZE RECORD-PNT OF PNT
           INITIALIZE line-riga OF lineseq
           INITIALIZE RECORD-TBLVA OF TBLVA
           INITIALIZE mul-rec OF multigest
           INITIALIZE RECORD-DVR OF GDVR
           INITIALIZE RECORD-DVT OF GDVT
           .


      * FD's Initialize Paragraph
       DataSet1-tordini-INITREC.
           INITIALIZE tor-rec OF tordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmovmag-INITREC.
           INITIALIZE tmo-rec OF tmovmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordini-INITREC.
           INITIALIZE ror-rec OF rordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rmovmag-INITREC.
           INITIALIZE rmo-rec OF rmovmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcontat-INITREC.
           INITIALIZE con-rec OF tcontat
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tnotacr-INITREC.
           INITIALIZE tno-rec OF tnotacr
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rnotacr-INITREC.
           INITIALIZE rno-rec OF rnotacr
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-DOCCN-INITREC.
           INITIALIZE RECORD-DOCCN OF DOCCN
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-TBLCO-INITREC.
           INITIALIZE record-tblco OF TBLCO
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-TBLDO-INITREC.
           INITIALIZE record-tbldo OF TBLDO
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tivaese-INITREC.
           INITIALIZE record-tbliv OF tivaese
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-CLZ-INITREC.
           INITIALIZE RECORD-CLZ OF CLZ
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-MAZ-INITREC.
           INITIALIZE RECORD-MAZ OF MAZ
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-G2-INITREC.
           INITIALIZE G2-rec OF G2
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-iva-INITREC.
           INITIALIZE tmp-iv-rec OF tmp-iva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ABI-INITREC.
           INITIALIZE RECORD-ABI OF ABI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmovtrat-INITREC.
           INITIALIZE tra-rec OF tmovtrat
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-CLI-INITREC.
           INITIALIZE RECORD-CLI OF CLI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tgrupgdo-INITREC.
           INITIALIZE gdo-rec OF tgrupgdo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ttipocli-INITREC.
           INITIALIZE tcl-rec OF ttipocli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PAR-INITREC.
           INITIALIZE record-par OF PAR
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PAS-INITREC.
           INITIALIZE RECORD-PAS OF PAS
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PAT-INITREC.
           INITIALIZE RECORD-PAT OF PAT
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PNI-INITREC.
           INITIALIZE record-pni OF PNI
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PNR-INITREC.
           INITIALIZE RECORD-PNR OF PNR
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-PNT-INITREC.
           INITIALIZE RECORD-PNT OF PNT
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-TBLVA-INITREC.
           INITIALIZE RECORD-TBLVA OF TBLVA
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-multigest-INITREC.
           INITIALIZE mul-rec OF multigest
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-GDVR-INITREC.
           INITIALIZE RECORD-DVR OF GDVR
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-GDVT-INITREC.
           INITIALIZE RECORD-DVT OF GDVT
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       scr-conf-1-Open-Routine.
           PERFORM scr-conf-1-Scrn
           PERFORM scr-conf-1-Proc
           .

       scr-conf-1-Scrn.
           PERFORM scr-conf-1-Create-Win
           PERFORM scr-conf-1-Init-Value
           PERFORM scr-conf-1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-conf-1-DISPLAY
           .

       scr-conf-1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 14,62,
              SIZE 52,71,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 1,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-conf-1-HANDLE,
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, AfterCreateWin>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-conf-1 UPON scr-conf-1-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-conf-1-PROC.
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, BeforeAccept>
           move spaces to tge-codice.

           read tparamge no lock invalid continue end-read.

           set CreatoMovim to false.

           move tge-data-consolid-progmag to link-data.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-conf-1
                 ON EXCEPTION
                    PERFORM scr-conf-1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-conf-1-HANDLE
           INITIALIZE Key-Status
           .

       scr-conf-1-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-conf-1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-conf-1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-si-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-conf-1-CLEAR.
           PERFORM scr-conf-1-INIT-VALUE
           PERFORM scr-conf-1-DISPLAY
           .

       scr-conf-1-DISPLAY.
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-conf-1 UPON scr-conf-1-HANDLE
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-conf-1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-conf-1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-conf-1-Init-Value.
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, SetDefault>
      * <TOTEM:END>
           PERFORM scr-conf-1-FLD-TO-BUF
           .


       scr-conf-1-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-conf-1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-conf-1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-conf-1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-conf-1, FORM:scr-conf-1, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-conf-1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-conf-1-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-conf-1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-conf-1-SHOW-MSG-ROUTINE
           .

       scr-conf-1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-conf-1-DISPLAY-MESSAGE
           .

       scr-conf-1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-conf-1-Save-Status.
           .             

       scr-conf-1-Restore-Status.
           .

       scr-conf-2-Open-Routine.
           PERFORM scr-conf-2-Scrn
           PERFORM scr-conf-2-Proc
           .

       scr-conf-2-Scrn.
           PERFORM scr-conf-2-Create-Win
           PERFORM scr-conf-2-Init-Value
           PERFORM scr-conf-2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-conf-2-DISPLAY
           .

       scr-conf-2-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 14,62,
              SIZE 52,71,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-conf-2-handle,
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, AfterCreateWin>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-conf-2 UPON scr-conf-2-handle
      * DISPLAY-COLUMNS settings
           .

       scr-conf-2-PROC.
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, BeforeAccept>
           display lab-anno2.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-conf-2
                 ON EXCEPTION
                    PERFORM scr-conf-2-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-conf-2-handle
           INITIALIZE Key-Status
           .

       scr-conf-2-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-conf-2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-conf-2-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM pb-noa-LinkTo
              WHEN Key-Status = 1000
                 PERFORM pb-sia-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-conf-2-CLEAR.
           PERFORM scr-conf-2-INIT-VALUE
           PERFORM scr-conf-2-DISPLAY
           .

       scr-conf-2-DISPLAY.
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-conf-2 UPON scr-conf-2-handle
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-conf-2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-conf-2-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-conf-2-Init-Value.
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, SetDefault>
      * <TOTEM:END>
           PERFORM scr-conf-2-FLD-TO-BUF
           .


       scr-conf-2-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-conf-2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-conf-2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-conf-2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-conf-2, FORM:scr-conf-2, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-conf-2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-conf-2-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-conf-2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-conf-2-SHOW-MSG-ROUTINE
           .

       scr-conf-2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-conf-2-DISPLAY-MESSAGE
           .

       scr-conf-2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-conf-2-Save-Status.
           .             

       scr-conf-2-Restore-Status.
           .

       scr-fine-Open-Routine.
           PERFORM scr-fine-Scrn
           PERFORM scr-fine-Proc
           .

       scr-fine-Scrn.
           PERFORM scr-fine-Create-Win
           PERFORM scr-fine-Init-Value
           PERFORM scr-fine-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 36,00,
              SIZE 35,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              RESIZABLE,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Operazione conclusa - Riepilogo",
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-fine-HANDLE,
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-fine UPON scr-fine-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-fine-PROC.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeAccept>
           move 0  to v-merce.
           move 20 to fr-lines.

           if Merce move 1  to v-merce
                    move 31 to fr-lines
           end-if.
           
           move tot-fatt-from-provv to lab-provv-tot-buf.
           move ult-num-fatt        to lab-provv-ultimo-buf.
           
           move tot-mov-from-tras   to lab-tras-tot-buf.
           move ult-num-mov         to lab-tras-ultimo-buf.

           display scr-fine.

           modify freim,           lines fr-lines.
           modify scr-fine-handle, lines fr-lines + 5.
           modify pb-siaa,         line  fr-lines + 2.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-fine
                 ON EXCEPTION
                    PERFORM scr-fine-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-fine-HANDLE
           INITIALIZE Key-Status
           .

       scr-fine-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-fine-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-fine-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-siaa-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-fine-CLEAR.
           PERFORM scr-fine-INIT-VALUE
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-DISPLAY.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-fine UPON scr-fine-HANDLE
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-fine-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-fine-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-fine-Init-Value.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, SetDefault>
      * <TOTEM:END>
           PERFORM scr-fine-FLD-TO-BUF
           .


       scr-fine-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-fine-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-fine-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-fine-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-fine-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-fine-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-fine-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-fine-SHOW-MSG-ROUTINE
           .

       scr-fine-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-fine-DISPLAY-MESSAGE
           .

       scr-fine-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-fine-Save-Status.
           .             

       scr-fine-Restore-Status.
           .

       Form-doc-Open-Routine.
           PERFORM Form-doc-Scrn
           PERFORM Form-doc-Proc
           .

       Form-doc-Scrn.
           PERFORM Form-doc-Create-Win
           PERFORM Form-doc-Init-Value
           PERFORM Form-doc-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form-doc-DISPLAY
           .

       Form-doc-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 12,06,
              SIZE 62,80,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Aggiornamenti  da Fatturazione",
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS form1-handle,
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form-doc UPON form1-handle
      * DISPLAY-COLUMNS settings
           .

       Form-doc-PROC.
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, BeforeAccept>
           initialize lab-anno-buf.

           string "Esercizio " delimited size
                  esercizio    delimited size
                  " ("         delimited size
                  esercizio-G2 delimited size
                  ")"          delimited size
                  into lab-anno-buf
           end-string.
           display lab-anno.

           initialize path-file.
           accept  path-file from environment "PATH_ST_CLIENT".
           inspect path-file replacing trailing spaces by low-value.
           string  path-file      delimited low-value
                   save-nome-file delimited size
                   into path-file
           end-string.


           modify scr-oper-Wb-1, value path-file.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form-doc
                 ON EXCEPTION
                    PERFORM Form-doc-Evaluate-Func
                 MOVE 4 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-handle
           INITIALIZE Key-Status
           .

       Form-doc-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form-doc-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form-doc-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-merce-LinkTo
              WHEN Key-Status = 1001
                 PERFORM pb-man-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-note-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form-doc-CLEAR.
           PERFORM Form-doc-INIT-VALUE
           PERFORM Form-doc-DISPLAY
           .

       Form-doc-DISPLAY.
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form-doc UPON form1-handle
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form-doc-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form-doc-Init-Data.
           MOVE 4 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form-doc-Init-Value.
           MOVE "Aggiornamenti  da Fatturazione" TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, SetDefault>
      * <TOTEM:END>
           PERFORM Form-doc-FLD-TO-BUF
           .


       Form-doc-ALLGRID-RESET.
           .

      * for Form's Validation
       Form-doc-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form-doc-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, AfterBufToFld>
      * <TOTEM:END>
           .

       Form-doc-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form-doc, FORM:Form-doc, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form-doc-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form-doc-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form-doc-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form-doc-SHOW-MSG-ROUTINE
           .

       Form-doc-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form-doc-DISPLAY-MESSAGE
           .

       Form-doc-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form-doc-Save-Status.
           .             

       Form-doc-Restore-Status.
           .

       scr-calprovv-Open-Routine.
           PERFORM scr-calprovv-Scrn
           PERFORM scr-calprovv-Proc
           .

       scr-calprovv-Scrn.
           PERFORM scr-calprovv-Create-Win
           PERFORM scr-calprovv-Init-Value
           PERFORM scr-calprovv-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-calprovv-DISPLAY
           .

       scr-calprovv-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 2,39,
              SIZE 25,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-calprovv-handle,
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, AfterCreateWin>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-calprovv UPON scr-calprovv-handle
      * DISPLAY-COLUMNS settings
           .

       scr-calprovv-PROC.
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, BeforeAccept>
           move user-codi to link-user.
           move 0 to tot-fatt-from-provv ult-num-fatt, link-result.
           call   "W$MOUSE"     using set-mouse-shape, wait-pointer.
           call   "calprovv" using tot-fatt-from-provv
                                   ult-num-fatt
                                   link-user
                                   link-result
                                   scr-oper-Handle.
           cancel "calprovv".
           call   "W$MOUSE"     using set-mouse-shape, arrow-pointer.

           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-calprovv-Evaluate-Func
                 MOVE 5 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-calprovv-handle
           INITIALIZE Key-Status
           .

       scr-calprovv-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-calprovv-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-calprovv-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-calprovv-CLEAR.
           PERFORM scr-calprovv-INIT-VALUE
           PERFORM scr-calprovv-DISPLAY
           .

       scr-calprovv-DISPLAY.
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-calprovv UPON scr-calprovv-handle
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-calprovv-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-calprovv-Init-Data.
           MOVE 5 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-calprovv-Init-Value.
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, SetDefault>
      * <TOTEM:END>
           PERFORM scr-calprovv-FLD-TO-BUF
           .


       scr-calprovv-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-calprovv-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-calprovv-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-calprovv-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-calprovv, FORM:scr-calprovv, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-calprovv-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-calprovv-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-calprovv-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-calprovv-SHOW-MSG-ROUTINE
           .

       scr-calprovv-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-calprovv-DISPLAY-MESSAGE
           .

       scr-calprovv-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-calprovv-Save-Status.
           .             

       scr-calprovv-Restore-Status.
           .

       scr-caltras-Open-Routine.
           PERFORM scr-caltras-Scrn
           PERFORM scr-caltras-Proc
           .

       scr-caltras-Scrn.
           PERFORM scr-caltras-Create-Win
           PERFORM scr-caltras-Init-Value
           PERFORM scr-caltras-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-caltras-DISPLAY
           .

       scr-caltras-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 2,39,
              SIZE 24,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-calprovv-handle,
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, AfterCreateWin>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-caltras UPON scr-calprovv-handle
      * DISPLAY-COLUMNS settings
           .

       scr-caltras-PROC.
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, BeforeAccept>
           move user-codi to link-user.
           move 0 to tot-mov-from-tras ult-num-mov link-result.
           call   "W$MOUSE"     using set-mouse-shape, wait-pointer.
           call   "caltras" using tot-mov-from-tras
                                   ult-num-mov
                                   link-user
                                   link-result
                                   scr-oper-handle.
           cancel "caltras".

           move 27 to key-status.
           call   "W$MOUSE"     using set-mouse-shape, arrow-pointer.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-caltras-Evaluate-Func
                 MOVE 6 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-calprovv-handle
           INITIALIZE Key-Status
           .

       scr-caltras-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-caltras-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-caltras-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-caltras-CLEAR.
           PERFORM scr-caltras-INIT-VALUE
           PERFORM scr-caltras-DISPLAY
           .

       scr-caltras-DISPLAY.
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-caltras UPON scr-calprovv-handle
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-caltras-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-caltras-Init-Data.
           MOVE 6 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-caltras-Init-Value.
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, SetDefault>
      * <TOTEM:END>
           PERFORM scr-caltras-FLD-TO-BUF
           .


       scr-caltras-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-caltras-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-caltras-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-caltras-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-caltras, FORM:scr-caltras, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-caltras-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-caltras-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-caltras-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-caltras-SHOW-MSG-ROUTINE
           .

       scr-caltras-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-caltras-DISPLAY-MESSAGE
           .

       scr-caltras-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-caltras-Save-Status.
           .             

       scr-caltras-Restore-Status.
           .

       scr-statmese-Open-Routine.
           PERFORM scr-statmese-Scrn
           PERFORM scr-statmese-Proc
           .

       scr-statmese-Scrn.
           PERFORM scr-statmese-Create-Win
           PERFORM scr-statmese-Init-Value
           PERFORM scr-statmese-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-statmese-DISPLAY
           .

       scr-statmese-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 2,39,
              SIZE 37,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-calprovv-handle,
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-statmese UPON scr-calprovv-handle
      * DISPLAY-COLUMNS settings
           .

       scr-statmese-PROC.
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, BeforeAccept>
           move link-data to aaaammgg.
           if mese of aaaammgg = 12
              move 1 to mese of aaaammgg
              add  1 to anno of aaaammgg
           else
              add 1 to mese  of aaaammgg
           end-if.

           evaluate mese of aaaammgg
           when  1  move 31 to giorno of aaaammgg
           when  2
                 divide   anno of aaaammgg  by 4 giving var1
                 multiply var1              by 4 giving var1
                 if var1 = anno of aaaammgg move 29  to giorno of 
           aaaammgg
                 else                       move 28  to giorno of 
           aaaammgg
                 end-if
           when  3  move 31 to giorno of aaaammgg
           when  4  move 30 to giorno of aaaammgg
           when  5  move 31 to giorno of aaaammgg
           when  6  move 30 to giorno of aaaammgg
           when  7  move 31 to giorno of aaaammgg
           when  8  move 31 to giorno of aaaammgg
           when  9  move 30 to giorno of aaaammgg
           when 10  move 31 to giorno of aaaammgg
           when 11  move 30 to giorno of aaaammgg
           when 12  move 31 to giorno of aaaammgg
           end-evaluate.

           move aaaammgg to link-data.
           move 0 to link-result.

           call   "W$MOUSE"     using set-mouse-shape, wait-pointer.
           call   "aggstatsett" using user-codi, 
                                      link-data, 
                                      link-result,
                                      scr-oper-handle.
           cancel "aggstatsett".

           call   "aggstatmese" using link-data, scr-oper-handle.
           cancel "aggstatmese".

           move 27 to key-status.
           call   "W$MOUSE"     using set-mouse-shape, arrow-pointer.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-statmese-Evaluate-Func
                 MOVE 7 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-calprovv-handle
           INITIALIZE Key-Status
           .

       scr-statmese-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-statmese-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-statmese-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-statmese-CLEAR.
           PERFORM scr-statmese-INIT-VALUE
           PERFORM scr-statmese-DISPLAY
           .

       scr-statmese-DISPLAY.
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-statmese UPON scr-calprovv-handle
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-statmese-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-statmese-Init-Data.
           MOVE 7 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-statmese-Init-Value.
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, SetDefault>
      * <TOTEM:END>
           PERFORM scr-statmese-FLD-TO-BUF
           .


       scr-statmese-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-statmese-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-statmese-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-statmese-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-statmese, FORM:scr-statmese, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-statmese-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-statmese-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-statmese-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-statmese-SHOW-MSG-ROUTINE
           .

       scr-statmese-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-statmese-DISPLAY-MESSAGE
           .

       scr-statmese-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-statmese-Save-Status.
           .             

       scr-statmese-Restore-Status.
           .

       scr-prima-nota-Open-Routine.
           PERFORM scr-prima-nota-Scrn
           PERFORM scr-prima-nota-Proc
           .

       scr-prima-nota-Scrn.
           PERFORM scr-prima-nota-Create-Win
           PERFORM scr-prima-nota-Init-Value
           PERFORM scr-prima-nota-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-prima-nota-DISPLAY
           .

       scr-prima-nota-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 2,39,
              SIZE 39,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS scr-calprovv-handle,
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-prima-nota UPON scr-calprovv-handle
      * DISPLAY-COLUMNS settings
           .

       scr-prima-nota-PROC.
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, BeforeAccept>
           call   "W$MOUSE"        using set-mouse-shape, wait-pointer.
           if path-tmp-iva not = spaces
              close      tmp-iva
           end-if.
           close      doccn.
           open input doccn.
           initialize primanotaescad-linkage.
           move selmaz                to link-selmaz.
           move selclz                to link-selclz.
           move tipo-doc              to link-tipo-doc.
           move path-tmp-iva          to link-path-tmp-iva.
           move scr-oper-handle       to link-handle
           call   "primanotaescad" using primanotaescad-linkage
           cancel "primanotaescad".
           move 27 to key-status.
           call "W$FLUSH".
           call   "W$MOUSE" using set-mouse-shape, arrow-pointer.
           if path-tmp-iva not = spaces
              call "C$DELETE"  using path-tmp-iva, "I"
              initialize path-tmp-iva
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-prima-nota-Evaluate-Func
                 MOVE 8 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-calprovv-handle
           INITIALIZE Key-Status
           .

       scr-prima-nota-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-prima-nota-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-prima-nota-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-prima-nota-CLEAR.
           PERFORM scr-prima-nota-INIT-VALUE
           PERFORM scr-prima-nota-DISPLAY
           .

       scr-prima-nota-DISPLAY.
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-prima-nota UPON scr-calprovv-handle
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-prima-nota-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-prima-nota-Init-Data.
           MOVE 8 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-prima-nota-Init-Value.
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, SetDefault>
      * <TOTEM:END>
           PERFORM scr-prima-nota-FLD-TO-BUF
           .


       scr-prima-nota-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-prima-nota-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-prima-nota-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-prima-nota-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-prima-nota, FORM:scr-prima-nota, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-prima-nota-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-prima-nota-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-prima-nota-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-prima-nota-SHOW-MSG-ROUTINE
           .

       scr-prima-nota-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-prima-nota-DISPLAY-MESSAGE
           .

       scr-prima-nota-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-prima-nota-Save-Status.
           .             

       scr-prima-nota-Restore-Status.
           .

       scr-oper-Open-Routine.
           PERFORM scr-oper-Scrn
           PERFORM scr-oper-Proc
           .

       scr-oper-Scrn.
           PERFORM scr-oper-Create-Win
           PERFORM scr-oper-Init-Value
           PERFORM scr-oper-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-oper-DISPLAY
           .

       scr-oper-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 26,17,
              SIZE 46,91,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Monitor operazioni...",
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE v-screen,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-oper-Event-Proc,
              HANDLE IS scr-oper-Handle,
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterCreateWin>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-oper UPON scr-oper-Handle
      * DISPLAY-COLUMNS settings
           .

       scr-oper-PROC.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeAccept>
           move 0 to v-push.
           display pb-ok-oper.

           modify lab-provv1, title spaces.
           modify lab-provv2, title spaces.
           modify lab-calc1,  title spaces.
           modify lab-calc2,  title spaces.
           modify lab-tras1,  title spaces.
           modify lab-tras2,  title spaces.
           modify lab-stat1,  title spaces.
           modify lab-stat2,  title spaces.
           modify lab-prima1, title spaces.
           modify lab-prima2, title spaces.
           modify lab-doc,    title spaces.
           

           modify lab-provv1 title "Calcolo Provvigioni non eseguito".

LUBEXX     perform RECUPERA-ULTIMO-NUM-TRATTATO.

LUBEXX*    Come da richiesta di Trivella, se il PRIMO ordine trattato
LUBEXX*    ha un anno di fattura <> dall'anno digitato non procedere
LUBEXX     perform CONTROLLO-ANNO-CONGRUENTE.

           if tutto-ok
              move 1 to v-screen
              modify scr-oper-handle, visible v-screen
              if Note perform ELABORA-TNOTACR
              else    perform ELABORA-TORDINI
              end-if
              |RIPULISCO LA SCREEN DAL CONTATORE
              display "                          "
                 upon scr-oper-handle at column 34
                                           line 25
              display "                          "
                 upon scr-oper-handle at column 30
                                           line 26
              ||||||||
              move 1 to v-push
              display pb-ok-oper
           else
              move 27 to key-status
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-oper
                 ON EXCEPTION
                    PERFORM scr-oper-Evaluate-Func
                 MOVE 9 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-oper-Handle
           INITIALIZE Key-Status
           .

       scr-oper-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-oper-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-oper-Exit
                 END-IF
              WHEN Key-Status = 13
                 PERFORM pb-ok-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-oper-CLEAR.
           PERFORM scr-oper-INIT-VALUE
           PERFORM scr-oper-DISPLAY
           .

       scr-oper-DISPLAY.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-oper UPON scr-oper-Handle
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen2-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       scr-oper-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeExit>
           perform RIEPILOGO.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-oper-Init-Data.
           MOVE 9 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-oper-Init-Value.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, SetDefault>
      * <TOTEM:END>
           PERFORM scr-oper-FLD-TO-BUF
           .


       scr-oper-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-oper-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-oper-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-oper-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-oper, FORM:scr-oper, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-oper-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-oper-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-oper-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-oper-SHOW-MSG-ROUTINE
           .

       scr-oper-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-oper-DISPLAY-MESSAGE
           .

       scr-oper-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-oper-Save-Status.
           .             

       scr-oper-Restore-Status.
           .



       Screen1-Event-Proc.
           .

       Screen2-Event-Proc.
           .

       scr-oper-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       AGGIORNA-CONTABILITA-TNOTACR.
      * <TOTEM:PARA. AGGIORNA-CONTABILITA-TNOTACR>
LUBEXX     move tno-num-fattura to save-nc.
           move tno-anno     to    rno-anno.
           move tno-numero   to    rno-numero.
           move low-value    to    rno-num-riga.
           start rnotacr key is >= rno-chiave
                 invalid continue
           end-start.
           move 0 to UltimoNumeroRiga.
           add  1 to doccn-contatore.
      ***** Creazione record sul file GDVT e GDVR
           initialize record-dvt replacing numeric data by zeroes
                                      alphanumeric data by spaces.
           move doccn-contatore to dvt-progressivo.
           move G2-cod-nc to dvt-codice-do.

           move "DO"      to tbldo-codice1.
           move G2-cod-nc to tbldo-codice2.
           read tbldo no lock invalid continue end-read.

           move "CO"               to tblco-codice1.
           move tbldo-codice-co    to tblco-codice2.
           read tblco no lock invalid continue end-read.

           move tbldo-tipo-documento    to dvt-tipo-documento.
           move tbldo-codice-co         to dvt-codice-co.
           move tbldo-codice-mo         to dvt-codice-mo.
           move tbldo-codice-ma         to dvt-codice-ma.
           set  dvt-situazione-inserito to true.
           move tno-num-fattura         to dvt-numero-documento.
           move tno-data-fattura        to dvt-data-documento.

           evaluate true
           when dvt-tipo-documento-bol-acc
           when dvt-tipo-documento-doc-tra
           when dvt-tipo-documento-bol-xe
                move tbldo-numerazione-bolle to dvt-num-documento
           end-evaluate.
 
           if not (dvt-tipo-documento = "B" or "D")
              move tblco-tipo-documento to dvt-num-documento
              if dvt-tipo-documento = "G"
                 move "D" to dvt-num-documento (02 : 01)
              end-if
           end-if.

           move tno-num-fattura       to dvt-numero-fattura.
           move tblco-tipo-documento  to dvt-num-fattura
           move tno-data-fattura      to dvt-data-fattura.
           move tblco-tipo-protocollo to dvt-num-protocollo.

           set  dvt-tipo-cfi-cli      to true.
           move tno-cod-cli           to dvt-codice-cfi.
           set  dvt-tipo-cf-cli       to true.
           move tno-cod-cli           to dvt-codice-cf.

           move tno-cod-pagamento     to dvt-codice-pa.
           set  cli-tipo-C            to true.
           move tno-cod-cli           to cli-codice.
           read clienti no lock invalid continue end-read.

           move cli-codice to cli-codice-g2.
           read CLI no lock invalid continue end-read.

           move cli-abi               to dvt-codice-abi abi-codice-abi-x
           move cli-cab               to dvt-codice-cab abi-codice-cab-x
           read abi no lock invalid continue end-read.
           move abi-banca1            to dvt-banca1.
           move abi-banca2            to dvt-banca2.
           move tno-cod-ese-iva       to dvt-codice-iv.
           move tno-contropartita     to dvt-codice-mas.
           move esercizio-G2          to tbldo-codice2.
           move tno-note( 1:30)       to dvt-note(1).
           move tno-note(31:30)       to dvt-note(2).
           move esercizio-G2          to dvt-esercizio.

           move 0 to tot-fattura.

           initialize tabellino-iva.
           move 0 to idx-iva.

           perform until 1 = 2
              read rnotacr next no lock at end exit perform end-read
              if rno-anno   not = tno-anno or
                 rno-numero not = tno-numero
                 exit perform
              end-if
LUBEXX        move 0 to imponibile-riga
LUBEXX        compute imponibile-riga   =
LUBEXX              ( rno-prz-unitario  +
LUBEXX                rno-imp-consumo   +
LUBEXX                rno-imp-cou-cobat + 
LUBEXX                rno-add-piombo    )
LUBEXX        if imponibile-riga not = 0
                 initialize record-dvr replacing numeric data by zeroes
                                            alphanumeric data by spaces
                 move rno-perce-sconto     to dvr-sconto
                 move rno-num-riga         to UltimoNumeroRiga
                 move doccn-contatore      to dvr-progressivo
                 move rno-num-riga         to dvr-riga
                 move dvt-numero-documento to dvr-numero-documento
                 move dvt-num-documento    to dvr-num-documento
                 move dvt-data-documento   to dvr-data-documento
                 move dvt-codice-conto     to dvr-codice-conto
                 move "FITTIZIO"           to dvr-codice-art
                 move "FITTIZIO"           to dvr-descrizione1
                 move "FITTIZIO"           to dvr-descrizione2
                 move rno-cod-iva          to dvr-codice-iv
                 move tno-contropartita    to dvr-codice-mas
                 compute rno-prz-unitario =
                         rno-prz-unitario -
                       ( rno-prz-unitario * rno-perce-sconto ) / 100

                 if rno-qta = 0 move 1       to como-qta
                 else           move rno-qta to como-qta
                 end-if

                 compute dvr-importo
                         dvr-importo-lire  =
                       ( rno-prz-unitario  +
                         rno-imp-consumo   +
                         rno-imp-cou-cobat +
                         rno-add-piombo  ) * como-qta
                 set dvr-tipo-vendita-normale to true
              
                 |Lo calcolo perchè nel DVR lo
                 |vuole anche per la singola riga
                 perform CALCOLA-IVA-TNOTACR

                 move como-iva-2dec to dvr-importo-iva

                 write record-dvr invalid rewrite record-dvr end-write

                 perform varying idx-iva from 1 by 1
                           until idx-iva > 6
                    if el-cod-iva(idx-iva) = spaces
                       exit perform
                    end-if
                    if rno-cod-iva = el-cod-iva(idx-iva)
                       exit perform
                    end-if
                 end-perform

                 move rno-cod-iva   to el-cod-iva(idx-iva)
                 add  dvr-importo   to el-imponibile(idx-iva)

                 compute tot-fattura = 
                         tot-fattura + dvr-importo |L'iva la sommo dopo!!!

LUBEXX        end-if
              
           end-perform.

           |Il calcolo lo faccio alla fine
           |per averlo come B.I. dal totale
           move 0 to tot-iva.
           perform varying idx-iva from 1 by 1  
                     until idx-iva > 6
              if el-cod-iva(idx-iva) = spaces
                 exit perform
              end-if
              move el-cod-iva(idx-iva)    to rno-cod-iva
              move el-imponibile(idx-iva) to dvr-importo
              perform CALCOLA-IVA-TNOTACR
              move como-iva-2dec to el-iva(idx-iva)
              compute tot-fattura =
                      tot-fattura + como-iva-2dec |L'importo l'ho già sommato prima!!
           end-perform.  

           move UltimoNumeroRiga      to dvt-ultima-riga.

           |Scrivo il file tmp che contiene la 
           |separazione dei codici iva
           perform WRITE-TMP-IVA.
           
           initialize variabili-varsca replacing numeric data by zeroes
                                            alphanumeric data by spaces.
           move tno-cod-pagamento to sca-codice-pa.
           move tno-data-fattura  to sca-data-fattura.
           move tno-data-fattura  to sca-data-conteggio.
           move tot-fattura       to sca-importo-fattura.
           move tot-fattura       to sca-importo-fattura-va.
           move tot-iva           to sca-iva.
           move tot-iva           to sca-iva-va.
           
           move cli-mese1         to sca-mese1.
           move cli-giorno1       to sca-giorno1.
           move cli-mese2         to sca-mese2.
           move cli-giorno2       to sca-giorno2.

           move cli-escluso-dal-giorno1 to sca-escluso-dal-giorno1.
           move cli-escluso-dal-giorno2 to sca-escluso-dal-giorno2.

           call   "calsca" using variabili-varsca. 
           cancel "calsca".

           move 0 to idx dvt-num-rate.
           perform 36 times
              add 1 to idx
              move sca-codice-tr(idx) to dvt-codice-tr(idx)
              move sca-importo(idx)   to dvt-importo(idx)
              move sca-data(idx)      to dvt-scadenza(idx)
              if sca-a-vista(idx) = "S"
                 move 99 to dvt-inizio-conteggio(idx)
              else
                 move  0 to dvt-inizio-conteggio(idx)
              end-if
              if dvt-codice-tr(idx) not = spaces and
                 dvt-importo(idx)   not = 0      and
                 dvt-scadenza(idx)  not = 0
                 add 1 to dvt-num-rate
              end-if
           end-perform.

           move tot-fattura to dvt-importo-totale.
           move tot-iva     to dvt-iva-totale.
           compute dvt-imponibile-totale = ( tot-fattura - tot-iva ).

           write record-dvt invalid rewrite record-dvt end-write.

      ***---
       CALCOLA-IVA-TNOTACR.
           move 0 to como-iva como-iva-2dec.
           initialize record-tbliv replacing numeric data by zeroes
                                        alphanumeric data by spaces.
           move "IV"        to tbliv-codice1.
           move rno-cod-iva to tbliv-codice2.
           read tivaese no lock invalid continue end-read.
           compute como-iva =
             ( ( dvr-importo * tbliv-percentuale ) / 100 ).
           add     0,005 to como-iva.
           move como-iva to como-iva-2dec.
           add  como-iva-2dec to tot-iva 
           .
      * <TOTEM:END>

       AGGIORNA-CONTABILITA-TORDINI.
      * <TOTEM:PARA. AGGIORNA-CONTABILITA-TORDINI>
LUBEXX     move tor-num-fattura to save-fatt.
           move tor-anno        to ror-anno.
           move tor-numero      to ror-num-ordine.
           move low-value       to ror-num-riga.
           start rordini    key is >= ror-chiave
                 invalid continue
           end-start.                      
           move 0 to UltimoNumeroRiga.
           add  1 to doccn-contatore.
      ***** Creazione record sul file DVT e DVR per G2
           initialize record-dvt replacing numeric data by zeroes
                                      alphanumeric data by spaces.
           move doccn-contatore to dvt-progressivo.
           move G2-cod-fatture  to dvt-codice-do.

           move "DO"           to tbldo-codice1.
           move G2-cod-fatture to tbldo-codice2.
           read tbldo no lock invalid continue end-read.

           move "CO" to tblco-codice1.
           move tbldo-codice-co         to tblco-codice2.
           read tblco no lock invalid continue end-read.

           move tbldo-tipo-documento    to dvt-tipo-documento.
           move tbldo-codice-co         to dvt-codice-co.
           move tbldo-codice-mo         to dvt-codice-mo.
           move tbldo-codice-ma         to dvt-codice-ma.
           set  dvt-situazione-inserito to true.
           move tor-num-fattura         to dvt-numero-documento.
           move tor-data-fattura        to dvt-data-documento.

           evaluate true
           when dvt-tipo-documento-bol-acc
           when dvt-tipo-documento-doc-tra
           when dvt-tipo-documento-bol-xe
                move tbldo-numerazione-bolle to dvt-num-documento
           end-evaluate.
 
           if not (dvt-tipo-documento = "B" or "D")
              move tblco-tipo-documento to dvt-num-documento
              if dvt-tipo-documento = "G"
                 move "D" to dvt-num-documento (02 : 01)
              end-if
           end-if.

           move tor-num-fattura       to dvt-numero-fattura.
           move tblco-tipo-documento  to dvt-num-fattura.
           move tor-data-fattura      to dvt-data-fattura.
           move tblco-tipo-protocollo to dvt-num-protocollo.

           set  dvt-tipo-cfi-cli      to true.
           move tor-cod-cli           to dvt-codice-cfi.
           set  dvt-tipo-cf-cli       to true.
           move tor-cod-cli           to dvt-codice-cf.

           move tor-cod-pagamento     to dvt-codice-pa.
           set  cli-tipo-C            to true.
           move tor-cod-cli           to cli-codice.
           read clienti no lock invalid continue end-read.

           move cli-codice to cli-codice-G2.
           read CLI no lock invalid continue end-read.

           move cli-abi               to dvt-codice-abi abi-codice-abi-x
           move cli-cab               to dvt-codice-cab abi-codice-cab-x
           read abi no lock invalid continue end-read.
           move abi-banca1            to dvt-banca1.
           move abi-banca2            to dvt-banca2.
           move tor-cod-ese-iva       to dvt-codice-iv.
           move tor-contropartita     to dvt-codice-mas.
           move esercizio-G2          to tbldo-codice2.
           initialize dvt-note(1) dvt-note(2).
           string tor-note1      delimited size
                  tor-data-note1 delimited size
                  into dvt-note(1)
           end-string.
           move tor-note2             to dvt-note(2).
           move esercizio-G2          to dvt-esercizio.

           move "VA"                  to tblva-codice1.
           move spaces                to tblva-codice2.
           read TBLVA no lock invalid continue end-read.
           move tblva-cambio-vendite  to dvt-cambio dvt-cambio-fattura.

           move 0 to tot-fattura tot-iva.

           initialize tabellino-iva.
           move 0 to idx-iva.

           perform until 1 = 2
              read rordini next no lock at end exit perform end-read
              if ror-anno       not = tor-anno or
                 ror-num-ordine not = tor-numero
                 exit perform
              end-if
LUBEXX        move 0 to imponibile-riga
LUBEXX        compute imponibile-riga =
LUBEXX              ( ror-imponib-merce + 
LUBEXX                ror-imp-consumo   +
LUBEXX                ror-imp-cou-cobat +
LUBEXX                ror-add-piombo    )
LUBEXX        if imponibile-riga not = 0
                 initialize record-dvr replacing numeric data by zeroes
                                         alphanumeric data by spaces
                 move ror-perce-sconto     to dvr-sconto
                 move ror-num-riga         to UltimoNumeroRiga
                 move doccn-contatore      to dvr-progressivo
                 move ror-num-riga         to dvr-riga
                 move dvt-numero-documento to dvr-numero-documento
                 move dvt-num-documento    to dvr-num-documento
                 move dvt-data-documento   to dvr-data-documento
                 move dvt-codice-conto     to dvr-codice-conto
                 move "FITTIZIO"           to dvr-codice-art  
                 move "FITTIZIO"           to dvr-descrizione1
                 move "FITTIZIO"           to dvr-descrizione2
                 move ror-cod-iva          to dvr-codice-iv
                 move tor-contropartita    to dvr-codice-mas

                 if ror-qta = 0
                    move 1       to como-qta
                 else
OMAGGI              subtract ror-qta-omaggi from ror-qta
                    move ror-qta to como-qta
                 end-if

                 compute dvr-importo
                         dvr-importo-lire =
                       ( ror-imponib-merce + 
                         ror-imp-consumo   +
                         ror-imp-cou-cobat +
                         ror-add-piombo  ) * como-qta
                 set dvr-tipo-vendita-normale to true
                 
                 |Lo calcolo perchè nel DVR lo
                 |vuole anche per la singola riga
                 perform CALCOLA-IVA-TORDINI

                 move como-iva-2dec to dvr-importo-iva

                 write record-dvr invalid rewrite record-dvr end-write

                 perform varying idx-iva from 1 by 1
                           until idx-iva > 6
                    if el-cod-iva(idx-iva) = spaces
                       exit perform
                    end-if
                    if ror-cod-iva = el-cod-iva(idx-iva)
                       exit perform
                    end-if
                 end-perform

                 move ror-cod-iva   to el-cod-iva(idx-iva)
                 add  dvr-importo   to el-imponibile(idx-iva)

                 compute tot-fattura = 
                         tot-fattura + dvr-importo |L'iva la sommo dopo!!!

LUBEXX        end-if

           end-perform.

           |Il calcolo lo faccio alla fine
           |per averlo come B.I. dal totale
           move 0 to tot-iva.
           perform varying idx-iva from 1 by 1  
                     until idx-iva > 6
              if el-cod-iva(idx-iva) = spaces
                 exit perform
              end-if
              move el-cod-iva(idx-iva)    to ror-cod-iva
              move el-imponibile(idx-iva) to dvr-importo
              perform CALCOLA-IVA-TORDINI
              move como-iva-2dec to el-iva(idx-iva)
              compute tot-fattura =
                      tot-fattura + como-iva-2dec |L'importo l'ho già sommato prima!!
           end-perform.

           |Scrivo il file tmp che contiene la 
           |separazione dei codici iva
           perform WRITE-TMP-IVA.

           move UltimoNumeroRiga      to dvt-ultima-riga.

           initialize variabili-varsca replacing numeric data by zeroes
                                            alphanumeric data by spaces.
           move tor-cod-pagamento to sca-codice-pa.
           move tor-data-fattura  to sca-data-fattura.
           move tor-data-fattura  to sca-data-conteggio.
           move tot-fattura       to sca-importo-fattura.
           move tot-fattura       to sca-importo-fattura-va.
           move tot-iva           to sca-iva.
           move tot-iva           to sca-iva-va.
           
           move cli-mese1         to sca-mese1.
           move cli-giorno1       to sca-giorno1.
           move cli-mese2         to sca-mese2.
           move cli-giorno2       to sca-giorno2.

           move cli-escluso-dal-giorno1 to sca-escluso-dal-giorno1.
           move cli-escluso-dal-giorno2 to sca-escluso-dal-giorno2.

           call   "calsca" using variabili-varsca. 
           cancel "calsca".

           move 0 to idx dvt-num-rate.
           perform 36 times
              add 1 to idx
              move sca-codice-tr(idx) to dvt-codice-tr(idx)
              move sca-importo(idx)   to dvt-importo(idx)
              move sca-data(idx)      to dvt-scadenza(idx)
              if sca-a-vista(idx) = "S" 
                 move 99 to dvt-inizio-conteggio(idx)
              else                   
                 move  0 to dvt-inizio-conteggio(idx)
              end-if
              if dvt-codice-tr(idx) not = spaces and
                 dvt-importo(idx)   not = 0      and
                 dvt-scadenza(idx)  not = 0
                 add 1 to dvt-num-rate
              end-if
           end-perform.

           move tot-fattura to dvt-importo-totale.
           move tot-iva     to dvt-iva-totale.
           compute dvt-imponibile-totale = ( tot-fattura - tot-iva ).

           write record-dvt invalid rewrite record-dvt end-write.

      ***---
       CALCOLA-IVA-TORDINI.
           move 0 to como-iva como-iva-2dec.
           initialize record-tbliv replacing numeric data by zeroes
                                        alphanumeric data by spaces.
           move "IV"          to tbliv-codice1.
           move ror-cod-iva   to tbliv-codice2.
           read tivaese  no lock invalid continue end-read.
           compute como-iva =
             ( ( dvr-importo * tbliv-percentuale ) / 100 ).
           add     0,005 to como-iva.
           move como-iva to como-iva-2dec.
           add  como-iva-2dec to tot-iva 
           .
      * <TOTEM:END>

       AGGIORNA-MOVMAG-FROM-TNOTACR.
      * <TOTEM:PARA. AGGIORNA-MOVMAG-FROM-TNOTACR>
           add 1 to con-ult-num-movim.
      ***** Composizione record di testata del movimento
           initialize tmo-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           move tno-anno-fattura   to tmo-anno.
           move con-ult-num-movim  to tmo-numero.
           if tno-data-ingresso not = 0
              move tno-data-ingresso  to tmo-data-movim
           else
              move tno-data-fattura   to tmo-data-movim
           end-if.
           move tno-causale        to tmo-causale.
           set  tmo-cliente        to true.
           move tno-cod-cli        to tmo-cod-clifor.
           move tno-prg-destino    to tmo-destino.

LUBEXX*****           move cli-gdo            to tmo-gdo.
LUBEXX*****Passo il codice capogruppo
LUBEXX     move cli-gdo            to gdo-codice.
LUBEXX     read tgrupgdo invalid move spaces to gdo-capogruppo end-read.
LUBEXX     move gdo-capogruppo     to tmo-gdo.

           move tno-anno-fattura   to tmo-anno-fattura.
           move tno-num-fattura    to tmo-num-fattura  tmo-numdoc-clifor
           move tno-data-fattura   to tmo-data-fattura tmo-data-doc.
           move tno-cod-pagamento  to tmo-codpag.
           move tno-stato          to tmo-stato.
           move data-oggi          to tmo-data-creazione.
           move como-ora           to tmo-ora-creazione.
           move user-codi          to tmo-utente-creazione.

           move low-value          to rno-rec.
           move tno-chiave         to rno-chiave.

LUBEXX*****        set  cli-tipo-C            to true
LUBEXX*****        move tno-cod-cli           to cli-codice
LUBEXX*****        read clienti no lock invalid continue end-read
LUBEXX*****        move cli-tipo to tcl-codice
LUBEXX*****        read ttipocli no lock invalid continue end-read

           start rnotacr key not < rno-chiave 
                 invalid set errori to true
           end-start.

           perform varying counter from 1 by 1
                     until 1 = 2
              read rnotacr next at end exit perform end-read
              
              if tno-anno   not = rno-anno or 
                 tno-numero not = rno-numero
                 exit perform
              end-if

      ***** Scrittura delle righe di dettaglio del movimento
              initialize rmo-rec replacing numeric data by zeroes
                                      alphanumeric data by spaces
              move rno-cod-articolo      to art-codice
              read articoli no lock invalid continue end-read
              move tmo-anno              to rmo-anno
              move tmo-numero            to rmo-movim
              move counter               to rmo-riga
              move rno-prg-chiave        to rmo-chiave-progmag
              move art-unita-di-misura   to rmo-udm
              move tmo-tipo              to rmo-tipo
              move tmo-cod-clifor        to rmo-cod-clifor
              move tmo-destino           to rmo-destino
              move tmo-causale           to rmo-causale
              move tmo-data-movim        to rmo-data-movim
              |VARIAZIONE DI VALORE
              if tca-no-movim-giac-periodo
                 move 0                     to rmo-qta
                 |E' stato deciso così. Bisogna aggiungere add.le piombo
                 compute rmo-netto         = 
                       ((rno-prz-unitario  -
                       ((rno-prz-unitario  * rno-perce-sconto) / 100)) 
                       + rno-add-piombo )  * rno-qta

                 compute rmo-listino       = ( rno-prz-unitario  
                                             + rno-add-piombo) * rno-qta

                 compute rmo-imp-cons      = rno-imp-consumo   * rno-qta
                 compute rmo-coubat        = rno-imp-cou-cobat * rno-qta
              else
              |VARIAZIONE DI QUANTITA'
                 move rno-qta               to rmo-qta
                 |E' stato deciso così. Bisogna aggiungere add.le piombo
                 compute rmo-netto         = 
                         rno-prz-unitario  -
                       ((rno-prz-unitario  * rno-perce-sconto) / 100) 
                       + rno-add-piombo

                 compute rmo-listino       = rno-prz-unitario + 
                                             rno-add-piombo

                 compute rmo-imp-cons      = rno-imp-consumo
                 compute rmo-coubat        = rno-imp-cou-cobat
                 compute rmo-peso-tot-utf  = rno-peso-utf      * rmo-qta
                 compute rmo-peso-tot      = rno-peso-non-utf  * rmo-qta
              end-if
      *****
LUBEXX*****        if ttipocli-gdo
      *****           compute rmo-listino = rmo-netto    +
      *****                                 rmo-imp-cons +
      *****                                 rmo-coubat
LUBEXX*****        end-if

              compute rmo-sconto        = rno-perce-sconto

LUBEXX        if rmo-qta not =  0
                 move art-peso-standard  to rmo-peso-udm
LUBEXX        else
LUBEXX           move 0                  to rmo-peso-udm
LUBEXX        end-if

              move art-marca-prodotto    to rmo-marca-prodotto
              set  rmo-attivo            to true
              move tmo-dati-comuni       to rmo-dati-comuni
              
              write rmo-rec invalid rewrite rmo-rec end-write
              
              compute tmo-peso-utf = 
                      tmo-peso-utf + 
                      rmo-peso-tot-utf
              set CreatoMovim to true

           end-perform.
                       
           move tno-chiave to tmo-tor-chiave.
           move esercizio  to tmo-esercizio.

      ***** Scrittura del record di TMOVMAG (solo adesso 
      ***** è valorizzato il peso UTF)
           write tmo-rec invalid rewrite tmo-rec end-write.

LUBEXX     add 1 to fatture-in-magaz 
           .
      * <TOTEM:END>

       AGGIORNA-MOVMAG-FROM-TORDINI.
      * <TOTEM:PARA. AGGIORNA-MOVMAG-FROM-TORDINI>
           add 1 to con-ult-num-movim.
      ***** Composizione record di testata del movimento
           initialize tmo-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           move tor-anno-bolla     to tmo-anno.
           move con-ult-num-movim  to tmo-numero. 
           if tca-cod-magaz = "LBX"
              move tor-data-bolla     to tmo-data-movim
           else
              move tor-data-fattura   to tmo-data-movim
           end-if.
           move tor-causale        to tmo-causale.
           set  tmo-cliente        to true.
           move tor-cod-cli        to tmo-cod-clifor.
           move tor-prg-destino    to tmo-destino.
           move tor-vettore        to tmo-vettore.

LUBEXX*****           move cli-gdo            to tmo-gdo.
LUBEXX*****Passo il codice capogruppo
LUBEXX     move cli-gdo            to gdo-codice.
LUBEXX     read tgrupgdo invalid move spaces to gdo-capogruppo end-read.
LUBEXX     move gdo-capogruppo     to tmo-gdo.

           move tor-num-bolla      to tmo-numdoc-clifor.
           move tor-data-bolla     to tmo-data-doc.
           move tor-anno-fattura   to tmo-anno-fattura.
           move tor-num-fattura    to tmo-num-fattura.
           move tor-data-fattura   to tmo-data-fattura.
           move tor-cod-pagamento  to tmo-codpag.
           move tor-stato          to tmo-stato.
           move data-oggi          to tmo-data-creazione.
           move como-ora           to tmo-ora-creazione.
           move user-codi          to tmo-utente-creazione.

           move low-value          to ror-rec.
           move tor-chiave         to ror-chiave.

LUBEXX*****     set  cli-tipo-C            to true
LUBEXX*****     move tno-cod-cli           to cli-codice
LUBEXX*****     read clienti no lock invalid continue end-read
LUBEXX*****     move cli-tipo to tcl-codice
LUBEXX*****     read ttipocli no lock invalid continue end-read

           start rordini key not < ror-chiave 
                 invalid set errori to true
           end-start.

           perform varying counter from 1 by 1 until 1 = 2
              read rordini next at end exit perform end-read

              if ror-anno       not = tor-anno or 
                 ror-num-ordine not = tor-numero
                 exit perform
              end-if

      ***** Scrittura delle righe di dettaglio del movimento
              initialize rmo-rec replacing numeric data by zeroes
                                      alphanumeric data by spaces
              move ror-cod-articolo      to art-codice
              read articoli no lock invalid continue end-read
              move tmo-anno              to rmo-anno
              move tmo-numero            to rmo-movim
              move counter               to rmo-riga
              move ror-prg-chiave        to rmo-chiave-progmag
              move art-unita-di-misura   to rmo-udm
              move tmo-tipo              to rmo-tipo
              move tmo-cod-clifor        to rmo-cod-clifor
              move tmo-destino           to rmo-destino
              move tmo-causale           to rmo-causale
              move tmo-data-movim        to rmo-data-movim

              |VARIAZIONE DI VALORE
              if tca-no-movim-giac-periodo
                 move 0                     to rmo-qta
                 |E' stato deciso così. Bisogna aggiungere add.le piombo
                 compute rmo-netto         = ( ror-imponib-merce 
                                             + ror-add-piombo) * ror-qta


                 compute rmo-listino       = ror-prz-unitario  * ror-qta

                 compute rmo-imp-cons      = ror-imp-consumo   * ror-qta
                 compute rmo-coubat        = ror-imp-cou-cobat * ror-qta
              else
              |VARIAZIONE DI QUANTITA'
OMAGGI          |SOLO PER GLI ORDINI I QUALI NON POSSONO
OMAGGI          |ESSERE REGISTRATI CON QUANTITA' A ZERO
OMAGGI           subtract ror-qta-omaggi from ror-qta
                 move ror-qta               to rmo-qta
                 compute rmo-listino       = ror-prz-unitario
                 compute rmo-imp-cons      = ror-imp-consumo
                 compute rmo-coubat        = ror-imp-cou-cobat
                 |E' stato deciso così. Bisogna aggiungere add.le piombo
                 compute rmo-netto         = ror-imponib-merce + 
                                             ror-add-piombo

                 compute rmo-peso-tot-utf  = ror-peso-utf      * rmo-qta
                 compute rmo-peso-tot      = ror-peso-non-utf  * rmo-qta
              end-if

              compute rmo-sconto        = ror-perce-sconto

LUBEXX        if rmo-qta not =  0
                 move art-peso-standard  to rmo-peso-udm
LUBEXX        else
LUBEXX           move 0                  to rmo-peso-udm
LUBEXX        end-if

LUBEXX*****        if tor-fattura-manuale
LUBEXX*****           if ttipocli-gdo
      *****              compute rmo-listino = rmo-netto    +
      *****                                    rmo-imp-cons +
      *****                                    rmo-coubat
LUBEXX*****           end-if
LUBEXX*****        end-if

              move art-marca-prodotto    to rmo-marca-prodotto
              set  rmo-attivo            to true
              move tmo-dati-comuni       to rmo-dati-comuni

              write rmo-rec invalid rewrite rmo-rec end-write

              compute tmo-peso-utf = 
                      tmo-peso-utf + 
                      rmo-peso-tot-utf

              set CreatoMovim to true
OMAGGI        if ror-qta-omaggi not = 0
OMAGGI           perform RIGA-OMAGGI
OMAGGI        end-if
           end-perform.
                       
           move tor-chiave to tmo-tor-chiave.
           move esercizio  to tmo-esercizio.

      ***** Scrittura del record di TMOVMAG (solo adesso è valorizzato
      ***** il peso UTF
           write tmo-rec invalid rewrite tmo-rec end-write.

LUBEXX     add 1 to fatture-in-magaz 
           .
      * <TOTEM:END>

       AGGIORNA-TPARAMGE.
      * <TOTEM:PARA. AGGIORNA-TPARAMGE>
           close tparamge.
           set tutto-ok   to true.
           set RecLocked  to false.
           open i-o tparamge.

           if status-tparamge = "00"
              move spaces to tge-codice
              read tparamge lock invalid set errori to true end-read
              move como-ora-contab    to tge-ora-contab              
              move como-data-contab   to tge-data-contab              
              rewrite tge-rec invalid continue end-rewrite
              close      tparamge
           end-if.
           open input tparamge 
           .
      * <TOTEM:END>

       APERTURE-LOCK-G2.
      * <TOTEM:PARA. APERTURE-LOCK-G2>
           perform OPEN-PAT-LOCK.
           if tutto-ok
              perform OPEN-PAR-LOCK
              if tutto-ok
                 perform OPEN-PAS-LOCK
                 if tutto-ok
                    perform OPEN-PNT-LOCK
                    if tutto-ok
                       perform OPEN-PNI-LOCK
                       if tutto-ok
                          perform OPEN-PNR-LOCK
                          if tutto-ok
                             perform OPEN-DOCCN-LOCK
                          end-if
                       end-if
                    end-if
                 end-if
              end-if
           end-if.

           if tutto-ok
              close PAT PAR PAS PNT PNR PNI DOCCN
           end-if.

      ***---
       OPEN-PAT-LOCK.
           open i-o PAT allowing readers.
           if RecLocked
              move "PAT" to geslock-nome-file
              perform ERRORE-LOCK-G2
           end-if.

      ***---
       OPEN-PAR-LOCK.
           open i-o PAR allowing readers.
           if RecLocked
              move "PAR" to geslock-nome-file
              perform ERRORE-LOCK-G2
           end-if.

      ***---
       OPEN-PAS-LOCK.
           open i-o PAS allowing readers.
           if RecLocked
              move "PAS" to geslock-nome-file
              perform ERRORE-LOCK-G2
           end-if.

      ***---
       OPEN-PNT-LOCK.
           open i-o PNT allowing readers.
           if RecLocked
              move "PNT" to geslock-nome-file
              perform ERRORE-LOCK-G2
           end-if.

      ***---
       OPEN-PNR-LOCK.
           open i-o PNR allowing readers.
           if RecLocked
              move "PNR" to geslock-nome-file
              perform ERRORE-LOCK-G2
           end-if.

      ***---
       OPEN-PNI-LOCK.
           open i-o PNI allowing readers.
           if RecLocked
              move "PNI" to geslock-nome-file
              perform ERRORE-LOCK-G2
           end-if.

      ***---
       OPEN-DOCCN-LOCK.
           open i-o DOCCN allowing readers.
           if RecLocked
              move "DOCCN" to geslock-nome-file
              perform ERRORE-LOCK-G2
           end-if.

      ***---
       ERRORE-LOCK-G2.
           move "Chiudere Gestionale 2 e riprovare!" to 
           geslock-messaggio.
           move 0 to geslock-v-riprova.
           move 0 to geslock-v-ignora.
           move 1 to geslock-v-termina.
           call   "geslock" using geslock-linkage.
           cancel "geslock" 
           .
      * <TOTEM:END>

       CONTINUA.
      * <TOTEM:PARA. CONTINUA>
           modify form1-handle, visible = 0.
           perform SCR-CONF-1-OPEN-ROUTINE.
           move 27 to key-status 
           .
      * <TOTEM:END>

       CONTROLLO-ANNO-CONGRUENTE.
      * <TOTEM:PARA. CONTROLLO-ANNO-CONGRUENTE>
           initialize tor-rec replacing numeric data by spaces
                                   alphanumeric data by zeroes.

           move 1 to tor-anno-fattura tor-num-fattura.
           set tor-fatt-si-prenotata to true.

           set tor-no-agg-contab     to true.
           set tutto-ok to true.
           start tordini key not < k-contab
                 invalid continue
             not invalid
                 read tordini next no lock
                 if tor-anno-fattura      not = esercizio or
                    tor-data-fattura(1:4) not = esercizio
                    if tor-no-agg-contab
                       set errori to true
                       display message "OPERAZIONE IMPOSSIBILE"
                                x"0d0a""ANNO DI CONTAB INCONGRUENTE!"
                                 title tit-err
                                  icon 2
                    end-if
                 end-if
           end-start 

           .
      * <TOTEM:END>

       CREA-CONTATORE-DVT.
      * <TOTEM:PARA. CREA-CONTATORE-DVT>
           initialize record-doccn replacing numeric data by zeroes
                                        alphanumeric data by spaces.
           move "CN"                   to doccn-codice1.
           move G2-codice-login        to doccn-ditta.
           move spaces                 to doccn-esercizio.
           move "10"                   to doccn-tipo.
           move "Documenti Di Vendita" to doccn-descrizione.
           accept doccn-data  from century-date.
           write record-doccn invalid continue end-write.
           read doccn lock    invalid continue end-read 
           .
      * <TOTEM:END>

       ELABORA-TNOTACR.
      * <TOTEM:PARA. ELABORA-TNOTACR>
           move 0 to counter2 counter3.
           modify scr-conf-2-handle, visible = 0.
           initialize tno-rec replacing numeric data by spaces
                                   alphanumeric data by zeroes.

           set primo-ordine to true.
           initialize fatture-elaborate fatture-in-magaz.

           move 1 to tno-anno-fattura tno-num-fattura.
           set tno-fatt-si-prenotata to true.

           set tno-no-agg-contab     to true.
           set tutto-ok  to true.
           start tnotacr key not < k-contab 
                 invalid set errori to true
           end-start.

           if tutto-ok    
              move 0 to lfel-anno lfel-a lfel-da

              |RIPULISCO LA SCREEN DAL CONTATORE
              display "                          "
                 upon scr-oper-handle at column 34
                                           line 25
              display "                          "
                 upon scr-oper-handle at column 30
                                           line 26
              ||||||||

              modify lab-calc1, title = "Aggiornamento magazzino in cors
      -    "o..."
              initialize fatture-elaborate fatture-in-magaz

              perform OPEN-IO-TCONTAT-LOCK
              if tutto-ok
                 perform READ-RECORD-DOCCN-LOCK
              end-if
              if tutto-ok
                 move esercizio to con-anno
                 
                 read tcontat invalid continue end-read
                 
                 perform until 1 = 2
                    read tnotacr next no lock at end exit perform 
                    end-read

                    add 1 to counter3
                    add 1 to counter2
                    if counter2 = 50
                       move counter3 to counter-edit
                       display counter-edit
                          upon scr-oper-handle at column 34
                                                    line 25
                       move 0 to counter2
                       if counter3 = 50
                          display "  CONTAB COUNTER" 
                          upon scr-oper-handle at column 30
                                                    line 26
                       end-if
                    end-if

                    if tno-si-agg-contab
                       exit perform
                    end-if

                    if tno-anno-fattura = 0 or
                       tno-num-fattura  = 0
                       exit perform
                    end-if

                    move tno-causale to tca-codice
                    read tcaumag no lock invalid continue end-read
                    if tca-nota-credito-si
                       if Note
                          perform READ-RECORD-TNOTACR-LOCK
                          if termina exit perform end-if
                          if tutto-ok 
                             perform ELABORAZIONE-TNOTACR
LUBEXX                       if tno-num-fattura not = 0
                                add 1 to fatture-elaborate
                                if primo-ordine
                                   set primo-ordine     to false
                                   move tno-num-fattura to 
           da-fattura-edit lfel-da
                                end-if
                                move tno-num-fattura   to 
           a-fattura-edit lfel-a
                                move tno-anno-fattura  to lfel-anno
LUBEXX                       end-if
                          end-if
                       end-if
                    end-if

                 end-perform
                 
                 if CreatoMovim
                    write con-rec invalid rewrite con-rec end-write
                 end-if

                 unlock tcontat all records

                 close  tcontat

                 move fatture-elaborate to fatture-elaborate-edit
                 rewrite record-doccn invalid continue end-rewrite
                 unlock doccn all records

                 accept fe-attiva from environment "FE_ATTIVA"
                 if fe-attiva not = spaces
                    if lfel-anno not = 0 and
                       lfel-da   not = 0 and
                       lfel-a    not = 0
                       set lfel-gen to true
                       move scr-oper-handle   to lfel-handle  
                       set lfel-nc to true
                       call   "estfel-p" using lfel-linkage
                       cancel "estfel-p"
                    end-if
                 end-if
              end-if

LUBEXX*****        move save-nc to tra-ult-nc-contab
LUBEXX*****        accept tra-data-modifica from century-date
LUBEXX*****        accept tra-ora-modifica  from time
LUBEXX*****        move user-codi to tra-utente-modifica
LUBEXX*****        rewrite tra-rec invalid continue end-rewrite
LUBEXX*****        unlock tmovtrat all records
LUBEXX*****        close  tmovtrat

              if fatture-in-magaz = 0
                 modify lab-calc2, title = "Nessun Aggiornamento magazzi
      -    "no effettuato"
              else
                 modify lab-calc2, title = "Aggiornamento magazzino effe
      -    "ttuato"
              end-if

              modify lab-tras1, title "Calcolo Trasporti in corso..."
              perform SCR-CALTRAS-OPEN-ROUTINE

              if tot-mov-from-tras = 0
                 modify lab-tras2, title = "Nessun movimento"
              else
                 modify lab-tras2, title = "Calcolo eseguito"
              end-if

              if fatture-elaborate not = 0 or
                 tot-mov-from-tras not = 0

                 |Le note credito non devono aggiornare le
                 |statistiche. Verranno aggiornate con le fatture merce
                 |come richiesta Trivella 10/02/2006
      *****           Modify  Lab-Stat1, Title = "aggiornamento Statistiche Mensili In Corso..."
      *****           Perform Scr-Statmese-Open-Routine
      *****           If Link-Result = 1
      *****              Modify  Lab-Stat2, Title = "aggiornamento Effettuato"
      *****           Else
                    modify  lab-stat2, title = "Nessun Aggiornamento sta
      -    "tistiche effettuato"
      *****           end-if

                 modify  lab-prima1, title = "Creazione Prima Nota e Sca
      -    "denziari in corso..."
                 perform SCR-PRIMA-NOTA-OPEN-ROUTINE
                 if link-pn-result = 1
                    modify  lab-prima2, title = "Creazione effettuata"
                 else
                    modify  lab-prima2, title = "Nessuna Creazione effet
      -    "tuata"
                 end-if
                 
                 modify lab-doc, title "Premere Ok per proseguire..."

              else
                 modify  lab-doc, title = "Nessun documento presente da 
      -    "Aggiornare!"
              end-if

           else
              modify  lab-doc, title = "Nessun documento presente da Agg
      -    "iornare!"
           end-if 
           .
      * <TOTEM:END>

       ELABORA-TORDINI.
      * <TOTEM:PARA. ELABORA-TORDINI>
           move 0 to counter2 counter3.
           initialize tor-rec replacing numeric data by spaces
                                   alphanumeric data by zeroes.

           set primo-ordine to true.
           initialize fatture-elaborate fatture-in-magaz.

           move 1 to tor-anno-fattura tor-num-fattura.
           set tor-fatt-si-prenotata to true.

           set tor-no-agg-contab     to true.
           set tutto-ok to true.
           start tordini key not < k-contab
                 invalid set errori to true
           end-start.

           move 0 to tot-fatt-from-provv.
           move 0 to ult-num-fatt.
           modify scr-conf-2-handle, visible = 0.

           if Merce
              modify lab-provv1 title "Calcolo provvigioni in corso..."
LUBEXX*****        |Sblocco un attimo il record. Serve al calprovv
LUBEXX*****        read tmovtrat no lock
              perform SCR-CALPROVV-OPEN-ROUTINE
LUBEXX*****        |Blocco il record
LUBEXX*****        read tmovtrat lock
              if tot-fatt-from-provv = 0
                 modify lab-provv2, title = "Nessuna provvigione"
              else
                 modify lab-provv2, title = "Calcolo eseguito"
              end-if
           end-if.

           if tutto-ok
              move 0 to lfel-anno lfel-a lfel-da
              |RIPULISCO LA SCREEN DAL CONTATORE
              display "                          "
                 upon scr-oper-handle at column 34
                                           line 25
              display "                          "
                 upon scr-oper-handle at column 30
                                           line 26
              ||||||||

              modify lab-calc1, title = "Aggiornamento magazzino in cors
      -    "o..."
              initialize fatture-elaborate fatture-in-magaz

              perform OPEN-IO-TCONTAT-LOCK
              if tutto-ok
                 perform READ-RECORD-DOCCN-LOCK
              end-if
              if tutto-ok
                 move esercizio to con-anno

                 read tcontat invalid continue end-read

                 perform until 1 = 2
                    read tordini next no lock at end exit perform
                    end-read

                    add 1 to counter3
                    add 1 to counter2
                    if counter2 = 50
                       move counter3 to counter-edit
                       display counter-edit
                          upon scr-oper-handle at column 34
                                                    line 25
                       move 0 to counter2
                       if counter3 = 50
                          display "  CONTAB COUNTER" 
                          upon scr-oper-handle at column 30
                                                    line 26
                       end-if
                    end-if

LUBEXX*****                    |I CORRISPETTIVI NON VANNO PASSATI IN CONTABILITÀ
LUBEXX*****                    if tor-causale not = tge-causale-corrisp

                       if tor-si-agg-contab
                          exit perform
                       end-if

                       if tor-anno-fattura = 0
                          exit perform
                       end-if

                       if Manuali
                          if tor-fattura-manuale set record-ok to true
                          else                   set record-ok to false
                          end-if
                       else
                          if tor-ordine          set record-ok to true
                          else                   set record-ok to false
                          end-if
                       end-if

                       if record-ok
                          perform READ-RECORD-TORDINI-LOCK
                          if termina  exit perform end-if
                          if tutto-ok
                             perform ELABORAZIONE-TORDINI
LUBEXX                       if tor-num-fattura not = 0
                                add 1 to fatture-elaborate
                                if primo-ordine
                                   set primo-ordine     to false
                                   move tor-num-fattura to 
           da-fattura-edit lfel-da
                                end-if
                                move tor-num-fattura   to 
           a-fattura-edit lfel-a
                                move tor-anno-fattura  to lfel-anno
LUBEXX                       end-if
                          end-if
                       end-if

LUBEXX*****                    end-if

                 end-perform

                 if CreatoMovim
                    write con-rec invalid rewrite con-rec end-write
                 end-if

                 unlock tcontat all records

                 close  tcontat

                 move fatture-elaborate to fatture-elaborate-edit
                 rewrite record-doccn invalid continue end-rewrite
                 unlock doccn all records
                                        
                 accept fe-attiva from environment "FE_ATTIVA"
                 if fe-attiva not = spaces
                    if lfel-anno not = 0 and
                       lfel-da   not = 0 and
                       lfel-a    not = 0
                       set lfel-gen to true
                       move scr-oper-handle   to lfel-handle  
                       set lfel-f to true
                       call   "estfel-p" using lfel-linkage
                       cancel "estfel-p"
                    end-if
                 end-if
              end-if

LUBEXX*****        move save-fatt to tra-ult-fatt-contab
LUBEXX*****        accept tra-data-modifica from century-date
LUBEXX*****        accept tra-ora-modifica  from time
LUBEXX*****        move user-codi to tra-utente-modifica
LUBEXX*****        rewrite tra-rec invalid continue end-rewrite
LUBEXX*****        unlock tmovtrat all records
LUBEXX*****        close  tmovtrat

              if fatture-in-magaz = 0
                 modify lab-calc2, title = "Nessun Aggiornamento magazzi
      -    "no effettuato"
              else
                 modify lab-calc2, title = "Aggiornamento magazzino effe
      -    "ttuato"
              end-if

              modify lab-tras1, title "Calcolo Trasporti in corso..."
              perform SCR-CALTRAS-OPEN-ROUTINE

              if tot-mov-from-tras = 0
                 modify lab-tras2, title = "Nessun movimento"
              else
                 modify lab-tras2, title = "Calcolo eseguito"
              end-if

              if fatture-elaborate   not = 0 or
                 tot-fatt-from-provv not = 0 or
                 tot-mov-from-tras   not = 0
                 modify scr-conf-2-handle, visible = 0

                 |Le fatture manuali non devono aggiornare le
                 |statistiche. Verranno aggiornate con le fatture merce
                 |come richiesta Trivella 10/02/2006
                 if Manuali
                    modify  lab-stat2, title = "Nessun Aggiornamento eff
      -    "ettuato"
                 else
                    modify  lab-stat1, title = "Aggiornamento Statistich
      -    "e Settoriali in corso..."
                    perform SCR-STATMESE-OPEN-ROUTINE
                    if link-result = 1
                       modify  lab-stat2, title = "Aggiornamento effettu
      -    "ato"
                    else
                       modify  lab-stat2, title = "Nessun Aggiornamento 
      -    "statistiche effettuato"
                    end-if
                 end-if

                 modify  lab-prima1, title = "Creazione Prima Nota e Sca
      -    "denziari in corso..."
                 perform SCR-PRIMA-NOTA-OPEN-ROUTINE
                 if link-pn-result = 1
                    modify  lab-prima2, title = "Creazione effettuata"
                 else
                    modify  lab-prima2, title = "Nessuna Creazione effet
      -    "tuata"
                 end-if
 
                 modify lab-doc, title = "Premere Ok per proseguire..."
 
              else
                 modify  lab-doc, title = "Nessun documento presente da 
      -    "Aggiornare!"
              end-if

           else
              modify  lab-doc, title = "Nessun documento presente da Agg
      -    "iornare!"
           end-if.


           if aggiorna-tparamge
              perform AGGIORNA-TPARAMGE
           end-if 
           .
      * <TOTEM:END>

       ELABORAZIONE-TNOTACR.
      * <TOTEM:PARA. ELABORAZIONE-TNOTACR>
           accept como-ora  from time.
           accept data-oggi from century-date.

           set cli-tipo-C    to true.
           move tno-cod-cli  to cli-codice.
           
           read clienti no lock invalid continue end-read.
           
           move tno-causale to tca-codice.
           read tcaumag no lock invalid continue end-read.
           if tca-si-movim
              perform AGGIORNA-MOVMAG-FROM-TNOTACR
           end-if.
                                   
      ***** Aggiornamento del flag di contabilizzazione avvenuta 
           set tno-si-agg-contab to true.

LUBEXX     accept  tno-data-ultima-modifica from century-date.
LUBEXX     accept  tno-ora-ultima-modifica  from time.
LUBEXX     accept  tno-data-contab          from century-date.
LUBEXX     move    user-codi to tno-utente-ultima-modifica.

           rewrite tno-rec invalid continue end-rewrite.
           unlock tnotacr   all records.

           |Gli ordini che non emettono fattura
           |non vanno riportati in contabilità
LUBEXX     if tca-si-emissione
              perform AGGIORNA-CONTABILITA-TNOTACR
LUBEXX     end-if.
           call "w$flush" 
           .
      * <TOTEM:END>

       ELABORAZIONE-TORDINI.
      * <TOTEM:PARA. ELABORAZIONE-TORDINI>
           accept como-ora  from time.
           accept data-oggi from century-date.

           set cli-tipo-C    to true.
           move tor-cod-cli  to cli-codice.

           read clienti no lock invalid continue end-read.

           move tor-causale to tca-codice.
           read tcaumag no lock invalid continue end-read.
           if tca-si-movim
              perform AGGIORNA-MOVMAG-FROM-TORDINI
           end-if.

      ***** Aggiornamento del flag di contabilizzazione avvenuta
           set tor-si-agg-contab to true.

LUBEXX     accept  tor-data-ultima-modifica from century-date.
LUBEXX     accept  tor-ora-ultima-modifica  from time.
LUBEXX     accept  tor-data-contab          from century-date.
           accept  tor-ora-contab           from time
LUBEXX     move    user-codi to tor-utente-ultima-modifica.

           rewrite tor-rec invalid continue end-rewrite.
           
           unlock tordini   all records.

           |Gli ordini che non emettono fattura
           |non vanno riportati in contabilità
LUBEXX     if tca-si-emissione
              perform AGGIORNA-CONTABILITA-TORDINI
LUBEXX     end-if.
           call "w$flush".

           set aggiorna-tparamge   to true.
           move tor-data-contab    to como-data-contab
           move tor-ora-contab     to como-ora-contab 
           .
      * <TOTEM:END>

       OPEN-CLEAR-GDVR.
      * <TOTEM:PARA. OPEN-CLEAR-GDVR>
           |Ripulisco il DVR prima di crearlo per
           |eliminare qualsiasi dato già presente
           |Come confermato da SSI questi due files non
           |sono utilizzati da Lubex x' non hanno il modulo
           set RecLocked to false.
           open i-o GDVR allowing readers.
           if RecLocked
              initialize geslock-linkage
              move "GDVR" to geslock-nome-file
              set tutto-ok to true
              string  "Il file righe dei documenti di vendita"
               x"0d0a""risulta in uso su altro terminale."
               x"0d0a""Questo comporta l'impossibilità a contabilizzare"
            delimited size
                    into geslock-messaggio
              end-string
              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 1 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova perform OPEN-CLEAR-GDVR
              when ignora  
              when termina set errori to true
              end-evaluate
           else
              |Non posso aprire in output x' altrimenti
              |lo andrebbe a creare all'interno dei file GESLUX
              move low-value to record-dvr
              start gdvr key is >= dvr-codice
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read   gdvr next at end exit perform end-read
                       delete gdvr record invalid continue end-delete
                    end-perform
              end-start
           end-if 
           .
      * <TOTEM:END>

       OPEN-CLEAR-GDVT.
      * <TOTEM:PARA. OPEN-CLEAR-GDVT>
           |Ripulisco il GDVT prima di crearlo per
           |eliminare qualsiasi dato già presente
           |Come confermato da SSI questi due files non
           |sono utilizzati da Lubex x' non hanno il modulo
           set RecLocked to false.
           open i-o GDVT allowing readers.
           if RecLocked
              initialize geslock-linkage
              move "GDVT" to geslock-nome-file
              set tutto-ok to true
              string  "Il file testate dei documenti di vendita"
               x"0d0a""risulta in uso su altro terminale."
               x"0d0a""Questo comporta l'impossibilità a contabilizzare"
            delimited size
                    into geslock-messaggio
              end-string
              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 1 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova perform OPEN-CLEAR-GDVT
              when ignora
              when termina set errori to true
              end-evaluate
           else
              |Non posso aprire in output x' altrimenti lo
              |andrebbe a creare all'interno dei file GESLUX
              move low-value to record-dvt
              start gdvt key is >= dvt-codice
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read   gdvt next at end exit perform end-read
                       delete gdvt record invalid continue  end-delete
                    end-perform
              end-start
           end-if 
           .
      * <TOTEM:END>

       OPEN-IO-TCONTAT-LOCK.
      * <TOTEM:PARA. OPEN-IO-TCONTAT-LOCK>
           perform until 1 = 2
              set RecLocked to false
              initialize geslock-linkage
              move "tcontat" to geslock-nome-file

              set tutto-ok  to true
              open i-o tcontat allowing readers

              if RecLocked   
                 string "La tabella dei contatori risulta"
                 x"0d0a""in uso su altro terminale."
                 x"0d0a""Contabilizzazione impossibile." delimited size
                       into geslock-messaggio
                 end-string
                 move 1 to geslock-v-riprova
                 move 0 to geslock-v-ignora
                 move 1 to geslock-v-termina
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova continue
                 when ignora  
                 when termina set errori to true
                              exit perform
                 end-evaluate
              else
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "contatore-anno.cpy".
           copy "calcola-colore-trasparente.cpy".
           copy "multigest.cpy" 
           .
      * <TOTEM:END>

       READ-RECORD-DOCCN-LOCK.
      * <TOTEM:PARA. READ-RECORD-DOCCN-LOCK>
           perform until 1 = 2
              set RecLocked to false
              initialize geslock-linkage
              move "DOCCN" to geslock-nome-file

              set tutto-ok to true
              move "CN" to doccn-codice1
              move G2-codice-login to doccn-ditta
              move spaces to doccn-esercizio
              move "10"   to doccn-tipo
              read doccn with lock 
                   invalid perform CREA-CONTATORE-DVT
              end-read

              if RecLocked
                 string "La tabella dei contatori G2 risulta"
                 x"0d0a""in uso su altro terminale."
                 x"0d0a""Contabilizzazione impossibile." delimited size
                       into geslock-messaggio
                 end-string
                 move 1 to geslock-v-riprova
                 move 0 to geslock-v-ignora
                 move 0 to geslock-v-termina
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova continue
                 when ignora  
                 when termina set errori to true
                              exit perform
                 end-evaluate
              else
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       READ-RECORD-TNOTACR-LOCK.
      * <TOTEM:PARA. READ-RECORD-TNOTACR-LOCK>
           perform until 1 = 2
              set RecLocked to false
              initialize geslock-linkage
              move "tnotacr" to geslock-nome-file

              set tutto-ok to true
              read tnotacr with lock key is k-contab 
                   invalid continue 
              end-read

              if RecLocked        
                 move tno-num-fattura to tor-num-fattura-edit
                 string   "La fattura n. " tor-num-fattura-edit
                   x"0d0a""risulta in uso su altro terminale."
                   x"0d0a""Questo comporta l'impossibilità ad"
                   x"0d0a""aggiornarla come contabilizzata." delimited 
           size
                       into geslock-messaggio
                 end-string
                 move 1 to geslock-v-riprova
                 move 1 to geslock-v-ignora
                 move 1 to geslock-v-termina
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova continue
                 when ignora  
                 when termina set errori to true
                              unlock tnotacr all records
                              exit perform
                 end-evaluate
              else
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       READ-RECORD-TORDINI-LOCK.
      * <TOTEM:PARA. READ-RECORD-TORDINI-LOCK>
           perform until 1 = 2
              set RecLocked to false
              initialize geslock-linkage
              move "tordini" to geslock-nome-file

              set tutto-ok to true
              read tordini with lock key is k-contab
                   invalid continue 
              end-read

              if RecLocked        
                 move tor-num-fattura to tor-num-fattura-edit
                 string   "La fattura n. " tor-num-fattura-edit
                  x"0d0a""risulta in uso su altro terminale."
                  x"0d0a""Questo comporta l'impossibilità ad"
                  x"0d0a""aggiornarla come contabilizzata." delimited 
           size
                        into geslock-messaggio
                 end-string
                 move 1 to geslock-v-riprova
                 move 1 to geslock-v-ignora
                 move 1 to geslock-v-termina
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova continue
                 when ignora  
                 when termina set errori to true
                              unlock tordini all records
                              exit perform
                 end-evaluate
              else
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       RIEPILOGO.
      * <TOTEM:PARA. RIEPILOGO>
           if fatture-elaborate   not = 0 or
              tot-fatt-from-provv not = 0 or
              tot-mov-from-tras   not = 0
              initialize path-contab
              accept  path-contab from environment "PATH_CONTAB"
              inspect path-contab replacing trailing spaces by low-value
              string  path-contab    delimited low-value
                      save-nome-file delimited size
                      into path-contab
              end-string

              call "C$COPY" using wstampa, path-contab
              move 0 to v-screen
              modify scr-oper-handle, visible v-screen
              move 0 to key-status
              perform SCR-FINE-OPEN-ROUTINE
           end-if.
           move 27 to key-status 
           .
      * <TOTEM:END>

       RIGA-OMAGGI.
      * <TOTEM:PARA. RIGA-OMAGGI>
           add 1 to counter.
           initialize rmo-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           move ror-cod-articolo      to art-codice.
           read articoli no lock invalid continue end-read.
           move tmo-anno              to rmo-anno.
           move tmo-numero            to rmo-movim.
           move counter               to rmo-riga.
           move ror-prg-chiave        to rmo-chiave-progmag.
           move art-unita-di-misura   to rmo-udm.
           move tmo-tipo              to rmo-tipo.
           move tmo-cod-clifor        to rmo-cod-clifor.
           move tmo-destino           to rmo-destino.
           move tmo-causale           to rmo-causale.
           move tmo-data-movim        to rmo-data-movim.

           move ror-qta-omaggi        to rmo-qta.
           compute rmo-netto         = 0.
           compute rmo-listino       = 0.
           compute rmo-imp-cons      = 0.
           compute rmo-coubat        = 0.
           compute rmo-netto         = 0.
           compute rmo-peso-tot-utf  = ror-peso-utf      * rmo-qta.
           compute rmo-peso-tot      = ror-peso-non-utf  * rmo-qta.

           compute rmo-sconto        = 0.
           compute rmo-peso-udm      = art-peso-standard.

           move art-marca-prodotto    to rmo-marca-prodotto.
           set  rmo-attivo            to true.
           move tmo-dati-comuni       to rmo-dati-comuni.

           write rmo-rec invalid rewrite rmo-rec end-write.

           compute tmo-peso-utf = 
                   tmo-peso-utf + 
                   rmo-peso-tot-utf 
           .
      * <TOTEM:END>

       SALVA-NUMERI-DI-PARTENZA.
      * <TOTEM:PARA. SALVA-NUMERI-DI-PARTENZA>
           open input tcontat.
           move esercizio to con-anno.
           read tcontat no lock invalid continue end-read.
           move con-ult-num-movim to save-ult-movim.
           close tcontat.

           open input tmovtrat.
           move esercizio to tra-anno.
           read tmovtrat no lock invalid continue end-read.
           move tra-ult-mov-tras  to save-ult-tras.
           move tra-ult-mov-provv to save-ult-provv.
           close tmovtrat.

           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  wstampa   from environment "PATH_ST".
           inspect wstampa replacing trailing spaces by low-value.
           string  wstampa   delimited low-value
                   "CONTAB_" delimited size
                   como-data delimited size
                   "_"       delimited size
                   como-ora  delimited size
                   ".txt"    delimited size
                   into wstampa
           end-string.
           open output lineseq.
           string "CONTABILIZZAZIONE DEL " delimited size
                  como-data(7:2)           delimited size
                  "/"                      delimited size
                  como-data(5:2)           delimited size
                  "/"                      delimited size
                  como-data(1:4)           delimited size
                  " DELLE "                delimited size
                  como-ora(1:2)            delimited size
                  ":"                      delimited size
                  como-ora(3:2)            delimited size
                  into line-riga
           end-string.
           write line-riga.

           move "Numeri di partenza per le elaborazioni" to line-riga.
           write line-riga.
           write line-riga from spaces.

           initialize line-riga.
           string "MOVIMENTI (CREAZIONE).:" delimited size
                  save-ult-movim delimited size
                  into line-riga
           end-string.
           write line-riga.

           initialize line-riga.
           string "TRASPORTI (MOV.MAG.)..:"  delimited size
                  save-ult-tras   delimited size
                  into line-riga
           end-string.
           write line-riga.

           initialize line-riga.
           string "PROVVIGIONI (FATTURA).:" delimited size
                  save-ult-provv delimited size
                  into line-riga
           end-string.
           write line-riga.
                           
           write line-riga from spaces.
           move "Prendere nota dei numeri indicati..." to line-riga.
           write line-riga.

           close lineseq.

           initialize save-nome-file.
           
           string "CONTAB_" delimited size
                  como-data delimited size
                  "_"       delimited size
                  como-ora  delimited size
                  ".txt"    delimited size
                  into save-nome-file
           end-string 
           .
      * <TOTEM:END>

       TROVA-TMOVTRAT-ANNO-ESERCIZIO.
      * <TOTEM:PARA. TROVA-TMOVTRAT-ANNO-ESERCIZIO>
           set tutto-ok to true.
           open input tmovtrat.
           move esercizio to tra-anno.
           read tmovtrat  no lock
                invalid
                display message "TMOVTRAT per l'anno "
                                "d'esericzio NON trovati!"
                         x"0d0a""IMPOSSIBILE PROCEDERE!!"
                          title tit-err
                           icon 3
                set errori to true
           end-read.
           close tmovtrat 
           .
      * <TOTEM:END>

       WRITE-TMP-IVA.
      * <TOTEM:PARA. WRITE-TMP-IVA>
           if path-tmp-iva = spaces
              accept  path-tmp-iva from environment "PATH_ST"
              inspect path-tmp-iva replacing trailing space by low-value
              accept como-data from century-date
              accept como-ora  from time
              string  path-tmp-iva   delimited low-value
                      "path-tmp-iva" delimited size
                      "_"            delimited size
                      como-data      delimited size
                      "_"            delimited size
                      como-ora       delimited size
                      ".tmp"         delimited size
                      into path-tmp-iva
              end-string
              open output tmp-iva
              close tmp-iva 
              open i-o tmp-iva
           end-if.

           move dvr-progressivo to tmp-iv-progressivo.
           move tabellino-iva   to tmp-iv-tabellino-iva.
           write tmp-iv-rec invalid continue end-write 
           .
      * <TOTEM:END>

       OPEN-IO-TMOVTRAT.
      * <TOTEM:PARA. OPEN-IO-TMOVTRAT>
      *****     set RecLocked to false.
      *****     set tutto-ok  to true.
      *****     open i-o tmovtrat.
      *****     if RecLocked
      *****        initialize geslock-messaggio
      *****        string   "File già in uso!"
      *****          x"0d0a""Impossibile procedere!" delimited size
      *****              into geslock-messaggio
      *****        end-string
      *****        move 1 to geslock-v-riprova
      *****        move 0 to geslock-v-ignora
      *****        move 1 to geslock-v-termina
      *****        move   "tmovtrat"   to geslock-nome-file
      *****        call   "geslock" using geslock-linkage
      *****        cancel "geslock"
      *****        evaluate true
      *****        when riprova
      *****             perform OPEN-IO-TMOVTRAT
      *****        when termina
      *****             set errori to true
      *****             display message "Operazione interrotta!"
      *****                       title titolo
      *****                        icon 2
      *****        end-evaluate
      *****     end-if 
           .
      * <TOTEM:END>

       RECUPERA-ULTIMO-NUM-TRATTATO.
      * <TOTEM:PARA. RECUPERA-ULTIMO-NUM-TRATTATO>
      *****     set tutto-ok  to true.
      *****     set RecLocked to false.
      *****     perform OPEN-IO-TMOVTRAT.
      *****     if tutto-ok
      *****        perform READ-RECORD-TMOVTRAT-LOCK
      *****        if tutto-ok
      *****           if Note
      *****              move 1 to tno-anno-fattura tno-num-fattura
      *****              set tno-fatt-si-prenotata to true
      *****              set tno-no-agg-contab     to true
      *****              start tnotacr key not < k-contab 
      *****                    invalid continue
      *****                not invalid
      *****                    perform until 1 = 2
      *****                       read tnotacr next no lock
      *****                            at end  exit perform
      *****                       end-read
      *****                       if tno-si-agg-contab
      *****                          exit perform
      *****                       end-if
      *****                       if tno-anno-fattura = 0
      *****                          exit perform
      *****                       end-if
      *****                       move tno-causale to tca-codice
      *****                       read tcaumag no lock 
      *****                            invalid continue 
      *****                       end-read
      *****                       if tca-si-emissione
      *****                          if tno-num-fattura <= save-nc
      *****                             move tno-num-fattura to da-fattura-edit
      *****                             move save-nc to a-fattura-edit
      *****                             set errori to true
      *****                             display message
      *****                             "Operazione impossibile."
      *****                      x"0d0a""Primo numero: " da-fattura-edit
      *****                      x"0d0a""Ultimo trattato: " a-fattura-edit
      *****                                       title tit-err
      *****                                        icon 2
      *****                             unlock tmovtrat all records
      *****                             close tmovtrat
      *****                             exit perform
      *****                          end-if
      *****                       end-if
      *****                    end-perform
      *****              end-start
      *****           else
      *****              move 1 to tor-anno-fattura tor-num-fattura
      *****              set tor-fatt-si-prenotata to true
      *****              set tor-no-agg-contab     to true
      *****              start tordini key not < k-contab 
      *****                    invalid continue
      *****                not invalid
      *****                    perform until 1 = 2
      *****                       read tordini next no lock
      *****                            at end  exit perform
      *****                       end-read
      *****                       if tor-si-agg-contab
      *****                          exit perform
      *****                       end-if
      *****                       if tor-anno-fattura = 0
      *****                          exit perform
      *****                       end-if
      *****                       move tor-causale to tca-codice
      *****                       read tcaumag no lock 
      *****                            invalid continue 
      *****                       end-read
      *****                       if tca-si-emissione
      *****                          if tor-num-fattura <= save-fatt
      *****                             move tor-num-fattura to da-fattura-edit
      *****                             move save-fatt to a-fattura-edit
      *****                             set errori to true
      *****                             display message
      *****                             "Operazione impossibile."
      *****                      x"0d0a""Primo numero: " da-fattura-edit
      *****                      x"0d0a""Ultimo trattato: " a-fattura-edit
      *****                                       title tit-err
      *****                                        icon 2
      *****                             unlock tmovtrat all records
      *****                             close tmovtrat
      *****                             exit perform
      *****                          end-if
      *****                       end-if
      *****                    end-perform
      *****              end-start
      *****           end-if
      *****        end-if
      *****     end-if 
           .
      * <TOTEM:END>

       READ-RECORD-TMOVTRAT-LOCK.
      * <TOTEM:PARA. READ-RECORD-TMOVTRAT-LOCK>
      *****     set RecLocked to false.
      *****     set tutto-ok  to true.
      *****     move esercizio to tra-anno.
      *****     read tmovtrat lock
      *****          invalid
      *****          initialize tra-dati replacing numeric data by zeroes
      *****                                   alphanumeric data by zeroes
      *****          accept tra-data-creazione from century-date
      *****          accept tra-ora-creazione  from time
      *****          move user-codi to tra-utente-creazione
      *****          write tra-rec invalid continue end-write
      *****          read tmovtrat lock invalid continue end-read
      *****     end-read.
      *****     if RecLocked
      *****        initialize geslock-messaggio
      *****        string   "Record movimenti trattati per"
      *****          x"0d0a""l'anno in corso già in uso."
      *****          x"0d0a""Impossibile procedere!" delimited size
      *****              into geslock-messaggio
      *****        end-string
      *****        move 1 to geslock-v-riprova
      *****        move 0 to geslock-v-ignora
      *****        move 1 to geslock-v-termina
      *****        move   "tmovtrat"   to geslock-nome-file
      *****        call   "geslock" using geslock-linkage
      *****        cancel "geslock"
      *****        evaluate true
      *****        when riprova
      *****             perform READ-RECORD-TMOVTRAT-LOCK
      *****        when termina
      *****             unlock tmovtrat all records
      *****             close  tmovtrat
      *****             set errori to true
      *****             display message "Operazione interrotta!"
      *****                       title titolo
      *****                        icon 2
      *****        end-evaluate
      *****     else
      *****        move tra-ult-fatt-contab to save-fatt
      *****        move tra-ult-nc-contab   to save-nc
      *****     end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       pb-si-LinkTo.
      * <TOTEM:PARA. pb-si-LinkTo>
           modify scr-conf-1-handle, visible = 0.
           perform SCR-CONF-2-OPEN-ROUTINE.
           move 27 to key-status 
           .
      * <TOTEM:END>
       contab-Ev-Before-Program.
      * <TOTEM:PARA. contab-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           perform CONTROLLA-ESEGUIBILITA.
           set aggiorna-tparamge   to false

           accept esercizio-g2 from environment "ESERCIZIO_G2".
           accept esercizio-x  from environment "ESERCIZIO".
           move   esercizio-x  to esercizio.

           perform SALVA-NUMERI-DI-PARTENZA.

           perform CALCOLA-COLORE-TRASPARENTE.
           set tutto-ok to true.
           open input G2.
           if tutto-ok
              move spaces to g2-codice
              read G2 no lock invalid set errori to true end-read
              close G2
              if G2-codice-login = spaces or
                 G2-cod-fatture  = spaces or
                 G2-cod-nc       = spaces or
                 esercizio-g2    = spaces
                 set errori to true
              end-if
           end-if.
                  
           if errori
              display message "OPERAZIONE IMPOSSIBILE!!!"
                       x"0d0a""TABELLINO TEMPORANEO G2 NON VALORIZZATO"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |Per sicurezza apro PRIMA i files G2
           perform APERTURE-LOCK-G2.
           if errori
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           initialize SELMAZ.
           accept SELMAZ from environment "FILE_PREFIX".
           unstring selmaz delimited by ";" 
               into PathFile1
                    PathFile2
                    PathFile3
           end-unstring.
           inspect PathFile2 replacing trailing spaces by low-value.
           move PathFile2(2:) to PathFile2(1:).

           |CONTROLLO L'ESISTENZA DEL FILE MAZ
           initialize SELMAZ.
           string  PathFile2    delimited low-value
                   "/"          delimited size
                   "MAZ"        delimited size
                   esercizio-g2 delimited size
                   into SELMAZ
           end-string.

           set tutto-ok to true.
           open input MAZ.
           if status-MAZ = "00"
              close MAZ
           else
              display message "ERROR ON SSI FILE"
                       x"0d0a""[MAZ] Not Found. "
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |CONTROLLO L'ESISTENZA DEL FILE CLZ
           initialize SELCLZ.
           string  PathFile2    delimited low-value
                   "/"          delimited size
                   "CLZ"        delimited size
                   esercizio-g2 delimited size
                   into SELCLZ
           end-string.

           set tutto-ok to true.
           open input CLZ.
           if status-CLZ = "00"
              close CLZ
           else
              display message "ERROR ON SSI FILE"
                       x"0d0a""[CLZ] Not Found. "
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |CONTROLLO L'ESISTENZA DEL FILE GDVT
           set tutto-ok to true.
           open input GDVT.
           if status-GDVT = "00"
              close GDVT
           else
              display message "ERROR ON SSI FILE"
                       x"0d0a""[GDVT] Not Found. "
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |CONTROLLO L'ESISTENZA DEL FILE DVR
           set tutto-ok to true.
           open input GDVR.
           if status-GDVR = "00"
              close GDVR
           else
              display message "ERROR ON SSI FILE"
                       x"0d0a""[GDVR] Not Found. "
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |CONTROLLO L'ESISTENZA DEL FILE DOCCN
           set tutto-ok to true.
           open input DOCCN.
           if status-doccn = "00"
              close DOCCN
           else
              display message "ERROR ON SSI FILE"
                       x"0d0a""[DOCCN] Not Found. "
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |CONTROLLO L'ESISTENZA DEL FILE TBLCO
           set tutto-ok to true.
           open input TBLCO.
           if status-tblco = "00"
              close TBLCO
           else
              display message "ERROR ON SSI FILE"
                       x"0d0a""[TBLCO] Not Found. "
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |CONTROLLO L'ESISTENZA DEL FILE TBLDO
           set tutto-ok to true.
           open input TBLDO.
           if status-tbldo = "00"
              close TBLDO
           else
              display message "ERROR ON SSI FILE"
                       x"0d0a""[TBLDO] Not Found. "
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           open input TBLDO TBLCO.

           |CONTROLLO CHE LA CAUSALE CONTABILE PER LE N.C.
           |CI SIA E SIA VALORIZZATA CORRETTAMENTE
           move "DO"      to tbldo-codice1.
           move G2-cod-nc to tbldo-codice2.
           read tbldo no lock invalid continue end-read.

           move "CO" to tblco-codice1.
           move tbldo-codice-co         to tblco-codice2.
           read tblco no lock invalid continue end-read.

           if TBLCO-TIPO-CFM(1)   not = "C"    or
              TBLCO-CODICE-CFM(1) not = spaces or
              TBLCO-SEGNO-CFM(1)  not = "A"    or
              TBLCO-TIPO-CFM(2)   not = "M"    or
              TBLCO-CODICE-CFM(2)     = spaces or
              TBLCO-SEGNO-CFM(2)  not = "D"    or
              TBLCO-TIPO-CFM(3)   not = "M"    or
              TBLCO-CODICE-CFM(3) not = spaces or
              TBLCO-SEGNO-CFM(3)  not = "D"
              
              display message "IMPOSSIBILE PROCEDERE!!"
                       x"0d0a""Tabella causali contabili Note Credito"
                       x"0d0a""non valorizzata correttamentte!"
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              close TBLCO TBLDO
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           |CONTROLLO CHE LA CAUSALE CONTABILE PER LE FATTURE
           |CI SIA E SIA VALORIZZATA CORRETTAMENTE
           move "DO"           to tbldo-codice1.
           move G2-cod-fatture to tbldo-codice2.
           read tbldo no lock invalid continue end-read.

           move "CO" to tblco-codice1.
           move tbldo-codice-co         to tblco-codice2.
           read tblco no lock invalid continue end-read.

           if TBLCO-TIPO-CFM(1)   not = "C"    or
              TBLCO-CODICE-CFM(1) not = spaces or
              TBLCO-SEGNO-CFM(1)  not = "D"    or
              TBLCO-TIPO-CFM(2)   not = "M"    or
              TBLCO-CODICE-CFM(2)     = spaces or
              TBLCO-SEGNO-CFM(2)  not = "A"    or
              TBLCO-TIPO-CFM(3)   not = "M"    or
              TBLCO-CODICE-CFM(3) not = spaces or
              TBLCO-SEGNO-CFM(3)  not = "A"
              
              display message "IMPOSSIBILE PROCEDERE!!"
                       x"0d0a""Tabella causali contabili Fatture"
                       x"0d0a""non valorizzata correttamentte!"
                       x"0d0a""Contattare assistenza!"
                        title tit-err
                         icon 3
              close TBLCO TBLDO
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.

           close TBLDO TBLCO.
           
           
           perform OPEN-CLEAR-GDVT.

           if errori
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           else      
              perform OPEN-CLEAR-GDVR
              if errori
                 perform CONTAB-EV-AFTER-PROGRAM
                 goback
              end-if
           end-if.

           close gdvt gdvr.

           perform TROVA-CONTATORE-ANNO-ESERCIZIO.
           if errori
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.       

           perform TROVA-TMOVTRAT-ANNO-ESERCIZIO.
           if errori
              perform CONTAB-EV-AFTER-PROGRAM
              goback
           end-if.
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       contab-Ev-After-Program.
      * <TOTEM:PARA. contab-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           unlock multigest all records.
           close  multigest 
           .
      * <TOTEM:END>
       pb-sia-LinkTo.
      * <TOTEM:PARA. pb-sia-LinkTo>
           perform SCR-OPER-OPEN-ROUTINE.
           move 27 to key-status 
           .
      * <TOTEM:END>
       pb-noa-LinkTo.
      * <TOTEM:PARA. pb-noa-LinkTo>
           perform SCR-CONF-2-EXIT.

           modify Form1-Handle visible 1 
           .
      * <TOTEM:END>
       pb-siaa-LinkTo.
      * <TOTEM:PARA. pb-siaa-LinkTo>
           perform SCR-FINE-EXIT.
           perform SCR-CONF-1-EXIT.
           perform SCR-CONF-2-EXIT 
           .
      * <TOTEM:END>
       pb-si-BeforeProcedure.
      * <TOTEM:PARA. pb-si-BeforeProcedure>
           modify pb-si, bitmap-number 2
           .
      * <TOTEM:END>
       pb-si-AfterProcedure.
      * <TOTEM:PARA. pb-si-AfterProcedure>
           modify pb-si, bitmap-number 1
           .
      * <TOTEM:END>
       pb-no-BeforeProcedure.
      * <TOTEM:PARA. pb-no-BeforeProcedure>
           modify pb-no, bitmap-number 2
           .
      * <TOTEM:END>
       pb-no-AfterProcedure.
      * <TOTEM:PARA. pb-no-AfterProcedure>
           modify pb-no, bitmap-number 1
           .
      * <TOTEM:END>
       pb-noa-AfterProcedure.
      * <TOTEM:PARA. pb-noa-AfterProcedure>
           modify pb-noa, bitmap-number 1
           .
      * <TOTEM:END>
       pb-noa-BeforeProcedure.
      * <TOTEM:PARA. pb-noa-BeforeProcedure>
           modify pb-noa, bitmap-number 2
           .
      * <TOTEM:END>
       pb-sia-BeforeProcedure.
      * <TOTEM:PARA. pb-sia-BeforeProcedure>
           modify pb-sia, bitmap-number 2
           .
      * <TOTEM:END>
       pb-sia-AfterProcedure.
      * <TOTEM:PARA. pb-sia-AfterProcedure>
           modify pb-sia, bitmap-number 1
           .
      * <TOTEM:END>
       pb-siaa-BeforeProcedure.
      * <TOTEM:PARA. pb-siaa-BeforeProcedure>
           modify pb-siaa, bitmap-number 2
           .
      * <TOTEM:END>
       pb-siaa-AfterProcedure.
      * <TOTEM:PARA. pb-siaa-AfterProcedure>
           modify pb-siaa, bitmap-number 1
           .
      * <TOTEM:END>
       pb-merce-BeforeProcedure.
      * <TOTEM:PARA. pb-merce-BeforeProcedure>
           modify pb-merce, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-merce-AfterProcedure.
      * <TOTEM:PARA. pb-merce-AfterProcedure>
           modify pb-merce, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-merce-LinkTo.
      * <TOTEM:PARA. pb-merce-LinkTo>
           set Merce to true.
           perform CONTINUA 
           .
      * <TOTEM:END>
       pb-man-BeforeProcedure.
      * <TOTEM:PARA. pb-man-BeforeProcedure>
           modify pb-man, bitmap-number = 4 
           .
      * <TOTEM:END>
       pb-man-AfterProcedure.
      * <TOTEM:PARA. pb-man-AfterProcedure>
           modify pb-man, bitmap-number = 3 
           .
      * <TOTEM:END>
       pb-man-LinkTo.
      * <TOTEM:PARA. pb-man-LinkTo>
           set Manuali to true.
           perform CONTINUA 
           .
      * <TOTEM:END>
       pb-note-BeforeProcedure.
      * <TOTEM:PARA. pb-note-BeforeProcedure>
           modify pb-note, bitmap-number = 6 
           .
      * <TOTEM:END>
       pb-note-AfterProcedure.
      * <TOTEM:PARA. pb-note-AfterProcedure>
           modify pb-note, bitmap-number = 5 
           .
      * <TOTEM:END>
       pb-note-LinkTo.
      * <TOTEM:PARA. pb-note-LinkTo>
           set Note to true.
           perform CONTINUA 
           .
      * <TOTEM:END>
       pb-ok-LinkTo.
      * <TOTEM:PARA. pb-ok-LinkTo>
           perform RIEPILOGO 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

