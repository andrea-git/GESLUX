      *{TOTEM}PRG-COMMENT
      * wprogmag.Cbl
      * wprogmag.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          wprogmag.
       AUTHOR.              andre.
       DATE-WRITTEN.        lunedì 9 settembre 2024 19:28:38.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:wprogmag, INIT:wprogmag, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "timballi.sl".
           COPY "timbalqta.sl".
           COPY "tordforn.sl".
           COPY "tparamge.sl".
           COPY "tmagaz.sl".
           COPY "progmag.sl".
           COPY "tcaumag.sl".
           COPY "articoli.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "timballi.fd".
           COPY "timbalqta.fd".
           COPY "tordforn.fd".
           COPY "tparamge.fd".
           COPY "tmagaz.fd".
           COPY "progmag.fd".
           COPY "tcaumag.fd".
           COPY "articoli.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 pgm-chiamante    PIC  x(20).
           COPY  "LINK-GESLOCK.DEF".
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-SALVA          PIC  9
                  VALUE IS 1.
       77 v-screen         PIC  9
                  VALUE IS 0.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 como-peso        PIC  S9(9)v999.
       77 como-valore-monetario        PIC  s9(12)v99.
       77 como-giacenza    PIC  s9(8).
       77 tge-perce-prog-ed            PIC  z9,99.
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0.
       77 Screen1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 E-CERCA          PIC  9
                  VALUE IS 1.
       77 Form1-St-1-Handle
                  USAGE IS HANDLE OF STATUS-BAR.
       77 peso-ed          PIC  zz9,999.
       77 codice-ed        PIC  z(5).
       77 como-valore      PIC  s9(15)v999.
       77 SaveCostoUltimo  PIC  S9(12)V9(2).
       77 imb-qta-edit     PIC  z.zzz.
       77 nome-pgm         PIC  x(20).
       77 como-mess        PIC  x(50).
       78 titolo VALUE IS "Gestione progressivi di magazzino". 
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 ProgmagAlreadyOpen VALUE IS 1    WHEN SET TO FALSE  0. 
       01 SaveKey.
           05 SaveArticolo     PIC  9(6).
           05 SaveMagazzino    PIC  x(3).
           05 SaveImballo      PIC  x(3).
           05 SavePeso         PIC  9(5)V9(3).
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 v-misto          PIC  9
                  VALUE IS 1.
       77 lab-imballo-buf  PIC  x(100).
       01 OLD-prg-rec.
           05 OLD-prg-chiave.
               10 OLD-prg-cod-articolo         PIC  9(6).
               10 OLD-prg-cod-magazzino        PIC  X(3).
               10 OLD-prg-tipo-imballo         PIC  X(3).
               10 OLD-prg-peso     PIC  9(5)V9(3).
           05 OLD-prg-dati.
               10 OLD-prg-peso-utf PIC  9(5)V9(3).
               10 OLD-prg-peso-non-utf         PIC  9(5)V9(3).
               10 OLD-prg-sezione-dinamici.
                   15 OLD-prg-costo-ultimo         PIC  S9(9)V9(2).
                   15 OLD-prg-costo-medio          PIC  S9(9)V9(2).
                   15 OLD-prg-scorta   PIC  S9(8).
                   15 OLD-prg-giacenza PIC  S9(8).
                   15 OLD-prg-impegnato            PIC  S9(8).
                   15 OLD-prg-impegnati.
                       20 OLD-prg-imp-master           PIC  s9(8).
                       20 OLD-prg-imp-GDO  PIC  s9(8).
                       20 OLD-prg-imp-TRAD PIC  s9(8).
                   15 OLD-prg-ordinato-1           PIC  S9(8).
                   15 OLD-prg-ordinato-2           PIC  S9(8).
                   15 OLD-prg-ordinato-3           PIC  S9(8).
                   15 OLD-prg-ordinato-4           PIC  S9(8).
                   15 OLD-prg-ordinato-5           PIC  S9(8).
                   15 OLD-prg-ordinato-6           PIC  S9(8).
               10 OLD-prg-sezione-consolidati.
                   15 OLD-prg-iniziali.
                       20 OLD-prg-ini-udm  PIC  S9(8).
                       20 OLD-prg-ini-kg   PIC  S9(9)V9(3).
                       20 OLD-prg-ini-valore           PIC  S9(9)V9(2).
                   15 OLD-prg-acquisti.
                       20 OLD-prg-acq-udm  PIC  S9(8).
                       20 OLD-prg-acq-kg   PIC  S9(9)V9(3).
                       20 OLD-prg-acq-valore           PIC  S9(9)V9(2).
                   15 OLD-prg-vendite.
                       20 OLD-prg-ven-udm  PIC  S9(8).
                       20 OLD-prg-ven-kg   PIC  S9(9)V9(3).
                       20 OLD-prg-ven-valore           PIC  S9(9)V9(2).
                   15 OLD-prg--variazioni.
                       20 OLD-prg-var-inv-udm          PIC  S9(8).
                       20 OLD-prg-var-inv-kg           PIC  S9(9)V9(3).
      *(( XFD NAME = prg-var-inv-val ))
                       20 OLD-prg-var-inv-valore       PIC  S9(9)V9(2).
                   15 OLD-prg-resi-a-fornitori.
      *(( XFD NAME = prg-resi-f-udm ))
                       20 OLD-prg-resi-fornitori-udm   PIC  S9(8).
      *(( XFD NAME = prg-resi-f-kg ))
                       20 OLD-prg-resi-fornitori-kg    PIC  S9(9)V9(3).
      *(( XFD NAME = prg-resi-f ))
                       20 OLD-prg-resi-fornitori-valore            PIC  
           S9(9)V9(2).
                   15 OLD-prg-resi-da-cliente.
                       20 OLD-prg-resi-da-cli-udm      PIC  S9(8).
                       20 OLD-prg-resi-da-cli-kg       PIC  S9(9)V9(3).
                       20 OLD-prg-resi-da-cli-valore   PIC  S9(9)V9(2).
                   15 OLD-prg-giacenza-periodo.
                       20 OLD-prg-giacenza-udm         PIC  s9(8).
                       20 OLD-prg-giacenza-kg          PIC  S9(9)V9(3).
                   15 OLD-prg-entrate.
                       20 OLD-prg-udm-el   PIC  s9(8).
                       20 OLD-prg-kg-el    PIC  S9(9)V9(3).
                       20 OLD-prg-valore-el            PIC  S9(9)V9(2).
                   15 OLD-prg-entrate2.
                       20 OLD-prg-udm-el2  PIC  s9(8).
                       20 OLD-prg-kg-el2   PIC  S9(9)V9(3).
                       20 OLD-prg-valore-el2           PIC  S9(9)V9(2).
                   15 OLD-prg-uscite.
                       20 OLD-prg-udm-ul   PIC  s9(8).
                       20 OLD-prg-kg-ul    PIC  S9(9)V9(3).
                       20 OLD-prg-valore-ul            PIC  S9(9)V9(2).
                   15 OLD-prg-uscite2.
                       20 OLD-prg-udm-ul2  PIC  s9(8).
                       20 OLD-prg-kg-ul2   PIC  S9(9)V9(3).
                       20 OLD-prg-valore-ul2           PIC  S9(9)V9(2).
               10 OLD-prg-giac-day PIC  s9(8).
               10 OLD-prg-stato    PIC  X(1).
                   88 OLD-prg-attivo VALUE IS "A". 
                   88 OLD-prg-disattivo VALUE IS "D". 
                   88 OLD-prg-bloccato VALUE IS "B". 
               10 OLD-prg-dati-comuni.
                   15 OLD-prg-data-creazione       PIC  9(8).
                   15 OLD-prg-ora-creazione        PIC  9(8).
                   15 OLD-prg-utente-creazione     PIC  X(10).
                   15 OLD-prg-data-ultima-modifica PIC  9(8).
                   15 OLD-prg-ora-ultima-modifica  PIC  9(8).
                   15 OLD-prg-utente-ultima-modifica           PIC  
           X(10).
               10 OLD-prg-vuoti.
                   15 OLD-prg-num-vuoto-1          PIC  9(15).
                   15 OLD-prg-num-vuoto-2          PIC  9(15).
                   15 OLD-prg-num-vuoto-3          PIC  9(15).
                   15 OLD-prg-alfa-vuoto-1         PIC  X(20).
                   15 OLD-prg-alfa-vuoto-2         PIC  X(20).
                   15 OLD-prg-alfa-vuoto-3         PIC  X(20).
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 STATUS-mtordini  PIC  X(2).
           88 Valid-STATUS-mtordini VALUE IS "00" THRU "09". 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Screen1-FLAG-REFRESH PIC  9.
          88 Screen1-FLAG-REFRESH  VALUE 1 FALSE 0. 
      * DATA CONTROL BUFFER
       01 Screen1-BUF.
      * Data.Entry-Field
              05 EF-COD-ARTICOLO-BUF PIC z(6).
      * Data.Entry-Field
              05 EF-COD-MAGAZZ-BUF PIC X(3).
      * Data.Entry-Field
              05 EF-TIPO-IMBALLO-BUF PIC X(3).
      * Data.Entry-Field
              05 EF-PESO-BUF PIC zz.zz9,999.
      * Data.Entry-Field
              05 ef-peso-utf-BUF PIC zz.zz9,999.
      * Data.Entry-Field
              05 ef-peso-non-utf-BUF PIC zz.zz9,999.
      * Data.Label
              05 LBL-DES-ARTICOLO-BUF PIC X(50).
      * Data.Label
              05 LBL-DES-MAGAZZ-BUF PIC X(50).

       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(612).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-tordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-progmag-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY1-Asc  VALUE "A".
          88 DataSet1-progmag-KEY1-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".

       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 tordforn-tof-k-consegna-SPLITBUF  PIC X(21).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-EF-COD-ARTICOLO VALUE 5001.
       78  78-ID-EF-COD-MAGAZZ VALUE 5002.
       78  78-ID-EF-TIPO-IMBALLO VALUE 5003.
       78  78-ID-EF-PESO VALUE 5004.
       78  78-ID-ef-peso-utf VALUE 5005.
       78  78-ID-ef-peso-non-utf VALUE 5006.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-WPROGMAG.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Screen1, 
           AFTER PROCEDURE Screen1-AfterProcedure,
           BEFORE PROCEDURE Screen1-BeforeProcedure,
           .

      * ENTRY FIELD
       05
           EF-COD-ARTICOLO, 
           Entry-Field, 
           COL 18,00, 
           LINE 2,46,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-EF-COD-ARTICOLO,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 6,
           VALUE EF-COD-ARTICOLO-BUF,
           .

      * ENTRY FIELD
       05
           EF-COD-MAGAZZ, 
           Entry-Field, 
           COL 18,00, 
           LINE 4,46,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-EF-COD-MAGAZZ,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 3,
           VALUE EF-COD-MAGAZZ-BUF,
           .

      * ENTRY FIELD
       05
           EF-TIPO-IMBALLO, 
           Entry-Field, 
           COL 18,00, 
           LINE 6,46,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-EF-TIPO-IMBALLO,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 3,
           VALUE EF-TIPO-IMBALLO-BUF,
           .

      * ENTRY FIELD
       05
           EF-PESO, 
           Entry-Field, 
           COL 18,00, 
           LINE 8,46,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-EF-PESO,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 9,
           NUMERIC,
           VALUE EF-PESO-BUF,
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 35,00, 
           LINE 7,77,
           LINES 2,54 ,
           SIZE 40,00 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VISIBLE v-misto,
           .

      * ENTRY FIELD
       05
           ef-peso-utf, 
           Entry-Field, 
           COL 42,00, 
           LINE 8,54,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-peso-utf,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 10,
           NUMERIC,
           VALUE ef-peso-utf-BUF,
           VISIBLE v-misto,
           .

      * ENTRY FIELD
       05
           ef-peso-non-utf, 
           Entry-Field, 
           COL 63,00, 
           LINE 8,54,
           LINES 1,31 ,
           SIZE 10,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-peso-non-utf,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 10,
           NUMERIC,
           VALUE ef-peso-non-utf-BUF,
           VISIBLE v-misto,
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 37,00, 
           LINE 8,54,
           LINES 1,31 ,
           SIZE 4,00 ,
           FONT IS Small-Font,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "UTF",
           VISIBLE v-misto,
           .

      * LABEL
       05
           Screen1-La-1a, 
           Label, 
           COL 54,00, 
           LINE 8,54,
           LINES 1,31 ,
           SIZE 8,00 ,
           FONT IS Small-Font,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Non UTF",
           VISIBLE v-misto,
           .

      * LABEL
       05
           Form1-La-5, 
           Label, 
           COL 1,83, 
           LINE 2,46,
           LINES 1,31 ,
           SIZE 15,00 ,
           ID IS 103,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Codice Articolo",
           .

      * LABEL
       05
           Form1-La-5a, 
           Label, 
           COL 1,83, 
           LINE 4,46,
           LINES 1,31 ,
           SIZE 15,00 ,
           ID IS 105,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Codice Magazzino",
           .

      * LABEL
       05
           Form1-La-5aa, 
           Label, 
           COL 1,83, 
           LINE 6,46,
           LINES 1,31 ,
           SIZE 15,00 ,
           ID IS 102,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Tipo Imballo",
           .

      * LABEL
       05
           Form1-La-5aaa, 
           Label, 
           COL 1,83, 
           LINE 8,46,
           LINES 1,31 ,
           SIZE 15,00 ,
           ID IS 200,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Peso (KG)",
           .

      * DB_LABEL
       05
           LBL-DES-ARTICOLO, 
           Label, 
           COL 29,00, 
           LINE 2,46,
           LINES 1,31 ,
           SIZE 57,00 ,
           COLOR IS 5,
           FONT IS Small-Font,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE LBL-DES-ARTICOLO-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           LBL-DES-MAGAZZ, 
           Label, 
           COL 29,00, 
           LINE 4,46,
           LINES 1,31 ,
           SIZE 57,00 ,
           COLOR IS 5,
           FONT IS Small-Font,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE LBL-DES-MAGAZZ-BUF,
           TRANSPARENT,
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 83,50, 
           LINE 1,15,
           LINES 1,15 ,
           SIZE 2,00 ,
           FONT IS Default-Font,
           ID IS 16,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           lab-imballo, 
           Label, 
           COL 29,00, 
           LINE 6,46,
           LINES 1,31 ,
           SIZE 57,00 ,
           COLOR IS 5,
           FONT IS Small-Font,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-imballo-buf,
           .

      * TOOLBAR
       01
           Form1-Tb-1,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 2223,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "Esci (Esc)",
           .

      * PUSH BUTTON
       05
           TOOL-SALVA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 3,
           FRAMED,
           SQUARE,
           ENABLED E-SALVA,
           EXCEPTION-VALUE 3,
           FLAT,
           ID IS 75,
           SELF-ACT,
           TITLE "Salva (F3)",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 11,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           FRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 79,
           SELF-ACT,
           TITLE "Cerca (F8)",
           BITMAP-NUMBER BitmapNumZoom
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING link-wprogmag.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:wprogmag, INIT:wprogmag, BeforeDeclarative>
      ***---
       PROGMAG-ERR SECTION.
           use after error procedure on progmag.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-progmag
           when "35"
LUBEXX          if not link-chiamata-batch
                   display message "File [PROGMAG] not found!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [PROGMAG] not found!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "39"
LUBEXX          if not link-chiamata-batch
                   display message "File [PROGMAG] Mismatch size!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [PROGMAG] Mismatch size!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "98"
LUBEXX          if not link-chiamata-batch
                   display message "[PROGMAG] Indexed file corrupt!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "[PROGMAG] Indexed file corrupt!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      ***---
       TMAGAZ-ERR SECTION.
           use after error procedure on tmagaz.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-tmagaz
           when "35"
LUBEXX          if not link-chiamata-batch
                   display message "File [TMAGAZ] not found!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TMAGAZ] not found!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "39"
LUBEXX          if not link-chiamata-batch
                   display message "File [TMAGAZ] Mismatch size!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TMAGAZ] Mismatch size!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "98"
LUBEXX          if not link-chiamata-batch
                   display message "[TMAGAZ] Indexed file corrupt!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "[TMAGAZ] Indexed file corrupt!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      ***---
       TCAUMAG-ERR SECTION.
           use after error procedure on tcaumag.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-tcaumag
           when "35"
LUBEXX          if not link-chiamata-batch
                   display message "File [TCAUMAG] not found!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TCAUMAG] not found!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "39"
LUBEXX          if not link-chiamata-batch
                   display message "File [TCAUMAG] Mismatch size!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TCAUMAG] Mismatch size!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "98"
LUBEXX          if not link-chiamata-batch
                   display message "[TCAUMAG] Indexed file corrupt!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "[TCAUMAG] Indexed file corrupt!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
LUBEXX          if not link-chiamata-batch
                   display message "File [ARTICOLI] not found!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [ARTICOLI] not found!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "39"
LUBEXX          if not link-chiamata-batch
                   display message "File [ARTICOLI] Mismatch size!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [ARTICOLI] Mismatch size!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "98"
LUBEXX          if not link-chiamata-batch
                   display message "[ARTICOLI] Indexed file corrupt!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "[ARTICOLI] Indexed file corrupt!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      ***---
       TIMBALQTA-ERR SECTION.
           use after error procedure on timbalqta.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-timbalqta
           when "35"
LUBEXX          if not link-chiamata-batch
                   display message "File [TIMBALQTA] not found!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TIMBALQTA] not found!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "39"
LUBEXX          if not link-chiamata-batch
                   display message "File [TIMBALQTA] Mismatch size!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TIMBALQTA] Mismatch size!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "98"
LUBEXX          if not link-chiamata-batch
                   display message "[TIMBALQTA] Indexed file corrupt!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "[TIMBALQTA] Indexed file corrupt!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      ***---
       TIMBALLI-ERR SECTION.
           use after error procedure on timballi.
           set RecLocked to false.
           set tutto-ok  to true.
           evaluate status-timballi
           when "35"
LUBEXX          if not link-chiamata-batch
                   display message "File [TIMBALLI] not found!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TIMBALLI] not found!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "39"
LUBEXX          if not link-chiamata-batch
                   display message "File [TIMBALLI] Mismatch size!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "File [TIMBALLI] Mismatch size!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "98"
LUBEXX          if not link-chiamata-batch
                   display message "[TIMBALLI] Indexed file corrupt!"
                             title titolo
                              icon 3
                   set errori to true
LUBEXX          else
LUBEXX             move "[TIMBALLI] Indexed file corrupt!" to 
           link-msg-err-ritorno
LUBEXX             move -2 to link-wprogmag-status
LUBEXX          end-if
           when "93"
           when "99" set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM wprogmag-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Screen1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:wprogmag, INIT:wprogmag, BeforeDestroyResource>
      * <TOTEM:END>
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
      *    After-Program
           PERFORM wprogmag-Ev-After-Program
           set environment "KEYSTROKE" to "DATA=46   46".
           set environment "KEYSTROKE" to "DATA=44   44".
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
           .

       INIT-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-timballi
           PERFORM OPEN-timbalqta
      *    tordforn OPEN MODE IS FALSE
      *    PERFORM OPEN-tordforn
           PERFORM OPEN-tparamge
           PERFORM OPEN-tmagaz
      *    progmag OPEN MODE IS FALSE
      *    PERFORM OPEN-progmag
           PERFORM OPEN-tcaumag
           PERFORM OPEN-articoli
      *    After Open
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:wprogmag, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:wprogmag, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:wprogmag, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tordforn
           IF NOT Valid-STATUS-tordforn
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:wprogmag, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:wprogmag, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:wprogmag, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O progmag
           IF STATUS-progmag = "35"
              OPEN OUTPUT progmag
                IF Valid-STATUS-progmag
                   CLOSE progmag
                   OPEN I-O progmag
                END-IF
           END-IF
           IF NOT Valid-STATUS-progmag
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:wprogmag, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:wprogmag, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:wprogmag, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-timballi
           PERFORM CLOSE-timbalqta
      *    tordforn CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tordforn
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-tmagaz
      *    progmag CLOSE MODE IS FALSE
      *    PERFORM CLOSE-progmag
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-articoli
      *    After Close
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:wprogmag, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:wprogmag, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:wprogmag, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:wprogmag, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:wprogmag, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:wprogmag, FD:progmag, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:wprogmag, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:wprogmag, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       tordforn-tof-k-consegna-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-consegna-SPLITBUF
           MOVE tof-data-consegna OF tordforn(1:8) TO 
           tordforn-tof-k-consegna-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-consegna-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           IF DataSet1-tordforn-KEY-Asc
              MOVE Low-Value TO tof-chiave
           ELSE
              MOVE High-Value TO tof-chiave
           END-IF
           .

       DataSet1-tordforn-INITEND.
           IF DataSet1-tordforn-KEY-Asc
              MOVE High-Value TO tof-chiave
           ELSE
              MOVE Low-Value TO tof-chiave
           END-IF
           .

      * tordforn
       DataSet1-tordforn-START.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY >= tof-chiave
           ELSE
              START tordforn KEY <= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-NOTGREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY <= tof-chiave
           ELSE
              START tordforn KEY >= tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-GREATER.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY > tof-chiave
           ELSE
              START tordforn KEY < tof-chiave
           END-IF
           .

       DataSet1-tordforn-START-LESS.
           IF DataSet1-tordforn-KEY-Asc
              START tordforn KEY < tof-chiave
           ELSE
              START tordforn KEY > tof-chiave
           END-IF
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordforn-LOCK
              READ tordforn WITH LOCK 
              KEY tof-chiave
           ELSE
              READ tordforn WITH NO LOCK 
              KEY tof-chiave
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordforn-KEY-Asc
              IF DataSet1-tordforn-LOCK
                 READ tordforn PREVIOUS WITH LOCK
              ELSE
                 READ tordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordforn-LOCK
                 READ tordforn NEXT WITH LOCK
              ELSE
                 READ tordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE Low-Value TO prg-chiave OF progmag
              ELSE
                 MOVE High-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE High-Value TO prg-chiave OF progmag
              ELSE
                 MOVE Low-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

      * progmag
       DataSet1-progmag-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY >= prg-chiave OF progmag
              ELSE
                 START progmag KEY <= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY <= prg-chiave OF progmag
              ELSE
                 START progmag KEY >= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY > prg-chiave OF progmag
              ELSE
                 START progmag KEY < prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY < prg-chiave OF progmag
              ELSE
                 START progmag KEY > prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-LOCK
                 READ progmag WITH LOCK 
                 KEY prg-chiave OF progmag
              ELSE
                 READ progmag WITH NO LOCK 
                 KEY prg-chiave OF progmag
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           WRITE prg-rec OF progmag.
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           REWRITE prg-rec OF progmag.
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           DELETE progmag.
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE imb-rec OF timballi
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE tof-rec OF tordforn
           INITIALIZE tge-rec OF tparamge
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE prg-rec OF progmag
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE art-rec OF articoli
           .


      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Screen1-DISPLAY-STATUS-MSG.
            MODIFY Form1-St-1-Handle PANEL-INDEX = 1
                PANEL-TEXT = TOTEM-HINT-TEXT
           .

       Screen1-CLEAR-STATUS-MSG.
           MOVE SPACES TO TOTEM-MSG-1, TOTEM-MSG-2, TOTEM-MSG-3, 
           TOTEM-MSG-TEXT
           PERFORM Screen1-DISPLAY-STATUS-MSG
           .

       Screen1-Open-Routine.
           PERFORM Screen1-Scrn
           PERFORM Screen1-Proc
           .

       Screen1-Scrn.
           PERFORM Screen1-Create-Win
           PERFORM Screen1-Init-Value
           PERFORM Screen1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1
           PERFORM Screen1-DISPLAY
           .

       Screen1-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 11,15,
              SIZE 86,50,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Small-Font,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Creazione progressivi di magazzino",
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE v-screen,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS Screen1-Handle,
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,69,   
              HANDLE IN Form1-Tb-1-Handle
           DISPLAY Form1-Tb-1 UPON Form1-Tb-1-Handle

      * Status-bar
           DISPLAY STATUS-BAR
              GRIP,
              PANEL-WIDTHS (35, 30, 999),
              PANEL-STYLE  (1, 1, 1),
              PANEL-TEXT   (SPACE, SPACE, SPACE),
              HANDLE IS Form1-St-1-Handle
           DISPLAY Screen1 UPON Screen1-Handle
      * DISPLAY-COLUMNS settings
           .

       Screen1-PROC.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeAccept>
           move 0 to link-wprogmag-status.
           if link-magazzino = spaces
              move low-value to mag-rec
              start tmagaz key is >= mag-chiave invalid continue 
           end-start
              perform until 1 = 2
                 read tmagaz next at end exit perform end-read
                 if si-mag-principale exit perform end-if
              end-perform
              move mag-codice     to prg-cod-magazzino
           else
              move link-magazzino to prg-cod-magazzino
           end-if.

           move link-articolo     to art-codice.
           read articoli no lock invalid continue end-read.
           if art-misto 
              move 1 to v-misto
              move art-peso-utf     to ef-peso-utf-buf
              move art-peso-non-utf to ef-peso-non-utf-buf
           else         
              move 0 to v-misto
           end-if.
           move link-articolo     to ef-cod-articolo-buf.
           move link-imballo      to ef-tipo-imballo-buf imq-codice.
           move link-peso         to ef-peso-buf.
           move prg-cod-magazzino to ef-cod-magazz-buf mag-codice.
           perform QTA-IMBALLI.

           read tmagaz invalid move spaces to mag-descrizione end-read.
           move mag-descrizione to lbl-des-magazz-buf.
           move 1 to v-screen.
           modify Screen1-Handle, visible = v-screen.
           display screen1.

           call "C$CALLEDBY" using pgm-chiamante.

LUBEXX     if pgm-chiamante = "garticoli"
LUBEXX        modify ef-cod-articolo, read-only
LUBEXX     end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen1
                 ON EXCEPTION
                    PERFORM Screen1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen1-Handle
           INITIALIZE Key-Status
           .

       Screen1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen1-Exit
                 END-IF
              WHEN Key-Status = 3
                 PERFORM TOOL-SALVA-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen1-CLEAR.
           PERFORM Screen1-INIT-VALUE
           PERFORM Screen1-DISPLAY
           .

       Screen1-DISPLAY.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1
           DISPLAY Screen1 UPON Screen1-Handle
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterDisplay>
      * <TOTEM:END>
           .

       Screen1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeExit>
      * <TOTEM:END>
           MOVE "101" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE = 1
              MOVE 27 TO Key-Status
           ELSE
              INITIALIZE Key-Status
           END-IF
           .

       Screen1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Screen1-Init-Value.
           MOVE "Creazione progressivi di magazzino" TO TOTEM-MSG-TITLE
           INITIALIZE Screen1-BUF
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, SetDefault>
      * <TOTEM:END>
           PERFORM Screen1-FLD-TO-BUF
           .


       Screen1-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
      * EF-COD-ARTICOLO's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM EF-COD-ARTICOLO-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5001 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * EF-COD-MAGAZZ's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM EF-COD-MAGAZZ-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5002 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * EF-TIPO-IMBALLO's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM EF-TIPO-IMBALLO-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5003 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * EF-PESO's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM EF-PESO-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5004 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-peso-utf's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-peso-utf-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5005 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
      * ef-peso-non-utf's Validation
           SET TOTEM-CHECK-OK TO FALSE
           PERFORM ef-peso-non-utf-VALIDATION
           IF NOT TOTEM-CHECK-OK
               MOVE 4 TO ACCEPT-CONTROL
               MOVE 5006 TO CONTROL-ID
               EXIT PARAGRAPH
           END-IF
           .

       EF-COD-ARTICOLO-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-COD-ARTICOLO, BeforeValidation>
      * <TOTEM:END>
           .

       EF-COD-ARTICOLO-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-COD-ARTICOLO, AfterValidation>
      * <TOTEM:END>
           .

      * EF-COD-ARTICOLO's Validation
       EF-COD-ARTICOLO-VALIDATION.
           PERFORM EF-COD-ARTICOLO-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM EF-COD-ARTICOLO-AFTER-VALIDATION
           .

       EF-COD-MAGAZZ-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-COD-MAGAZZ, BeforeValidation>
      * <TOTEM:END>
           .

       EF-COD-MAGAZZ-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-COD-MAGAZZ, AfterValidation>
      * <TOTEM:END>
           .

      * EF-COD-MAGAZZ's Validation
       EF-COD-MAGAZZ-VALIDATION.
           PERFORM EF-COD-MAGAZZ-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM EF-COD-MAGAZZ-AFTER-VALIDATION
           .

       EF-TIPO-IMBALLO-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-TIPO-IMBALLO, BeforeValidation>
      * <TOTEM:END>
           .

       EF-TIPO-IMBALLO-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-TIPO-IMBALLO, AfterValidation>
      * <TOTEM:END>
           .

      * EF-TIPO-IMBALLO's Validation
       EF-TIPO-IMBALLO-VALIDATION.
           PERFORM EF-TIPO-IMBALLO-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM EF-TIPO-IMBALLO-AFTER-VALIDATION
           .

       EF-PESO-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-PESO, BeforeValidation>
      * <TOTEM:END>
           .

       EF-PESO-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:EF-PESO, AfterValidation>
      * <TOTEM:END>
           .

      * EF-PESO's Validation
       EF-PESO-VALIDATION.
           PERFORM EF-PESO-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM EF-PESO-AFTER-VALIDATION
           .

       ef-peso-utf-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:ef-peso-utf, BeforeValidation>
      * <TOTEM:END>
           .

       ef-peso-utf-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:ef-peso-utf, AfterValidation>
      * <TOTEM:END>
           .

      * ef-peso-utf's Validation
       ef-peso-utf-VALIDATION.
           PERFORM ef-peso-utf-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-peso-utf-AFTER-VALIDATION
           .

       ef-peso-non-utf-BEFORE-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:ef-peso-non-utf, BeforeValidation>
      * <TOTEM:END>
           .

       ef-peso-non-utf-AFTER-VALIDATION.
      * <TOTEM:EPT. FORM:Screen1, Data.Entry-Field:ef-peso-non-utf, AfterValidation>
      * <TOTEM:END>
           .

      * ef-peso-non-utf's Validation
       ef-peso-non-utf-VALIDATION.
           PERFORM ef-peso-non-utf-BEFORE-VALIDATION
           SET TOTEM-CHECK-OK TO TRUE
           PERFORM ef-peso-non-utf-AFTER-VALIDATION
           .


       Screen1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeBufToFld>
      * <TOTEM:END>
      * DB_Entry-Field : EF-COD-ARTICOLO
           MOVE EF-COD-ARTICOLO-BUF TO prg-cod-articolo of progmag
      * DB_Entry-Field : EF-COD-MAGAZZ
           MOVE EF-COD-MAGAZZ-BUF TO prg-cod-magazzino OF progmag
      * DB_Entry-Field : EF-TIPO-IMBALLO
           MOVE EF-TIPO-IMBALLO-BUF TO prg-tipo-imballo OF progmag
      * DB_Entry-Field : EF-PESO
           MOVE EF-PESO-BUF TO prg-peso OF PROGMAG
      * DB_Entry-Field : ef-peso-utf
           MOVE ef-peso-utf-BUF TO prg-peso-utf OF PROGMAG
      * DB_Entry-Field : ef-peso-non-utf
           MOVE ef-peso-non-utf-BUF TO prg-peso-non-utf OF PROGMAG
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeFldToBuf>
      * <TOTEM:END>
      * DB_Entry-Field : EF-COD-ARTICOLO
           MOVE prg-cod-articolo of progmag TO EF-COD-ARTICOLO-BUF
      * DB_Entry-Field : EF-COD-MAGAZZ
           MOVE prg-cod-magazzino OF progmag TO EF-COD-MAGAZZ-BUF
      * DB_Entry-Field : EF-TIPO-IMBALLO
           MOVE prg-tipo-imballo OF progmag TO EF-TIPO-IMBALLO-BUF
      * DB_Entry-Field : EF-PESO
           MOVE prg-peso OF PROGMAG TO EF-PESO-BUF
      * DB_Entry-Field : ef-peso-utf
           MOVE prg-peso-utf OF PROGMAG TO ef-peso-utf-BUF
      * DB_Entry-Field : ef-peso-non-utf
           MOVE prg-peso-non-utf OF PROGMAG TO ef-peso-non-utf-BUF
      * DB_LABEL : LBL-DES-ARTICOLO
              MOVE art-descrizione  TO LBL-DES-ARTICOLO-BUF
      * DB_LABEL : LBL-DES-MAGAZZ
              MOVE mag-descrizione  TO LBL-DES-MAGAZZ-BUF
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen1-SHOW-MSG-ROUTINE
           .

       Screen1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen1-DISPLAY-MESSAGE
           .

       Screen1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen1-Save-Status.
           .             

       Screen1-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen Screen1
      ***---
       Screen1-BEFORE-SCREEN.
           evaluate control-id
           |78-ID-EF-COD-ARTICOLO è l'ID del campo EF-COD-ARTICOLO
           when 78-ID-EF-COD-ARTICOLO
                move 1 to StatusHelp
                perform STATUS-HELP
           |78-ID-EF-COD-MAGAZZ è l'ID del campo EF-COD-MAGAZZ
           when 78-ID-EF-COD-MAGAZZ
                move 1 to StatusHelp
                perform STATUS-HELP
           |78-ID-EF-TIPO-IMBALLO è l'ID del campo EF-TIPO-IMBALLO
           when 78-ID-EF-TIPO-IMBALLO
                move 1 to StatusHelp
                perform STATUS-HELP
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione settaggio keyboard "." ---> ","
           evaluate control-id
           |78-ID-EF-PESO è l'ID del campo EF-PESO
           when 78-ID-EF-PESO
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |78-ID-ef-peso-utf è l'ID del campo ef-peso-utf
           when 78-ID-ef-peso-utf
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |78-ID-ef-peso-non-utf è l'ID del campo ef-peso-non-utf
           when 78-ID-ef-peso-non-utf
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Paragrafo per la struttura del codice in AFTER sulla screen Screen1
      ***---
       Screen1-AFTER-SCREEN.
           evaluate control-id
           |78-ID-EF-COD-ARTICOLO è l'ID del campo EF-COD-ARTICOLO
           when 78-ID-EF-COD-ARTICOLO
                move 0 to StatusHelp
                perform STATUS-HELP

           |78-ID-EF-COD-MAGAZZ è l'ID del campo EF-COD-MAGAZZ
           when 78-ID-EF-COD-MAGAZZ
                move 0 to StatusHelp
                perform STATUS-HELP

           |78-ID-EF-TIPO-IMBALLO è l'ID del campo EF-TIPO-IMBALLO
           when 78-ID-EF-TIPO-IMBALLO
                move 0 to StatusHelp
                perform STATUS-HELP

           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione risettaggio keyboard "." ---> "."
           evaluate control-id
           |78-ID-EF-PESO è l'ID del campo EF-PESO
           when 78-ID-EF-PESO
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |78-ID-ef-peso-utf è l'ID del campo ef-peso-utf
           when 78-ID-ef-peso-utf
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |78-ID-ef-peso-non-utf è l'ID del campo ef-peso-non-utf
           when 78-ID-ef-peso-non-utf
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione stringa perform CONTROLLO
           evaluate control-id
           |78-ID-EF-COD-ARTICOLO è l'ID del campo EF-COD-ARTICOLO
           when 78-ID-EF-COD-ARTICOLO
                perform CONTROLLO
           |78-ID-EF-COD-MAGAZZ è l'ID del campo EF-COD-MAGAZZ
           when 78-ID-EF-COD-MAGAZZ
                perform CONTROLLO
           |78-ID-EF-TIPO-IMBALLO è l'ID del campo EF-TIPO-IMBALLO
           when 78-ID-EF-TIPO-IMBALLO
                perform CONTROLLO
           |78-ID-EF-PESO è l'ID del campo EF-PESO
           when 78-ID-EF-PESO
                perform CONTROLLO
           |78-ID-ef-peso-utf è l'ID del campo ef-peso-utf
           when 78-ID-ef-peso-utf
                perform CONTROLLO
           |78-ID-ef-peso-non-utf è l'ID del campo ef-peso-non-utf
           when 78-ID-ef-peso-non-utf
                perform CONTROLLO
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella AFTER CONTROLLO della screen
           when 99999 continue
           when other continue
           end-evaluate.



       Screen1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "Digitare il Codice dell'Articolo" to 
           TOTEM-HINT-TEXT
           WHEN 5002 MOVE "Digitare il Codice del Magazzino" to 
           TOTEM-HINT-TEXT
           WHEN 5003 MOVE "Digitare il Codice del Tipo Imballo" to 
           TOTEM-HINT-TEXT
           WHEN 5004 MOVE "Digitare il Peso" to TOTEM-HINT-TEXT
           WHEN 5005 MOVE "Digitare il Peso" to TOTEM-HINT-TEXT
           WHEN 5006 MOVE "Digitare il Peso" to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM EF-COD-ARTICOLO-BeforeProcedure
           When 5002 PERFORM EF-COD-MAGAZZ-BeforeProcedure
           When 5003 PERFORM EF-TIPO-IMBALLO-BeforeProcedure
           When 5004 PERFORM EF-PESO-BeforeProcedure
           When 5005 PERFORM EF-PESO-BeforeProcedure
           When 5006 PERFORM EF-PESO-BeforeProcedure
           END-EVALUATE
           PERFORM Screen1-DISPLAY-STATUS-MSG
           perform Screen1-BEFORE-SCREEN
           .

       Screen1-AfterProcedure.
           EVALUATE Control-Id
           When 5001 PERFORM EF-COD-ARTICOLO-AfterProcedure
           When 5002 PERFORM EF-COD-MAGAZZ-AfterProcedure
           When 5003 PERFORM EF-TIPO-IMBALLO-AfterProcedure
           When 5004 PERFORM EF-PESO-AfterProcedure
           When 5005 PERFORM EF-PESO-AfterProcedure
           When 5006 PERFORM EF-PESO-AfterProcedure
           END-EVALUATE
           perform Screen1-AFTER-SCREEN
           .

       Screen1-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       AGGIORNA-COSTO-ULTIMO.
      * <TOTEM:PARA. AGGIORNA-COSTO-ULTIMO>
           set tutto-ok to true.
           initialize prg-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           |Aggiorno il record indicato dalla 
           |chiave passatami in linkage
           move link-key     to prg-chiave.
           |Controllo che il record ci sia altrimenti lo creo...
           read progmag no lock
                invalid |NON DOVREBBE MAI PASSARE DI QUI!!!
                move 0             to SaveCostoUltimo
                set prg-attivo     to true
                move link-utf      to prg-peso-utf
                move link-non-utf  to prg-peso-non-utf
                move link-user     to prg-utente-creazione
                accept prg-data-creazione from century-date
                accept prg-ora-creazione  from time
                write prg-rec invalid continue end-write
                |.. ed eventualmente creo il padre
                set prg-attivo     to true
                move spaces        to prg-cod-magazzino
                move spaces        to prg-tipo-imballo
                move 0             to prg-peso 
                                      prg-peso-utf 
                                      prg-peso-non-utf
                move link-user     to prg-utente-creazione
                accept prg-data-creazione from century-date
                accept prg-ora-creazione  from time
                write prg-rec invalid continue end-write
           end-read.

           move link-key to prg-chiave.
           perform READ-PROGMAG-LOCK.
           if not RecLocked
              if link-valore-costo not = 0
                 move link-valore-costo to prg-costo-ultimo
              end-if
              |Aggiorno il record di progmag ed...
              rewrite prg-rec  invalid continue end-rewrite
LUBEXX        move prg-costo-ultimo to SaveCostoUltimo
              unlock progmag all record

              |...aggiorno il record "PADRE"
              move spaces     to prg-cod-magazzino
              move spaces     to prg-tipo-imballo
              move 0          to prg-peso
              perform READ-PROGMAG-LOCK
              if not RecLocked
                 if trovato
                    move SaveCostoUltimo to prg-costo-ultimo
                    rewrite prg-rec invalid continue end-rewrite
                    unlock progmag all record
                 end-if   
              end-if
           end-if 
           .
      * <TOTEM:END>

       AGGIORNA-PROGMAG-CAUSALE.
      * <TOTEM:PARA. AGGIORNA-PROGMAG-CAUSALE>
           set tutto-ok to true.
           initialize prg-rec.   
           move link-causale to tca-codice.
           read tcaumag no lock 
                invalid 
                set errori to true 
LUBEXX          if link-chiamata-batch
LUBEXX             move -1 to link-wprogmag-status
LUBEXX             initialize link-msg-err-ritorno
LUBEXX             string "ERRORE: Causale " delimited size
LUBEXX                    tca-codice         delimited size
LUBEXX                    " NON TROVATA!"    delimited size
LUBEXX                    into link-msg-err-ritorno
LUBEXX             end-string
LUBEXX          else
LUBEXX             display message"Operazione impossibile."
LUBEXX                     x"0d0a""Causale: " tca-codice, " NON TROVATA"
LUBEXX                       title tit-err
LUBEXX                        icon 2
LUBEXX          end-if
           end-read.
           if tutto-ok
              set trovato to true
              |Aggiorno il record indicato dalla 
              |chiave passatami in linkage
              move link-key     to prg-chiave
              perform READ-PROGMAG-LOCK
              if not RecLocked
                 if trovato
                    if link-update-um 
                       perform AGGIORNA-VALORI-UM 
                    end-if
                    if link-update-peso
                       perform AGGIORNA-VALORI-PESO
                    end-if
                    if link-update-valore
                       perform AGGIORNA-VALORI-VALORE-MONETARIO
                    end-if
                    move link-user to prg-utente-ultima-modifica
                    accept prg-data-ultima-modifica from century-date
                    accept prg-ora-ultima-modifica  from time
                    rewrite prg-rec invalid continue end-rewrite
                 end-if
                 unlock progmag all record

                 |Aggiorno il record "PADRE"
                 move spaces to prg-cod-magazzino
                 move spaces to prg-tipo-imballo
                 move 0      to prg-peso
                 perform READ-PROGMAG-LOCK
                 if not RecLocked
                    if trovato
                       if link-update-um 
                          perform AGGIORNA-VALORI-UM 
                       end-if
                       if link-update-peso
                          perform AGGIORNA-VALORI-PESO
                       end-if
                       if link-update-valore
                          perform AGGIORNA-VALORI-VALORE-MONETARIO
                       end-if
                       rewrite prg-rec invalid continue end-rewrite
                       if multiplyer(16) not = 0
                          if tca-si-aggiorna
                             multiply link-valore-costo
                                   by multiplyer(16)
                             unlock progmag all records
                             perform AGGIORNA-COSTO-ULTIMO
                          end-if
                       end-if
                    end-if
                    unlock progmag all record
                 end-if
              end-if   
           end-if.

      ***---
       AGGIORNA-VALORI-UM.
           multiply link-valore by multiplyer(1)
             giving como-valore.
           evaluate true
           when tca-movim-giac-pos 
                add      como-valore to   prg-giacenza
           when tca-movim-giac-neg 
                subtract como-valore from prg-giacenza
           end-evaluate.

           multiply link-valore by multiplyer(2)
             giving como-valore.
           evaluate true
           when tca-movim-imp-pos 
                add      como-valore to   prg-impegnato
                if link-impegnato not = 0
                   multiply link-impegnato by multiplyer(2)
                     giving como-valore
                   evaluate true
                   when link-imp-MASTER
                        add como-valore to prg-imp-master
                   when link-imp-GDO
                        add como-valore to prg-imp-GDO
                   when link-imp-TRAD
                        add como-valore to prg-imp-TRAD
                   end-evaluate
                end-if
           when tca-movim-imp-neg 
                subtract como-valore from prg-impegnato
                if link-impegnato not = 0
                   multiply link-impegnato by multiplyer(2)
                     giving como-valore
                   evaluate true
                   when link-imp-MASTER
                        subtract como-valore from prg-imp-master
                   when link-imp-GDO
                        subtract como-valore from prg-imp-GDO
                   when link-imp-TRAD
                        subtract como-valore from prg-imp-TRAD
                   end-evaluate
                end-if
           end-evaluate.

           multiply link-valore by multiplyer(3)
             giving como-valore.
                                 
           move link-chiave-origine to tof-chiave
           read tordforn no lock 
                invalid continue
            not invalid
                if tof-aperto-si
                   move 0 to link-mese-rif
                end-if
           end-read.
           evaluate true
           when tca-movim-ord-pos
                evaluate link-mese-rif
                when 1 add como-valore to prg-ordinato-1
                       add como-valore to prg-ordinato-2
                       add como-valore to prg-ordinato-3
                       add como-valore to prg-ordinato-4
                       add como-valore to prg-ordinato-5
                       add como-valore to prg-ordinato-6
                when 2 add como-valore to prg-ordinato-2
                       add como-valore to prg-ordinato-3
                       add como-valore to prg-ordinato-4
                       add como-valore to prg-ordinato-5
                       add como-valore to prg-ordinato-6
                when 3 add como-valore to prg-ordinato-3
                       add como-valore to prg-ordinato-4
                       add como-valore to prg-ordinato-5
                       add como-valore to prg-ordinato-6
                when 4 add como-valore to prg-ordinato-4
                       add como-valore to prg-ordinato-5
                       add como-valore to prg-ordinato-6
                when 5 add como-valore to prg-ordinato-5
                       add como-valore to prg-ordinato-6
                when 6 add como-valore to prg-ordinato-6
                end-evaluate
           when tca-movim-ord-neg 
                evaluate link-mese-rif
                when 1 subtract como-valore from prg-ordinato-1
                       subtract como-valore from prg-ordinato-2
                       subtract como-valore from prg-ordinato-3
                       subtract como-valore from prg-ordinato-4
                       subtract como-valore from prg-ordinato-5
                       subtract como-valore from prg-ordinato-6
                when 2 subtract como-valore from prg-ordinato-2
                       subtract como-valore from prg-ordinato-3
                       subtract como-valore from prg-ordinato-4
                       subtract como-valore from prg-ordinato-5
                       subtract como-valore from prg-ordinato-6
                when 3 subtract como-valore from prg-ordinato-3
                       subtract como-valore from prg-ordinato-4
                       subtract como-valore from prg-ordinato-5
                       subtract como-valore from prg-ordinato-6
                when 4 subtract como-valore from prg-ordinato-4
                       subtract como-valore from prg-ordinato-5
                       subtract como-valore from prg-ordinato-6
                when 5 subtract como-valore from prg-ordinato-5
                       subtract como-valore from prg-ordinato-6
                when 6 subtract como-valore from prg-ordinato-6
                end-evaluate
           end-evaluate.

           multiply link-valore by multiplyer(4)
             giving como-valore.
           evaluate true
           when tca-movim-iniz-pos 
                add      como-valore to   prg-ini-udm
           when tca-movim-iniz-neg 
                subtract como-valore from prg-ini-udm
           end-evaluate.

           multiply link-valore by multiplyer(5)
             giving como-valore.
           evaluate true                       
           when tca-movim-acq-pos 
                add      como-valore to   prg-acq-udm
           when tca-movim-acq-neg 
                subtract como-valore from prg-acq-udm
           end-evaluate.

           multiply link-valore by multiplyer(6)
             giving como-valore.
           evaluate true
           when tca-movim-ven-pos 
                add      como-valore to   prg-ven-udm
           when tca-movim-ven-neg 
                subtract como-valore from prg-ven-udm
           end-evaluate.

           multiply link-valore by multiplyer(7)
             giving como-valore.
           evaluate true                       
           when tca-movim-var-inv-pos 
                add      como-valore to   prg-var-inv-udm
           when tca-movim-var-inv-neg 
                subtract como-valore from prg-var-inv-udm
           end-evaluate.

           multiply link-valore by multiplyer(8)
             giving como-valore.
           evaluate true
           when tca-movim-resi-for-pos 
                add      como-valore to   prg-resi-fornitori-udm
           when tca-movim-resi-for-neg 
                subtract como-valore from prg-resi-fornitori-udm
           end-evaluate.

           multiply link-valore by multiplyer(9)
             giving como-valore.
           evaluate true
           when tca-movim-resi-cli-pos 
                add      como-valore to   prg-resi-da-cli-udm
           when tca-movim-resi-cli-neg 
                subtract como-valore from prg-resi-da-cli-udm
           end-evaluate.

           multiply link-valore by multiplyer(10)
             giving como-valore.
           evaluate true
           when tca-movim-giac-periodo-pos 
                add      como-valore to   prg-giacenza-udm
           when tca-movim-giac-periodo-neg 
                subtract como-valore from prg-giacenza-udm
           end-evaluate.

           multiply link-valore by multiplyer(11)
             giving como-valore.
           evaluate true
           when tca-entrate-lav-pos
                add      como-valore to   prg-udm-el
           when tca-entrate-lav-neg
                subtract como-valore from prg-udm-el
           end-evaluate.

           multiply link-valore by multiplyer(12)
             giving como-valore.
           evaluate true
           when tca-uscite-lav-pos
                add      como-valore to   prg-udm-ul
           when tca-uscite-lav-neg
                subtract como-valore from prg-udm-ul
           end-evaluate.

           multiply link-valore by multiplyer(13)
             giving como-valore.
           evaluate true
           when tca-entrate-lav2-pos
                add      como-valore to   prg-udm-el2
           when tca-entrate-lav2-neg
                subtract como-valore from prg-udm-el2
           end-evaluate.

           multiply link-valore by multiplyer(14)
             giving como-valore.
           evaluate true
           when tca-uscite-lav2-pos
                add      como-valore to   prg-udm-ul2
           when tca-uscite-lav2-neg
                subtract como-valore from prg-udm-ul2
           end-evaluate.

           multiply link-valore by multiplyer(15)
             giving como-valore.
           evaluate true
           when tca-giac-bloc-pos
                add      como-valore to   prg-giacenza-bloc
           when tca-giac-bloc-neg
                subtract como-valore from prg-giacenza-bloc
           end-evaluate.

      ***---
       AGGIORNA-VALORI-PESO.                   
           multiply link-valore-peso by multiplyer(4)
             giving como-peso.
           evaluate true
           when tca-movim-iniz-pos 
                add      como-peso to   prg-ini-kg
           when tca-movim-iniz-neg 
                subtract como-peso from prg-ini-kg
           end-evaluate.

           multiply link-valore-peso by multiplyer(5)
             giving como-peso.
           evaluate true
           when tca-movim-acq-pos
                add      como-peso to   prg-acq-kg
           when tca-movim-acq-neg
                subtract como-peso from prg-acq-kg
           end-evaluate.

           multiply link-valore-peso by multiplyer(6)
             giving como-peso.
           evaluate true
           when tca-movim-ven-pos
                add      como-peso to   prg-ven-kg
           when tca-movim-ven-neg
                subtract como-peso from prg-ven-kg
           end-evaluate.

           multiply link-valore-peso by multiplyer(7)
             giving como-peso.
           evaluate true
           when tca-movim-var-inv-pos
                add      como-peso to   prg-var-inv-kg
           when tca-movim-var-inv-neg
                subtract como-peso from prg-var-inv-kg
           end-evaluate.

           multiply link-valore-peso by multiplyer(8)
             giving como-peso.
           evaluate true
           when tca-movim-resi-for-pos
                add      como-peso to   prg-resi-fornitori-kg
           when tca-movim-resi-for-neg
                subtract como-peso from prg-resi-fornitori-kg
           end-evaluate.

           multiply link-valore-peso by multiplyer(9)
             giving como-peso.
           evaluate true
           when tca-movim-resi-cli-pos
                add      como-peso to   prg-resi-da-cli-kg
           when tca-movim-resi-cli-neg
                subtract como-peso from prg-resi-da-cli-kg
           end-evaluate.

           multiply link-valore-peso by multiplyer(10)
             giving como-peso.
           evaluate true
           when tca-movim-giac-periodo-pos
                add      como-peso to   prg-giacenza-kg
           when tca-movim-giac-periodo-neg
                subtract como-peso from prg-giacenza-kg
           end-evaluate.

           multiply link-valore-peso by multiplyer(11)
             giving como-peso.
           evaluate true
           when tca-entrate-lav-pos
                add      como-peso to   prg-kg-el
           when tca-entrate-lav-neg
                subtract como-peso from prg-kg-el
           end-evaluate.

           multiply link-valore-peso by multiplyer(12)
             giving como-peso.
           evaluate true
           when tca-uscite-lav-pos
                add      como-peso to   prg-kg-ul
           when tca-uscite-lav-neg
                subtract como-peso from prg-kg-ul
           end-evaluate.

           multiply link-valore-peso by multiplyer(13)
             giving como-peso.
           evaluate true
           when tca-entrate-lav2-pos
                add      como-peso to   prg-kg-el2
           when tca-entrate-lav2-neg
                subtract como-peso from prg-kg-el2
           end-evaluate.

           multiply link-valore-peso by multiplyer(14)
             giving como-peso.
           evaluate true
           when tca-uscite-lav2-pos
                add      como-peso to   prg-kg-ul2
           when tca-uscite-lav2-neg
                subtract como-peso from prg-kg-ul2
           end-evaluate.

      ***---
       AGGIORNA-VALORI-VALORE-MONETARIO.
           multiply link-valore-monetario by multiplyer(4)
             giving como-valore-monetario.
           evaluate true
           when tca-movim-iniz-pos 
                add      como-valore-monetario to   prg-ini-valore
           when tca-movim-iniz-neg 
                subtract como-valore-monetario from prg-ini-valore
           end-evaluate.

           multiply link-valore-monetario by multiplyer(5)
             giving como-valore-monetario.
           evaluate true                       
           when tca-movim-acq-pos 
                add      como-valore-monetario to   prg-acq-valore
           when tca-movim-acq-neg 
                subtract como-valore-monetario from prg-acq-valore
           end-evaluate.

           multiply link-valore-monetario by multiplyer(6)
             giving como-valore-monetario.
           evaluate true
           when tca-movim-ven-pos 
                add      como-valore-monetario to   prg-ven-valore
           when tca-movim-ven-neg 
                subtract como-valore-monetario from prg-ven-valore
           end-evaluate.

           multiply link-valore-monetario by multiplyer(7)
             giving como-valore-monetario.
           evaluate true                       
           when tca-movim-var-inv-pos 
                add      como-valore-monetario to   prg-var-inv-valore
           when tca-movim-var-inv-neg 
                subtract como-valore-monetario from prg-var-inv-valore
           end-evaluate.

           multiply link-valore-monetario by multiplyer(8)
             giving como-valore-monetario.
           evaluate true
           when tca-movim-resi-for-pos 
                add como-valore-monetario to prg-resi-fornitori-valore
           when tca-movim-resi-for-neg 
                subtract como-valore-monetario 
                    from prg-resi-fornitori-valore
           end-evaluate.

           multiply link-valore-monetario by multiplyer(9)
             giving como-valore-monetario.
           evaluate true
           when tca-movim-resi-cli-pos 
                add como-valore-monetario to prg-resi-da-cli-valore
           when tca-movim-resi-cli-neg 
                subtract como-valore-monetario 
                    from prg-resi-da-cli-valore
           end-evaluate.

           multiply link-valore-monetario by multiplyer(11)
             giving como-valore-monetario.
           evaluate true
           when tca-entrate-lav-pos
                add      como-valore-monetario to   prg-valore-el
           when tca-entrate-lav-neg
                subtract como-valore-monetario from prg-valore-el
           end-evaluate.

           multiply link-valore-monetario by multiplyer(12)
             giving como-valore-monetario.
           evaluate true
           when tca-uscite-lav-pos
                add      como-valore-monetario to   prg-valore-ul
           when tca-uscite-lav-neg
                subtract como-valore-monetario from prg-valore-ul
           end-evaluate.

           multiply link-valore-monetario by multiplyer(13)
             giving como-valore-monetario.
           evaluate true
           when tca-entrate-lav2-pos
                add      como-valore-monetario to   prg-valore-el2
           when tca-entrate-lav2-neg
                subtract como-valore-monetario from prg-valore-el2
           end-evaluate.

           multiply link-valore-monetario by multiplyer(14)
             giving como-valore-monetario.
           evaluate true
           when tca-uscite-lav2-pos
                add      como-valore-monetario to   prg-valore-ul2
           when tca-uscite-lav2-neg
                subtract como-valore-monetario from prg-valore-ul2
           end-evaluate 
           .
      * <TOTEM:END>

       CAMBIO-VALORI-ARTICOLO.
      * <TOTEM:PARA. CAMBIO-VALORI-ARTICOLO>
           move link-articolo to prg-cod-articolo.
           move link-imballo  to prg-tipo-imballo.
           move link-peso     to prg-peso.
           move mag-codice    to prg-cod-magazzino.
           read progmag no lock
                invalid
                move link-new-imballo to prg-tipo-imballo
                move link-new-peso    to prg-peso
                initialize prg-dati   replacing numeric data by zeroes
                                           alphanumeric data by spaces
                accept prg-data-creazione from century-date
                accept prg-ora-creazione  from time
                set    prg-attivo         to true
                write  prg-rec invalid continue end-write
            not invalid
                perform READ-PROGMAG-LOCK
                if not RecLocked
                   |Controllo l'esistenza di valori consolidati
                   if prg-ini-udm        not = 0 or 
                      prg-ini-kg         not = 0 or
                      prg-ini-valore     not = 0 or 
                      prg-acq-udm        not = 0 or
                      prg-acq-kg         not = 0 or 
                      prg-acq-valore     not = 0 or
                      prg-ven-udm        not = 0 or 
                      prg-ven-kg         not = 0 or
                      prg-ven-valore     not = 0 or 
                      prg-var-inv-udm    not = 0 or
                      prg-var-inv-kg     not = 0 or 
                      prg-var-inv-valore not = 0
                   
                      move link-new-imballo to prg-tipo-imballo
                      move link-new-peso    to prg-peso
                      initialize prg-dati 
                                 replacing numeric data by zeroes
                                      alphanumeric data by spaces
                      accept prg-data-creazione from century-date
                      accept prg-ora-creazione  from time
                      move   link-user          to prg-utente-creazione
                      set    prg-attivo to true
                      write prg-rec invalid continue end-write
                   else
                      delete progmag record invalid continue end-delete
                      move prg-dati         to old-prg-dati
                      move link-new-imballo to prg-tipo-imballo
                      move link-new-peso    to prg-peso
                      move old-prg-dati     to prg-dati
                      write prg-rec invalid continue end-write
                   end-if
                   unlock progmag all records
                end-if
           end-read 
           .
      * <TOTEM:END>

       CANCELLA-PROGMAG.
      * <TOTEM:PARA. CANCELLA-PROGMAG>
           if link-magazzino = 0 and
              link-imballo   = 0 and
              link-peso      = 0
              perform CANCELLAZIONE-SINGOLA
           else
              perform CANCELLAZIONE-GRUPPO
           end-if.

      ***---
       CANCELLAZIONE-SINGOLA.
           move link-articolo   to prg-cod-articolo.
           move link-magazzino  to prg-cod-magazzino.
           move link-imballo    to prg-tipo-imballo.
           move link-peso       to prg-peso.
           
           set RecLocked to false.      

           perform until 1 = 2          
              delete progmag record invalid continue end-delete
              if not RecLocked 
                 exit perform
              end-if
              move "progmag" to geslock-nome-file
              initialize geslock-messaggio
              string   "Il progressivo di magazzino: "           
              delimited size
                     x"0d0a" prg-chiave                               
              delimited size
                     x"0d0a"" risulta in uso su altro terminale."
              delimited size
                      into geslock-messaggio
             end-string
             move 0     to geslock-v-termina
             move 1     to geslock-v-riprova
             move 0     to geslock-v-ignora
             call   "geslock" using geslock-linkage
             cancel "geslock"
             set RecLocked to false
           end-perform.

      ***---
       CANCELLAZIONE-GRUPPO.
           move link-articolo   to prg-cod-articolo.
           move low-value       to prg-cod-magazzino
                                   prg-tipo-imballo
                                   prg-peso.

           start progmag key >= prg-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read progmag next no lock at end exit perform 
           end-read
                    if link-articolo not = prg-cod-articolo
                       exit perform
                    else   
           
                       set RecLocked to false

                       perform until 1 = 2          
                          delete progmag record invalid continue 
           end-delete
                          if not RecLocked 
                             exit perform
                          end-if
                          move "progmag" to geslock-nome-file
                          initialize geslock-messaggio
                          string   "Il progressivo di magazzino: "      
                
                          delimited size
                                 x"0d0a" prg-chiave                     
                     
                          delimited size
                                 x"0d0a"" risulta in uso su altro termin
      -    "ale."
                          delimited size
                                  into geslock-messaggio
                         end-string
                         move 0     to geslock-v-termina
                         move 1     to geslock-v-riprova
                         move 0     to geslock-v-ignora
                         call   "geslock" using geslock-linkage
                         cancel "geslock"   
                         set RecLocked to false
                       end-perform          
                    end-if
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-id-ef-cod-magazz
                inquire ef-cod-magazz      value mag-codice
                move "tmagaz"      to Como-File
                call   "zoom-gt" using como-file, mag-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = ZERO  
                   modify ef-cod-magazz,   value mag-codice
                   move mag-descrizione  to lbl-des-magazz-buf
                   display lbl-des-magazz
                   move 78-id-ef-cod-magazz to store-id
                end-if               
      
           when 78-id-ef-tipo-imballo
                inquire ef-tipo-imballo   value imq-codice
                move "timbalqta"   to Como-File
                call   "zoom-gt" using como-file, imq-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   modify ef-tipo-imballo, value imq-codice
                   perform QTA-IMBALLI
                   display lab-imballo
                   move 78-id-ef-tipo-imballo to store-id
                end-if
           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

           evaluate control-id
           when 78-ID-ef-cod-articolo
                if pgm-chiamante not = "garticoli"
                   inquire ef-cod-articolo value art-codice
                   read articoli no lock
                        invalid
                        set errori to true
                        display message "Articolo NON valido"
                                  title tit-err
                                   icon 2
                        move spaces to art-descrizione
                    not invalid
                        if pgm-chiamante = "bnotacr"
                           move art-imballo-standard to 
           prg-tipo-imballo of progmag
                                                        imq-codice
                           move art-peso-standard    to prg-peso of 
           progmag 
                           modify ef-tipo-imballo, value 
           prg-tipo-imballo of progmag
                           modify ef-peso,         value prg-peso of 
           progmag

                           
                           move spaces to lab-imballo-buf
                           read timbalqta
                                invalid continue
                            not invalid
                                move imq-tipo   to imq-codice
                                perform QTA-IMBALLI
                           end-read
                           display lab-imballo

                        end-if
                        |Posso creare un figlio solo
                        |su un articolo confermato
                        if art-disattivo
                           set errori to true
                           display message "Articolo NON attivo"
                                     title tit-err
                                      icon 2
                           move spaces to art-descrizione
                        end-if
                   end-read
                   if link-peso = 0
                      move art-peso-standard to link-peso
                   end-if
                   move art-descrizione to lbl-des-articolo-buf
                   display lbl-des-articolo
                end-if

           when 78-ID-ef-cod-magazz
                inquire ef-cod-magazz,   value in mag-codice
                move spaces to lbl-des-magazz-buf
                read tmagaz
                     invalid 
                     set errori to true
                     display message "Codice magazzino NON valido"
                               title tit-err
                                icon 2
                 not invalid 
                     move mag-descrizione to lbl-des-magazz-buf
                end-read
                display lbl-des-magazz
           when 78-ID-ef-tipo-imballo
                inquire ef-tipo-imballo, value in imq-codice
                move spaces to lab-imballo-buf
                read timbalqta
                     invalid 
                     set errori to true
                     display message "Codice imballo NON valido"
                               title tit-err
                                icon 2
                 not invalid
                     move imq-tipo   to imq-codice
                     perform QTA-IMBALLI
                end-read
                display lab-imballo

           when 78-ID-ef-peso
                move spaces to tge-chiave
                read tparamge
                inquire ef-peso,         value in como-peso
                evaluate true
                when como-peso > link-peso
                     if como-peso > ( link-peso + ( ( link-peso * 
           tge-perce-prog ) / 100 ) )
                        move tge-perce-prog to tge-perce-prog-ed
                        set errori to true
                        initialize como-mess
                        string "Peso superiore del "  delimited size
                               tge-perce-prog-ed      delimited size
                               "% di quello standard" delimited size
                          into como-mess
                        end-string
                        display message como-mess
                                  title tit-err
                                   icon 2
                     end-if
                when como-peso < link-peso
                     if como-peso < ( link-peso - ( ( link-peso * 
           tge-perce-prog ) / 100 ) )
                        move tge-perce-prog to tge-perce-prog-ed
                        set errori to true
                        initialize como-mess
                        string "Peso inferiore del "  delimited size
                               tge-perce-prog-ed      delimited size
                               "% di quello standard" delimited size
                          into como-mess
                        end-string
                        display message como-mess
                                  title tit-err
                                   icon 2
                     end-if
                when como-peso = 0
                     set errori to true
                     display message box "Inserimento peso mancante"
                             title = tit-err
                             icon mb-warning-icon
                when other continue
                end-evaluate

           when 78-ID-ef-peso-utf
                if v-misto = 1
                   inquire ef-peso-utf, value in art-peso-utf
                   if art-peso-utf = 0 
                      set errori to true
                      display message "Inserimento peso UTF mancante"
                                title tit-err
                                 icon 2
                   end-if
                end-if

           when 78-ID-ef-peso-non-utf
                if v-misto = 1
                   inquire ef-peso,         value in prg-peso
                   inquire ef-peso-utf,     value in art-peso-utf
                   inquire ef-peso-non-utf, value in art-peso-non-utf
                   if art-peso-non-utf = 0
                      set errori to true
                      display message"Inserimento peso non UTF mancante"
                                title tit-err
                                 icon 2
                   else
                      if (art-peso-utf + art-peso-non-utf) not = 
           prg-peso
                         set errori to true
                         display message "Il peso dev'essere la somma "
                                         "di UTF e non UTF"
                                   title tit-err
                                    icon 2
                         move 78-ID-ef-peso to control-id store-id
                      end-if
                   end-if
                end-if
           end-evaluate.

           if errori 
              move control-id to store-id
              move 4          to accept-control 
           end-if 
           .
      * <TOTEM:END>

       OPEN-IO-PROGMAG.
      * <TOTEM:PARA. OPEN-IO-PROGMAG>
           set tutto-ok  to true.
           set RecLocked to false.
           if link-open-with-lock
              if not ProgmagAlreadyOpen
                 open i-o progmag allowing readers
                 set ProgmagAlreadyOpen to true
              end-if
           else
              open i-o progmag
           end-if.

           if RecLocked
              set errori to true
LUBEXX        if link-chiamata-batch
LUBEXX           move -2 to link-wprogmag-status
LUBEXX           move "File [PROGMAG] già in uso!" to 
           link-msg-err-ritorno
LUBEXX        else
                 move "progmag" to geslock-nome-file
                 initialize geslock-messaggio
                 string   "Il file dei progressivi di magazzino" 
                   x"0d0a""risulta in uso su altro terminale."
                   x"0d0a""Impossibile procedere!" delimited size
                       into geslock-messaggio
                 end-string
                 move 1     to geslock-v-riprova
                 move 0     to geslock-v-termina
                 move 0     to geslock-v-ignora
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
       
                 evaluate true
                 when riprova perform OPEN-IO-PROGMAG
                 when other   move -1 to link-wprogmag-status
                 end-evaluate
              end-if
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "status.cpy".
           copy "color-custom.cpy".
           copy "wprogmag.cpy" 
           .
      * <TOTEM:END>

       QTA-IMBALLI.
      * <TOTEM:PARA. QTA-IMBALLI>
           initialize lab-imballo-buf.
           if imq-codice not = spaces
              read timbalqta no lock invalid continue end-read
              move imq-qta-imb to imb-qta-edit
              move imq-tipo    to imb-codice
              read timballi no lock 
                   invalid  initialize imb-descrizione
              end-read
              inspect imb-descrizione replacing trailing spaces 
                                                      by low-value
              call "C$JUSTIFY" using imb-qta-edit, "L"
              string  imb-descrizione delimited by low-value
                      " da "          delimited by size
                      imb-qta-edit    delimited by spaces
                      " x "           delimited by size
                      art-udm-imballo delimited by size
                 into lab-imballo-buf
              end-string
              display lab-imballo
           end-if
           .
      * <TOTEM:END>

       READ-PROGMAG-LOCK.
      * <TOTEM:PARA. READ-PROGMAG-LOCK>
           set RecLocked to false.
           set trovato to true.

           perform until 1 = 2
              set RecLocked to false
              read progmag lock invalid set trovato to false end-read

              evaluate status-progmag
              when "99"  set RecLocked to true
              when other exit perform
              end-evaluate

LUBEXX        if link-chiamata-batch
LUBEXX           move -1 to link-wprogmag-status
LUBEXX           initialize link-msg-err-ritorno
LUBEXX           string "Record "      delimited size
LUBEXX                  "progressivi " delimited size
LUBEXX                  prg-chiave     delimited size 
LUBEXX                  "già in uso!"  delimited size
LUBEXX                  into link-msg-err-ritorno
LUBEXX           end-string
LUBEXX           exit perform
LUBEXX        else
                 perform 5 times
                    move prg-cod-articolo to codice-ed
                    move prg-peso         to peso-ed
                    move "progmag"        to geslock-nome-file
                    initialize geslock-messaggio
                    string "Articolo:       ", codice-ed
                    x"0d0a""Magazzino:  ",     prg-cod-magazzino
                    x"0d0a""Imballo:       ",  prg-tipo-imballo
                    x"0d0a""Peso:           ", peso-ed 
                    x"0d0a""Record già in uso su altro terminale." 
           delimited size
                           into geslock-messaggio
                    end-string
                    set errori to true
                    move 1     to geslock-v-riprova
                    move 0     to geslock-v-termina
                    move 0     to geslock-v-ignora
                    call   "geslock" using geslock-linkage
                    cancel "geslock"
                    |Non valuto il risultato in uscita
                    |perchè solo "riprova" è possibila
                 end-perform
LUBEXX        end-if
           end-perform 
           .
      * <TOTEM:END>

       SALVA.
      * <TOTEM:PARA. SALVA>
           set tutto-ok to true.
           perform varying control-id from 78-ID-ef-cod-articolo by 1
                     until control-id > 78-ID-ef-peso-non-utf
              perform CONTROLLO
              if errori exit perform end-if
           end-perform.

           if errori
              move store-id to control-id
              move 4 to ACCEPT-CONTROL
           else
              initialize prg-rec
              |26/11/2013 se l'articolo NON è disattivo, SEMPRE ATTIVO
      *****        move art-stato to prg-stato
              if art-disattivo set prg-disattivo to true
              else             set prg-attivo    to true
              end-if
              inquire ef-cod-articolo, value in prg-cod-articolo
              inquire ef-cod-magazz,   value in prg-cod-magazzino
              inquire ef-tipo-imballo, value in prg-tipo-imballo
              inquire ef-peso,         value in prg-peso
              evaluate true
              when art-si-utf move prg-peso         to prg-peso-utf
              when art-misto  move art-peso-utf     to prg-peso-utf
                              move art-peso-non-utf to prg-peso-non-utf
              when art-no-utf move prg-peso         to prg-peso-non-utf
              end-evaluate
              move link-user     to prg-utente-creazione
              accept prg-data-creazione from century-date
              accept prg-ora-creazione  from time
              write prg-rec 
                    invalid 
                    display message "Progressivo di "
                                    "magazzino GIA' esistente"
                              title tit-err
                               icon mb-warning-icon
                not invalid
                    display message "Progressivo creato correttamente"
                              title "Creazione progressivi di magazzino"
                               icon mb-warning-icon
              end-write
           end-if.
           perform CANCELLA-COLORE 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       EF-COD-ARTICOLO-BeforeProcedure.
      * <TOTEM:PARA. EF-COD-ARTICOLO-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       EF-COD-ARTICOLO-AfterProcedure.
      * <TOTEM:PARA. EF-COD-ARTICOLO-AfterProcedure>
              INQUIRE EF-COD-ARTICOLO, VALUE IN prg-cod-articolo of 
           progmag
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM EF-COD-ARTICOLO-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR

           .
      * <TOTEM:END>

       EF-COD-MAGAZZ-BeforeProcedure.
      * <TOTEM:PARA. EF-COD-MAGAZZ-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       EF-COD-MAGAZZ-AfterProcedure.
      * <TOTEM:PARA. EF-COD-MAGAZZ-AfterProcedure>
              INQUIRE EF-COD-MAGAZZ, VALUE IN prg-cod-magazzino OF 
           progmag
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM EF-COD-MAGAZZ-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR

           .
      * <TOTEM:END>

       EF-TIPO-IMBALLO-BeforeProcedure.
      * <TOTEM:PARA. EF-TIPO-IMBALLO-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       EF-TIPO-IMBALLO-AfterProcedure.
      * <TOTEM:PARA. EF-TIPO-IMBALLO-AfterProcedure>
              INQUIRE EF-TIPO-IMBALLO, VALUE IN prg-tipo-imballo OF 
           progmag
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM EF-TIPO-IMBALLO-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR

           .
      * <TOTEM:END>

       EF-PESO-BeforeProcedure.
      * <TOTEM:PARA. EF-PESO-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       EF-PESO-AfterProcedure.
      * <TOTEM:PARA. EF-PESO-AfterProcedure>
              INQUIRE EF-PESO, VALUE IN prg-peso OF PROGMAG
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM EF-PESO-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
              INQUIRE ef-peso-utf, VALUE IN prg-peso-utf OF PROGMAG
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-peso-utf-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
              INQUIRE ef-peso-non-utf, VALUE IN prg-peso-non-utf OF 
           PROGMAG
              SET TOTEM-CHECK-OK TO FALSE
              PERFORM ef-peso-non-utf-VALIDATION
              IF NOT TOTEM-CHECK-OK
                 MOVE 1 TO ACCEPT-CONTROL
              END-IF
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR

           .
      * <TOTEM:END>

       TOOL-SALVA-LinkTo.
      * <TOTEM:PARA. TOOL-SALVA-LinkTo>
           perform SALVA 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       wprogmag-Ev-Before-Program.
      * <TOTEM:PARA. wprogmag-Ev-Before-Program>
           set tutto-ok to true.
           open input tordforn.
           perform OPEN-IO-PROGMAG.
           if errori goback end-if.
                                     
           |Devo reimpostarlo perchè c'è un caso COMUNE DALL'AGGIORNAMENTO
           |STATO MASTER in cui non viene settato il flag link-chiamata-batch
           call "C$CALLEDBY" using pgm-chiamante.
           if pgm-chiamante = "ricaldin-bat"     or
                            = "wuseravv"         or
                            = "agg-stato-master" or
                            = "impordini"
              set link-chiamata-batch to true
           end-if.
           |Ottimizzazione del programma. Esso infatti viene 
           |richiamato più volte (es. contabilizzazione e 
           |consolidamento) ma, nel caso di esecuzione batch senza 
           |bisogno di screen eseguo tutto qui dentro evitando di
           |passare attraverso le perform di totem lente ed inutili
           if link-accept
              |Controllo che, prima di creare un figlio
              |sia presente il padre
LUBEXX        move link-articolo to prg-cod-articolo
LUBEXX        move spaces        to prg-tipo-imballo
LUBEXX        move spaces        to prg-cod-magazzino
LUBEXX        move 0             to prg-peso
LUBEXX        read progmag no lock
LUBEXX             invalid 
                   |Potrebbe essere che creoi figli subito senza
                   |aver selezionato il figlio di riferimento
                   if pgm-chiamante not = "evasione"
LUBEXX                display message "Padre del progressivo non present
      -    "e"
LUBEXX                         x"0d0a""Creazione impossibile"
LUBEXX                          title tit-err
LUBEXX                           icon 2
LUBEXX                close  progmag
LUBEXX                unlock progmag all records
LUBEXX                goback
                   end-if
LUBEXX        end-read
           else
              open i-o   articoli
              open input tmagaz
                         tcaumag
                         timbalqta
                         timballi
              if tutto-ok
                 perform WPROGMAG-BATCH
                 close   tmagaz
                         tcaumag 
                         articoli 
                         timbalqta 
                         timballi
              end-if
              goback
           end-if 
           .
      * <TOTEM:END>
       wprogmag-Ev-After-Program.
      * <TOTEM:PARA. wprogmag-Ev-After-Program>
           if not link-open-with-lock
              close progmag
           end-if.
           close tordforn 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

