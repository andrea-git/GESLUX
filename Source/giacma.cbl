      *{TOTEM}PRG-COMMENT
      * giacma.Cbl
      * giacma.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          giacma.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        lunedì 2 febbraio 2015 12:00:41.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:giacma, INIT:giacma, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tmarche.sl".
           COPY "tmagaz.sl".
           COPY "tmp-giacma.sl".
           COPY "articoli.sl".
           COPY "progmag.sl".
           COPY "progmag.sl"
                REPLACING ==progmag== BY ==progmag1==,
                          ==STATUS-progmag== BY ==STATUS-progmag1==
                .
           COPY "timposte.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tmarche.fd".
           COPY "tmagaz.fd".
           COPY "tmp-giacma.fd".
           COPY "articoli.fd".
           COPY "progmag.fd".
           COPY "progmag.fd"
                REPLACING ==progmag== BY ==progmag1==,
                          ==STATUS-progmag== BY ==STATUS-progmag1==
                .
           COPY "timposte.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
           COPY  "IMPOSTE.DEF".
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       78 titolo VALUE IS "Giacenza di Magazzino". 
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 counter          PIC  9(10).
       77 counter2         PIC  9(10).
       77 counter-edit     PIC  z(10).
       77 como-record      PIC  x(32000).
       01 FILLER           PIC  9.
           88 record-ok VALUE IS 1    WHEN SET TO FALSE  0. 
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 1.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 3.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 form1-handle
                  USAGE IS HANDLE OF WINDOW.
       77 BLUE-DA-28X24-BMP            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BLUE-FINO-28X24-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 ef-marca-da-buf  PIC  9(4).
       77 ef-marca-a-buf   PIC  9(4).
       77 scr-visua-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 scr-visua-MN-1-HANDLE
                  USAGE IS HANDLE OF MENU.
       77 FATTO-BMP        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 como-valore      PIC  s9(12)v999.
       77 como-utf         PIC  s9(12)v999.
       01 rec-grid.
           05 col-mag          PIC  X(3).
           05 col-marca        PIC  zzz9.
           05 col-des          PIC  X(50).
           05 col-kg           PIC  zz.zzz.zz9,999-.
           05 col-utf          PIC  zz.zzz.zz9,999-.
           05 col-valore       PIC  zzz.zzz.zzz.zz9,99-.
       77 path-tmp         PIC  X(256).
       77 STATUS-tmp-giacma            PIC  X(2).
           88 Valid-STATUS-tmp-giacma VALUE IS "00" THRU "09". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 ef-mag-buf       PIC  X(3).
       77 lbl-mag-des-buf  PIC  x(50).
       77 form2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 tot-kg           PIC  s9(12)v999.
       77 tot-utf          PIC  s9(12)v999.
       77 tot-valore       PIC  s9(12)v99.
       77 tot-kg-ed        PIC  zzz.zzz.zzz.zz9,999-.
       77 tot-utf-ed       PIC  zzz.zzz.zzz.zz9,999-.
       77 tot-valore-ed    PIC  zzz.zzz.zzz.zz9,99-.
       77 STATUS-progmag1  PIC  X(2).
           88 VALID-STATUS-progmag1 VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-screen1-FLAG-REFRESH PIC  9.
          88 screen1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-visua-FLAG-REFRESH PIC  9.
          88 scr-visua-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-form2-FLAG-REFRESH PIC  9.
          88 form2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-tmp-giacma-BUF     PIC X(75).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-progmag1-BUF     PIC X(1090).
       77 TMP-DataSet1-timposte-BUF     PIC X(277).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-tmp-giacma-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-giacma-LOCK  VALUE "Y".
       77 DataSet1-tmp-giacma-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-giacma-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-giacma-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-progmag-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY1-Asc  VALUE "A".
          88 DataSet1-progmag-KEY1-Desc VALUE "D".
       77 DataSet1-progmag1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag1-LOCK  VALUE "Y".
       77 DataSet1-progmag1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag1-KEY-Asc  VALUE "A".
          88 DataSet1-progmag1-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".

       77 tmp-giacma-k-marca-SPLITBUF  PIC X(38).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 progmag1-key01-SPLITBUF  PIC X(21).

           copy "costo-medio.def".
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-mag VALUE 5001.
       78  78-ID-ef-marca-da VALUE 5002.
       78  78-ID-ef-marca-a VALUE 5003.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           screen1, 
           HELP-ID 1,
           BEFORE PROCEDURE screen1-BeforeProcedure,
           .

      * ENTRY FIELD
       05
           ef-mag, 
           Entry-Field, 
           COL 12,00, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 5,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-mag,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE ef-mag-buf,
           AFTER PROCEDURE ef-mag-a-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-marca-da, 
           Entry-Field, 
           COL 2,00, 
           LINE 4,50,
           LINES 1,33 ,
           SIZE 5,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-marca-da,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-marca-da-buf,
           AFTER PROCEDURE ef-marca-da-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-marca-a, 
           Entry-Field, 
           COL 35,00, 
           LINE 4,50,
           LINES 1,31 ,
           SIZE 5,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-marca-a,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-marca-a-buf,
           AFTER PROCEDURE ef-marca-a-AfterProcedure, 
           .

      * LABEL
       05
           scr-elab-La-1, 
           Label, 
           COL 2,00, 
           LINE 2,00,
           LINES 1,33 ,
           SIZE 9,00 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Magazzino",
           .

      * LABEL
       05
           scr-elab-La-2, 
           Label, 
           COL 11,50, 
           LINE 4,50,
           LINES 1,33 ,
           SIZE 19,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Marca",
           .

      * LABEL
       05
           scr-elab-blockpgm-1, 
           Label, 
           COL 2,20, 
           LINE 3,56,
           LINES 0,50 ,
           SIZE 1,00 ,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           scr-elab-Custom1-1, 
           Label, 
           COL 6,60, 
           LINE 3,39,
           LINES 0,50 ,
           SIZE 2,30 ,
           FONT IS Default-Font,
           ID IS 8,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * BITMAP
       05
           Bitmap-freccia-daaa, 
           Bitmap, 
           COL 7,50, 
           LINE 4,50,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR tr-color,
           BITMAP-HANDLE BLUE-DA-28X24-BMP,
           BITMAP-NUMBER 1,
           ID IS 14,
           Transparent-color TR-COLOR
           .

      * BITMAP
       05
           Bitmap-freccia-finoaa, 
           Bitmap, 
           COL 31,50, 
           LINE 4,50,
           LINES 24,00 ,
           SIZE 28,00 ,
           TRANSPARENT-COLOR tr-color,
           BITMAP-HANDLE BLUE-FINO-28X24-BMP,
           BITMAP-NUMBER 1,
           ID IS 15,
           Transparent-color TR-COLOR
           .

      * LABEL
       05
           lbl-mag-des, 
           Label, 
           COL 18,00, 
           LINE 2,00,
           LINES 2,00 ,
           SIZE 22,00 ,
           COLOR IS 5,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lbl-mag-des-buf,
           .

      * FRAME
       05
           scr-elab-Fr-1, 
           Frame, 
           COL 1,10, 
           LINE 6,00,
           LINES 2,78 ,
           SIZE 39,90 ,
           LOWERED,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-sib, 
           Push-Button, 
           COL 25,10, 
           LINE 6,61,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 10,
           AFTER PROCEDURE pb-sib-AfterProcedure, 
           BEFORE PROCEDURE pb-sib-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-noa, 
           Push-Button, 
           COL 32,90, 
           LINE 6,61,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           FONT IS Small-Font,
           ID IS 11,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-noa-AfterProcedure, 
           BEFORE PROCEDURE pb-noa-BeforeProcedure, 
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 17,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 18,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           scr-visua, 
           HELP-ID 1,
           .

      * PUSH BUTTON
       05
           pb-fatto, 
           Push-Button, 
           COL 45,90, 
           LINE 25,00,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE FATTO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 2,
           ESCAPE-BUTTON,
           TITLE "&Fatto",
           AFTER PROCEDURE pb-fatto-AfterProcedure, 
           BEFORE PROCEDURE pb-fatto-BeforeProcedure, 
           .

      * GRID
       05
           gd-visua, 
           Grid, 
           COL 2,40, 
           LINE 1,50,
           LINES 20,33 ,
           SIZE 95,10 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 4, 8, 58, 73, 88),
           ALIGNMENT ("C", "R", "U", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 93,
           VPADDING 50,
           VSCROLL,
           EVENT PROCEDURE scr-visua-Gd-1-Event-Proc,
           .

      * GRID
       05
           gd-tot, 
           Grid, 
           COL 2,40, 
           LINE 22,89,
           LINES 1,61 ,
           SIZE 95,10 ,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 5,
           DATA-COLUMNS (1, 8, 27, 46),
           ALIGNMENT ("C", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5),
           DATA-TYPES ("x(7)", "x(40)", "x(40)", "X"),
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           FONT IS Verdana12-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS Verdana12B-Occidentale,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 93,
           VPADDING 50,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * BAR
       05
           scr-visua-Br-1, 
           Bar,
           COL 2,40, 
           LINE 22,17,
           SIZE 95,10 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * BAR
       05
           scr-visua-Br-1a, 
           Bar,
           COL 2,40, 
           LINE 22,50,
           SIZE 95,10 ,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * FORM
       01 
           form2, 
           .

      * LABEL
       05
           form3-La-1, 
           Label, 
           COL 2,00, 
           LINE 1,67,
           LINES 1,00 ,
           SIZE 30,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Valorizzazione Magazzino in corso...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:giacma, INIT:giacma, BeforeDeclarative>
      ***---
       PROGMAG-ERR SECTION.
           use after error procedure on progmag.
           set tutto-ok  to true.
           evaluate status-progmag
           when "35"
                display message "File [PROGMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PROGMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PROGMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMARCHE-ERR SECTION.
           use after error procedure on tmarche.
           set tutto-ok  to true.
           evaluate status-tmarche
           when "35"
                display message "File [TMARCHE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMARCHE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMARCHE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMAGAZ-ERR SECTION.
           use after error procedure on tmagaz.
           set tutto-ok  to true.
           evaluate status-tmagaz
           when "35"
                display message "File [TMAGAZ] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMAGAZ] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMAGAZ] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMP-GIACMA-ERR SECTION.
           use after error procedure on tmp-giacma.
           set tutto-ok  to true.
           evaluate status-tmp-giacma
           when "35"
                display message "File [TMP-GIACMA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMP-GIACMA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMP-GIACMA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM giacma-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM screen1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:giacma, INIT:giacma, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana12BI-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BLUE-DA-28X24-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BLUE-FINO-28X24-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, FATTO-BMP
      *    After-Program
           PERFORM giacma-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * Bitmap-freccia-daaa
           COPY RESOURCE "BLUE-DA-28X24.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BLUE-DA-28X24.BMP", 
                   GIVING BLUE-DA-28X24-BMP.
      * Bitmap-freccia-finoaa
           COPY RESOURCE "BLUE-FINO-28X24.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BLUE-FINO-28X24.BMP", 
                   GIVING BLUE-FINO-28X24-BMP.
      * pb-sib
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-noa
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
      * pb-fatto
           COPY RESOURCE "FATTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "FATTO.BMP", 
                   GIVING FATTO-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tmarche
           PERFORM OPEN-tmagaz
      *    tmp-giacma OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-giacma
           PERFORM OPEN-articoli
           PERFORM OPEN-progmag
           PERFORM OPEN-progmag1
           PERFORM OPEN-timposte
      *    After Open
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:giacma, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giacma, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:giacma, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giacma, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-giacma.
      * <TOTEM:EPT. INIT:giacma, FD:tmp-giacma, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-giacma
           IF NOT Valid-STATUS-tmp-giacma
              PERFORM  screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giacma, FD:tmp-giacma, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:giacma, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giacma, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:giacma, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giacma, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag1.
      * <TOTEM:EPT. INIT:giacma, FD:progmag1, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag1
           IF NOT VALID-STATUS-progmag1
              PERFORM  screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giacma, FD:progmag1, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:giacma, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  screen1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:giacma, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-tmagaz
      *    tmp-giacma CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-giacma
           PERFORM CLOSE-articoli
           PERFORM CLOSE-progmag
           PERFORM CLOSE-progmag1
           PERFORM CLOSE-timposte
      *    After Close
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:giacma, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:giacma, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-tmp-giacma.
      * <TOTEM:EPT. INIT:giacma, FD:tmp-giacma, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:giacma, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:giacma, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-progmag1.
      * <TOTEM:EPT. INIT:giacma, FD:progmag1, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag1
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:giacma, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       tmp-giacma-k-marca-MERGE-SPLITBUF.
           INITIALIZE tmp-giacma-k-marca-SPLITBUF
           MOVE tmg-des-marca(1:30) TO tmp-giacma-k-marca-SPLITBUF(1:30)
           MOVE tmg-chiave(1:7) TO tmp-giacma-k-marca-SPLITBUF(31:7)
           .

       DataSet1-tmp-giacma-INITSTART.
           IF DataSet1-tmp-giacma-KEY-Asc
              MOVE Low-Value TO tmg-chiave
           ELSE
              MOVE High-Value TO tmg-chiave
           END-IF
           .

       DataSet1-tmp-giacma-INITEND.
           IF DataSet1-tmp-giacma-KEY-Asc
              MOVE High-Value TO tmg-chiave
           ELSE
              MOVE Low-Value TO tmg-chiave
           END-IF
           .

      * tmp-giacma
       DataSet1-tmp-giacma-START.
           IF DataSet1-tmp-giacma-KEY-Asc
              START tmp-giacma KEY >= tmg-chiave
           ELSE
              START tmp-giacma KEY <= tmg-chiave
           END-IF
           .

       DataSet1-tmp-giacma-START-NOTGREATER.
           IF DataSet1-tmp-giacma-KEY-Asc
              START tmp-giacma KEY <= tmg-chiave
           ELSE
              START tmp-giacma KEY >= tmg-chiave
           END-IF
           .

       DataSet1-tmp-giacma-START-GREATER.
           IF DataSet1-tmp-giacma-KEY-Asc
              START tmp-giacma KEY > tmg-chiave
           ELSE
              START tmp-giacma KEY < tmg-chiave
           END-IF
           .

       DataSet1-tmp-giacma-START-LESS.
           IF DataSet1-tmp-giacma-KEY-Asc
              START tmp-giacma KEY < tmg-chiave
           ELSE
              START tmp-giacma KEY > tmg-chiave
           END-IF
           .

       DataSet1-tmp-giacma-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-giacma-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-giacma-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-giacma-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeWrite>
      * <TOTEM:END>
           WRITE tmg-rec OF tmp-giacma.
           MOVE STATUS-tmp-giacma TO TOTEM-ERR-STAT
           MOVE "tmp-giacma" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-giacma-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-giacma TO TOTEM-ERR-STAT
           MOVE "tmp-giacma" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-giacma-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-giacma TO TOTEM-ERR-STAT
           MOVE "tmp-giacma" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-giacma, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE Low-Value TO prg-chiave OF progmag
              ELSE
                 MOVE High-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE High-Value TO prg-chiave OF progmag
              ELSE
                 MOVE Low-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

      * progmag
       DataSet1-progmag-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY >= prg-chiave OF progmag
              ELSE
                 START progmag KEY <= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY <= prg-chiave OF progmag
              ELSE
                 START progmag KEY >= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY > prg-chiave OF progmag
              ELSE
                 START progmag KEY < prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY < prg-chiave OF progmag
              ELSE
                 START progmag KEY > prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-LOCK
                 READ progmag WITH LOCK 
                 KEY prg-chiave OF progmag
              ELSE
                 READ progmag WITH NO LOCK 
                 KEY prg-chiave OF progmag
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       progmag1-key01-MERGE-SPLITBUF.
           INITIALIZE progmag1-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag1-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag1-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag1-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO 
           progmag1-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag1-INITSTART.
           IF DataSet1-progmag1-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag1
           ELSE
              MOVE High-Value TO prg-chiave OF progmag1
           END-IF
           .

       DataSet1-progmag1-INITEND.
           IF DataSet1-progmag1-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag1
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag1
           END-IF
           .

      * progmag1
       DataSet1-progmag1-START.
           IF DataSet1-progmag1-KEY-Asc
              START progmag1 KEY >= prg-chiave OF progmag1
           ELSE
              START progmag1 KEY <= prg-chiave OF progmag1
           END-IF
           .

       DataSet1-progmag1-START-NOTGREATER.
           IF DataSet1-progmag1-KEY-Asc
              START progmag1 KEY <= prg-chiave OF progmag1
           ELSE
              START progmag1 KEY >= prg-chiave OF progmag1
           END-IF
           .

       DataSet1-progmag1-START-GREATER.
           IF DataSet1-progmag1-KEY-Asc
              START progmag1 KEY > prg-chiave OF progmag1
           ELSE
              START progmag1 KEY < prg-chiave OF progmag1
           END-IF
           .

       DataSet1-progmag1-START-LESS.
           IF DataSet1-progmag1-KEY-Asc
              START progmag1 KEY < prg-chiave OF progmag1
           ELSE
              START progmag1 KEY > prg-chiave OF progmag1
           END-IF
           .

       DataSet1-progmag1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag1-LOCK
              READ progmag1 WITH LOCK 
              KEY prg-chiave OF progmag1
           ELSE
              READ progmag1 WITH NO LOCK 
              KEY prg-chiave OF progmag1
           END-IF
           PERFORM progmag1-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag1 TO TOTEM-ERR-STAT 
           MOVE "progmag1" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag1-KEY-Asc
              IF DataSet1-progmag1-LOCK
                 READ progmag1 NEXT WITH LOCK
              ELSE
                 READ progmag1 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag1-LOCK
                 READ progmag1 PREVIOUS WITH LOCK
              ELSE
                 READ progmag1 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag1-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag1 TO TOTEM-ERR-STAT
           MOVE "progmag1" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag1-KEY-Asc
              IF DataSet1-progmag1-LOCK
                 READ progmag1 PREVIOUS WITH LOCK
              ELSE
                 READ progmag1 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag1-LOCK
                 READ progmag1 NEXT WITH LOCK
              ELSE
                 READ progmag1 NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag1-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag1 TO TOTEM-ERR-STAT
           MOVE "progmag1" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag1 TO TOTEM-ERR-STAT
           MOVE "progmag1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag1 TO TOTEM-ERR-STAT
           MOVE "progmag1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag1 TO TOTEM-ERR-STAT
           MOVE "progmag1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag1, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE mar-rec OF tmarche
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE tmg-rec OF tmp-giacma
           INITIALIZE art-rec OF articoli
           INITIALIZE prg-rec OF progmag
           INITIALIZE prg-rec OF progmag1
           INITIALIZE imp-rec OF timposte
           .


      * GRID
       gd-visua-Content.
      * CELLS' SETTING
              MODIFY gd-visua, X = 1, Y = 1,
                CELL-DATA = "Magazzino",
      * CELLS' SETTING
              MODIFY gd-visua, X = 2, Y = 1,
                CELL-DATA = "Marca",
      * CELLS' SETTING
              MODIFY gd-visua, X = 3, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-visua, X = 4, Y = 1,
                CELL-DATA = "Kg.",
      * CELLS' SETTING
              MODIFY gd-visua, X = 5, Y = 1,
                CELL-DATA = "di cui UTF",
      * CELLS' SETTING
              MODIFY gd-visua, X = 6, Y = 1,
                CELL-DATA = "Valore",
           .

      * GRID
       gd-tot-Content.
      * CELLS' SETTING
              MODIFY gd-tot, X = 1, Y = 1,
                CELL-DATA = "Totale:",
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-giacma-INITREC.
           INITIALIZE tmg-rec OF tmp-giacma
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag1-INITREC.
           INITIALIZE prg-rec OF progmag1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       screen1-Open-Routine.
           PERFORM screen1-Scrn
           PERFORM screen1-Proc
           .

       screen1-Scrn.
           PERFORM screen1-Create-Win
           PERFORM screen1-Init-Value
           PERFORM screen1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM screen1-DISPLAY
           .

       screen1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 7,78,
              SIZE 40,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS form1-handle,
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY screen1 UPON form1-handle
      * DISPLAY-COLUMNS settings
           .

       screen1-PROC.
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, BeforeAccept>
           move spaces to ef-mag-buf.
           move "Blank = Tutti" to lbl-mag-des-buf.
           move 0      to ef-marca-da-buf.
           move 9999   to ef-marca-a-buf.
           display screen1.

           accept imp-data from century-date.

           start timposte key <= imp-chiave
                 invalid continue
             not invalid
                 read timposte previous
           end-start.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT screen1
                 ON EXCEPTION
                    PERFORM screen1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-handle
           INITIALIZE Key-Status
           .

       screen1-Evaluate-Func.
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM screen1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM screen1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-sib-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       screen1-CLEAR.
           PERFORM screen1-INIT-VALUE
           PERFORM screen1-DISPLAY
           .

       screen1-DISPLAY.
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY screen1 UPON form1-handle
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       screen1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       screen1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       screen1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, SetDefault>
      * <TOTEM:END>
           PERFORM screen1-FLD-TO-BUF
           .


       screen1-ALLGRID-RESET.
           .

      * for Form's Validation
       screen1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       screen1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, AfterBufToFld>
      * <TOTEM:END>
           .

       screen1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:screen1, FORM:screen1, AfterFldToBuf>
      * <TOTEM:END>
           .

       screen1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform screen1-BUF-TO-FLD.
           move 0 to scelta.
           .
       screen1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM screen1-SHOW-MSG-ROUTINE
           .

       screen1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM screen1-DISPLAY-MESSAGE
           .

       screen1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       screen1-Save-Status.
           .             

       screen1-Restore-Status.
           .

       scr-visua-Open-Routine.
           PERFORM scr-visua-Scrn
           PERFORM scr-visua-Proc
           .

       scr-visua-Scrn.
           PERFORM scr-visua-Create-Win
           PERFORM scr-visua-Init-Value
           PERFORM scr-visua-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-visua-DISPLAY
           .

       scr-visua-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 26,44,
              SIZE 98,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              RESIZABLE,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-visua-SF-HANDLE,
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-visua UPON scr-visua-SF-HANDLE
      * DISPLAY-COLUMNS settings
              MODIFY gd-visua, DISPLAY-COLUMNS (1, 11, 17, 47, 62, 77)
              MODIFY gd-tot, DISPLAY-COLUMNS (1, 47, 62, 77)
           .

       scr-visua-PROC.
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, BeforeAccept>
           modify gd-visua, reset-grid = 1.
           perform GD-VISUA-CONTENT.  
           set tutto-ok to true.
           initialize path-tmp.
           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  path-tmp  from environment "PATH-ST".             
           inspect path-tmp  replacing trailing spaces by low-value.
           string  path-tmp  delimited by low-value
                   "giacma"  delimited by size
                   "_"       delimited by size
                   como-data delimited by size
                   "_"       delimited by size
                   como-ora  delimited by size
                   ".tmp"    delimited by size
                   into path-tmp
           end-string.
           inspect path-tmp  replacing trailing low-value by spaces.
           open output tmp-giacma.
           close tmp-giacma.
           open i-o tmp-giacma.
      *     perform RIEMPI-TMP.
           perform FORM2-OPEN-ROUTINE.
           close tmp-giacma.
           delete file tmp-giacma.
           if not trovato
              display message "Nessun dato in magazzino!"
                        title titolo
                         icon 2
              move 27 to key-status
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-visua
                 ON EXCEPTION
                    PERFORM scr-visua-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-visua-SF-HANDLE
           INITIALIZE Key-Status
           .

       scr-visua-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-visua-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-visua-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-visua-CLEAR.
           PERFORM scr-visua-INIT-VALUE
           PERFORM scr-visua-DISPLAY
           .

       scr-visua-DISPLAY.
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-visua UPON scr-visua-SF-HANDLE
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-visua-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-visua-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-visua-Content
      * GRID
           PERFORM gd-tot-Content
           .

       scr-visua-Init-Value.
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, SetDefault>
      * <TOTEM:END>
           PERFORM scr-visua-FLD-TO-BUF
           .


       scr-visua-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-visua-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-visua-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-visua-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-visua, FORM:scr-visua, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-visua-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-visua-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-visua-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-visua-SHOW-MSG-ROUTINE
           .

       scr-visua-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-visua-DISPLAY-MESSAGE
           .

       scr-visua-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-visua-Save-Status.
           .             

       scr-visua-Restore-Status.
           .

       form2-Open-Routine.
           PERFORM form2-Scrn
           PERFORM form2-Proc
           .

       form2-Scrn.
           PERFORM form2-Create-Win
           PERFORM form2-Init-Value
           PERFORM form2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form2-DISPLAY
           .

       form2-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 3,00,
              SIZE 32,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12BI-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE form3-Event-Proc,
              HANDLE IS form2-Handle,
      * <TOTEM:EPT. FORM:form2, FORM:form2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form2 UPON form2-Handle
      * DISPLAY-COLUMNS settings
           .

       form2-PROC.
      * <TOTEM:EPT. FORM:form2, FORM:form2, BeforeAccept>
           call "W$MOUSE" using set-mouse-shape, wait-pointer.
           perform RIEMPI-TMP.
           move 27 to key-status.
           if trovato
              modify scr-visua-SF-HANDLE, visible = 1
           end-if.
           call "W$MOUSE" using set-mouse-shape, arrow-pointer.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM form2-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form2, FORM:form2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form2, FORM:form2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form2-Handle
           INITIALIZE Key-Status
           .

       form2-Evaluate-Func.
      * <TOTEM:EPT. FORM:form2, FORM:form2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form2-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form2-CLEAR.
           PERFORM form2-INIT-VALUE
           PERFORM form2-DISPLAY
           .

       form2-DISPLAY.
      * <TOTEM:EPT. FORM:form2, FORM:form2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form2 UPON form2-Handle
      * <TOTEM:EPT. FORM:form2, FORM:form2, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       form2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form2, FORM:form2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form2-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       form2-Init-Value.
      * <TOTEM:EPT. FORM:form2, FORM:form2, SetDefault>
      * <TOTEM:END>
           PERFORM form2-FLD-TO-BUF
           .


       form2-ALLGRID-RESET.
           .

      * for Form's Validation
       form2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form2, FORM:form2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form2, FORM:form2, AfterBufToFld>
      * <TOTEM:END>
           .

       form2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form2, FORM:form2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form2, FORM:form2, AfterFldToBuf>
      * <TOTEM:END>
           .

       form2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form2-BUF-TO-FLD.
           move 0 to scelta.
           .
       form2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form2-SHOW-MSG-ROUTINE
           .

       form2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form2-DISPLAY-MESSAGE
           .

       form2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form2-Save-Status.
           .             

       form2-Restore-Status.
           .



       screen1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5002 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5003 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM ef-mag-a-BeforeProcedure
           When 5002 PERFORM ef-marca-da-BeforeProcedure
           When 5003 PERFORM ef-marca-a-BeforeProcedure
           END-EVALUATE
           .

       scr-visua-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 3 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-visua-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 3 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-visua-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 3 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-visua-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 3 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-visua-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 3 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-visua-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 3 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-visua-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 16 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-ordini-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 16 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-ordini-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 16 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-ordini-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 16 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 16 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 16 ALSO
                    scr-visua-SF-HANDLE 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       form3-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       CALCOLA-TOTALI.
      * <TOTEM:PARA. CALCOLA-TOTALI>
           move 0 to tot-kg tot-utf tot-valore.
           inquire gd-visua, last-row in tot-righe.
           perform varying riga from 2 by 1
                     until riga > tot-righe
              inquire gd-visua(riga, 4), cell-data in como-valore
              inquire gd-visua(riga, 5), cell-data in como-utf
              inquire gd-visua(riga, 6), cell-data in costo-mp
              compute tot-kg =     tot-kg     + como-valore
              compute tot-utf =    tot-utf    + como-utf
              compute tot-valore = tot-valore + costo-mp
           end-perform.
           move tot-kg       to tot-kg-ed.
           move tot-utf      to tot-utf-ed.
           move tot-valore   to tot-valore-ed.
           modify gd-tot(1, 2), cell-data = tot-kg-ed.
           modify gd-tot(1, 3), cell-data = tot-utf-ed.
           modify gd-tot(1, 4), cell-data = tot-valore-ed.
           modify gd-tot(1),     row-font = Verdana12BI-Occidentale 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-ID-ef-mag
                inquire ef-mag, value in mag-codice
                perform ZOOM-TMAGAZ
                if stato-zoom = 0
                   move mag-codice       to ef-mag-buf
                   display ef-mag
                   move mag-descrizione  to lbl-mag-des-buf
                   display lbl-mag-des
                end-if

      *     when 78-ID-ef-mag-a
      *          inquire ef-mag-a, value in mag-codice
      *          perform ZOOM-TMAGAZ
      *          if stato-zoom = 0
      *             move mag-codice to ef-mag-a-buf
      *             display ef-mag-a
      *          end-if

           when 78-ID-ef-marca-da
                inquire ef-marca-da, value in mar-codice
                perform ZOOM-TMARCHE
                if stato-zoom = 0
                   move mar-codice to ef-marca-da-buf
                   display ef-marca-da
                end-if

           when 78-ID-ef-marca-a
                inquire ef-marca-a, value in mar-codice
                perform ZOOM-TMARCHE
                if stato-zoom = 0
                   move mar-codice to ef-marca-a-buf
                   display ef-marca-a
                end-if
           end-evaluate.

      ***---
       ZOOM-TMAGAZ.
           move   "tmagaz"     to como-file.
           call   "zoom-gt" using como-file, mag-rec
                           giving stato-zoom.
           cancel "zoom-gt".

      ***---
       ZOOM-TMARCHE.
           move   "tmarche"    to como-file.
           call   "zoom-gt" using como-file, mar-rec
                           giving stato-zoom.
           cancel "zoom-gt" 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

           evaluate control-id
           when 78-ID-ef-mag
                inquire ef-mag, value in mag-codice
                if mag-codice not = spaces
                   read tmagaz no lock 
                        invalid
                        move spaces to lbl-mag-des-buf
                        set errori to true
                        display message "Magazzino NON valido"
                                  title tit-err
                                   icon 2
                    not invalid
                        move mag-descrizione       to lbl-mag-des-buf
                   end-read
                else
                   move "Tutti i codici magazzino" to lbl-mag-des-buf
                end-if
                display lbl-mag-des

      *     when 78-ID-ef-mag-a                       
      *          inquire ef-mag-da, value in ef-mag-da-buf
      *          inquire ef-mag-a,  value in ef-mag-a-buf
      *          evaluate ef-mag-a-buf
      *          when spaces
      *               move "ZZZ" to ef-mag-a-buf
      *               display ef-mag-a
      *          when "ZZZ" 
      *               continue
      *          when other
      *               move ef-mag-a-buf to mag-codice
      *               read tmagaz no lock 
      *                    invalid
      *                    set errori to true
      *                    display message "Magazzino NON valido"
      *                              title tit-err
      *                               icon 2
      *                not invalid
      *                    if ef-mag-a-buf < ef-mag-da-buf
      *                       display message "Intervallo magazzino errato"
      *                                 title tit-err
      *                                  icon 2
      *                       set errori to true
      *                       move 78-ID-ef-mag-da to control-id
      *                    end-if
      *               end-read
      *          end-evaluate

           when 78-ID-ef-marca-da
                inquire ef-marca-da, value in mar-codice
                if mar-codice not = 0
                   read tmarche no lock 
                        invalid
                        set errori to true
                        display message "Marca NON valida"
                                  title tit-err
                                   icon 2
                   end-read
                end-if

           when 78-ID-ef-marca-a                       
                inquire ef-marca-da, value in ef-marca-da-buf
                inquire ef-marca-a,  value in ef-marca-a-buf
                evaluate ef-marca-a-buf
                when 0
                     move 9999 to ef-marca-a-buf
                     display ef-marca-a
                when 9999
                     continue
                when other
                     move ef-marca-a-buf to mar-codice
                     read tmarche no lock 
                          invalid
                          set errori to true
                          display message "Marca NON valida"
                                    title tit-err
                                     icon 2
                      not invalid
                          if ef-marca-a-buf < ef-marca-da-buf
                             display message "Intervallo marca errato"
                                       title tit-err
                                        icon 2
                             set errori to true
                             move 78-ID-ef-marca-da to control-id
                          end-if
                     end-read
                end-evaluate
           end-evaluate.

           if errori
              perform CANCELLA-COLORE
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy".
           copy "calcola-colore-trasparente.cpy".
           copy "costo-medio.cpy".
           copy "recupero-anagrafica.cpy" 
           .
      * <TOTEM:END>

       RIEMPI-TMP.
      * <TOTEM:PARA. RIEMPI-TMP>
           move 0 to counter counter2.
           set trovato to false.
           modify gd-visua, mass-update = 1.
           move low-value    to prg-rec of progmag.
           move ef-mag-buf   to prg-cod-magazzino of progmag.
           start progmag key is >= key01
                 invalid set errori to true
           end-start.
           if tutto-ok

              |RIPULISCO LA SCREEN DAL CONTATORE
              display "                      "
                 upon form2-handle at column 15
                                        line 03
              ||||||||

              perform until 1 = 2
                 read progmag next at end exit perform end-read

                 add 1 to counter
                 add 1 to counter2
                 if counter2 = 100
                    if counter = 100
                       display "PROGMAG"
                          upon form2-handle at column 15
                                                 line 03
                    end-if
                    move counter to counter-edit
                    display counter-edit
                       upon form2-handle at column 21
                                              line 03
                    move 0 to counter2
                 end-if

                 if ef-mag-buf not = spaces
                    if prg-cod-magazzino  of progmag not = ef-mag-buf 
                       exit perform 
                    end-if
                 end-if

                 |Lo calcolo comunque sul padre come da
                 |richiesta di Trivella in data 04/01/06
                 if prg-cod-magazzino  of progmag not = spaces and
                    prg-tipo-imballo   of progmag not = spaces and
                    prg-peso           of progmag not = 0
                    move prg-cod-articolo of progmag to
                         prg-cod-articolo of progmag1
                    move spaces to prg-cod-magazzino of progmag1
                    move spaces to prg-tipo-imballo  of progmag1
                    move 0      to prg-peso          of progmag1
                    read progmag1 no lock invalid continue end-read
                    move prg-rec of progmag  to como-record
                    move prg-rec of progmag1 to prg-rec of progmag
                    perform CALCOLA-COSTO-MP-COMPLETO
                    add 0,005 to costo-mp giving costo-mp-2dec
                    move como-record to prg-rec of progmag
                    set record-ok to true
                    move prg-cod-articolo of progmag  to art-codice
                    read articoli no lock
                         invalid  set record-ok    to false
                     not invalid  if prg-giacenza  of progmag not  = 0
                                     set record-ok to true
                                  else
                                     set record-ok to false
                                  end-if
                    end-read
                    if record-ok
                       if art-marca-prodotto >= ef-marca-da-buf and
                          art-marca-prodotto <= ef-marca-a-buf
                          initialize tmg-rec
                                     replacing numeric data by zeroes
                                          alphanumeric data by spaces
                          move prg-cod-magazzino  of progmag to tmg-mag
                          move art-marca-prodotto to tmg-marca
                          read tmp-giacma no lock
                               invalid continue
                          end-read
                          compute como-valore  =
                                  prg-giacenza of progmag * 
                                  prg-peso     of progmag
                          add     como-valore  to tmg-kg
                          compute como-utf     =
                                  prg-giacenza of progmag * 
                                  prg-peso-utf of progmag
                          add     como-utf     to tmg-kg-utf
                          compute como-valore =
                                  prg-giacenza  of progmag * 
           costo-mp-2dec
                          add como-valore to tmg-valore
                          if tmg-des-marca =  spaces
                             move tmg-marca to mar-codice
                             read tmarche   no lock
                                  invalid move spaces to mar-descrizione
                             end-read
                             move mar-descrizione to tmg-des-marca
                          end-if
                          write tmg-rec
                                invalid rewrite tmg-rec
                          end-write
                          set trovato to true
                       end-if
                    end-if
                 end-if
              end-perform
           end-if.

           if trovato 

              |RIPULISCO LA SCREEN DAL CONTATORE
              display "                      "
                 upon form2-handle at column 15
                                        line 03
              ||||||||
              move 0 to counter counter2
              move low-value to tmg-rec
              start tmp-giacma key is >= k-marca
                    invalid continue 
              end-start
              perform until 1 = 2
                 read tmp-giacma next no lock at end exit perform 
           end-read

                 add 1 to counter
                 add 1 to counter2
                 if counter2 = 100
                    if counter = 100
                       display "TMP-MAR" 
                          upon form2-handle at column 15
                                                 line 03
                    end-if
                    move counter to counter-edit
                    display counter-edit
                       upon form2-handle at column 21
                                              line 03
                    move 0 to counter2
                 end-if

                 move tmg-mag         to col-mag
                 move tmg-marca       to col-marca mar-codice
                 move tmg-des-marca   to col-des
                 move tmg-kg          to col-kg
                 move tmg-kg-utf      to col-utf
                 move tmg-valore      to col-valore
                 modify gd-visua, record-to-add = rec-grid
              end-perform
              modify gd-visua, mass-update = 0
              perform CALCOLA-TOTALI
           end-if 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire gd-visua, last-row in tot-righe.
           move event-data-2 to riga.
           if riga < 2         move 2 to riga         end-if.
           if riga > tot-righe move tot-righe to riga end-if.
           modify gd-visua, y = riga, start-y = riga,
                            x = 1,    start-x = 6,
                            region-color = 80 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       giacma-Ev-Before-Program.
      * <TOTEM:PARA. giacma-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           perform CALCOLA-COLORE-TRASPARENTE 
           .
      * <TOTEM:END>
       giacma-Ev-After-Program.
      * <TOTEM:PARA. giacma-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       ef-mag-a-BeforeProcedure.
      * <TOTEM:PARA. ef-mag-a-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-marca-da-BeforeProcedure.
      * <TOTEM:PARA. ef-marca-da-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-marca-a-BeforeProcedure.
      * <TOTEM:PARA. ef-marca-a-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-mag-a-AfterProcedure.
      * <TOTEM:PARA. ef-mag-a-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO.
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-marca-da-AfterProcedure.
      * <TOTEM:PARA. ef-marca-da-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO. 
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-marca-a-AfterProcedure.
      * <TOTEM:PARA. ef-marca-a-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO.
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       pb-fatto-BeforeProcedure.
      * <TOTEM:PARA. pb-fatto-BeforeProcedure>
           modify pb-fatto, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-fatto-AfterProcedure.
      * <TOTEM:PARA. pb-fatto-AfterProcedure>
           modify pb-fatto, bitmap-number = 1 
           .
      * <TOTEM:END>
       gd-visua-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-visua-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-visua-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-visua-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-visua-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-visua-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-visua-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-visua-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-visua-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-visua-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-visua-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-visua-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Begin-Drag>
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Begin-Entry>
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-End-Drag>
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell>
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell-Drag>
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell-Mouse>
           .
      * <TOTEM:END>
       pb-sib-BeforeProcedure.
      * <TOTEM:PARA. pb-sib-BeforeProcedure>
           modify pb-sib, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-sib-AfterProcedure.
      * <TOTEM:PARA. pb-sib-AfterProcedure>
           modify pb-sib, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-sib-LinkTo.
      * <TOTEM:PARA. pb-sib-LinkTo>
           perform varying control-id from 78-ID-ef-mag by 1
                     until control-id > 78-ID-ef-marca-a
              perform CONTROLLO
              if errori exit perform end-if
           end-perform.

           if tutto-ok
              modify form1-handle, visible = 0
              perform SCR-VISUA-OPEN-ROUTINE
      *        perform form2-Open-Routine
              modify form1-handle, visible = 1
           end-if 
           .
      * <TOTEM:END>
       pb-noa-BeforeProcedure.
      * <TOTEM:PARA. pb-noa-BeforeProcedure>
           modify pb-noa, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-noa-AfterProcedure.
      * <TOTEM:PARA. pb-noa-AfterProcedure>
           modify pb-noa, bitmap-number = 1 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

