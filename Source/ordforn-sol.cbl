      *{TOTEM}PRG-COMMENT
      * ordforn-sol.Cbl
      * ordforn-sol.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          ordforn-sol.
       AUTHOR.              andre.
       DATE-WRITTEN.        mercoledì 15 dicembre 2021 10:50:46.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:ordforn-sol, INIT:ordforn-sol, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "articoli.sl".
           COPY "progmag.sl".
           COPY "tmagaz.sl".
           COPY "clienti.sl".
           COPY "rordforn.sl".
           COPY "tordforn.sl".
           COPY "sordforn.sl".
           COPY "tcaumag.sl".
           COPY "tmp-ordforn-sol.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "articoli.fd".
           COPY "progmag.fd".
           COPY "tmagaz.fd".
           COPY "clienti.fd".
           COPY "rordforn.fd".
           COPY "tordforn.fd".
           COPY "sordforn.fd".
           COPY "tcaumag.fd".
           COPY "tmp-ordforn-sol.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
      * Properties & User defined Working Stoarge
           COPY  "EXTERNALS.DEF".
           COPY  "LINK-GESLOCK.DEF".
      *
      *
       77 TIPO-DATA        PIC  9(8)
                  VALUE IS 0.
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Form1-Tb-1-Handle
                  USAGE IS HANDLE OF WINDOW.
       78 titolo VALUE IS "Geslux - Pannello qta solleciti ordini fornit
      -    "ori". 
       77 colore           PIC  9(5).
       77 old-qta          PIC  9(8).
       77 old-data-ini     PIC  9(8).
       77 old-data         PIC  9(8).
       77 chiave           PIC  9(5).
       77 nstart           PIC  9.
       77 como-numero-x    PIC  x(8).
       77 como-x           PIC  x.
       77 tipoRead         PIC  xx.
           88 sortAZ VALUE IS "AZ"    WHEN SET TO FALSE  0. 
           88 sortZA VALUE IS "ZA"    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 PrenQta VALUE IS 1    WHEN SET TO FALSE  0. 
       77 FILLER           PIC  9.
           88 BeginEntry VALUE IS 1    WHEN SET TO FALSE  0. 
       01 gruppo-hidden.
           05 hid-tos-chiave.
               10 hid-tos-data     PIC  9(8).
               10 hid-tos-tof-chiave.
                   15 hid-tos-tof-anno PIC  9(4).
                   15 hid-tos-tof-numero           PIC  9(8).
                   15 hid-tos-tof-riga PIC  9(5).
       01 FILLER           PIC  9.
           88 CambioQta VALUE IS 1    WHEN SET TO FALSE  0. 
       77 MESSAGGIO        PIC  X(300)
                  VALUE IS SPACE.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       01 rec-grid.
           05 col-mag-codice   PIC  x(3).
           05 col-cli-codice   PIC  9(5).
           05 col-cli-ragsoc   PIC  x(100).
           05 col-tof-anno-numero          PIC  x(15).
           05 col-tof-data     PIC  99/99/9999.
           05 col-rof-cod-articolo         PIC  z(6).
           05 col-art-descrizione          PIC  x(100).
           05 col-rof-qta      PIC  ---.---.--9.
           05 col-rof-qta-eva  PIC  ---.---.--9.
           05 col-qta-soll     PIC  ---.---.--9.
           05 col-data-soll    PIC  99/99/9999.
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 esegui-73x21-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 lab-des2         PIC  x(50).
       01 FILLER           PIC  XX.
           88 ricarica VALUE IS "SI"    WHEN SET TO FALSE  "NO". 
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 scr-elab-SF-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 scr-elab-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana8-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 
       77 Large-Font
                  USAGE IS HANDLE OF FONT LARGE-FONT.
       77 Medium-Font
                  USAGE IS HANDLE OF FONT MEDIUM-FONT.
       77 Verdana8B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 1.
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 ef-data-buf      PIC  99/99/9999.
       77 STATUS-sordforn  PIC  X(2).
           88 Valid-STATUS-sordforn VALUE IS "00" THRU "09". 
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 path-tmp-ordforn-sol         PIC  X(256).
       77 STATUS-tmp-ordforn-sol       PIC  X(2).
           88 Valid-STATUS-tmp-ordforn-sol VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Form1-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form1-tordforn-RESTOREBUF  PIC X(556).
       77 TMP-Form1-KEYIS  PIC 9(3) VALUE 1.
       77 Form1-MULKEY-TMPBUF   PIC X(556).
       77 STATUS-scr-elab-FLAG-REFRESH PIC  9.
          88 scr-elab-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-sordforn-BUF     PIC X(1139).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-tmp-ordforn-sol-BUF     PIC X(272).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tordforn-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY1-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY1-Desc VALUE "D".
       77 DataSet1-sordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-sordforn-LOCK  VALUE "Y".
       77 DataSet1-sordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-sordforn-KEY-Asc  VALUE "A".
          88 DataSet1-sordforn-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-tmp-ordforn-sol-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-ordforn-sol-LOCK  VALUE "Y".
       77 DataSet1-tmp-ordforn-sol-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-ordforn-sol-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-ordforn-sol-KEY-Desc VALUE "D".

       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 tordforn-tof-k-consegna-SPLITBUF  PIC X(21).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 tmp-ordforn-sol-k-mag-SPLITBUF  PIC X(21).
       77 tmp-ordforn-sol-k-frn-ragsoc-SPLITBUF  PIC X(118).
       77 tmp-ordforn-sol-k-data-SPLITBUF  PIC X(26).
       77 tmp-ordforn-sol-k-art-SPLITBUF  PIC X(24).
       77 tmp-ordforn-sol-k-art-des-SPLITBUF  PIC X(118).


       77  counter                 pic 9(10).
       77  counter2                pic 9(10).
       77  counter-edit            pic z(10).
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-form1-gd-1 VALUE 5001.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * FRAME
       05
           Form1-Fr-1, 
           Frame, 
           COL 86,14, 
           LINE 1,69,
           LINES 3,38 ,
           SIZE 30,57 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * ENTRY FIELD
       05
           ef-data, 
           Entry-Field, 
           COL 102,57, 
           LINE 2,92,
           LINES 1,54 ,
           SIZE 12,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           VALUE ef-data-buf,
           AFTER PROCEDURE ef-data-AfterProcedure, 
           BEFORE PROCEDURE ef-data-BeforeProcedure, 
           .

      * LABEL
       05
           Form1-La-1, 
           Label, 
           COL 88,14, 
           LINE 2,92,
           LINES 1,54 ,
           SIZE 13,00 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Data consegna",
           .

      * LABEL
       05
           CST-BLOCKPGM, 
           Label, 
           COL 49,57, 
           LINE 1,00,
           LINES 0,46 ,
           SIZE 14,43 ,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * GRID
       05
           form1-gd-1, 
           Grid, 
           COL 2,14, 
           LINE 6,77,
           LINES 37,08 ,
           SIZE 198,71 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 4, 9, 109, 124, 134, 140, 240, 251, 262, 
           273),
           ALIGNMENT ("C", "R", "U", "C", "C", "R", "U", "R", "R", "R", 
           "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "X(10)", "9(15)", "X(50)", "X(5)", "X(10)
      -    "", "X", "9(10)", "9(10)", "9(10)", "9(10)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 78-ID-form1-gd-1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RECORD-DATA rec-grid,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 196,
           VPADDING 50,
           VSCROLL,
           EVENT PROCEDURE Form1-Gd-1-Event-Proc,
           .

      * LABEL
       05
           Form1-Custom1-1, 
           Label, 
           COL 155,86, 
           LINE 3,62,
           LINES 1,00 ,
           SIZE 1,00 ,
           FONT IS Default-Font,
           ID IS 4,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * FORM
       01 
           scr-elab, 
           HELP-ID 1,
           .

      * LABEL
       05
           scr-elab-La-2a, 
           Label, 
           COL 3,00, 
           LINE 2,50,
           LINES 1,90 CELLS,
           SIZE 45,90 CELLS,
           COLOR IS 1,
           FONT IS Verdana12B-Occidentale,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Creazione base dati in corso. Attendere prego...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:ordforn-sol, INIT:ordforn-sol, BeforeDeclarative>
       SORDFORN-ERR SECTION.
           use after error procedure on sordforn.
           evaluate status-sordforn
           when "35"
                display message "File [SORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [SORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[SORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"             
           when "99"
                set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM PAS004P-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:ordforn-sol, INIT:ordforn-sol, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana8B-Occidentale
           DESTROY Verdana8-Occidentale
           DESTROY Verdana12B-Occidentale
      *    After-Program
           PERFORM I-O-BLOCCO
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana8B-Occidentale
           INITIALIZE WFONT-DATA Verdana8B-Occidentale
           MOVE 8 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana8B-Occidentale, WFONT-DATA
      * Verdana8-Occidentale
           INITIALIZE WFONT-DATA Verdana8-Occidentale
           MOVE 8 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana8-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
           .

       INIT-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-articoli
           PERFORM OPEN-progmag
           PERFORM OPEN-tmagaz
           PERFORM OPEN-clienti
           PERFORM OPEN-rordforn
           PERFORM OPEN-tordforn
           PERFORM OPEN-sordforn
           PERFORM OPEN-tcaumag
      *    tmp-ordforn-sol OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-ordforn-sol
      *    After Open
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rordforn
           IF NOT Valid-STATUS-rordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tordforn
           IF NOT Valid-STATUS-tordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-sordforn.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:sordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O sordforn
           IF STATUS-sordforn = "35"
              OPEN OUTPUT sordforn
                IF Valid-STATUS-sordforn
                   CLOSE sordforn
                   OPEN I-O sordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-sordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:sordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-ordforn-sol.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tmp-ordforn-sol, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tmp-ordforn-sol
           IF STATUS-tmp-ordforn-sol = "35"
              OPEN OUTPUT tmp-ordforn-sol
                IF Valid-STATUS-tmp-ordforn-sol
                   CLOSE tmp-ordforn-sol
                   OPEN I-O tmp-ordforn-sol
                END-IF
           END-IF
           IF NOT Valid-STATUS-tmp-ordforn-sol
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tmp-ordforn-sol, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-articoli
           PERFORM CLOSE-progmag
           PERFORM CLOSE-tmagaz
           PERFORM CLOSE-clienti
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-sordforn
           PERFORM CLOSE-tcaumag
      *    tmp-ordforn-sol CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-ordforn-sol
      *    After Close
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-sordforn.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:sordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE sordforn
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-tmp-ordforn-sol.
      * <TOTEM:EPT. INIT:ordforn-sol, FD:tmp-ordforn-sol, BeforeClose>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       tordforn-tof-k-consegna-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-consegna-SPLITBUF
           MOVE tof-data-consegna OF tordforn(1:8) TO 
           tordforn-tof-k-consegna-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-consegna-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE Low-Value TO tof-chiave
              ELSE
                 MOVE High-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE High-Value TO tof-chiave
              ELSE
                 MOVE Low-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

      * tordforn
       DataSet1-tordforn-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY >= tof-chiave
              ELSE
                 START tordforn KEY <= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY <= tof-chiave
              ELSE
                 START tordforn KEY >= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY > tof-chiave
              ELSE
                 START tordforn KEY < tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY < tof-chiave
              ELSE
                 START tordforn KEY > tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-LOCK
                 READ tordforn WITH LOCK 
                 KEY tof-chiave
              ELSE
                 READ tordforn WITH NO LOCK 
                 KEY tof-chiave
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-sordforn-INITSTART.
           IF DataSet1-sordforn-KEY-Asc
              MOVE Low-Value TO sof-chiave OF sordforn
           ELSE
              MOVE High-Value TO sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-INITEND.
           IF DataSet1-sordforn-KEY-Asc
              MOVE High-Value TO sof-chiave OF sordforn
           ELSE
              MOVE Low-Value TO sof-chiave OF sordforn
           END-IF
           .

      * sordforn
       DataSet1-sordforn-START.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY >= sof-chiave OF sordforn
           ELSE
              START sordforn KEY <= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-NOTGREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY <= sof-chiave OF sordforn
           ELSE
              START sordforn KEY >= sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-GREATER.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY > sof-chiave OF sordforn
           ELSE
              START sordforn KEY < sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-START-LESS.
           IF DataSet1-sordforn-KEY-Asc
              START sordforn KEY < sof-chiave OF sordforn
           ELSE
              START sordforn KEY > sof-chiave OF sordforn
           END-IF
           .

       DataSet1-sordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-sordforn-LOCK
              READ sordforn WITH LOCK 
              KEY sof-chiave OF sordforn
           ELSE
              READ sordforn WITH NO LOCK 
              KEY sof-chiave OF sordforn
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT 
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-sordforn-KEY-Asc
              IF DataSet1-sordforn-LOCK
                 READ sordforn PREVIOUS WITH LOCK
              ELSE
                 READ sordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-sordforn-LOCK
                 READ sordforn NEXT WITH LOCK
              ELSE
                 READ sordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE sof-rec OF sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-sordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE sordforn.
           MOVE STATUS-sordforn TO TOTEM-ERR-STAT
           MOVE "sordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:sordforn, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       tmp-ordforn-sol-k-mag-MERGE-SPLITBUF.
           INITIALIZE tmp-ordforn-sol-k-mag-SPLITBUF
           MOVE tos-mag-codice(1:3) TO 
           tmp-ordforn-sol-k-mag-SPLITBUF(1:3)
           MOVE tos-tof-chiave(1:17) TO 
           tmp-ordforn-sol-k-mag-SPLITBUF(4:17)
           .

       tmp-ordforn-sol-k-frn-ragsoc-MERGE-SPLITBUF.
           INITIALIZE tmp-ordforn-sol-k-frn-ragsoc-SPLITBUF
           MOVE tos-frn-ragsoc(1:100) TO 
           tmp-ordforn-sol-k-frn-ragsoc-SPLITBUF(1:100)
           MOVE tos-tof-chiave(1:17) TO 
           tmp-ordforn-sol-k-frn-ragsoc-SPLITBUF(101:17)
           .

       tmp-ordforn-sol-k-data-MERGE-SPLITBUF.
           INITIALIZE tmp-ordforn-sol-k-data-SPLITBUF
           MOVE tos-data-ordine(1:8) TO 
           tmp-ordforn-sol-k-data-SPLITBUF(1:8)
           MOVE tos-tof-chiave(1:17) TO 
           tmp-ordforn-sol-k-data-SPLITBUF(9:17)
           .

       tmp-ordforn-sol-k-art-MERGE-SPLITBUF.
           INITIALIZE tmp-ordforn-sol-k-art-SPLITBUF
           MOVE tos-cod-articolo(1:6) TO 
           tmp-ordforn-sol-k-art-SPLITBUF(1:6)
           MOVE tos-tof-chiave(1:17) TO 
           tmp-ordforn-sol-k-art-SPLITBUF(7:17)
           .

       tmp-ordforn-sol-k-art-des-MERGE-SPLITBUF.
           INITIALIZE tmp-ordforn-sol-k-art-des-SPLITBUF
           MOVE tos-art-descrizione(1:100) TO 
           tmp-ordforn-sol-k-art-des-SPLITBUF(1:100)
           MOVE tos-tof-chiave(1:17) TO 
           tmp-ordforn-sol-k-art-des-SPLITBUF(101:17)
           .

       DataSet1-tmp-ordforn-sol-INITSTART.
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              MOVE Low-Value TO tos-chiave
           ELSE
              MOVE High-Value TO tos-chiave
           END-IF
           .

       DataSet1-tmp-ordforn-sol-INITEND.
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              MOVE High-Value TO tos-chiave
           ELSE
              MOVE Low-Value TO tos-chiave
           END-IF
           .

      * tmp-ordforn-sol
       DataSet1-tmp-ordforn-sol-START.
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              START tmp-ordforn-sol KEY >= tos-chiave
           ELSE
              START tmp-ordforn-sol KEY <= tos-chiave
           END-IF
           .

       DataSet1-tmp-ordforn-sol-START-NOTGREATER.
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              START tmp-ordforn-sol KEY <= tos-chiave
           ELSE
              START tmp-ordforn-sol KEY >= tos-chiave
           END-IF
           .

       DataSet1-tmp-ordforn-sol-START-GREATER.
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              START tmp-ordforn-sol KEY > tos-chiave
           ELSE
              START tmp-ordforn-sol KEY < tos-chiave
           END-IF
           .

       DataSet1-tmp-ordforn-sol-START-LESS.
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              START tmp-ordforn-sol KEY < tos-chiave
           ELSE
              START tmp-ordforn-sol KEY > tos-chiave
           END-IF
           .

       DataSet1-tmp-ordforn-sol-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmp-ordforn-sol-LOCK
              READ tmp-ordforn-sol WITH LOCK 
              KEY tos-chiave
           ELSE
              READ tmp-ordforn-sol WITH NO LOCK 
              KEY tos-chiave
           END-IF
           PERFORM tmp-ordforn-sol-k-mag-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-frn-ragsoc-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-data-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-art-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-art-des-MERGE-SPLITBUF
           MOVE STATUS-tmp-ordforn-sol TO TOTEM-ERR-STAT 
           MOVE "tmp-ordforn-sol" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordforn-sol-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              IF DataSet1-tmp-ordforn-sol-LOCK
                 READ tmp-ordforn-sol NEXT WITH LOCK
              ELSE
                 READ tmp-ordforn-sol NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-ordforn-sol-LOCK
                 READ tmp-ordforn-sol PREVIOUS WITH LOCK
              ELSE
                 READ tmp-ordforn-sol PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-ordforn-sol-k-mag-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-frn-ragsoc-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-data-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-art-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-art-des-MERGE-SPLITBUF
           MOVE STATUS-tmp-ordforn-sol TO TOTEM-ERR-STAT
           MOVE "tmp-ordforn-sol" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordforn-sol-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmp-ordforn-sol-KEY-Asc
              IF DataSet1-tmp-ordforn-sol-LOCK
                 READ tmp-ordforn-sol PREVIOUS WITH LOCK
              ELSE
                 READ tmp-ordforn-sol PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-ordforn-sol-LOCK
                 READ tmp-ordforn-sol NEXT WITH LOCK
              ELSE
                 READ tmp-ordforn-sol NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmp-ordforn-sol-k-mag-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-frn-ragsoc-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-data-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-art-MERGE-SPLITBUF
           PERFORM tmp-ordforn-sol-k-art-des-MERGE-SPLITBUF
           MOVE STATUS-tmp-ordforn-sol TO TOTEM-ERR-STAT
           MOVE "tmp-ordforn-sol" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordforn-sol-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeWrite>
      * <TOTEM:END>
           WRITE tos-rec OF tmp-ordforn-sol.
           MOVE STATUS-tmp-ordforn-sol TO TOTEM-ERR-STAT
           MOVE "tmp-ordforn-sol" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordforn-sol-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tos-rec OF tmp-ordforn-sol.
           MOVE STATUS-tmp-ordforn-sol TO TOTEM-ERR-STAT
           MOVE "tmp-ordforn-sol" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-ordforn-sol-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, BeforeDelete>
      * <TOTEM:END>
           DELETE tmp-ordforn-sol.
           MOVE STATUS-tmp-ordforn-sol TO TOTEM-ERR-STAT
           MOVE "tmp-ordforn-sol" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-ordforn-sol, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE art-rec OF articoli
           INITIALIZE prg-rec OF progmag
           INITIALIZE mag-rec OF tmagaz
           INITIALIZE cli-rec OF clienti
           INITIALIZE rof-rec OF rordforn
           INITIALIZE tof-rec OF tordforn
           INITIALIZE sof-rec OF sordforn
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE tos-rec OF tmp-ordforn-sol
           .


      * GRID
       form1-gd-1-Content.
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 1, Y = 1,
                CELL-DATA = "*Mag.",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 2, Y = 1,
                CELL-DATA = "Fornitore",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 3, Y = 1,
                CELL-DATA = "*Ragione sociale",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 4, Y = 1,
                CELL-DATA = "*Numero",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 5, Y = 1,
                CELL-DATA = "*Data",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 6, Y = 1,
                CELL-DATA = "*Art.",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 7, Y = 1,
                CELL-DATA = "*Descrizione",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 8, Y = 1,
                CELL-DATA = "Qta ord",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 9, Y = 1,
                CELL-DATA = "Qta eva",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 10, Y = 1,
                CELL-FONT Verdana8B-Occidentale,
                CELL-DATA = "Qta solleciti",
      * CELLS' SETTING
              MODIFY form1-gd-1, X = 11, Y = 1,
                CELL-DATA = "Data solleciti",
      * COLUMNS' SETTING
              MODIFY form1-gd-1, X = 10  
                COLUMN-FONT = Verdana8B-Occidentale,
      * COLUMNS' SETTING
              MODIFY form1-gd-1, X = 11  
                COLUMN-FONT = Verdana8B-Occidentale,
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-sordforn-INITREC.
           INITIALIZE sof-rec OF sordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-ordforn-sol-INITREC.
           INITIALIZE tos-rec OF tmp-ordforn-sol
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form1-Buf-To-Fld
           END-EVALUATE
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 44,62,
              SIZE 201,00,
              COLOR 65793,
              CONTROL FONT Verdana8-Occidentale,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Form1-Event-Proc,
              HANDLE IS Form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form1 UPON Form1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY form1-gd-1, DISPLAY-COLUMNS (1, 11, 21, 66, 79, 
           91, 99, 151, 161, 171, 184)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           perform INIT.
           
           accept como-data from century-date.
           move como-data to old-data-ini.
           perform DATE-TO-SCREEN.
           move como-data to ef-data-buf.
           display ef-data.

           move 3 to nstart.
           set sortAZ to true.
           perform FORM1-GD-1-CONTENT.
                                          
           perform SCR-ELAB-OPEN-ROUTINE.

           move 2  to event-data-2.
           perform SPOSTAMENTO.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      *****     if BeginEntry
      *****        inquire form1-gd-1(riga, 1), cell-data pev-articolo
      *****        inquire form1-gd-1(riga, 4), cell-data pev-tpr-codice
      *****        inquire form1-gd-1(riga, 6), cell-data pev-gdo
      *****
      *****        initialize path-tmp-mtordini
      *****        accept path-tmp-mtordini   from environment "PATH_ST"
      *****        accept como-data from century-date
      *****        accept como-ora  from time
      *****        inspect path-tmp-mtordini replacing trailing spaces by low-value
      *****        string  path-tmp-mtordini delimited low-value
      *****                "TMP_MTORDINI_"   delimited low-value
      *****                como-data         delimited low-value
      *****                "_"               delimited low-value
      *****                como-ora          delimited low-value
      *****                ".tmp"            delimited low-value
      *****                into path-tmp-mtordini
      *****        end-string
      *****        move spaces to ext-file
      *****        open output tmp-mtordini
      *****
      *****        move low-value to mro-rec
      *****        move pev-articolo   to mro-prg-cod-articolo
      *****        move pev-tpr-codice to mro-promo
      *****        start mrordini key >= mro-k-tprev
      *****              invalid continue
      *****          not invalid
      *****              perform until 1 = 2
      *****                 read mrordini next at end exit perform end-read
      *****                 if mro-prg-cod-articolo not = pev-articolo or
      *****                    mro-promo            not = pev-tpr-codice
      *****                    exit perform
      *****                 end-if
      *****                 move path-tmp-mtordini to ext-file
      *****                 move mro-anno          to tmto-anno   mto-anno
      *****                 move mro-numero        to tmto-numero mto-numero
      *****                 read mtordini no lock
      *****                 move pev-gdo           to tmto-gdo
      *****                 move mto-cod-cli       to cli-codice
      *****                 set cli-tipo-C to true
      *****                 read clienti no lock invalid continue end-read
      *****                 move cli-ragsoc-1 to tmto-cliente 
      *****                 if mto-prg-destino = 0
      *****                    move cli-localita to tmto-destino
      *****                 else
      *****                    move mto-cod-cli       to des-codice
      *****                    move mto-prg-destino   to des-prog
      *****                    read destini no lock
      *****                    move des-localita   to tmto-destino
      *****                 end-if
      *****                 move mro-qta           to tmto-qta-ord
      *****                 move mto-data-ordine   to tmto-data-ord
      *****                 move mto-data-note1    to tmto-data-cons
      *****                 evaluate mto-stato-ordine 
      *****                 when 1 move "REGISTRATO"  to tmto-stato-esteso
      *****                 when 2 move "IN LAVORAZ"  to tmto-stato-esteso
      *****                 when 3 move "SPED. PARZ." to tmto-stato-esteso
      *****                 when 4 move "SPED. TOT."  to tmto-stato-esteso
      *****                 when 7 move "CHIUSO"      to tmto-stato-esteso
      *****                 end-evaluate
      *****                 write tmto-rec
      *****              end-perform
      *****        end-start
      *****        close tmp-mtordini
      *****        if ext-file not = spaces
      *****           move "tmp-mtordini" to como-file
      *****           call   "zoom-gt" using como-file, tmto-rec
      *****                           giving stato-zoom
      *****           cancel "zoom-gt"
      *****           if stato-zoom  = 0
      *****              move tmto-chiave to LinkChiave
      *****              call   "ordinevar" using lk-blockpgm, user-codi, 1,
      *****                                       gordcvar-linkage
      *****              cancel "ordinevar"
      *****           end-if
      *****        end-if
      *****        delete file tmp-mtordini
      *****        set BeginEntry to false
      *****     end-if
      *****
      *****     if PrenQta           
      *****        inquire form1-gd-1(riga, 16), hidden-data in col-pren
      *****        close promoeva
      *****        perform OPEN-IO-PROMOEVA-LOCK
      *****        if not RecLocked                                    
      *****           if col-pren = "S"
      *****              move "N" to col-pren
      *****           else
      *****              move "S" to col-pren
      *****           end-if                                           
      *****           modify form1-gd-1(riga, 16), hidden-data col-pren
      *****           if col-pren = "S"              
      *****              modify form1-gd-1(riga, 16) bitmap spunta2-nera-bmp, 
      *****                                          bitmap-number = 2 
      *****                                          bitmap-width  = 20
      *****           else
      *****              modify form1-gd-1(riga, 16) bitmap spunta2-nera-bmp, 
      *****                                          bitmap-number = 1
      *****                                          bitmap-width  = 20
      *****           end-if
      *****           inquire form1-gd-1(riga, 1), hidden-data gruppo-hidden
      *****           move hid-chiave to pev-chiave
      *****           read promoeva
      *****           move col-pren to pev-rpr-prenotazioni
      *****           rewrite pev-rec              
      *****           move pev-tpr-codice to rpr-codice
      *****           move pev-articolo   to rpr-articolo
      *****           read rpromo 
      *****           move col-pren to rpr-prenotazioni
      *****           rewrite rpr-rec
      *****           unlock rpromo   all records
      *****           unlock promoeva all records
      *****           close promoeva
      *****        end-if             
      *****        open input promoeva
      *****        move 78-ID-form1-gd-1 to control-id
      *****        move 4 to accept-control
      *****        modify form1-gd-1, cursor-y riga, cursor-x 16
      *****        set PrenQta to false
      *****     end-if

           .
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1 UPON Form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      **********     perform SALV-MOD.
      *****     set tutto-ok to true.
      *****     if CambioQta
      *****        display message "Confermi i cambi di quantità e ricalcolo promo?"
      *****                  title titolo
      *****                   type mb-yes-no-cancel
      *****                   icon 2
      *****                 giving scelta
      *****        evaluate scelta
      *****        when mb-cancel set errori to true
      *****        when mb-no     continue
      *****        when mb-yes
      *****             close    rpromo
      *****             open i-o rpromo
      *****             inquire form1-gd-1, last-row in tot-righe
      *****             perform varying riga from 2 by 1 
      *****                       until riga > tot-righe
      *****                inquire form1-gd-1(riga, 1), hidden-data in gruppo-hidden
      *****                if hid-cambio = 1
      *****                   inquire form1-gd-1(riga, 1), cell-data in rpr-articolo
      *****                   inquire form1-gd-1(riga, 4), cell-data in rpr-codice
      *****                   read rpromo no lock invalid continue end-read
      *****                   inquire form1-gd-1(riga, 9), cell-data in rpr-qta
      *****                   rewrite rpr-rec invalid continue end-rewrite
      *****                end-if
      *****             end-perform
      *****             close      rpromo
      *****             open input rpromo
      *****             perform SCR-ELAB-OPEN-ROUTINE
      *****        end-evaluate
      *****     end-if.
      *****     if errori
      *****        move 28 to key-status
      *****        exit paragraph
      *****     end-if.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM form1-gd-1-Content
           .

       Form1-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Form1-DataSet1-Update-Key
           .

       Form1-DataSet1-Update-Key.
           MOVE tof-rec OF tordforn TO
                     Form1-MULKEY-TMPBUF
           PERFORM Form1-CLEAR
           PERFORM Form1-INIT-DATA
           MOVE Form1-MULKEY-TMPBUF TO
                     tof-rec OF tordforn
           PERFORM DataSet1-tordforn-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
           .

       Form1-DUPLICATE-MOVEKEY.
           .

       Form1-First.
           PERFORM Form1-DUMMY-FIRST
           PERFORM DataSet1-tordforn-INITSTART
           PERFORM DataSet1-tordforn-START
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Next
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFirst>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Previous.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-tordforn-START-LESS
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Prev
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-PREVIOUS
           PERFORM Form1-IUD-Display
           .

       Form1-Next.
              PERFORM Form1-Buf-To-Fld
              PERFORM DataSet1-tordforn-START-GREATER
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Next
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterNext>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-NEXT
           PERFORM Form1-IUD-Display
           .
      
       Form1-Last.
           PERFORM Form1-DUMMY-LAST
           PERFORM DataSet1-tordforn-INITEND
           PERFORM DataSet1-tordforn-START-NOTGREATER
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Prev
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterLast>
      * <TOTEM:END>
           PERFORM Form1-DUPLICATE-MOVEKEY.
           PERFORM Form1-IUD-Display
           .

       Form1-Curr.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-tordforn-Read
           PERFORM Form1-DUPLICATE-MOVEKEY
           PERFORM Form1-DUMMY-CURR
           PERFORM Form1-IUD-Display
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCurrent>
      * <TOTEM:END>
           .

       Form1-IUD-Display.
           IF Valid-STATUS-tordforn
              PERFORM Form1-ALLGRID-RESET
              PERFORM Form1-Fld-To-Buf
              PERFORM Form1-NAVI-FOR-MASTERGRID
              PERFORM Form1-DISPLAY
           ELSE
              IF Form1-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form1-Extended-File-Status
              END-IF
           END-IF
           .

       Form1-Add.
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-ADD
           PERFORM DataSet1-tordforn-INITREC
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordforn-Rec-Write
           IF Valid-STATUS-tordforn
              PERFORM Form1-RESUMMARY-INS
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAdd>
      * <TOTEM:END>
           .
     
       Form1-Update.
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-tordforn-START              
           IF NOT Valid-STATUS-tordforn
              PERFORM Form1-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-tordforn-Read
           PERFORM Form1-Buf-To-Fld
           PERFORM Form1-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form1-DUMMY-UPDATE
           PERFORM Form1-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordforn-Rec-Rewrite
           IF Valid-STATUS-tordforn
              PERFORM Form1-RESUMMARY-DEL
              PERFORM Form1-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form1-IUD-Display
           END-IF
           PERFORM Form1-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterUpdate>
      * <TOTEM:END>
           .

       Form1-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form1-DUMMY-DELETE
      * delete
           PERFORM Form1-Buf-To-Fld
           PERFORM DataSet1-tordforn-Rec-Delete
           IF Valid-STATUS-tordforn
              PERFORM Form1-CLEAR
              PERFORM Form1-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-tordforn
           END-IF
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDelete>
      * <TOTEM:END>
           PERFORM Form1-ERR-CHECKING
           .

       Form1-NAVI-FOR-MASTERGRID.
           .

       Form1-ERR-CHECKING.
           IF Valid-STATUS-tordforn
              PERFORM Form1-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form1-Extended-File-Status
           END-IF
           .

       Form1-RESUMMARY-INS.
           .

       Form1-RESUMMARY-DEL.
           .


       Form1-DUMMY-FIRST.
           .

       Form1-DUMMY-PREVIOUS.
           .

       Form1-DUMMY-NEXT.
           .

       Form1-DUMMY-LAST.
           .

       Form1-DUMMY-CURR.
           .

       Form1-DUMMY-ADD.
           .

       Form1-DUMMY-UPDATE.
           .

       Form1-DUMMY-UPDATE-INIT.
           .

       Form1-DUMMY-DELETE.
           .

       Form1-DUMMY-DELETE-INIT.
           .

       Form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * FORM : Form1
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           MOVE DataSet1-tordforn-KEY1-ORDER TO TMP-Form1-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form1-KEYIS
           MOVE tof-rec OF tordforn TO 
              TMP-Form1-tordforn-RESTOREBUF
           .             

       Form1-Restore-Status.
           MOVE TMP-Form1-KEY1-ORDER TO DataSet1-tordforn-KEY1-ORDER
           MOVE TMP-Form1-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form1-tordforn-RESTOREBUF TO
              tof-rec OF tordforn
           PERFORM DataSet1-tordforn-START
           IF Valid-STATUS-tordforn
              PERFORM DataSet1-tordforn-Read-Next
           ELSE
              PERFORM DataSet1-tordforn-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-tordforn OR
              (Valid-STATUS-tordforn AND
                 tof-rec OF tordforn = 
                   TMP-Form1-tordforn-RESTOREBUF)
              PERFORM DataSet1-tordforn-Read-Next
           END-PERFORM
           .

       scr-elab-Open-Routine.
           PERFORM scr-elab-Scrn
           PERFORM scr-elab-Proc
           .

       scr-elab-Scrn.
           PERFORM scr-elab-Create-Win
           PERFORM scr-elab-Init-Value
           PERFORM scr-elab-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 5,00,
              SIZE 50,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-elab-HANDLE,
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab UPON scr-elab-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-elab-PROC.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeAccept>
           move ef-data-buf to como-data.
           perform DATE-TO-FILE.
           move low-value to tof-chiave.
           move como-data to tof-data-consegna.

           perform LOAD-RECORD.

           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab-HANDLE
           INITIALIZE Key-Status
           .

       scr-elab-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab-CLEAR.
           PERFORM scr-elab-INIT-VALUE
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab UPON scr-elab-HANDLE
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-elab-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab-FLD-TO-BUF
           .


       scr-elab-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab-SHOW-MSG-ROUTINE
           .

       scr-elab-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab-DISPLAY-MESSAGE
           .

       scr-elab-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab-Save-Status.
           .             

       scr-elab-Restore-Status.
           .



       Form1-Event-Proc.
           .

       Form1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Heading-Dblclick ALSO 5001 ALSO
                    Form1-Handle 
              PERFORM form1-gd-1-Ev-Msg-Heading-Dblclick
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       COLORE-RIGA.
      * <TOTEM:PARA. COLORE-RIGA>
           if riga < 2 
              move 2 to riga
           end-if.
           modify form1-gd-1, start-x 1,    x 11,
                              start-y riga, y riga,
                         region-color 481 
           .
      * <TOTEM:END>

       INIT.
      * <TOTEM:PARA. INIT>
           set vecchio  to true.
           set tutto-ok to true 
           .
      * <TOTEM:END>

       LOAD-RECORD.
      * <TOTEM:PARA. LOAD-RECORD>
           close       tmp-ordforn-sol.
           open output tmp-ordforn-sol.
           close       tmp-ordforn-sol.
           open i-o    tmp-ordforn-sol.

           move low-value to tof-rec.
           set tof-inserito to true.
           start tordforn key >= tof-k-stato
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tordforn next no lock at end exit perform 
           end-read
                    if tof-chiuso
                       exit perform
                    end-if              
                    perform COUNTER-VIDEO
                    perform LOOP-RIGHE
                 end-perform
           end-start.

           perform CARICA-GRIGLIA.   

      ***---
       LOOP-RIGHE.       
           move low-value  to rof-chiave.
           move tof-chiave to rof-chiave-testa.
           start rordforn key >= rof-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read rordforn next at end exit perform end-read
                    if rof-chiave-testa not = tof-chiave
                       exit perform
                    end-if   

                    perform COUNTER-VIDEO 

                    move 0 to tos-data 
                    move rof-chiave       to sof-chiave
                    read sordforn no lock
                         invalid move 0 to tos-data tos-qta-soll
                     not invalid move sof-data-arr to tos-data
                                 move sof-qta      to tos-qta-soll
                    end-read
                    if tos-data > 0
                       set tos-data-from-soll-r to true
                    else
                       move 0 to sof-prog
                       read sordforn no lock
                            invalid move 0 to tos-data tos-qta-soll
                        not invalid move sof-data-arr to tos-data
                                    move sof-qta      to tos-qta-soll
                       end-read
                       if tos-data > 0
                          set tos-data-from-soll-t to true
                       else        
                          move tof-data-consegna to tos-data
                          set tos-data-from-tordforn to true
                       end-if
                    end-if

                    if tos-data >= old-data-ini
                       exit perform cycle
                    end-if
       
                    if tos-qta-soll = 0
                       compute tos-qta-soll = 
                               rof-qta-ord -
                               rof-qta-evasa
                    end-if

                    move rof-chiave       to tos-tof-chiave
                    move mag-codice       to tos-mag-codice
                    move tof-cod-forn     to tos-cod-forn
                    move tof-causale      to tca-codice
                    read tcaumag no lock
                    move tca-cod-magaz to tos-mag-codice

                    move tof-data-ordine  to tos-data-ordine
                    move rof-cod-articolo to tos-cod-articolo
                    move rof-qta-ord      to tos-qta-ord 
                    move rof-qta-evasa    to tos-qta-ev 

                    move tos-cod-articolo to art-codice
                    read articoli no lock      
                    move art-descrizione  to tos-art-descrizione

                    move tos-cod-forn to cli-codice
                    set cli-tipo-F to true
                    read clienti no lock  
                    initialize tos-frn-ragsoc
                    inspect cli-ragsoc-1 replacing trailing spaces by 
           low-value
                    string  cli-ragsoc-1 delimited low-value
                            " "          delimited size
                            cli-ragsoc-1 delimited size
                       into tos-frn-ragsoc
                    end-string
                    write tos-rec
                 end-perform
           end-start.

      ***---
       CARICA-GRIGLIA.
           modify form1-gd-1, mass-update = 1, reset-grid = 1.
           perform FORM1-GD-1-CONTENT.
           evaluate nstart
           when 1
                if sortAZ
                   modify form1-gd-1(1, 4), cell-data = "Numero >>"
                else
                   modify form1-gd-1(1, 4), cell-data = "Numero <<"
                end-if                                             
                modify form1-gd-1(1, 4), cell-font = 
           Verdana8B-Occidentale,
                                         cell-color 5
           when 2     
                if sortAZ
                   modify form1-gd-1(1, 1), cell-data = "Mag. >>"
                else
                   modify form1-gd-1(1, 1), cell-data = "Mag. <<"
                end-if
                modify form1-gd-1(1, 1), cell-font = 
           Verdana8B-Occidentale,
                                         cell-color 5
           when 3
                if sortAZ
                   modify form1-gd-1(1, 3), cell-data = "Ragione sociale
      -    " >>"
                else                    
                   modify form1-gd-1(1, 3), cell-data = "Ragione sociale
      -    " <<"
                end-if                
                modify form1-gd-1(1, 3), cell-font = 
           Verdana8B-Occidentale,
                                         cell-color 5
           when 4
                if sortAZ
                   modify form1-gd-1(1, 5), cell-data = "Data >>"
                else
                   modify form1-gd-1(1, 5), cell-data = "Data <<"
                end-if                
                modify form1-gd-1(1, 5), cell-font = 
           Verdana8B-Occidentale,
                                         cell-color 5
           when 5
                if sortAZ
                   modify form1-gd-1(1, 6), cell-data = "Art. >>"
                else
                   modify form1-gd-1(1, 6), cell-data = "Art. <<"
                end-if               
                modify form1-gd-1(1, 6), cell-font = 
           Verdana8B-Occidentale,
                                         cell-color 5
           when 6
                if sortAZ
                   modify form1-gd-1(1, 7), cell-data = "Descrizione >>"
                else
                   modify form1-gd-1(1, 7), cell-data = "Descrizione <<"
                end-if               
                modify form1-gd-1(1, 7), cell-font = 
           Verdana8B-Occidentale,
                                         cell-color 5
           end-evaluate.
           
           move 0 to riga.

           if sortAZ
              move low-value  to tos-rec
           else
              move high-value to tos-rec
           end-if.

           evaluate nstart
           when 1
                if sortAZ
                   start tmp-ordforn-sol key >= tos-chiave
                         invalid continue
                     not invalid move 1 to riga
                   end-start
                else        
                   start tmp-ordforn-sol key <= tos-chiave
                         invalid continue
                     not invalid move 1 to riga
                   end-start
                end-if
           when 2
                if sortAZ
                   start tmp-ordforn-sol key >= k-mag
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                else        
                   start tmp-ordforn-sol key <= k-mag
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                end-if
           when 3
                if sortAZ
                   start tmp-ordforn-sol key >= k-frn-ragsoc
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                else
                   start tmp-ordforn-sol key <= k-frn-ragsoc
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                end-if
           when 4
                if sortAZ
                   start tmp-ordforn-sol key >= k-data
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                else
                   start tmp-ordforn-sol key <= k-data
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                end-if
           when 5
                if sortAZ
                   start tmp-ordforn-sol key >= k-art
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                else        
                   start tmp-ordforn-sol key <= k-art
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                end-if
           when 6
                if sortAZ
                   start tmp-ordforn-sol key >= k-art-des
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                else
                   start tmp-ordforn-sol key <= k-art-des
                         invalid continue      
                     not invalid move 1 to riga
                   end-start
                end-if
           end-evaluate.
                
           if riga = 1
              perform until 1 = 2
                 if sortAZ
                    read tmp-ordforn-sol next at end exit perform 
           end-read               
                 else
                    read tmp-ordforn-sol previous at end exit perform 
           end-read               
                 end-if

                 add 1 to riga
                 move tos-mag-codice   to col-mag-codice
                 move tos-cod-forn     to col-cli-codice
                 move tos-frn-ragsoc   to col-cli-ragsoc
                 move tos-tof-numero   to como-numero-x
                 call "C$JUSTIFY" using como-numero-x, "L"
                 inspect como-numero-x replacing leading x"30" by x"20"
                 call "C$JUSTIFY" using como-numero-x, "L"
                 initialize col-tof-anno-numero 
                 string tos-tof-anno   delimited size
                        " - "          delimited size
                        como-numero-x  delimited size
                   into col-tof-anno-numero 
                 end-string
                 move tos-data-ordine  to como-data
                 perform DATE-TO-SCREEN
                 move como-data        to col-tof-data
                 move tos-cod-articolo to col-rof-cod-articolo
                 move tos-art-descrizione  to col-art-descrizione
                 move tos-qta-ord      to col-rof-qta
                 move tos-qta-ev       to col-rof-qta-eva

                 move tos-data         to como-data
                 perform DATE-TO-SCREEN
                 move como-data        to col-data-soll

                 move tos-qta-soll     to col-qta-soll
                              
                 modify form1-gd-1(riga, 1),  cell-data col-mag-codice
                 modify form1-gd-1(riga, 2),  cell-data col-cli-codice  
            
                 modify form1-gd-1(riga, 3),  cell-data col-cli-ragsoc  
            
                 modify form1-gd-1(riga, 4),  cell-data 
           col-tof-anno-numero   
                 modify form1-gd-1(riga, 5),  cell-data col-tof-data    
            
                 modify form1-gd-1(riga, 6),  cell-data 
           col-rof-cod-articolo
                 modify form1-gd-1(riga, 7),  cell-data 
           col-art-descrizione
                 modify form1-gd-1(riga, 8),  cell-data col-rof-qta     
            
                 modify form1-gd-1(riga, 9), cell-data col-rof-qta-eva  
                 modify form1-gd-1(riga, 10), cell-data col-qta-soll 
                 modify form1-gd-1(riga, 11), cell-data col-data-soll

                 move tos-chiave to hid-tos-chiave
                 modify form1-gd-1(riga, 1), hidden-data gruppo-hidden  
             

                 if colore = 257
                    move 513 to colore
                 else
                    move 257 to colore
                 end-if
                 modify form1-gd-1(riga), row-color colore

              end-perform
           end-if.

           modify form1-gd-1, mass-update = 0 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy".   
           copy "utydata.cpy" 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire form1-gd-1, cursor-x in colonna, cursor-y in riga, 
                   last-row in tot-righe.
           move event-data-2 to riga.   
           perform COLORE-RIGA   
           .
      * <TOTEM:END>

       COUNTER-VIDEO.
      * <TOTEM:PARA. COUNTER-VIDEO>
           add 1 to counter
           add 1 to counter2
           if counter2 = 10
              move counter to counter-edit
              display counter-edit
                 upon scr-elab-HANDLE at column 41
                                           line 04
              move 0 to counter2
           end-if            
           .
      * <TOTEM:END>

       REWRITE-SOLLECITI.
      * <TOTEM:PARA. REWRITE-SOLLECITI>
           move "sordforn" to geslock-nome-file
           initialize geslock-messaggio
           string "Il file dei solleciti" 
           x"0d0a""è in uso su altro terminale." delimited size
             into geslock-messaggio
           end-string
           perform until 1 = 2
              set RecLocked to false
              read sordforn lock
              if RecLocked 
                 move 1     to geslock-v-termina
                 move 1     to geslock-v-riprova
                 move 0     to geslock-v-ignora
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova continue
                 when other   exit perform
                 end-evaluate
              else
                 exit perform
              end-if
           end-perform      
           if RecLocked
              move old-qta  to col-qta-soll
              move old-data to col-data-soll
           else             
              inquire form1-gd-1(event-data-2, 10), cell-data in 
           col-qta-soll
              move col-qta-soll to sof-qta
              inquire form1-gd-1(event-data-2, 11), cell-data in 
           col-data-soll
              move col-data-soll to como-data
              perform DATE-TO-FILE
              move como-data to sof-data-arr

              rewrite sof-rec
              unlock sordforn all records
           end-if       
           .
      * <TOTEM:END>

       WRITE-SOLLECITI.
      * <TOTEM:PARA. WRITE-SOLLECITI>
           initialize sof-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.
           move tos-tof-chiave to sof-chiave.
           accept sof-data-creazione from century-date.
           accept sof-ora-creazione  from time.
           move user-codi to sof-utente-creazione.
           inquire form1-gd-1(event-data-2, 10), cell-data in 
           col-qta-soll
           move col-qta-soll to sof-qta
           inquire form1-gd-1(event-data-2, 11), cell-data in 
           col-data-soll
           move col-data-soll to como-data
           perform DATE-TO-FILE
           move como-data to sof-data-arr
           write sof-rec

           set tos-data-from-soll-r to true.
           rewrite tos-rec 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       I-O-BLOCCO.
      * <TOTEM:PARA. I-O-BLOCCO>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           close       tmp-ordforn-sol.
           delete file tmp-ordforn-sol 
           .
      * <TOTEM:END>
       PAS004P-Ev-Before-Program.
      * <TOTEM:PARA. PAS004P-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           accept como-data from century-date.
           accept como-ora  from time.
           accept  path-tmp-ordforn-sol from environment "PATH_ST".
           inspect path-tmp-ordforn-sol replacing trailing spaces by 
           low-value.
           string  path-tmp-ordforn-sol delimited low-value             
                  
                   "TMP-ORDFORN-SOL_"   delimited size
                   como-data            delimited size
                   "_"                  delimited size
                   como-ora             delimited size
              into path-tmp-ordforn-sol 
           end-string.
           inspect path-tmp-ordforn-sol replacing trailing low-value by 
           spaces.
           open output tmp-ordforn-sol.
           close       tmp-ordforn-sol.
           open i-o    tmp-ordforn-sol 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Entry>
           evaluate event-data-1
           when  1
           when  2
           when  3
           when  4
           when  5
           when  6
           when  7
           when  8
           when  9  
                set event-action to event-action-fail
           when 10
                inquire form1-gd-1(event-data-2, event-data-1), 
                        cell-data in col-qta-soll
                move col-qta-soll to old-qta
           when 11
                inquire form1-gd-1(event-data-2, event-data-1), 
                        cell-data in col-data-soll
                move col-data-soll to como-data
                perform DATE-TO-FILE
                move como-data to old-data
           end-evaluate.


      *****     evaluate event-data-1
      *****     when  9
      *****          inquire form1-gd-1(riga, 9), cell-data in old-qta
      *****     when 14          
      *****          inquire form1-gd-1, entry-reason in como-x
      *****          set event-action to event-action-fail-terminate
      *****          evaluate como-x
      *****          when X"00"|doppio click
      *****          when X"0D"|invio       
      *****          when X"20"|spazio
      *****               set BeginEntry to true
      *****          end-evaluate
      *****     when 16
      *****          inquire form1-gd-1, entry-reason in como-x
      *****          set event-action to event-action-fail-terminate
      *****          evaluate como-x
      *****          when X"00"|doppio click   
      *****          when X"0D"|invio
      *****          when X"20"|spazio
      *****               set PrenQta to true
      *****          end-evaluate
      *****     when other
      *****          set event-action to event-action-fail
      *****     end-evaluate 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Heading-Dblclick.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Heading-Dblclick>
           evaluate event-data-1
           when 1
                if nstart not = 2
                   move 2 to nstart
                   set sortAZ to true
                else
                   if sortAZ
                      set sortZA to true
                   else
                      set sortAZ to true
                   end-if
                end-if
                perform SCR-ELAB-OPEN-ROUTINE  

           when 3
                if nstart not = 3
                   move 3 to nstart
                   set sortAZ to true
                else
                   if sortAZ
                      set sortZA to true
                   else
                      set sortAZ to true
                   end-if
                end-if
                perform SCR-ELAB-OPEN-ROUTINE  
           when 4
                if nstart not = 1
                   move 1 to nstart
                   set sortAZ to true
                else
                   if sortAZ
                      set sortZA to true
                   else
                      set sortAZ to true
                   end-if
                end-if
                perform SCR-ELAB-OPEN-ROUTINE
           when 5
                if nstart not = 4
                   move 4 to nstart
                   set sortAZ to true
                else
                   if sortAZ
                      set sortZA to true
                   else
                      set sortAZ to true
                   end-if
                end-if
                perform SCR-ELAB-OPEN-ROUTINE
           when 6
                if nstart not = 5
                   move 5 to nstart
                   set sortAZ to true
                else
                   if sortAZ
                      set sortZA to true
                   else
                      set sortAZ to true
                   end-if
                end-if
                perform SCR-ELAB-OPEN-ROUTINE
           when 7
                if nstart not = 6
                   move 6 to nstart
                   set sortAZ to true
                else
                   if sortAZ
                      set sortZA to true
                   else
                      set sortAZ to true
                   end-if
                end-if
                perform SCR-ELAB-OPEN-ROUTINE
           end-evaluate 
           .
      * <TOTEM:END>
       form1-gd-1-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. form1-gd-1-Ev-Msg-Finish-Entry>
           inquire form1-gd-1(event-data-2, 1), hidden-data in 
           gruppo-hidden
           move hid-tos-chiave to tos-chiave
           read tmp-ordforn-sol no lock.

           evaluate event-data-1
           when 10
                inquire form1-gd-1(event-data-2, 10), cell-data in 
           col-qta-soll 
                move col-qta-soll to sof-qta
                if sof-qta not = old-qta
                   evaluate true
                   when tos-data-from-tordforn
                        move tos-tof-chiave to tof-chiave
                        perform WRITE-SOLLECITI
                   when tos-data-from-soll-t
                        move tos-tof-chiave to sof-chiave
                        move 0 to sof-prog
                        perform REWRITE-SOLLECITI
                   when tos-data-from-soll-r
                        move tos-tof-chiave to sof-chiave
                        perform REWRITE-SOLLECITI
                   end-evaluate 
                end-if
                modify  form1-gd-1(event-data-2, 10), cell-data 
           col-qta-soll   
           when 11 
                inquire form1-gd-1(event-data-2, 11), cell-data in 
           col-data-soll
                move col-data-soll to como-data
                perform DATE-FORMAT
                move como-data to col-data-soll
                modify form1-gd-1(event-data-2, 11), cell-data 
           col-data-soll
                perform DATE-TO-FILE
                if como-data not = old-data
                   evaluate true
                   when tos-data-from-tordforn
                        move tos-tof-chiave to tof-chiave
                        perform WRITE-SOLLECITI
                   when tos-data-from-soll-t
                        move tos-tof-chiave to sof-chiave
                        move 0 to sof-prog
                        perform REWRITE-SOLLECITI
                   when tos-data-from-soll-r
                        move tos-tof-chiave to sof-chiave
                        perform REWRITE-SOLLECITI
                   end-evaluate 
                end-if
                perform DATE-TO-SCREEN
                move como-data to col-data-soll
                modify form1-gd-1(event-data-2, 11), cell-data 
           col-data-soll
           end-evaluate.
           move 78-ID-form1-gd-1 to control-id
           move 4 to accept-control 
                                     
           .
      * <TOTEM:END>
       ef-data-BeforeProcedure.
      * <TOTEM:PARA. ef-data-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-data-AfterProcedure.
      * <TOTEM:PARA. ef-data-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           inquire ef-data, value in ef-data-buf.
           move ef-data-buf to como-data.
           perform DATE-FORMAT.
           move como-data to ef-data-buf.
           display ef-data.

           perform DATE-TO-FILE.
           if como-data not = old-data-ini 
              move como-data to old-data-ini
              perform SCR-ELAB-OPEN-ROUTINE
           end-if 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

