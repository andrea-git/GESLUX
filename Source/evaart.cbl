      *{TOTEM}PRG-COMMENT
      * evaart.Cbl
      * evaart.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          evaart.
       AUTHOR.              Andrea.
       DATE-WRITTEN.        martedì 23 novembre 2010 13.01.17.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:evaart, INIT:evaart, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "progmag.sl".
           COPY "articoli.sl".
           COPY "agenti.sl".
           COPY "clienti.sl".
           COPY "mrordini.sl".
           COPY "mtordini.sl".
           COPY "tmp-mrordini.sl".
           COPY "tmp-evaart.sl".
           COPY "tparamge.sl".
           COPY "tordini.sl".
           COPY "rordini.sl".
           COPY "destini.sl".
           COPY "recapiti.sl".
           COPY "tcaumag.sl".
           COPY "blister.sl".
           COPY "lockfile.sl".
           COPY "tscorte.sl".
           COPY "tpromo.sl".
           COPY "ttipocli.sl".
           COPY "tagli.sl".
           COPY "lineseq.sl".
           COPY "tmp-blis-eva.sl".
           COPY "evaclides.sl".
           COPY "timposte.sl".
           COPY "tmarche.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "progmag.fd".
           COPY "articoli.fd".
           COPY "agenti.fd".
           COPY "clienti.fd".
           COPY "mrordini.fd".
           COPY "mtordini.fd".
           COPY "tmp-mrordini.fd".
           COPY "tmp-evaart.fd".
           COPY "tparamge.fd".
           COPY "tordini.fd".
           COPY "rordini.fd".
           COPY "destini.fd".
           COPY "recapiti.fd".
           COPY "tcaumag.fd".
           COPY "blister.fd".
           COPY "lockfile.fd".
           COPY "tscorte.fd".
           COPY "tpromo.fd".
           COPY "ttipocli.fd".
           COPY "tagli.fd".
           COPY "lineseq.fd".
           COPY "tmp-blis-eva.fd".
           COPY "evaclides.fd".
           COPY "timposte.fd".
           COPY "tmarche.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "comune.def".
               COPY "utydata.def".
               COPY "custom.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
           COPY  "EVAART.DEF".
       01 gd1-rec.
           05 col1-anno        PIC  9(4).
           05 col1-numero      PIC  z(8).
           05 col1-cliente     PIC  x(40).
           05 col1-destino     PIC  x(40).
           05 col1-num-cli     PIC  x(10).
           05 col1-data        PIC  99/99/9999.
           05 col1-agente      PIC  x(40).
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Screen2-FLAG-REFRESH PIC  9.
          88 Screen2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Screen2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Screen2-mtordini-RESTOREBUF  PIC X(882).
       77 TMP-Screen2-KEYIS  PIC 9(3) VALUE 1.
       77 Screen2-MULKEY-TMPBUF   PIC X(882).
       77 STATUS-scr-elab-FLAG-REFRESH PIC  9.
          88 scr-elab-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-fine-FLAG-REFRESH PIC  9.
          88 scr-fine-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-progmag-BUF     PIC X(644).
       77 TMP-DataSet1-articoli-BUF     PIC X(3660).
       77 TMP-DataSet1-agenti-BUF     PIC X(578).
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-mrordini-BUF     PIC X(885).
       77 TMP-DataSet1-mtordini-BUF     PIC X(882).
       77 TMP-DataSet1-tmp-mrordini-BUF     PIC X(375).
       77 TMP-DataSet1-tmp-evaart-BUF     PIC X(251).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-tordini-BUF     PIC X(907).
       77 TMP-DataSet1-rordini-BUF     PIC X(499).
       77 TMP-DataSet1-destini-BUF     PIC X(445).
       77 TMP-DataSet1-recapiti-BUF     PIC X(328).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-blister-BUF     PIC X(1817).
       77 TMP-DataSet1-lockfile-BUF     PIC X(183).
       77 TMP-DataSet1-tscorte-BUF     PIC X(205).
       77 TMP-DataSet1-tpromo-BUF     PIC X(263).
       77 TMP-DataSet1-ttipocli-BUF     PIC X(193).
       77 TMP-DataSet1-tagli-BUF     PIC X(198).
       77 TMP-DataSet1-lineseq-BUF     PIC X(900).
       77 TMP-DataSet1-tmp-blis-eva-BUF     PIC X(11).
       77 TMP-DataSet1-evaclides-BUF     PIC X(774).
       77 TMP-DataSet1-timposte-BUF     PIC X(277).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-agenti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-agenti-LOCK  VALUE "Y".
       77 DataSet1-agenti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-agenti-KEY-Asc  VALUE "A".
          88 DataSet1-agenti-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mrordini-LOCK  VALUE "Y".
       77 DataSet1-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-mtordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-mtordini-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-mtordini-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-mtordini-KEY1-Asc  VALUE "A".
          88 DataSet1-mtordini-KEY1-Desc VALUE "D".
       77 DataSet1-tmp-mrordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-mrordini-LOCK  VALUE "Y".
       77 DataSet1-tmp-mrordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-mrordini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-mrordini-KEY-Desc VALUE "D".
       77 DataSet1-tmp-evaart-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-evaart-LOCK  VALUE "Y".
       77 DataSet1-tmp-evaart-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-evaart-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-evaart-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-tordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordini-LOCK  VALUE "Y".
       77 DataSet1-tordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tordini-KEY-Asc  VALUE "A".
          88 DataSet1-tordini-KEY-Desc VALUE "D".
       77 DataSet1-rordini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordini-LOCK  VALUE "Y".
       77 DataSet1-rordini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordini-KEY-Asc  VALUE "A".
          88 DataSet1-rordini-KEY-Desc VALUE "D".
       77 DataSet1-destini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destini-LOCK  VALUE "Y".
       77 DataSet1-destini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destini-KEY-Asc  VALUE "A".
          88 DataSet1-destini-KEY-Desc VALUE "D".
       77 DataSet1-recapiti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-recapiti-LOCK  VALUE "Y".
       77 DataSet1-recapiti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-recapiti-KEY-Asc  VALUE "A".
          88 DataSet1-recapiti-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-blister-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-blister-LOCK  VALUE "Y".
       77 DataSet1-blister-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-blister-KEY-Asc  VALUE "A".
          88 DataSet1-blister-KEY-Desc VALUE "D".
       77 DataSet1-lockfile-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lockfile-LOCK  VALUE "Y".
       77 DataSet1-lockfile-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lockfile-KEY-Asc  VALUE "A".
          88 DataSet1-lockfile-KEY-Desc VALUE "D".
       77 DataSet1-tscorte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tscorte-LOCK  VALUE "Y".
       77 DataSet1-tscorte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tscorte-KEY-Asc  VALUE "A".
          88 DataSet1-tscorte-KEY-Desc VALUE "D".
       77 DataSet1-tpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpromo-LOCK  VALUE "Y".
       77 DataSet1-tpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpromo-KEY-Asc  VALUE "A".
          88 DataSet1-tpromo-KEY-Desc VALUE "D".
       77 DataSet1-ttipocli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ttipocli-LOCK  VALUE "Y".
       77 DataSet1-ttipocli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ttipocli-KEY-Asc  VALUE "A".
          88 DataSet1-ttipocli-KEY-Desc VALUE "D".
       77 DataSet1-tagli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tagli-LOCK  VALUE "Y".
       77 DataSet1-tagli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tagli-KEY-Asc  VALUE "A".
          88 DataSet1-tagli-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-tmp-blis-eva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-blis-eva-LOCK  VALUE "Y".
       77 DataSet1-tmp-blis-eva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-blis-eva-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-blis-eva-KEY-Desc VALUE "D".
       77 DataSet1-evaclides-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-evaclides-LOCK  VALUE "Y".
       77 DataSet1-evaclides-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-evaclides-KEY-Asc  VALUE "A".
          88 DataSet1-evaclides-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".

       77 progmag-key01-SPLITBUF  PIC X(19).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 mrordini-mro-k-promo-SPLITBUF  PIC X(33).
       77 mrordini-mro-k-articolo-SPLITBUF  PIC X(24).
       77 mrordini-mro-k-progr-SPLITBUF  PIC X(18).
       77 mrordini-mro-k-tprev-SPLITBUF  PIC X(39).
       77 mtordini-mto-k-ord-cli-SPLITBUF  PIC X(15).
       77 mtordini-mto-k-data-SPLITBUF  PIC X(21).
       77 mtordini-mto-k-clides-SPLITBUF  PIC X(19).
       77 mtordini-mto-k-age-SPLITBUF  PIC X(14).
       77 mtordini-k-mto-stato-sel-SPLITBUF  PIC X(15).
       77 mtordini-k-mto-stato-SPLITBUF  PIC X(14).
       77 mtordini-mto-k-gdo-SPLITBUF  PIC X(26).
       77 mtordini-mto-k-bloc-SPLITBUF  PIC X(20).
       77 mtordini-k-giang-SPLITBUF  PIC X(21).
       77 tmp-mrordini-k-prg-SPLITBUF  PIC X(36).
       77 tmp-mrordini-k-promo-SPLITBUF  PIC X(19).
       77 tmp-mrordini-k-blister-SPLITBUF  PIC X(8).
       77 tmp-evaart-tmeva-k-ord-SPLITBUF  PIC X(29).
       77 tmp-evaart-tmeva-k-ord-GDO-SPLITBUF  PIC X(29).
       77 tordini-k-causale-SPLITBUF  PIC X(17).
       77 tordini-k1-SPLITBUF  PIC X(23).
       77 tordini-k2-SPLITBUF  PIC X(21).
       77 tordini-k-bolla-SPLITBUF  PIC X(13).
       77 tordini-k3-SPLITBUF  PIC X(22).
       77 tordini-k-fattura-SPLITBUF  PIC X(13).
       77 tordini-k4-SPLITBUF  PIC X(30).
       77 tordini-k-contab-SPLITBUF  PIC X(14).
       77 tordini-k-tipo-SPLITBUF  PIC X(14).
       77 tordini-k-data-SPLITBUF  PIC X(17).
       77 tordini-k-agfatt-SPLITBUF  PIC X(42).
       77 tordini-k-stbolle-SPLITBUF  PIC X(34).
       77 tordini-k-andamento-data-SPLITBUF  PIC X(10).
       77 tordini-k-andamento-cliente-SPLITBUF  PIC X(15).
       77 tordini-k-andamento-clides-SPLITBUF  PIC X(20).
       77 tordini-k-promo-SPLITBUF  PIC X(29).
       77 tordini-k-ord-cli-SPLITBUF  PIC X(21).
       77 tordini-k-tor-inviare-SPLITBUF  PIC X(14).
       77 rordini-ror-k-promo-SPLITBUF  PIC X(16).
       77 rordini-ror-k-articolo-SPLITBUF  PIC X(24).
       77 rordini-ror-k-master-SPLITBUF  PIC X(35).
       77 rordini-ror-k-stbolle-SPLITBUF  PIC X(30).
       77 destini-K1-SPLITBUF  PIC X(51).
       77 destini-k-localita-SPLITBUF  PIC X(36).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 blister-k-magaz-SPLITBUF  PIC X(10).
       77 blister-k-des-SPLITBUF  PIC X(51).
       77 tpromo-tpr-chiave-ricerca-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-gdo-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-ini-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-volantino-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-fine-vol-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-data-ins-SPLITBUF  PIC X(29).
       77 tagli-k2-SPLITBUF  PIC X(9).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-cli VALUE 5001.
       78  78-ID-ef-age VALUE 5002.
       78  78-ID-gd-art VALUE 5003.
       78  78-ID-gd1 VALUE 5004.
       78  78-ID-gd3 VALUE 5005.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
       77 evaart-tipo-trad PIC  x.
           88 evaart-estero VALUE IS "E". 
           88 evaart-italia VALUE IS "I". 
       77 data-evasione    PIC  9(8).

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Screen2, 
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 3,14, 
           LINE 1,31,
           LINES 9,54 ,
           SIZE 140,71 ,
           COLOR IS 2,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           HEAVY,
           TITLE "Filtro di visualizzazione",
           TITLE-POSITION 2,
           .

      * ENTRY FIELD
       05
           ef-cli, 
           Entry-Field, 
           COL 12,34, 
           LINE 3,25,
           LINES 1,20 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-cli,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-cli-buf,
           AFTER PROCEDURE ef-anno-AfterProcedure, 
           BEFORE PROCEDURE ef-anno-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-age, 
           Entry-Field, 
           COL 12,34, 
           LINE 5,12,
           LINES 1,20 ,
           SIZE 6,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-age,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           MAX-TEXT 5,
           VALUE ef-age-buf,
           AFTER PROCEDURE ef-dest-AfterProcedure, 
           BEFORE PROCEDURE ef-dest-BeforeProcedure, 
           .

      * GRID
       05
           gd-art, 
           Grid, 
           COL 88,00, 
           LINE 2,94,
           LINES 7,08 ,
           SIZE 53,43 ,
           BOXED,
           DATA-COLUMNS (1, 7),
           ALIGNMENT ("R", "U"),
           SEPARATION (5, 5),
           DATA-TYPES ("9(6)", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 481
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd-art,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 50,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 50,
           VPADDING 15,
           VSCROLL,
           AFTER PROCEDURE gd-articoli-AfterProcedure, 
           BEFORE PROCEDURE gd-articoli-BeforeProcedure, 
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-applica, 
           Push-Button, 
           COL 67,71, 
           LINE 7,16,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE APPLICA-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           AFTER PROCEDURE pb-applica-AfterProcedure, 
           BEFORE PROCEDURE pb-applica-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-La-1b, 
           Label, 
           COL 4,14, 
           LINE 3,25,
           LINES 1,20 ,
           SIZE 7,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Cliente",
           .

      * LABEL
       05
           lab-cli, 
           Label, 
           COL 19,34, 
           LINE 3,00,
           LINES 1,20 ,
           SIZE 37,00 ,
           COLOR IS 5,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-cli-buf,
           .

      * LABEL
       05
           Screen1-La-1aa, 
           Label, 
           COL 4,14, 
           LINE 5,12,
           LINES 1,20 ,
           SIZE 7,00 ,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Agente",
           .

      * LABEL
       05
           lab-age, 
           Label, 
           COL 19,34, 
           LINE 4,87,
           LINES 1,20 ,
           SIZE 37,00 ,
           COLOR IS 5,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LABEL-OFFSET 25,
           TRANSPARENT,
           TITLE lab-age-buf,
           .

      * LABEL
       05
           lab1aaa, 
           Label, 
           COL 63,43, 
           LINE 3,00,
           LINES 1,62 ,
           SIZE 20,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Data rif. evasione",
           .

      * LABEL
       05
           lab-data, 
           Label, 
           COL 67,00, 
           LINE 5,08,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 25,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-data-buf,
           .

      * GRID
       05
           gd1, 
           Grid, 
           COL 3,14, 
           LINE 12,08,
           LINES 9,38 ,
           SIZE 140,71 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 5, 13, 53, 93, 94, 104),
           ALIGNMENT ("C", "R", "U", "U", "C", "C", "U"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(4)", "9(8)", "X(40)", "X(40)", "X(1)", "X(10)"
           , "X(40)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd1,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 138,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * BAR
       05
           Screen2-Br-1, 
           Bar,
           COL 1,00, 
           LINE 36,00,
           SIZE 145,00 ,
           COLOR IS 2,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 2,
           .

      * BAR
       05
           Screen2-Br-1a, 
           Bar,
           COL 1,00, 
           LINE 11,31,
           SIZE 145,00 ,
           COLOR IS 2,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 2,
           .

      * LABEL
       05
           lab1, 
           Label, 
           COL 129,71, 
           LINE 24,92,
           LINES 2,54 ,
           SIZE 12,00 ,
           COLOR IS 3,
           FONT IS Verdana10B-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Giacenza utile",
           .

      * GRID
       05
           gd2, 
           Grid, 
           COL 19,57, 
           LINE 22,23,
           LINES 12,85 ,
           SIZE 107,71 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 7, 57, 60, 67, 74, 81),
           ALIGNMENT ("C", "U", "C", "R", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "9(6)", "9(2)", "9(7)", "9(7)", "9(7)", 
           "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 2,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 105,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * GRID
       05
           gd3, 
           Grid, 
           COL 1,57, 
           LINE 37,62,
           LINES 12,85 ,
           SIZE 143,71 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           COLOR IS 516,
           DATA-COLUMNS (1, 5, 13, 53, 93, 99, 139, 142, 149, 156, 157),
           ALIGNMENT ("C", "R", "U", "U", "C", "U", "C", "R", "R", "C", 
           "C"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("9(4)", "9(8)", "X(40)", "X(40)", "9(6)", "X", "X
      -    "(3)", "9(7)", "9(7)", "X", "X"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 78-ID-gd3,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 141,
           VPADDING 15,
           VSCROLL,
           EVENT PROCEDURE gd-r-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-genera, 
           Push-Button, 
           COL 67,71, 
           LINE 50,92,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE DISTINTEB-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1004,
           FLAT,
           ID IS 20,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "&Genera",
           AFTER PROCEDURE pb-genera-AfterProcedure, 
           BEFORE PROCEDURE pb-genera-BeforeProcedure, 
           .

      * LABEL
       05
           lab-giac, 
           Label, 
           COL 129,71, 
           LINE 28,46,
           LINES 1,15 ,
           SIZE 12,00 ,
           COLOR IS 3,
           FONT IS Verdana10B-Occidentale,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-giac-buf,
           .

      * LABEL
       05
           lab1a, 
           Label, 
           COL 129,71, 
           LINE 31,38,
           LINES 1,62 ,
           SIZE 12,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 22,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Ordinato",
           .

      * LABEL
       05
           lab-ord, 
           Label, 
           COL 129,71, 
           LINE 33,38,
           LINES 1,15 ,
           SIZE 12,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 23,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-ord-buf,
           .

      * LABEL
       05
           lab1aa, 
           Label, 
           COL 3,43, 
           LINE 31,38,
           LINES 1,62 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 26,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Evadi dal",
           .

      * LABEL
       05
           lab-evadi-dal, 
           Label, 
           COL 3,43, 
           LINE 33,38,
           LINES 1,15 ,
           SIZE 13,00 ,
           COLOR IS 2,
           FONT IS Verdana10B-Occidentale,
           ID IS 27,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE lab-evadi-dal-buf,
           .

      * LABEL
       05
           Screen2-blockpgm-1, 
           Label, 
           COL 2,86, 
           LINE 2,08,
           LINES 1,31 ,
           SIZE 2,71 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen2-Custom1-1, 
           Label, 
           COL 3,00, 
           LINE 6,62,
           LINES 1,85 ,
           SIZE 2,86 ,
           FONT IS Default-Font,
           ID IS 3,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,15,
           LINES 24,00 ,
           SIZE 26,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 5,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,15,
           LINES 24,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 12,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           scr-elab, 
           HELP-ID 1,
           .

      * LABEL
       05
           scr-elab-La-1, 
           Label, 
           COL 20,10, 
           LINE 1,90,
           LINES 2,20 CELLS,
           SIZE 34,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana14I-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Caricamento in corso...",
           .

      * FORM
       01 
           scr-fine, 
           HELP-ID 1,
           .

      * FRAME
       05
           Screen1-Fr-1a, 
           Frame, 
           COL 2,00, 
           LINE 1,30,
           LINES 15,40 CELLS,
           SIZE 27,90 CELLS,
           RAISED,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VERY-HEAVY,
           .

      * LABEL
       05
           scr-fine-La-4, 
           Label, 
           COL 5,10, 
           LINE 3,00,
           LINES 2,00 CELLS,
           SIZE 20,60 CELLS,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Evasioni Generate",
           .

      * BAR
       05
           scr-fine-Br-1a, 
           Bar,
           COL 2,50, 
           LINE 3,80,
           SIZE 2,20 CELLS,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           scr-fine-La-5, 
           Label, 
           COL 5,10, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 2,80 CELLS,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Da",
           .

      * LABEL
       05
           scr-fine-La-6, 
           Label, 
           COL 17,10, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 1,50 CELLS,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "a",
           .

      * LABEL
       05
           scr-fine-La-7, 
           Label, 
           COL 8,40, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 7,50 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE primo-numero-z,
           .

      * LABEL
       05
           scr-fine-La-8, 
           Label, 
           COL 19,30, 
           LINE 6,30,
           LINES 2,00 CELLS,
           SIZE 7,50 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           TRANSPARENT,
           TITLE ultimo-numero-z,
           .

      * LABEL
       05
           scr-fine-La-4a, 
           Label, 
           COL 8,40, 
           LINE 10,30,
           LINES 2,00 CELLS,
           SIZE 15,00 CELLS,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Totale Evasioni",
           .

      * LABEL
       05
           lbl-tot-fat, 
           Label, 
           COL 10,90, 
           LINE 13,30,
           LINES 2,00 CELLS,
           SIZE 10,00 CELLS,
           COLOR IS 5,
           FONT IS Verdana12B-Occidentale,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE tot-ordini-z,
           .

      * BAR
       05
           scr-fine-Br-1aa, 
           Bar,
           COL 27,10, 
           LINE 3,80,
           SIZE 2,20 CELLS,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * PUSH BUTTON
       05
           pb-sia, 
           Push-Button, 
           COL 11,90, 
           LINE 17,20,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 2,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 10,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-sia-AfterProcedure, 
           BEFORE PROCEDURE pb-sia-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1, 
           Push-Button, 
           COL 30,10, 
           LINE 20,50,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1a, 
           Push-Button, 
           COL 30,10, 
           LINE 1,00,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1b, 
           Push-Button, 
           COL 1,00, 
           LINE 20,50,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           scr-fine-Pb-1c, 
           Push-Button, 
           COL 1,00, 
           LINE 1,00,
           LINES 0,80 CELLS,
           SIZE 0,90 CELLS,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL, 
           evaart-tipo-trad, data-evasione.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:evaart, INIT:evaart, BeforeDeclarative>
       MTORDINI-ERR SECTION.
           use after error procedure on MTORDINI.
           evaluate status-MTORDINI
           when "35"
                display message "File [MTORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MTORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MTORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       MRORDINI-ERR SECTION.
           use after error procedure on MRORDINI.
           set tutto-ok  to true.
           evaluate status-MRORDINI
           when "35"
                display message "File [MRORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [MRORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[MRORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       TORDINI-ERR SECTION.
           use after error procedure on TORDINI.
           evaluate status-TORDINI
           when "35"
                display message "File [TORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       RORDINI-ERR SECTION.
           use after error procedure on RORDINI.
           set tutto-ok  to true.
           evaluate status-RORDINI
           when "35"
                display message "File [RORDINI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [RORDINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[RORDINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      ***---
       LOCKFILE-ERR SECTION.
           use after error procedure on lockfile.
           evaluate status-lockfile
           when "35"
                display message "File [LOCKFILE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [LOCKFILE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[LOCKFILE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Screen2-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:evaart, INIT:evaart, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana8-Occidentale
           DESTROY Verdana14I-Occidentale
           DESTROY Verdana12B-Occidentale
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, APPLICA-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, DISTINTEB-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
      *    After-Program
           PERFORM accetordforn-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana8-Occidentale
           INITIALIZE WFONT-DATA Verdana8-Occidentale
           MOVE 8 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana8-Occidentale, WFONT-DATA
      * Verdana14I-Occidentale
           INITIALIZE WFONT-DATA Verdana14I-Occidentale
           MOVE 14 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana14I-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-applica
           COPY RESOURCE "APPLICA.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "APPLICA.BMP", 
                   GIVING APPLICA-BMP.
      * pb-genera
           COPY RESOURCE "DISTINTEB.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "DISTINTEB.BMP", 
                   GIVING DISTINTEB-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
      * pb-sia
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-progmag
           PERFORM OPEN-articoli
           PERFORM OPEN-agenti
           PERFORM OPEN-clienti
           PERFORM OPEN-mrordini
           PERFORM OPEN-mtordini
      *    tmp-mrordini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-mrordini
      *    tmp-evaart OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-evaart
           PERFORM OPEN-tparamge
           PERFORM OPEN-tordini
           PERFORM OPEN-rordini
           PERFORM OPEN-destini
           PERFORM OPEN-recapiti
           PERFORM OPEN-tcaumag
           PERFORM OPEN-blister
           PERFORM OPEN-lockfile
           PERFORM OPEN-tscorte
           PERFORM OPEN-tpromo
           PERFORM OPEN-ttipocli
      *    tagli OPEN MODE IS FALSE
      *    PERFORM OPEN-tagli
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    tmp-blis-eva OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-blis-eva
           PERFORM OPEN-evaclides
           PERFORM OPEN-timposte
           PERFORM OPEN-tmarche
      *    After Open
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:evaart, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:evaart, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-agenti.
      * <TOTEM:EPT. INIT:evaart, FD:agenti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT agenti
           IF NOT Valid-STATUS-agenti
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:agenti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:evaart, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-mrordini.
      * <TOTEM:EPT. INIT:evaart, FD:mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT mrordini
           IF NOT Valid-STATUS-mrordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-mtordini.
      * <TOTEM:EPT. INIT:evaart, FD:mtordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT mtordini
           IF NOT Valid-STATUS-mtordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:mtordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-mrordini.
      * <TOTEM:EPT. INIT:evaart, FD:tmp-mrordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-mrordini
           IF NOT Valid-STATUS-tmp-mrordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tmp-mrordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-evaart.
      * <TOTEM:EPT. INIT:evaart, FD:tmp-evaart, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-evaart
           IF NOT Valid-STATUS-tmp-evaart
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tmp-evaart, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:evaart, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordini.
      * <TOTEM:EPT. INIT:evaart, FD:tordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordini
           IF STATUS-tordini = "35"
              OPEN OUTPUT tordini
                IF Valid-STATUS-tordini
                   CLOSE tordini
                   OPEN I-O tordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordini.
      * <TOTEM:EPT. INIT:evaart, FD:rordini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rordini
           IF STATUS-rordini = "35"
              OPEN OUTPUT rordini
                IF Valid-STATUS-rordini
                   CLOSE rordini
                   OPEN I-O rordini
                END-IF
           END-IF
           IF NOT Valid-STATUS-rordini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:rordini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destini.
      * <TOTEM:EPT. INIT:evaart, FD:destini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destini
           IF NOT Valid-STATUS-destini
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:destini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-recapiti.
      * <TOTEM:EPT. INIT:evaart, FD:recapiti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT recapiti
           IF NOT Valid-STATUS-recapiti
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:recapiti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:evaart, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-blister.
      * <TOTEM:EPT. INIT:evaart, FD:blister, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT blister
           IF NOT Valid-STATUS-blister
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:blister, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lockfile.
      * <TOTEM:EPT. INIT:evaart, FD:lockfile, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O lockfile
           IF STATUS-lockfile = "35"
              OPEN OUTPUT lockfile
                IF Valid-STATUS-lockfile
                   CLOSE lockfile
                   OPEN I-O lockfile
                END-IF
           END-IF
           IF NOT Valid-STATUS-lockfile
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:lockfile, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tscorte.
      * <TOTEM:EPT. INIT:evaart, FD:tscorte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tscorte
           IF NOT Valid-STATUS-tscorte
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tscorte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpromo.
      * <TOTEM:EPT. INIT:evaart, FD:tpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpromo
           IF NOT Valid-STATUS-tpromo
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ttipocli.
      * <TOTEM:EPT. INIT:evaart, FD:ttipocli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ttipocli
           IF NOT Valid-STATUS-ttipocli
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:ttipocli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tagli.
      * <TOTEM:EPT. INIT:evaart, FD:tagli, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tagli
           IF STATUS-tagli = "35"
              OPEN OUTPUT tagli
                IF Valid-STATUS-tagli
                   CLOSE tagli
                   OPEN I-O tagli
                END-IF
           END-IF
           IF NOT Valid-STATUS-tagli
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tagli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:evaart, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-blis-eva.
      * <TOTEM:EPT. INIT:evaart, FD:tmp-blis-eva, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-blis-eva
           IF NOT Valid-STATUS-tmp-blis-eva
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tmp-blis-eva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-evaclides.
      * <TOTEM:EPT. INIT:evaart, FD:evaclides, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT evaclides
           IF NOT Valid-STATUS-evaclides
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:evaclides, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:evaart, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:evaart, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Screen2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:evaart, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-progmag
           PERFORM CLOSE-articoli
           PERFORM CLOSE-agenti
           PERFORM CLOSE-clienti
           PERFORM CLOSE-mrordini
           PERFORM CLOSE-mtordini
      *    tmp-mrordini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-mrordini
      *    tmp-evaart CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-evaart
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-tordini
           PERFORM CLOSE-rordini
           PERFORM CLOSE-destini
           PERFORM CLOSE-recapiti
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-blister
           PERFORM CLOSE-lockfile
           PERFORM CLOSE-tscorte
           PERFORM CLOSE-tpromo
           PERFORM CLOSE-ttipocli
      *    tagli CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tagli
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    tmp-blis-eva CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-blis-eva
           PERFORM CLOSE-evaclides
           PERFORM CLOSE-timposte
           PERFORM CLOSE-tmarche
      *    After Close
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:evaart, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:evaart, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-agenti.
      * <TOTEM:EPT. INIT:evaart, FD:agenti, BeforeClose>
      * <TOTEM:END>
           CLOSE agenti
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:evaart, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-mrordini.
      * <TOTEM:EPT. INIT:evaart, FD:mrordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mrordini
           .

       CLOSE-mtordini.
      * <TOTEM:EPT. INIT:evaart, FD:mtordini, BeforeClose>
      * <TOTEM:END>
           CLOSE mtordini
           .

       CLOSE-tmp-mrordini.
      * <TOTEM:EPT. INIT:evaart, FD:tmp-mrordini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-evaart.
      * <TOTEM:EPT. INIT:evaart, FD:tmp-evaart, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:evaart, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-tordini.
      * <TOTEM:EPT. INIT:evaart, FD:tordini, BeforeClose>
      * <TOTEM:END>
           CLOSE tordini
           .

       CLOSE-rordini.
      * <TOTEM:EPT. INIT:evaart, FD:rordini, BeforeClose>
      * <TOTEM:END>
           CLOSE rordini
           .

       CLOSE-destini.
      * <TOTEM:EPT. INIT:evaart, FD:destini, BeforeClose>
      * <TOTEM:END>
           CLOSE destini
           .

       CLOSE-recapiti.
      * <TOTEM:EPT. INIT:evaart, FD:recapiti, BeforeClose>
      * <TOTEM:END>
           CLOSE recapiti
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:evaart, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-blister.
      * <TOTEM:EPT. INIT:evaart, FD:blister, BeforeClose>
      * <TOTEM:END>
           CLOSE blister
           .

       CLOSE-lockfile.
      * <TOTEM:EPT. INIT:evaart, FD:lockfile, BeforeClose>
      * <TOTEM:END>
           CLOSE lockfile
           .

       CLOSE-tscorte.
      * <TOTEM:EPT. INIT:evaart, FD:tscorte, BeforeClose>
      * <TOTEM:END>
           CLOSE tscorte
           .

       CLOSE-tpromo.
      * <TOTEM:EPT. INIT:evaart, FD:tpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpromo
           .

       CLOSE-ttipocli.
      * <TOTEM:EPT. INIT:evaart, FD:ttipocli, BeforeClose>
      * <TOTEM:END>
           CLOSE ttipocli
           .

       CLOSE-tagli.
      * <TOTEM:EPT. INIT:evaart, FD:tagli, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:evaart, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tmp-blis-eva.
      * <TOTEM:EPT. INIT:evaart, FD:tmp-blis-eva, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-evaclides.
      * <TOTEM:EPT. INIT:evaart, FD:evaclides, BeforeClose>
      * <TOTEM:END>
           CLOSE evaclides
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:evaart, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:evaart, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:6) TO progmag-key01-SPLITBUF(13:6)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-agenti-INITSTART.
           IF DataSet1-agenti-KEY-Asc
              MOVE Low-Value TO age-chiave
           ELSE
              MOVE High-Value TO age-chiave
           END-IF
           .

       DataSet1-agenti-INITEND.
           IF DataSet1-agenti-KEY-Asc
              MOVE High-Value TO age-chiave
           ELSE
              MOVE Low-Value TO age-chiave
           END-IF
           .

      * agenti
       DataSet1-agenti-START.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY >= age-chiave
           ELSE
              START agenti KEY <= age-chiave
           END-IF
           .

       DataSet1-agenti-START-NOTGREATER.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY <= age-chiave
           ELSE
              START agenti KEY >= age-chiave
           END-IF
           .

       DataSet1-agenti-START-GREATER.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY > age-chiave
           ELSE
              START agenti KEY < age-chiave
           END-IF
           .

       DataSet1-agenti-START-LESS.
           IF DataSet1-agenti-KEY-Asc
              START agenti KEY < age-chiave
           ELSE
              START agenti KEY > age-chiave
           END-IF
           .

       DataSet1-agenti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-agenti-LOCK
              READ agenti WITH LOCK 
              KEY age-chiave
           ELSE
              READ agenti WITH NO LOCK 
              KEY age-chiave
           END-IF
           MOVE STATUS-agenti TO TOTEM-ERR-STAT 
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-agenti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-agenti-KEY-Asc
              IF DataSet1-agenti-LOCK
                 READ agenti NEXT WITH LOCK
              ELSE
                 READ agenti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-agenti-LOCK
                 READ agenti PREVIOUS WITH LOCK
              ELSE
                 READ agenti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-agenti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-agenti-KEY-Asc
              IF DataSet1-agenti-LOCK
                 READ agenti PREVIOUS WITH LOCK
              ELSE
                 READ agenti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-agenti-LOCK
                 READ agenti NEXT WITH LOCK
              ELSE
                 READ agenti NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-agenti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-agenti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-agenti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-agenti TO TOTEM-ERR-STAT
           MOVE "agenti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:agenti, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       mrordini-mro-k-promo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-promo-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-promo-SPLITBUF(1:15)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-promo-SPLITBUF(16:17)
           .

       mrordini-mro-k-articolo-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-articolo-SPLITBUF
           MOVE mro-cod-articolo(1:6) TO 
           mrordini-mro-k-articolo-SPLITBUF(1:6)
           MOVE mro-chiave(1:17) TO 
           mrordini-mro-k-articolo-SPLITBUF(7:17)
           .

       mrordini-mro-k-progr-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-progr-SPLITBUF
           MOVE mro-chiave-testa(1:12) TO 
           mrordini-mro-k-progr-SPLITBUF(1:12)
           MOVE mro-progr(1:5) TO mrordini-mro-k-progr-SPLITBUF(13:5)
           .

       mrordini-mro-k-tprev-MERGE-SPLITBUF.
           INITIALIZE mrordini-mro-k-tprev-SPLITBUF
           MOVE mro-promo(1:15) TO mrordini-mro-k-tprev-SPLITBUF(1:15)
           MOVE mro-prg-cod-articolo(1:6) TO 
           mrordini-mro-k-tprev-SPLITBUF(16:6)
           MOVE mro-chiave(1:17) TO mrordini-mro-k-tprev-SPLITBUF(22:17)
           .

       DataSet1-mrordini-INITSTART.
           IF DataSet1-mrordini-KEY-Asc
              MOVE Low-Value TO mro-chiave
           ELSE
              MOVE High-Value TO mro-chiave
           END-IF
           .

       DataSet1-mrordini-INITEND.
           IF DataSet1-mrordini-KEY-Asc
              MOVE High-Value TO mro-chiave
           ELSE
              MOVE Low-Value TO mro-chiave
           END-IF
           .

      * mrordini
       DataSet1-mrordini-START.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY >= mro-chiave
           ELSE
              START mrordini KEY <= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-NOTGREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY <= mro-chiave
           ELSE
              START mrordini KEY >= mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-GREATER.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY > mro-chiave
           ELSE
              START mrordini KEY < mro-chiave
           END-IF
           .

       DataSet1-mrordini-START-LESS.
           IF DataSet1-mrordini-KEY-Asc
              START mrordini KEY < mro-chiave
           ELSE
              START mrordini KEY > mro-chiave
           END-IF
           .

       DataSet1-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-mrordini-LOCK
              READ mrordini WITH LOCK 
              KEY mro-chiave
           ELSE
              READ mrordini WITH NO LOCK 
              KEY mro-chiave
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT 
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-mrordini-KEY-Asc
              IF DataSet1-mrordini-LOCK
                 READ mrordini PREVIOUS WITH LOCK
              ELSE
                 READ mrordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-mrordini-LOCK
                 READ mrordini NEXT WITH LOCK
              ELSE
                 READ mrordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM mrordini-mro-k-promo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-articolo-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-progr-MERGE-SPLITBUF
           PERFORM mrordini-mro-k-tprev-MERGE-SPLITBUF
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-mrordini TO TOTEM-ERR-STAT
           MOVE "mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mrordini, AfterDelete>
      * <TOTEM:END>
           .

       mtordini-mto-k-ord-cli-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-ord-cli-SPLITBUF
           MOVE mto-anno(1:4) TO mtordini-mto-k-ord-cli-SPLITBUF(1:4)
           MOVE mto-num-ord-cli(1:10) TO 
           mtordini-mto-k-ord-cli-SPLITBUF(5:10)
           .

       mtordini-mto-k-data-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-data-SPLITBUF
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-data-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-data-SPLITBUF(9:12)
           .

       mtordini-mto-k-clides-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-clides-SPLITBUF
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-clides-SPLITBUF(1:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-clides-SPLITBUF(6:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-clides-SPLITBUF(11:8)
           .

       mtordini-mto-k-age-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-age-SPLITBUF
           MOVE mto-cod-agente(1:5) TO mtordini-mto-k-age-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-age-SPLITBUF(6:8)
           .

       mtordini-k-mto-stato-sel-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-sel-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(1:1)
           MOVE mto-cod-cli(1:5) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(2:5)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-k-mto-stato-sel-SPLITBUF(7:8)
           .

       mtordini-k-mto-stato-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-mto-stato-SPLITBUF
           MOVE mto-stato-ordine(1:1) TO 
           mtordini-k-mto-stato-SPLITBUF(1:1)
           MOVE mto-chiave(1:12) TO mtordini-k-mto-stato-SPLITBUF(2:12)
           .

       mtordini-mto-k-gdo-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-gdo-SPLITBUF
           MOVE mto-gdo(1:5) TO mtordini-mto-k-gdo-SPLITBUF(1:5)
           MOVE mto-data-ordine(1:8) TO mtordini-mto-k-gdo-SPLITBUF(6:8)
           MOVE mto-chiave(1:12) TO mtordini-mto-k-gdo-SPLITBUF(14:12)
           .

       mtordini-mto-k-bloc-MERGE-SPLITBUF.
           INITIALIZE mtordini-mto-k-bloc-SPLITBUF
           MOVE mto-stato-attivazione(1:1) TO 
           mtordini-mto-k-bloc-SPLITBUF(1:1)
           MOVE mto-data-ordine(1:8) TO 
           mtordini-mto-k-bloc-SPLITBUF(2:8)
           MOVE mto-cod-cli(1:5) TO mtordini-mto-k-bloc-SPLITBUF(10:5)
           MOVE mto-prg-destino(1:5) TO 
           mtordini-mto-k-bloc-SPLITBUF(15:5)
           .

       mtordini-k-giang-MERGE-SPLITBUF.
           INITIALIZE mtordini-k-giang-SPLITBUF
           MOVE mto-data-note1(1:8) TO mtordini-k-giang-SPLITBUF(1:8)
           MOVE mto-chiave(1:12) TO mtordini-k-giang-SPLITBUF(9:12)
           .

       DataSet1-mtordini-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 MOVE Low-Value TO mto-chiave
              ELSE
                 MOVE High-Value TO mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 MOVE High-Value TO mto-chiave
              ELSE
                 MOVE Low-Value TO mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           .

      * mtordini
       DataSet1-mtordini-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY >= mto-chiave
              ELSE
                 START mtordini KEY <= mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY <= mto-chiave
              ELSE
                 START mtordini KEY >= mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY > mto-chiave
              ELSE
                 START mtordini KEY < mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 START mtordini KEY < mto-chiave
              ELSE
                 START mtordini KEY > mto-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-mtordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-LOCK
                 READ mtordini WITH LOCK 
                 KEY mto-chiave
              ELSE
                 READ mtordini WITH NO LOCK 
                 KEY mto-chiave
              END-IF
           END-EVALUATE
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT 
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 IF DataSet1-mtordini-LOCK
                    READ mtordini NEXT WITH LOCK
                 ELSE
                    READ mtordini NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-mtordini-LOCK
                    READ mtordini PREVIOUS WITH LOCK
                 ELSE
                    READ mtordini PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-mtordini-KEY1-Asc
                 IF DataSet1-mtordini-LOCK
                    READ mtordini PREVIOUS WITH LOCK
                 ELSE
                    READ mtordini PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-mtordini-LOCK
                    READ mtordini NEXT WITH LOCK
                 ELSE
                    READ mtordini NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM mtordini-mto-k-ord-cli-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-data-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-clides-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-age-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-sel-MERGE-SPLITBUF
           PERFORM mtordini-k-mto-stato-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-gdo-MERGE-SPLITBUF
           PERFORM mtordini-mto-k-bloc-MERGE-SPLITBUF
           PERFORM mtordini-k-giang-MERGE-SPLITBUF
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-mtordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-mtordini TO TOTEM-ERR-STAT
           MOVE "mtordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:mtordini, AfterDelete>
      * <TOTEM:END>
           .

       tmp-mrordini-k-prg-MERGE-SPLITBUF.
           INITIALIZE tmp-mrordini-k-prg-SPLITBUF
           MOVE tmro-prg-chiave(1:18) TO 
           tmp-mrordini-k-prg-SPLITBUF(1:18)
           MOVE tmro-chiave(1:17) TO tmp-mrordini-k-prg-SPLITBUF(19:17)
           .

       tmp-mrordini-k-promo-MERGE-SPLITBUF.
           INITIALIZE tmp-mrordini-k-promo-SPLITBUF
           MOVE tmro-promo(1:1) TO tmp-mrordini-k-promo-SPLITBUF(1:1)
           MOVE tmro-chiave(1:17) TO tmp-mrordini-k-promo-SPLITBUF(2:17)
           .

       tmp-mrordini-k-blister-MERGE-SPLITBUF.
           INITIALIZE tmp-mrordini-k-blister-SPLITBUF
           MOVE tmro-promo(1:1) TO tmp-mrordini-k-blister-SPLITBUF(1:1)
           MOVE tmro-blister-id(1:6) TO 
           tmp-mrordini-k-blister-SPLITBUF(2:6)
           .

       DataSet1-tmp-mrordini-INITSTART.
           IF DataSet1-tmp-mrordini-KEY-Asc
              MOVE Low-Value TO tmro-chiave
           ELSE
              MOVE High-Value TO tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-INITEND.
           IF DataSet1-tmp-mrordini-KEY-Asc
              MOVE High-Value TO tmro-chiave
           ELSE
              MOVE Low-Value TO tmro-chiave
           END-IF
           .

      * tmp-mrordini
       DataSet1-tmp-mrordini-START.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY >= tmro-chiave
           ELSE
              START tmp-mrordini KEY <= tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-START-NOTGREATER.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY <= tmro-chiave
           ELSE
              START tmp-mrordini KEY >= tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-START-GREATER.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY > tmro-chiave
           ELSE
              START tmp-mrordini KEY < tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-START-LESS.
           IF DataSet1-tmp-mrordini-KEY-Asc
              START tmp-mrordini KEY < tmro-chiave
           ELSE
              START tmp-mrordini KEY > tmro-chiave
           END-IF
           .

       DataSet1-tmp-mrordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeWrite>
      * <TOTEM:END>
           WRITE tmro-rec OF tmp-mrordini.
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-mrordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-mrordini TO TOTEM-ERR-STAT
           MOVE "tmp-mrordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-mrordini, AfterDelete>
      * <TOTEM:END>
           .

       tmp-evaart-tmeva-k-ord-MERGE-SPLITBUF.
           INITIALIZE tmp-evaart-tmeva-k-ord-SPLITBUF
           MOVE tmeva-cod-cli(1:5) TO 
           tmp-evaart-tmeva-k-ord-SPLITBUF(1:5)
           MOVE tmeva-prg-destino(1:5) TO 
           tmp-evaart-tmeva-k-ord-SPLITBUF(6:5)
           MOVE tmeva-ritira(1:1) TO 
           tmp-evaart-tmeva-k-ord-SPLITBUF(11:1)
           MOVE tmeva-chiave(1:17) TO 
           tmp-evaart-tmeva-k-ord-SPLITBUF(12:17)
           .

       tmp-evaart-tmeva-k-ord-GDO-MERGE-SPLITBUF.
           INITIALIZE tmp-evaart-tmeva-k-ord-GDO-SPLITBUF
           MOVE tmeva-chiave(1:17) TO 
           tmp-evaart-tmeva-k-ord-GDO-SPLITBUF(1:17)
           MOVE tmeva-cod-cli(1:5) TO 
           tmp-evaart-tmeva-k-ord-GDO-SPLITBUF(18:5)
           MOVE tmeva-prg-destino(1:5) TO 
           tmp-evaart-tmeva-k-ord-GDO-SPLITBUF(23:5)
           MOVE tmeva-ritira(1:1) TO 
           tmp-evaart-tmeva-k-ord-GDO-SPLITBUF(28:1)
           .

       DataSet1-tmp-evaart-INITSTART.
           IF DataSet1-tmp-evaart-KEY-Asc
              MOVE Low-Value TO tmeva-chiave
           ELSE
              MOVE High-Value TO tmeva-chiave
           END-IF
           .

       DataSet1-tmp-evaart-INITEND.
           IF DataSet1-tmp-evaart-KEY-Asc
              MOVE High-Value TO tmeva-chiave
           ELSE
              MOVE Low-Value TO tmeva-chiave
           END-IF
           .

      * tmp-evaart
       DataSet1-tmp-evaart-START.
           IF DataSet1-tmp-evaart-KEY-Asc
              START tmp-evaart KEY >= tmeva-chiave
           ELSE
              START tmp-evaart KEY <= tmeva-chiave
           END-IF
           .

       DataSet1-tmp-evaart-START-NOTGREATER.
           IF DataSet1-tmp-evaart-KEY-Asc
              START tmp-evaart KEY <= tmeva-chiave
           ELSE
              START tmp-evaart KEY >= tmeva-chiave
           END-IF
           .

       DataSet1-tmp-evaart-START-GREATER.
           IF DataSet1-tmp-evaart-KEY-Asc
              START tmp-evaart KEY > tmeva-chiave
           ELSE
              START tmp-evaart KEY < tmeva-chiave
           END-IF
           .

       DataSet1-tmp-evaart-START-LESS.
           IF DataSet1-tmp-evaart-KEY-Asc
              START tmp-evaart KEY < tmeva-chiave
           ELSE
              START tmp-evaart KEY > tmeva-chiave
           END-IF
           .

       DataSet1-tmp-evaart-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-evaart-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-evaart-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-evaart-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeWrite>
      * <TOTEM:END>
           WRITE tmeva-rec OF tmp-evaart.
           MOVE STATUS-tmp-evaart TO TOTEM-ERR-STAT
           MOVE "tmp-evaart" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-evaart-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-evaart TO TOTEM-ERR-STAT
           MOVE "tmp-evaart" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-evaart-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-evaart TO TOTEM-ERR-STAT
           MOVE "tmp-evaart" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-evaart, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       tordini-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordini-k-causale-SPLITBUF
           MOVE tor-causale(1:4) TO tordini-k-causale-SPLITBUF(1:4)
           MOVE tor-anno(1:4) TO tordini-k-causale-SPLITBUF(5:4)
           MOVE tor-numero(1:8) TO tordini-k-causale-SPLITBUF(9:8)
           .

       tordini-k1-MERGE-SPLITBUF.
           INITIALIZE tordini-k1-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k1-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k1-SPLITBUF(6:5)
           MOVE tor-anno(1:4) TO tordini-k1-SPLITBUF(11:4)
           MOVE tor-numero(1:8) TO tordini-k1-SPLITBUF(15:8)
           .

       tordini-k2-MERGE-SPLITBUF.
           INITIALIZE tordini-k2-SPLITBUF
           MOVE tor-data-passaggio-ordine(1:8) TO 
           tordini-k2-SPLITBUF(1:8)
           MOVE tor-anno(1:4) TO tordini-k2-SPLITBUF(9:4)
           MOVE tor-numero(1:8) TO tordini-k2-SPLITBUF(13:8)
           .

       tordini-k-bolla-MERGE-SPLITBUF.
           INITIALIZE tordini-k-bolla-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-bolla-SPLITBUF(1:4)
           MOVE tor-num-bolla(1:8) TO tordini-k-bolla-SPLITBUF(5:8)
           .

       tordini-k3-MERGE-SPLITBUF.
           INITIALIZE tordini-k3-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k3-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k3-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k3-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO tordini-k3-SPLITBUF(21:1)
           .

       tordini-k-fattura-MERGE-SPLITBUF.
           INITIALIZE tordini-k-fattura-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-fattura-SPLITBUF(1:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-fattura-SPLITBUF(5:8)
           .

       tordini-k4-MERGE-SPLITBUF.
           INITIALIZE tordini-k4-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k4-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k4-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k4-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k4-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO tordini-k4-SPLITBUF(29:1)
           .

       tordini-k-contab-MERGE-SPLITBUF.
           INITIALIZE tordini-k-contab-SPLITBUF
           MOVE tor-agg-contab(1:1) TO tordini-k-contab-SPLITBUF(1:1)
           MOVE tor-anno-fattura(1:4) TO tordini-k-contab-SPLITBUF(2:4)
           MOVE tor-num-fattura(1:8) TO tordini-k-contab-SPLITBUF(6:8)
           .

       tordini-k-tipo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tipo-SPLITBUF
           MOVE tor-tipo(1:1) TO tordini-k-tipo-SPLITBUF(1:1)
           MOVE tor-chiave(1:12) TO tordini-k-tipo-SPLITBUF(2:12)
           .

       tordini-k-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-data-SPLITBUF
           MOVE tor-data-creazione(1:8) TO tordini-k-data-SPLITBUF(1:8)
           MOVE tor-numero(1:8) TO tordini-k-data-SPLITBUF(9:8)
           .

       tordini-k-agfatt-MERGE-SPLITBUF.
           INITIALIZE tordini-k-agfatt-SPLITBUF
           MOVE tor-anno-fattura(1:4) TO tordini-k-agfatt-SPLITBUF(1:4)
           MOVE tor-data-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(5:8)
           MOVE tor-num-fattura(1:8) TO tordini-k-agfatt-SPLITBUF(13:8)
           MOVE tor-num-prenot(1:8) TO tordini-k-agfatt-SPLITBUF(21:8)
           MOVE tor-fatt-prenotata(1:1) TO 
           tordini-k-agfatt-SPLITBUF(29:1)
           MOVE tor-chiave(1:12) TO tordini-k-agfatt-SPLITBUF(30:12)
           .

       tordini-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE tordini-k-stbolle-SPLITBUF
           MOVE tor-anno-bolla(1:4) TO tordini-k-stbolle-SPLITBUF(1:4)
           MOVE tor-data-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(5:8)
           MOVE tor-num-bolla(1:8) TO tordini-k-stbolle-SPLITBUF(13:8)
           MOVE tor-bolla-prenotata(1:1) TO 
           tordini-k-stbolle-SPLITBUF(21:1)
           MOVE tor-chiave(1:12) TO tordini-k-stbolle-SPLITBUF(22:12)
           .

       tordini-k-andamento-data-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-data-SPLITBUF
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-data-SPLITBUF(1:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-data-SPLITBUF(2:8)
           .

       tordini-k-andamento-cliente-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-cliente-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-cliente-SPLITBUF(1:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-cliente-SPLITBUF(6:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-cliente-SPLITBUF(7:8)
           .

       tordini-k-andamento-clides-MERGE-SPLITBUF.
           INITIALIZE tordini-k-andamento-clides-SPLITBUF
           MOVE tor-cod-cli(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO 
           tordini-k-andamento-clides-SPLITBUF(6:5)
           MOVE tor-agg-contab(1:1) TO 
           tordini-k-andamento-clides-SPLITBUF(11:1)
           MOVE tor-data-fattura(1:8) TO 
           tordini-k-andamento-clides-SPLITBUF(12:8)
           .

       tordini-k-promo-MERGE-SPLITBUF.
           INITIALIZE tordini-k-promo-SPLITBUF
           MOVE tor-stato(1:1) TO tordini-k-promo-SPLITBUF(1:1)
           MOVE tor-promo(1:1) TO tordini-k-promo-SPLITBUF(2:1)
           MOVE tor-data-ordine(1:8) TO tordini-k-promo-SPLITBUF(3:8)
           MOVE tor-numero(1:8) TO tordini-k-promo-SPLITBUF(11:8)
           MOVE tor-cod-cli(1:5) TO tordini-k-promo-SPLITBUF(19:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-promo-SPLITBUF(24:5)
           .

       tordini-k-ord-cli-MERGE-SPLITBUF.
           INITIALIZE tordini-k-ord-cli-SPLITBUF
           MOVE tor-cod-cli(1:5) TO tordini-k-ord-cli-SPLITBUF(1:5)
           MOVE tor-prg-destino(1:5) TO tordini-k-ord-cli-SPLITBUF(6:5)
           MOVE tor-num-ord-cli(1:10) TO 
           tordini-k-ord-cli-SPLITBUF(11:10)
           .

       tordini-k-tor-inviare-MERGE-SPLITBUF.
           INITIALIZE tordini-k-tor-inviare-SPLITBUF
           MOVE tor-da-inviare OF tordini(1:1) TO 
           tordini-k-tor-inviare-SPLITBUF(1:1)
           MOVE tor-chiave OF tordini(1:12) TO 
           tordini-k-tor-inviare-SPLITBUF(2:12)
           .

       DataSet1-tordini-INITSTART.
           IF DataSet1-tordini-KEY-Asc
              MOVE Low-Value TO tor-chiave
           ELSE
              MOVE High-Value TO tor-chiave
           END-IF
           .

       DataSet1-tordini-INITEND.
           IF DataSet1-tordini-KEY-Asc
              MOVE High-Value TO tor-chiave
           ELSE
              MOVE Low-Value TO tor-chiave
           END-IF
           .

      * tordini
       DataSet1-tordini-START.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY >= tor-chiave
           ELSE
              START tordini KEY <= tor-chiave
           END-IF
           .

       DataSet1-tordini-START-NOTGREATER.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY <= tor-chiave
           ELSE
              START tordini KEY >= tor-chiave
           END-IF
           .

       DataSet1-tordini-START-GREATER.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY > tor-chiave
           ELSE
              START tordini KEY < tor-chiave
           END-IF
           .

       DataSet1-tordini-START-LESS.
           IF DataSet1-tordini-KEY-Asc
              START tordini KEY < tor-chiave
           ELSE
              START tordini KEY > tor-chiave
           END-IF
           .

       DataSet1-tordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tordini-LOCK
              READ tordini WITH LOCK 
              KEY tor-chiave
           ELSE
              READ tordini WITH NO LOCK 
              KEY tor-chiave
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-ord-cli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT 
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tordini-KEY-Asc
              IF DataSet1-tordini-LOCK
                 READ tordini NEXT WITH LOCK
              ELSE
                 READ tordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordini-LOCK
                 READ tordini PREVIOUS WITH LOCK
              ELSE
                 READ tordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-ord-cli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tordini-KEY-Asc
              IF DataSet1-tordini-LOCK
                 READ tordini PREVIOUS WITH LOCK
              ELSE
                 READ tordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tordini-LOCK
                 READ tordini NEXT WITH LOCK
              ELSE
                 READ tordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tordini-k-causale-MERGE-SPLITBUF
           PERFORM tordini-k1-MERGE-SPLITBUF
           PERFORM tordini-k2-MERGE-SPLITBUF
           PERFORM tordini-k-bolla-MERGE-SPLITBUF
           PERFORM tordini-k3-MERGE-SPLITBUF
           PERFORM tordini-k-fattura-MERGE-SPLITBUF
           PERFORM tordini-k4-MERGE-SPLITBUF
           PERFORM tordini-k-contab-MERGE-SPLITBUF
           PERFORM tordini-k-tipo-MERGE-SPLITBUF
           PERFORM tordini-k-data-MERGE-SPLITBUF
           PERFORM tordini-k-agfatt-MERGE-SPLITBUF
           PERFORM tordini-k-stbolle-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-data-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-cliente-MERGE-SPLITBUF
           PERFORM tordini-k-andamento-clides-MERGE-SPLITBUF
           PERFORM tordini-k-promo-MERGE-SPLITBUF
           PERFORM tordini-k-ord-cli-MERGE-SPLITBUF
           PERFORM tordini-k-tor-inviare-MERGE-SPLITBUF
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeWrite>
      * <TOTEM:END>
           WRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tor-rec OF tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, BeforeDelete>
      * <TOTEM:END>
           DELETE tordini.
           MOVE STATUS-tordini TO TOTEM-ERR-STAT
           MOVE "tordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordini, AfterDelete>
      * <TOTEM:END>
           .

       rordini-ror-k-promo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-promo-SPLITBUF
           MOVE ror-promo OF rordini(1:15) TO 
           rordini-ror-k-promo-SPLITBUF(1:15)
           .

       rordini-ror-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-articolo-SPLITBUF
           MOVE ror-cod-articolo OF rordini(1:6) TO 
           rordini-ror-k-articolo-SPLITBUF(1:6)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-articolo-SPLITBUF(7:17)
           .

       rordini-ror-k-master-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-master-SPLITBUF
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(1:17)
           MOVE ror-chiave OF rordini(1:17) TO 
           rordini-ror-k-master-SPLITBUF(18:17)
           .

       rordini-ror-k-stbolle-MERGE-SPLITBUF.
           INITIALIZE rordini-ror-k-stbolle-SPLITBUF
           MOVE ror-anno OF rordini(1:4) TO 
           rordini-ror-k-stbolle-SPLITBUF(1:4)
           MOVE ror-num-ordine OF rordini(1:8) TO 
           rordini-ror-k-stbolle-SPLITBUF(5:8)
           MOVE ror-chiave-ordine OF rordini(1:17) TO 
           rordini-ror-k-stbolle-SPLITBUF(13:17)
           .

       DataSet1-rordini-INITSTART.
           IF DataSet1-rordini-KEY-Asc
              MOVE Low-Value TO ror-chiave OF rordini
           ELSE
              MOVE High-Value TO ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-INITEND.
           IF DataSet1-rordini-KEY-Asc
              MOVE High-Value TO ror-chiave OF rordini
           ELSE
              MOVE Low-Value TO ror-chiave OF rordini
           END-IF
           .

      * rordini
       DataSet1-rordini-START.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY >= ror-chiave OF rordini
           ELSE
              START rordini KEY <= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-NOTGREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY <= ror-chiave OF rordini
           ELSE
              START rordini KEY >= ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-GREATER.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY > ror-chiave OF rordini
           ELSE
              START rordini KEY < ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-START-LESS.
           IF DataSet1-rordini-KEY-Asc
              START rordini KEY < ror-chiave OF rordini
           ELSE
              START rordini KEY > ror-chiave OF rordini
           END-IF
           .

       DataSet1-rordini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordini-LOCK
              READ rordini WITH LOCK 
              KEY ror-chiave OF rordini
           ELSE
              READ rordini WITH NO LOCK 
              KEY ror-chiave OF rordini
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT 
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordini-KEY-Asc
              IF DataSet1-rordini-LOCK
                 READ rordini PREVIOUS WITH LOCK
              ELSE
                 READ rordini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordini-LOCK
                 READ rordini NEXT WITH LOCK
              ELSE
                 READ rordini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordini-ror-k-promo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-articolo-MERGE-SPLITBUF
           PERFORM rordini-ror-k-master-MERGE-SPLITBUF
           PERFORM rordini-ror-k-stbolle-MERGE-SPLITBUF
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeWrite>
      * <TOTEM:END>
           WRITE ror-rec OF rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE ror-rec OF rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, BeforeDelete>
      * <TOTEM:END>
           DELETE rordini.
           MOVE STATUS-rordini TO TOTEM-ERR-STAT
           MOVE "rordini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordini, AfterDelete>
      * <TOTEM:END>
           .

       destini-K1-MERGE-SPLITBUF.
           INITIALIZE destini-K1-SPLITBUF
           MOVE des-ragsoc-1(1:40) TO destini-K1-SPLITBUF(1:40)
           MOVE des-codice(1:5) TO destini-K1-SPLITBUF(41:5)
           MOVE des-prog(1:5) TO destini-K1-SPLITBUF(46:5)
           .

       destini-k-localita-MERGE-SPLITBUF.
           INITIALIZE destini-k-localita-SPLITBUF
           MOVE des-localita(1:35) TO destini-k-localita-SPLITBUF(1:35)
           .

       DataSet1-destini-INITSTART.
           IF DataSet1-destini-KEY-Asc
              MOVE Low-Value TO des-chiave
           ELSE
              MOVE High-Value TO des-chiave
           END-IF
           .

       DataSet1-destini-INITEND.
           IF DataSet1-destini-KEY-Asc
              MOVE High-Value TO des-chiave
           ELSE
              MOVE Low-Value TO des-chiave
           END-IF
           .

      * destini
       DataSet1-destini-START.
           IF DataSet1-destini-KEY-Asc
              START destini KEY >= des-chiave
           ELSE
              START destini KEY <= des-chiave
           END-IF
           .

       DataSet1-destini-START-NOTGREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY <= des-chiave
           ELSE
              START destini KEY >= des-chiave
           END-IF
           .

       DataSet1-destini-START-GREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY > des-chiave
           ELSE
              START destini KEY < des-chiave
           END-IF
           .

       DataSet1-destini-START-LESS.
           IF DataSet1-destini-KEY-Asc
              START destini KEY < des-chiave
           ELSE
              START destini KEY > des-chiave
           END-IF
           .

       DataSet1-destini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destini-LOCK
              READ destini WITH LOCK 
              KEY des-chiave
           ELSE
              READ destini WITH NO LOCK 
              KEY des-chiave
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT 
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-recapiti-INITSTART.
           IF DataSet1-recapiti-KEY-Asc
              MOVE Low-Value TO rec-chiave
           ELSE
              MOVE High-Value TO rec-chiave
           END-IF
           .

       DataSet1-recapiti-INITEND.
           IF DataSet1-recapiti-KEY-Asc
              MOVE High-Value TO rec-chiave
           ELSE
              MOVE Low-Value TO rec-chiave
           END-IF
           .

      * recapiti
       DataSet1-recapiti-START.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY >= rec-chiave
           ELSE
              START recapiti KEY <= rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-NOTGREATER.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY <= rec-chiave
           ELSE
              START recapiti KEY >= rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-GREATER.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY > rec-chiave
           ELSE
              START recapiti KEY < rec-chiave
           END-IF
           .

       DataSet1-recapiti-START-LESS.
           IF DataSet1-recapiti-KEY-Asc
              START recapiti KEY < rec-chiave
           ELSE
              START recapiti KEY > rec-chiave
           END-IF
           .

       DataSet1-recapiti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-recapiti-LOCK
              READ recapiti WITH LOCK 
              KEY rec-chiave
           ELSE
              READ recapiti WITH NO LOCK 
              KEY rec-chiave
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT 
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-recapiti-KEY-Asc
              IF DataSet1-recapiti-LOCK
                 READ recapiti NEXT WITH LOCK
              ELSE
                 READ recapiti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-recapiti-LOCK
                 READ recapiti PREVIOUS WITH LOCK
              ELSE
                 READ recapiti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-recapiti-KEY-Asc
              IF DataSet1-recapiti-LOCK
                 READ recapiti PREVIOUS WITH LOCK
              ELSE
                 READ recapiti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-recapiti-LOCK
                 READ recapiti NEXT WITH LOCK
              ELSE
                 READ recapiti NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-recapiti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-recapiti TO TOTEM-ERR-STAT
           MOVE "recapiti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:recapiti, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       blister-k-magaz-MERGE-SPLITBUF.
           INITIALIZE blister-k-magaz-SPLITBUF
           MOVE bli-magazzino(1:3) TO blister-k-magaz-SPLITBUF(1:3)
           MOVE bli-codice(1:6) TO blister-k-magaz-SPLITBUF(4:6)
           .

       blister-k-des-MERGE-SPLITBUF.
           INITIALIZE blister-k-des-SPLITBUF
           MOVE bli-descrizione(1:50) TO blister-k-des-SPLITBUF(1:50)
           .

       DataSet1-blister-INITSTART.
           IF DataSet1-blister-KEY-Asc
              MOVE Low-Value TO bli-chiave
           ELSE
              MOVE High-Value TO bli-chiave
           END-IF
           .

       DataSet1-blister-INITEND.
           IF DataSet1-blister-KEY-Asc
              MOVE High-Value TO bli-chiave
           ELSE
              MOVE Low-Value TO bli-chiave
           END-IF
           .

      * blister
       DataSet1-blister-START.
           IF DataSet1-blister-KEY-Asc
              START blister KEY >= bli-chiave
           ELSE
              START blister KEY <= bli-chiave
           END-IF
           .

       DataSet1-blister-START-NOTGREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY <= bli-chiave
           ELSE
              START blister KEY >= bli-chiave
           END-IF
           .

       DataSet1-blister-START-GREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY > bli-chiave
           ELSE
              START blister KEY < bli-chiave
           END-IF
           .

       DataSet1-blister-START-LESS.
           IF DataSet1-blister-KEY-Asc
              START blister KEY < bli-chiave
           ELSE
              START blister KEY > bli-chiave
           END-IF
           .

       DataSet1-blister-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-blister-LOCK
              READ blister WITH LOCK 
              KEY bli-chiave
           ELSE
              READ blister WITH NO LOCK 
              KEY bli-chiave
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT 
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lockfile-INITSTART.
           IF DataSet1-lockfile-KEY-Asc
              MOVE Low-Value TO lck-chiave
           ELSE
              MOVE High-Value TO lck-chiave
           END-IF
           .

       DataSet1-lockfile-INITEND.
           IF DataSet1-lockfile-KEY-Asc
              MOVE High-Value TO lck-chiave
           ELSE
              MOVE Low-Value TO lck-chiave
           END-IF
           .

      * lockfile
       DataSet1-lockfile-START.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY >= lck-chiave
           ELSE
              START lockfile KEY <= lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-NOTGREATER.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY <= lck-chiave
           ELSE
              START lockfile KEY >= lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-GREATER.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY > lck-chiave
           ELSE
              START lockfile KEY < lck-chiave
           END-IF
           .

       DataSet1-lockfile-START-LESS.
           IF DataSet1-lockfile-KEY-Asc
              START lockfile KEY < lck-chiave
           ELSE
              START lockfile KEY > lck-chiave
           END-IF
           .

       DataSet1-lockfile-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lockfile-LOCK
              READ lockfile WITH LOCK 
              KEY lck-chiave
           ELSE
              READ lockfile WITH NO LOCK 
              KEY lck-chiave
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT 
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lockfile-KEY-Asc
              IF DataSet1-lockfile-LOCK
                 READ lockfile NEXT WITH LOCK
              ELSE
                 READ lockfile NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockfile-LOCK
                 READ lockfile PREVIOUS WITH LOCK
              ELSE
                 READ lockfile PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-lockfile-KEY-Asc
              IF DataSet1-lockfile-LOCK
                 READ lockfile PREVIOUS WITH LOCK
              ELSE
                 READ lockfile PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-lockfile-LOCK
                 READ lockfile NEXT WITH LOCK
              ELSE
                 READ lockfile NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeWrite>
      * <TOTEM:END>
           WRITE lck-rec OF lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeRewrite>
      * <TOTEM:END>
           REWRITE lck-rec OF lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lockfile-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, BeforeDelete>
      * <TOTEM:END>
           DELETE lockfile.
           MOVE STATUS-lockfile TO TOTEM-ERR-STAT
           MOVE "lockfile" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lockfile, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tscorte-INITSTART.
           IF DataSet1-tscorte-KEY-Asc
              MOVE Low-Value TO sco-chiave
           ELSE
              MOVE High-Value TO sco-chiave
           END-IF
           .

       DataSet1-tscorte-INITEND.
           IF DataSet1-tscorte-KEY-Asc
              MOVE High-Value TO sco-chiave
           ELSE
              MOVE Low-Value TO sco-chiave
           END-IF
           .

      * tscorte
       DataSet1-tscorte-START.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY >= sco-chiave
           ELSE
              START tscorte KEY <= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-NOTGREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY <= sco-chiave
           ELSE
              START tscorte KEY >= sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-GREATER.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY > sco-chiave
           ELSE
              START tscorte KEY < sco-chiave
           END-IF
           .

       DataSet1-tscorte-START-LESS.
           IF DataSet1-tscorte-KEY-Asc
              START tscorte KEY < sco-chiave
           ELSE
              START tscorte KEY > sco-chiave
           END-IF
           .

       DataSet1-tscorte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tscorte-LOCK
              READ tscorte WITH LOCK 
              KEY sco-chiave
           ELSE
              READ tscorte WITH NO LOCK 
              KEY sco-chiave
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT 
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tscorte-KEY-Asc
              IF DataSet1-tscorte-LOCK
                 READ tscorte PREVIOUS WITH LOCK
              ELSE
                 READ tscorte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tscorte-LOCK
                 READ tscorte NEXT WITH LOCK
              ELSE
                 READ tscorte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tscorte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tscorte TO TOTEM-ERR-STAT
           MOVE "tscorte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tscorte, AfterDelete>
      * <TOTEM:END>
           .

       tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ricerca-SPLITBUF
           MOVE tpr-chiave-ricerca OF tpromo(1:21) TO 
           tpromo-tpr-chiave-ricerca-SPLITBUF(1:21)
           .

       tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-gdo-fine-SPLITBUF
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(1:5)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(6:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(14:8)
           .

       tpromo-tpr-chiave-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-fine-SPLITBUF
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(1:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-ini-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ini-SPLITBUF
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(1:8)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-volantino-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-volantino-SPLITBUF
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(1:8)
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(17:5)
           .

       tpromo-tpr-k-fine-vol-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-fine-vol-SPLITBUF
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(1:8)
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(17:5)
           .

       tpromo-tpr-k-data-ins-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-data-ins-SPLITBUF
           MOVE tpr-data-creazione OF tpromo(1:8) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(1:8)
           MOVE tpr-codice OF tpromo(1:15) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(9:15)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(24:5)
           .

       DataSet1-tpromo-INITSTART.
           IF DataSet1-tpromo-KEY-Asc
              MOVE Low-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE High-Value TO tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-INITEND.
           IF DataSet1-tpromo-KEY-Asc
              MOVE High-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE Low-Value TO tpr-chiave OF tpromo
           END-IF
           .

      * tpromo
       DataSet1-tpromo-START.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY >= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY <= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-NOTGREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY <= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY >= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-GREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY > tpr-chiave OF tpromo
           ELSE
              START tpromo KEY < tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-LESS.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY < tpr-chiave OF tpromo
           ELSE
              START tpromo KEY > tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpromo-LOCK
              READ tpromo WITH LOCK 
              KEY tpr-chiave OF tpromo
           ELSE
              READ tpromo WITH NO LOCK 
              KEY tpr-chiave OF tpromo
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT 
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-INITSTART.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE Low-Value TO tcl-chiave
           ELSE
              MOVE High-Value TO tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-INITEND.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE High-Value TO tcl-chiave
           ELSE
              MOVE Low-Value TO tcl-chiave
           END-IF
           .

      * ttipocli
       DataSet1-ttipocli-START.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY >= tcl-chiave
           ELSE
              START ttipocli KEY <= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-NOTGREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY <= tcl-chiave
           ELSE
              START ttipocli KEY >= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-GREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY > tcl-chiave
           ELSE
              START ttipocli KEY < tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-LESS.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY < tcl-chiave
           ELSE
              START ttipocli KEY > tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ttipocli-LOCK
              READ ttipocli WITH LOCK 
              KEY tcl-chiave
           ELSE
              READ ttipocli WITH NO LOCK 
              KEY tcl-chiave
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT 
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterDelete>
      * <TOTEM:END>
           .

       tagli-k2-MERGE-SPLITBUF.
           INITIALIZE tagli-k2-SPLITBUF
           MOVE tag-data(1:8) TO tagli-k2-SPLITBUF(1:8)
           .

       DataSet1-tagli-INITSTART.
           IF DataSet1-tagli-KEY-Asc
              MOVE Low-Value TO tag-chiave
           ELSE
              MOVE High-Value TO tag-chiave
           END-IF
           .

       DataSet1-tagli-INITEND.
           IF DataSet1-tagli-KEY-Asc
              MOVE High-Value TO tag-chiave
           ELSE
              MOVE Low-Value TO tag-chiave
           END-IF
           .

      * tagli
       DataSet1-tagli-START.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY >= tag-chiave
           ELSE
              START tagli KEY <= tag-chiave
           END-IF
           .

       DataSet1-tagli-START-NOTGREATER.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY <= tag-chiave
           ELSE
              START tagli KEY >= tag-chiave
           END-IF
           .

       DataSet1-tagli-START-GREATER.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY > tag-chiave
           ELSE
              START tagli KEY < tag-chiave
           END-IF
           .

       DataSet1-tagli-START-LESS.
           IF DataSet1-tagli-KEY-Asc
              START tagli KEY < tag-chiave
           ELSE
              START tagli KEY > tag-chiave
           END-IF
           .

       DataSet1-tagli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tagli-LOCK
              READ tagli WITH LOCK 
              KEY tag-chiave
           ELSE
              READ tagli WITH NO LOCK 
              KEY tag-chiave
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT 
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tagli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tagli-KEY-Asc
              IF DataSet1-tagli-LOCK
                 READ tagli NEXT WITH LOCK
              ELSE
                 READ tagli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tagli-LOCK
                 READ tagli PREVIOUS WITH LOCK
              ELSE
                 READ tagli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tagli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tagli-KEY-Asc
              IF DataSet1-tagli-LOCK
                 READ tagli PREVIOUS WITH LOCK
              ELSE
                 READ tagli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tagli-LOCK
                 READ tagli NEXT WITH LOCK
              ELSE
                 READ tagli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tagli-k2-MERGE-SPLITBUF
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeWrite>
      * <TOTEM:END>
           WRITE tag-rec OF tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tag-rec OF tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tagli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, BeforeDelete>
      * <TOTEM:END>
           DELETE tagli.
           MOVE STATUS-tagli TO TOTEM-ERR-STAT
           MOVE "tagli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tagli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-lineseq-LOCK
              READ lineseq WITH LOCK 
           ELSE
              READ lineseq WITH NO LOCK 
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT 
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-lineseq-KEY-Asc
              IF DataSet1-lineseq-LOCK
                 READ lineseq NEXT WITH LOCK
              ELSE
                 READ lineseq NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-INITSTART.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              MOVE Low-Value TO tblis-chiave
           ELSE
              MOVE High-Value TO tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-INITEND.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              MOVE High-Value TO tblis-chiave
           ELSE
              MOVE Low-Value TO tblis-chiave
           END-IF
           .

      * tmp-blis-eva
       DataSet1-tmp-blis-eva-START.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY >= tblis-chiave
           ELSE
              START tmp-blis-eva KEY <= tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-START-NOTGREATER.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY <= tblis-chiave
           ELSE
              START tmp-blis-eva KEY >= tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-START-GREATER.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY > tblis-chiave
           ELSE
              START tmp-blis-eva KEY < tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-START-LESS.
           IF DataSet1-tmp-blis-eva-KEY-Asc
              START tmp-blis-eva KEY < tblis-chiave
           ELSE
              START tmp-blis-eva KEY > tblis-chiave
           END-IF
           .

       DataSet1-tmp-blis-eva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeWrite>
      * <TOTEM:END>
           WRITE tblis-rec OF tmp-blis-eva.
           MOVE STATUS-tmp-blis-eva TO TOTEM-ERR-STAT
           MOVE "tmp-blis-eva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-blis-eva TO TOTEM-ERR-STAT
           MOVE "tmp-blis-eva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-blis-eva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-blis-eva TO TOTEM-ERR-STAT
           MOVE "tmp-blis-eva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-blis-eva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-evaclides-INITSTART.
           IF DataSet1-evaclides-KEY-Asc
              MOVE Low-Value TO ecd-chiave-OLD
           ELSE
              MOVE High-Value TO ecd-chiave-OLD
           END-IF
           .

       DataSet1-evaclides-INITEND.
           IF DataSet1-evaclides-KEY-Asc
              MOVE High-Value TO ecd-chiave-OLD
           ELSE
              MOVE Low-Value TO ecd-chiave-OLD
           END-IF
           .

      * evaclides
       DataSet1-evaclides-START.
           IF DataSet1-evaclides-KEY-Asc
              START evaclides KEY >= ecd-chiave-OLD
           ELSE
              START evaclides KEY <= ecd-chiave-OLD
           END-IF
           .

       DataSet1-evaclides-START-NOTGREATER.
           IF DataSet1-evaclides-KEY-Asc
              START evaclides KEY <= ecd-chiave-OLD
           ELSE
              START evaclides KEY >= ecd-chiave-OLD
           END-IF
           .

       DataSet1-evaclides-START-GREATER.
           IF DataSet1-evaclides-KEY-Asc
              START evaclides KEY > ecd-chiave-OLD
           ELSE
              START evaclides KEY < ecd-chiave-OLD
           END-IF
           .

       DataSet1-evaclides-START-LESS.
           IF DataSet1-evaclides-KEY-Asc
              START evaclides KEY < ecd-chiave-OLD
           ELSE
              START evaclides KEY > ecd-chiave-OLD
           END-IF
           .

       DataSet1-evaclides-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-evaclides-LOCK
              READ evaclides WITH LOCK 
              KEY ecd-chiave-OLD
           ELSE
              READ evaclides WITH NO LOCK 
              KEY ecd-chiave-OLD
           END-IF
           MOVE STATUS-evaclides TO TOTEM-ERR-STAT 
           MOVE "evaclides" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-evaclides-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-evaclides-KEY-Asc
              IF DataSet1-evaclides-LOCK
                 READ evaclides NEXT WITH LOCK
              ELSE
                 READ evaclides NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-evaclides-LOCK
                 READ evaclides PREVIOUS WITH LOCK
              ELSE
                 READ evaclides PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-evaclides TO TOTEM-ERR-STAT
           MOVE "evaclides" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-evaclides-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-evaclides-KEY-Asc
              IF DataSet1-evaclides-LOCK
                 READ evaclides PREVIOUS WITH LOCK
              ELSE
                 READ evaclides PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-evaclides-LOCK
                 READ evaclides NEXT WITH LOCK
              ELSE
                 READ evaclides NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-evaclides TO TOTEM-ERR-STAT
           MOVE "evaclides" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-evaclides-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-evaclides TO TOTEM-ERR-STAT
           MOVE "evaclides" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-evaclides-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-evaclides TO TOTEM-ERR-STAT
           MOVE "evaclides" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-evaclides-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-evaclides TO TOTEM-ERR-STAT
           MOVE "evaclides" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:evaclides, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE prg-rec OF progmag
           INITIALIZE art-rec OF articoli
           INITIALIZE age-rec OF agenti
           INITIALIZE cli-rec OF clienti
           INITIALIZE mro-rec OF mrordini
           INITIALIZE mto-rec OF mtordini
           INITIALIZE tmro-rec OF tmp-mrordini
           INITIALIZE tmeva-rec OF tmp-evaart
           INITIALIZE tge-rec OF tparamge
           INITIALIZE tor-rec OF tordini
           INITIALIZE ror-rec OF rordini
           INITIALIZE des-rec OF destini
           INITIALIZE rec-rec OF recapiti
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE bli-rec OF blister
           INITIALIZE lck-rec OF lockfile
           INITIALIZE sco-rec OF tscorte
           INITIALIZE tpr-rec OF tpromo
           INITIALIZE tcl-rec OF ttipocli
           INITIALIZE tag-rec OF tagli
           INITIALIZE line-riga OF lineseq
           INITIALIZE tblis-rec OF tmp-blis-eva
           INITIALIZE ecd-rec-OLD OF evaclides
           INITIALIZE imp-rec OF timposte
           INITIALIZE mar-rec OF tmarche
           .


      * GRID
       gd-art-Content.
      * CELLS' SETTING
              MODIFY gd-art, X = 1, Y = 1,
                CELL-DATA = "Codice",
      * CELLS' SETTING
              MODIFY gd-art, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
           .

      * GRID
       gd1-Content.
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 1,
                CELL-DATA = "Anno",
      * CELLS' SETTING
              MODIFY gd1, X = 2, Y = 1,
                CELL-DATA = "Numero",
      * CELLS' SETTING
              MODIFY gd1, X = 3, Y = 1,
                CELL-DATA = "Cliente",
      * CELLS' SETTING
              MODIFY gd1, X = 4, Y = 1,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd1, X = 5, Y = 1,
                CELL-DATA = "N. Ord Cli",
      * CELLS' SETTING
              MODIFY gd1, X = 6, Y = 1,
                CELL-COLOR = 5,
                CELL-DATA = "Data",
      * CELLS' SETTING
              MODIFY gd1, X = 7, Y = 1,
                CELL-DATA = "Agente",
           .

      * GRID
       gd2-Content.
      * CELLS' SETTING
              MODIFY gd2, X = 1, Y = 1,
                CELL-DATA = "Art.",
      * CELLS' SETTING
              MODIFY gd2, X = 2, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd2, X = 3, Y = 1,
                CELL-DATA = "Imb.",
      * CELLS' SETTING
              MODIFY gd2, X = 4, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd2, X = 5, Y = 1,
                CELL-DATA = "Ordinata",
      * CELLS' SETTING
              MODIFY gd2, X = 6, Y = 1,
                CELL-DATA = "Evasa",
      * CELLS' SETTING
              MODIFY gd2, X = 7, Y = 1,
                CELL-DATA = "Evadere",
      * COLUMNS' SETTING
              MODIFY gd2, X = 7  
                COLUMN-COLOR = 481,
           .

      * GRID
       gd3-Content.
      * CELLS' SETTING
              MODIFY gd3, X = 1, Y = 1,
                CELL-DATA = "Anno",
      * CELLS' SETTING
              MODIFY gd3, X = 2, Y = 1,
                CELL-DATA = "Numero",
      * CELLS' SETTING
              MODIFY gd3, X = 3, Y = 1,
                CELL-COLOR = 5,
                CELL-DATA = "Cliente",
      * CELLS' SETTING
              MODIFY gd3, X = 4, Y = 1,
                CELL-COLOR = 5,
                CELL-DATA = "Destino",
      * CELLS' SETTING
              MODIFY gd3, X = 5, Y = 1,
                CELL-DATA = "Art",
      * CELLS' SETTING
              MODIFY gd3, X = 6, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd3, X = 7, Y = 1,
                CELL-DATA = "Imb",
      * CELLS' SETTING
              MODIFY gd3, X = 8, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd3, X = 9, Y = 1,
                CELL-DATA = "Qta",
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-agenti-INITREC.
           INITIALIZE age-rec OF agenti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-mrordini-INITREC.
           INITIALIZE mro-rec OF mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-mtordini-INITREC.
           INITIALIZE mto-rec OF mtordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-mrordini-INITREC.
           INITIALIZE tmro-rec OF tmp-mrordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-evaart-INITREC.
           INITIALIZE tmeva-rec OF tmp-evaart
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordini-INITREC.
           INITIALIZE tor-rec OF tordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordini-INITREC.
           INITIALIZE ror-rec OF rordini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destini-INITREC.
           INITIALIZE des-rec OF destini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-recapiti-INITREC.
           INITIALIZE rec-rec OF recapiti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-blister-INITREC.
           INITIALIZE bli-rec OF blister
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lockfile-INITREC.
           INITIALIZE lck-rec OF lockfile
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tscorte-INITREC.
           INITIALIZE sco-rec OF tscorte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpromo-INITREC.
           INITIALIZE tpr-rec OF tpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ttipocli-INITREC.
           INITIALIZE tcl-rec OF ttipocli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tagli-INITREC.
           INITIALIZE tag-rec OF tagli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-blis-eva-INITREC.
           INITIALIZE tblis-rec OF tmp-blis-eva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-evaclides-INITREC.
           INITIALIZE ecd-rec-OLD OF evaclides
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Screen2-Buf-To-Fld
           END-EVALUATE
           .

       Screen2-Open-Routine.
           PERFORM Screen2-Scrn
           PERFORM Screen2-Proc
           .

       Screen2-Scrn.
           PERFORM Screen2-Create-Win
           PERFORM Screen2-Init-Value
           PERFORM Screen2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Screen2-DISPLAY
           .

       Screen2-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 53,15,
              SIZE 145,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana8-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 1,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Screen2-Handle,
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,69,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Screen2 UPON Screen2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-art, DISPLAY-COLUMNS (1, 9)
              MODIFY gd1, DISPLAY-COLUMNS (1, 7, 16, 48, 80, 95, 107)
              MODIFY gd2, DISPLAY-COLUMNS (1, 8, 61, 68, 76, 86, 96)
              MODIFY gd3, DISPLAY-COLUMNS (1, 6, 13, 43, 70, 76, 115, 
           121, 129, 136, 139)
           .

       Screen2-PROC.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAccept>
           set EvasioneTradizionale to true.
           perform BEFORE-ACCEPT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen2
                 ON EXCEPTION
                    PERFORM Screen2-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen2-Handle
           INITIALIZE Key-Status
           .

       Screen2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen2-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-applica-LinkTo
              WHEN Key-Status = 1004
                 PERFORM pb-genera-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen2-CLEAR.
           PERFORM Screen2-INIT-VALUE
           PERFORM Screen2-DISPLAY
           .

       Screen2-DISPLAY.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Screen2 UPON Screen2-Handle
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Screen2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeExit>
           perform DELETE-LOCKFILE.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen2-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-art-Content
      * GRID
           PERFORM gd1-Content
      * GRID
           PERFORM gd2-Content
      * GRID
           PERFORM gd3-Content
           .

       Screen2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-mtordini-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Update-Key.
           MOVE mto-rec OF mtordini TO
                     Screen2-MULKEY-TMPBUF
           PERFORM Screen2-CLEAR
           PERFORM Screen2-INIT-DATA
           MOVE Screen2-MULKEY-TMPBUF TO
                     mto-rec OF mtordini
           PERFORM DataSet1-mtordini-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
           .

       Screen2-DUPLICATE-MOVEKEY.
           .

       Screen2-First.
           PERFORM Screen2-DUMMY-FIRST
           PERFORM DataSet1-mtordini-INITSTART
           PERFORM DataSet1-mtordini-START
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Next
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFirst>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Previous.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-mtordini-START-LESS
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Prev
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-PREVIOUS
           PERFORM Screen2-IUD-Display
           .

       Screen2-Next.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-mtordini-START-GREATER
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Next
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterNext>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-NEXT
           PERFORM Screen2-IUD-Display
           .
      
       Screen2-Last.
           PERFORM Screen2-DUMMY-LAST
           PERFORM DataSet1-mtordini-INITEND
           PERFORM DataSet1-mtordini-START-NOTGREATER
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-mtordini-Read-Prev
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterLast>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Curr.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-mtordini-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCurrent>
      * <TOTEM:END>
           .

       Screen2-IUD-Display.
           IF Valid-STATUS-mtordini
              PERFORM Screen2-ALLGRID-RESET
              PERFORM Screen2-Fld-To-Buf
              PERFORM Screen2-NAVI-FOR-MASTERGRID
              PERFORM Screen2-DISPLAY
           ELSE
              IF Screen2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Screen2-Extended-File-Status
              END-IF
           END-IF
           .

       Screen2-Add.
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-ADD
           PERFORM DataSet1-mtordini-INITREC
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-mtordini-Rec-Write
           IF Valid-STATUS-mtordini
              PERFORM Screen2-RESUMMARY-INS
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAdd>
      * <TOTEM:END>
           .
     
       Screen2-Update.
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-mtordini-START              
           IF NOT Valid-STATUS-mtordini
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-mtordini-Read
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-UPDATE
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-mtordini-Rec-Rewrite
           IF Valid-STATUS-mtordini
              PERFORM Screen2-RESUMMARY-DEL
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterUpdate>
      * <TOTEM:END>
           .

       Screen2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Screen2-DUMMY-DELETE
      * delete
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-mtordini-Rec-Delete
           IF Valid-STATUS-mtordini
              PERFORM Screen2-CLEAR
              PERFORM Screen2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-mtordini
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDelete>
      * <TOTEM:END>
           PERFORM Screen2-ERR-CHECKING
           .

       Screen2-NAVI-FOR-MASTERGRID.
           .

       Screen2-ERR-CHECKING.
           IF Valid-STATUS-mtordini
              PERFORM Screen2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Screen2-Extended-File-Status
           END-IF
           .

       Screen2-RESUMMARY-INS.
           .

       Screen2-RESUMMARY-DEL.
           .


       Screen2-DUMMY-FIRST.
           .

       Screen2-DUMMY-PREVIOUS.
           .

       Screen2-DUMMY-NEXT.
           .

       Screen2-DUMMY-LAST.
           .

       Screen2-DUMMY-CURR.
           .

       Screen2-DUMMY-ADD.
           .

       Screen2-DUMMY-UPDATE.
           .

       Screen2-DUMMY-UPDATE-INIT.
           .

       Screen2-DUMMY-DELETE.
           .

       Screen2-DUMMY-DELETE-INIT.
           .

       Screen2-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * FORM : Screen2
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, SetDefault>
      * <TOTEM:END>
           PERFORM Screen2-FLD-TO-BUF
           .


       Screen2-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen2-SHOW-MSG-ROUTINE
           .

       Screen2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen2-DISPLAY-MESSAGE
           .

       Screen2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen2-Save-Status.
           MOVE DataSet1-mtordini-KEY1-ORDER TO TMP-Screen2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Screen2-KEYIS
           MOVE mto-rec OF mtordini TO 
              TMP-Screen2-mtordini-RESTOREBUF
           .             

       Screen2-Restore-Status.
           MOVE TMP-Screen2-KEY1-ORDER TO DataSet1-mtordini-KEY1-ORDER
           MOVE TMP-Screen2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Screen2-mtordini-RESTOREBUF TO
              mto-rec OF mtordini
           PERFORM DataSet1-mtordini-START
           IF Valid-STATUS-mtordini
              PERFORM DataSet1-mtordini-Read-Next
           ELSE
              PERFORM DataSet1-mtordini-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-mtordini OR
              (Valid-STATUS-mtordini AND
                 mto-rec OF mtordini = 
                   TMP-Screen2-mtordini-RESTOREBUF)
              PERFORM DataSet1-mtordini-Read-Next
           END-PERFORM
           .

       scr-elab-Open-Routine.
           PERFORM scr-elab-Scrn
           PERFORM scr-elab-Proc
           .

       scr-elab-Scrn.
           PERFORM scr-elab-Create-Win
           PERFORM scr-elab-Init-Value
           PERFORM scr-elab-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 4,80,
              SIZE 72,20,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              RESIZABLE,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-elab-HANDLE,
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-elab UPON scr-elab-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-elab-PROC.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeAccept>
           perform LOOP-MTORDINI.
           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM scr-elab-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-elab-HANDLE
           INITIALIZE Key-Status
           .

       scr-elab-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-elab-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-elab-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-elab-CLEAR.
           PERFORM scr-elab-INIT-VALUE
           PERFORM scr-elab-DISPLAY
           .

       scr-elab-DISPLAY.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-elab UPON scr-elab-HANDLE
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterDisplay>

           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-elab-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-elab-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-elab-Init-Value.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, SetDefault>
      * <TOTEM:END>
           PERFORM scr-elab-FLD-TO-BUF
           .


       scr-elab-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-elab-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-elab-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-elab-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-elab, FORM:scr-elab, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-elab-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-elab-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-elab-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-elab-SHOW-MSG-ROUTINE
           .

       scr-elab-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-elab-DISPLAY-MESSAGE
           .

       scr-elab-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-elab-Save-Status.
           .             

       scr-elab-Restore-Status.
           .

       scr-fine-Open-Routine.
           PERFORM scr-fine-Scrn
           PERFORM scr-fine-Proc
           .

       scr-fine-Scrn.
           PERFORM scr-fine-Create-Win
           PERFORM scr-fine-Init-Value
           PERFORM scr-fine-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 20,30,
              SIZE 30,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 0,
              LINK TO THREAD,
              MODELESS,
              RESIZABLE,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Operazione conclusa - Riepilogo",
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS scr-fine-SF-HANDLE,
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-fine UPON scr-fine-SF-HANDLE
      * DISPLAY-COLUMNS settings
           .

       scr-fine-PROC.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeAccept>
           perform SCR-FINE-BEFORE-ACCEPT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-fine
                 ON EXCEPTION
                    PERFORM scr-fine-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-fine-SF-HANDLE
           INITIALIZE Key-Status
           .

       scr-fine-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-fine-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-fine-Exit
                 END-IF
              WHEN Key-Status = 27
                 PERFORM pb-si-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-fine-CLEAR.
           PERFORM scr-fine-INIT-VALUE
           PERFORM scr-fine-DISPLAY
           .

       scr-fine-DISPLAY.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-fine UPON scr-fine-SF-HANDLE
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-fine-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-fine-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       scr-fine-Init-Value.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, SetDefault>
      * <TOTEM:END>
           PERFORM scr-fine-FLD-TO-BUF
           .


       scr-fine-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-fine-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-fine-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-fine-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-fine, FORM:scr-fine, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-fine-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-fine-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-fine-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-fine-SHOW-MSG-ROUTINE
           .

       scr-fine-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-fine-DISPLAY-MESSAGE
           .

       scr-fine-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-fine-Save-Status.
           .             

       scr-fine-Restore-Status.
           .



       Screen2-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5003 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Begin-Drag
           WHEN Msg-End-Drag ALSO 5003 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 5003 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 5003 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5003 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5003 ALSO
                    Screen2-Handle 
              PERFORM gd-articoli-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       Screen2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5004 ALSO
                    Screen2-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Mouse
           WHEN Msg-Begin-Drag ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 14 ALSO
                    Screen2-Handle 
              PERFORM gd2-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       gd-r-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 5005 ALSO
                    Screen2-Handle 
              PERFORM gd3-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-ID-ef-cli
                set cli-tipo-C    to true
                move "clienti-CF" to como-file
      
                inquire ef-cli,  value in cli-codice
                call "zoom-gt"   using como-file, cli-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move cli-codice   to ef-cli-buf
                   move cli-ragsoc-1 to lab-cli-buf
                   display ef-cli lab-cli
                end-if
      
           when 78-ID-ef-age
                move "agenti" to como-file
                inquire ef-age, value in age-codice
                call "zoom-gt"   using como-file, age-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move age-codice   to ef-age-buf
                   move age-ragsoc-1 to lab-age-buf
                   display ef-age lab-age
                end-if
      
           when 78-ID-gd-art
                inquire gd-art, cursor-y in store-riga
                move "articoli"    to como-file
                inquire gd-art(store-riga, 1), cell-data in art-codice
                call "zoom-gt"   using como-file, art-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move art-codice      to col-cod
                   move art-descrizione to col-des
                   modify gd-art(store-riga, 1), cell-data col-cod
                   modify gd-art(store-riga, 2), cell-data col-des
                end-if
           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLI.
      * <TOTEM:PARA. CONTROLLI>
           set tutto-ok to true.
           
           move 78-evaart-GDO to lck-nome-pgm.
           read lockfile  no lock
                invalid   perform CONTROLLO-24000-KG
            not invalid
                if lck-operazione = "M"
                   set errori to true
                   display message "Tabella contatori in uso da: " 
           lck-utente-creazione
                            x"0d0a""per evasione automatica ordini maste
      -    "r GDO"
                            x"0d0a""Operazione impossibile! Attendere te
      -    "rmine operazione!"
                             title titolo
                              icon 2
              end-if
           end-read.

      ***---
       CONTROLLO-24000-KG.
           move 0 to save-cli save-des.
           move 0 to tot-peso.
           inquire gd3, last-row in tot-righe.
           perform varying riga from 2 by 1 
                     until riga > tot-righe 

              inquire gd3(riga, 1), hidden-data in tmeva-chiave
              read tmp-evaart no lock
              move tmeva-prg-chiave to prg-chiave
              read progmag no lock
              
              if tmeva-cod-cli     not = save-cli or
                 tmeva-prg-destino not = save-des or
                 tmeva-ritira      not = save-ritira
                 move tmeva-cod-cli     to save-cli
                 move tmeva-prg-destino to save-des
                 move tmeva-ritira      to save-ritira
                 move 0 to tot-peso
              end-if

              inquire gd3(riga, 8), cell-data in como-peso

              inquire gd3(riga, 9), cell-data in como-qta
              compute tot-peso = 
                    ( tot-peso + ( como-qta * como-peso) )

              if tot-peso > 24000 
                 display message "Salvataggio impossibile!!!"
                          x"0d0a""Peso superiore a 24.000 Kg."
                           title tit-err
                            icon 2
                 set errori to true
                 exit perform
              end-if
           end-perform.  

      ********---
      ***** SUPERAMENTO-500-KG-UTF.
      *****     move 0 to save-cli save-des.
      *****     move 0 to tot-peso.
      *****     inquire gd3, last-row in tot-righe.
      *****     perform varying riga from 2 by 1 
      *****               until riga > tot-righe
      *****
      *****        inquire gd3(riga, 1), hidden-data in tmeva-chiave
      *****        read tmp-evaart no lock
      *****        move tmeva-prg-chiave to prg-chiave
      *****        read progmag no lock
      *****        
      *****        if tmeva-cod-cli     not = save-cli or
      *****           tmeva-prg-destino not = save-des
      *****           move tmeva-cod-cli     to save-cli
      *****           move tmeva-prg-destino to save-des
      *****           if tmeva-prg-destino = 0
      *****              set  cli-tipo-C   to true
      *****              move tmeva-cod-cli to cli-codice
      *****              read clienti no lock
      *****              move cli-utf  to des-deposito-UTF
      *****           else
      *****              move tmeva-cod-cli     to des-codice
      *****              move tmeva-prg-destino to des-prog
      *****              read destini no lock
      *****           end-if
      *****           move 0 to tot-peso
      *****        end-if
      *****
      *****        if des-deposito-UTF not = "S" 
      *****
      *****           inquire gd3(riga, 9), cell-data in como-qta
      *****
      *****           compute tot-peso = 
      *****                 ( tot-peso + ( como-qta * prg-peso-utf ) )
      *****
      *****           if tot-peso > 500
      *****              display message "Salvataggio impossibile!!!"
      *****                       x"0d0a""Peso UTF superiore a 500 Kg."
      *****                        title tit-err
      *****                         icon 2
      *****              set errori to true
      *****              exit perform
      *****           end-if
      *****        end-if
      *****
      *****     end-perform   
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.
           evaluate control-id
           when 78-ID-ef-cli
                inquire ef-cli, value in cli-codice
                if cli-codice = 0
                   move "TUTTI I CLIENTI" to cli-ragsoc-1
                else
                   set cli-tipo-C to true
                   read clienti no lock 
                      invalid
                         move spaces to cli-ragsoc-1
                         set errori to true
                         display message "Cliente non valido"
                                 title tit-err
                                  icon 2
                   end-read
                end-if
                move cli-ragsoc-1 to lab-cli-buf
                display lab-cli
           when 78-ID-ef-age
                inquire ef-age, value in age-codice
                if age-codice = 0
                   move "TUTTI GLI AGENTI" to age-ragsoc-1
                else
                   read agenti no lock 
                      invalid
                         move spaces to age-ragsoc-1
                         set errori to true
                         display message "Agente non valido"
                                   title tit-err
                                    icon 2
                   end-read
                end-if
                move age-ragsoc-1 to lab-age-buf
                display lab-age
           end-evaluate.
      
           if errori
              perform CANCELLA-COLORE
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       DELETE-LOCKFILE.
      * <TOTEM:PARA. DELETE-LOCKFILE>
           move 78-evaart to lck-nome-pgm.
           delete lockfile invalid continue end-delete 
           .
      * <TOTEM:END>

       GRID-EVASE.
      * <TOTEM:PARA. GRID-EVASE>
           move low-value     to tmro-rec.
           set  como-promo-no to true.
           perform TRATTA-BLISTER.
           perform EVASIONE-INTERA.
           perform CICLO-EVADIBILITA-NON-PROMO.

           modify gd3, reset-grid = 1.
           perform GD3-CONTENT.
           move 0   to save-prog.
           move 1   to riga.   
           move 0   to save-cli.
           move 0   to save-des.
           move 481 to colore.
           move low-value to tmeva-rec.
           start tmp-evaart key >= tmeva-k-ord
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tmp-evaart next at end exit perform end-read
                    add 1 to riga
                    if tmeva-cod-cli     not = save-cli or
                       tmeva-prg-destino not = save-des or
                       tmeva-ritira      not = save-ritira
                       if colore = 481
                          move 513 to colore
                       else
                          move 481 to colore
                       end-if
                       move tmeva-cod-cli     to save-cli
                       move tmeva-prg-destino to save-des
                       move tmeva-ritira      to save-ritira
                       add 1 to save-prog
                    end-if

                    move tmeva-anno     to col3-anno    
                    move tmeva-numero   to col3-numero  
                    move tmeva-cliente  to col3-cliente 
                    move tmeva-destino  to col3-destino 
                    move tmeva-art      to col3-articolo
                    move tmeva-articolo to col3-descr
                    if tmeva-si-blister
                       move "BLI"       to col3-imb
                    else
                       move tmeva-imb   to col3-imb     
                    end-if
                    move tmeva-peso     to col3-peso    
                    move tmeva-qta      to col3-qta   

                    modify gd3(riga, 1), cell-data col3-anno
                    modify gd3(riga, 2), cell-data col3-numero
                    modify gd3(riga, 3), cell-data col3-cliente
                    modify gd3(riga, 4), cell-data col3-destino
                    modify gd3(riga, 5), cell-data col3-articolo
                    modify gd3(riga, 6), cell-data col3-descr
                    modify gd3(riga, 7), cell-data col3-imb
                    modify gd3(riga, 8), cell-data col3-peso
                    modify gd3(riga, 9), cell-data col3-qta 

                    modify gd3(riga,  1), row-color colore

                    if colore = 513
                       if tmeva-omaggio-si
                          modify gd3(riga, 10),
                                 bitmap        = regalo-bmp,
                                 bitmap-number = 1,
                                 bitmap-width  = 16 
                       else
                          modify gd3(riga, 10),
                                 bitmap        = regalo-bmp,
                                 bitmap-number = 2,
                                 bitmap-width  = 16
                       end-if

                       if tmeva-bloccato-si
                          modify gd3(riga, 11),
                                 bitmap        = bloccato-eva-bmp,
                                 bitmap-number = 1,
                                 bitmap-width  = 16 
                       else
                          modify gd3(riga, 11),
                                 bitmap        = bloccato-eva-bmp,
                                 bitmap-number = 2,
                                 bitmap-width  = 16
                       end-if
                    else
                       if tmeva-omaggio-si
                          modify gd3(riga, 10),
                                 bitmap        = regalo2-bmp,
                                 bitmap-number = 1,
                                 bitmap-width  = 16 
                       else
                          modify gd3(riga, 10),
                                 bitmap        = regalo2-bmp,
                                 bitmap-number = 2,
                                 bitmap-width  = 16
                       end-if

                       if tmeva-bloccato-si
                          modify gd3(riga, 11),
                                 bitmap        = bloccato-eva2-bmp,
                                 bitmap-number = 1,
                                 bitmap-width  = 16 
                       else
                          modify gd3(riga, 11),
                                 bitmap        = bloccato-eva2-bmp,
                                 bitmap-number = 2,
                                 bitmap-width  = 16
                       end-if
                    end-if
                    move tmeva-omaggio  to hid-omaggio
                    move tmeva-bloccato to hid-bloccato

                    move tmeva-chiave to hid-chiave
                    move save-prog    to hid-prog
                    modify gd3(riga,  1), hidden-data g2-hidden

                    move save-prog to tmeva-prog
                    rewrite tmeva-rec

                 end-perform
           end-start.

           perform ASSOCIA-OMAGGIO 
           .
      * <TOTEM:END>

       LOOP-MTORDINI.
      * <TOTEM:PARA. LOOP-MTORDINI>
           move 0 to counter counter2.
           modify gd1, reset-grid = 1.
           perform GD1-CONTENT.
           modify gd2, reset-grid = 1.
           perform GD2-CONTENT.
           if not ApplicaFiltri
              modify gd3, reset-grid = 1
              perform GD3-CONTENT
           end-if.
           set trovato to false.
           initialize save-chiave-testa.

           move low-value to mto-rec.
           move spaces    to mto-gdo.
           start mtordini key >= mto-k-gdo
                 invalid continue
             not invalid
                 move 1 to riga
                 perform until 1 = 2
                 
                    add 1 to counter
                    add 1 to counter2
                    if counter2 = 100
                       move counter to counter-edit
                       display counter-edit
                          upon scr-elab-Handle at column 19
                                                    line 01
                       move 0 to counter2
                    end-if

                    read mtordini next at end exit perform end-read
                    move mto-gdo         to save-gdo
                    move mto-data-ordine to save-data-ordine
                    move mto-chiave      to save-chiave-ordine

                    if mto-chiuso   or
                       Mto-Sped-Tot or
      *****                 mto-fatt-tot or
                       mto-causale-blocco-manuale or
                       mto-causale-blocco-fido    or
                       mto-chiuso-man
                       continue
                    else
                       set record-ok to true
                       if como-cli-codice not = 0 and
                          como-cli-codice not = mto-cod-cli
                          set record-ok to false
                       end-if
                       if como-age-codice not = 0 and
                          como-age-codice not = mto-cod-agente
                          set record-ok to false
                       end-if

                       set cli-tipo-C   to true
                       move mto-cod-cli to cli-codice
                       read clienti no lock
                       if cli-attivo or
                        ( cli-bloccato and cli-fuori-fido )
                          move cli-tipo to tcl-codice
                          read ttipocli no lock
                          if mto-prg-destino not = 0
                             set des-bloccato to true
                             move mto-cod-cli     to des-codice
                             move mto-prg-destino to des-prog
                             read destini no  lock
                                  invalid set record-ok to false
                             end-read
                             if des-attivo
                                evaluate true
                                when tcl-evasione-GDO
                                     set record-ok to false
                                when tcl-evasione-TRAD
                                     if evaart-estero
                                        set record-ok to false
                                     end-if
                                when tcl-evasione-ESTERO
                                     if not evaart-estero
                                        set record-ok to false
                                     end-if
                                end-evaluate
                             else
                                set errori to true
                             end-if
                          else
                             evaluate true
                             when tcl-evasione-GDO
                                  set record-ok to false
                             when tcl-evasione-TRAD
                                  if evaart-estero
                                     set record-ok to false
                                  end-if
                             when tcl-evasione-ESTERO
                                  if not evaart-estero
                                     set record-ok to false
                                  end-if
                             end-evaluate
                          end-if
                       else
                          set record-ok to false
                       end-if

                       if mto-data-note1 > data-cons-max
                          set record-ok to false
                       end-if

                       move mto-causale to tca-codice
                       read tcaumag no lock invalid continue end-read
                       if tca-cod-magaz not = "LBX"
                          set record-ok to false
                       end-if

                       if record-ok
                          perform LOOP-RIGHE
                          move save-gdo           to mto-gdo
                          move save-data-ordine   to mto-data-ordine
                          move save-chiave-ordine to mto-chiave
                          start mtordini key > mto-k-gdo
                                invalid  exit perform
                          end-start
                       end-if
                    end-if
                 end-perform
           end-start.
           inquire gd1, last-row in tot-righe.
           if tot-righe > 1
              move 2 to event-data-2
              perform SPOSTAMENTO-1
           end-if.
           if trovato and not ApplicaFiltri
              perform GRID-EVASE
              move 2 to event-data-2
              perform SPOSTAMENTO-2
           end-if.

      ***---
       LOOP-RIGHE.
           move low-value  to mro-rec.
           move mto-chiave to mro-chiave-testa.
           start mrordini key >= mro-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read mrordini next at end exit perform end-read
                    if mro-chiave-testa not = mto-chiave
                       exit perform
                    end-if
                    if mro-qta       > mro-qta-e and 
                       mro-evadi-dal <= data-evasione |and not mro-si-blister
                       move mro-cod-articolo to tmro-art
                       perform VALIDA-RIGA
                       if record-ok
                          if mro-chiave-testa not =   save-chiave-testa
                             move mro-chiave-testa to save-chiave-testa
                             set trovato to true
                             perform METTI-IN-GRIGLIA-1
                          end-if
                          if not ApplicaFiltri
                             perform SCRIVI-TMP-GD2
                          end-if
                       end-if
                    end-if
                 end-perform
           end-start.

      ***---
       METTI-IN-GRIGLIA-1.
           add 1 to riga.
           move mto-anno    to col1-anno.
           move mto-numero  to col1-numero.
           set cli-tipo-C   to true
           move mto-cod-cli to cli-codice.
           read clienti no lock invalid continue end-read.
           move cli-ragsoc-1 to col1-cliente.
           if mto-prg-destino = 0
              move spaces to col1-destino
           else
              move mto-cod-cli     to des-codice
              move mto-prg-destino to des-prog
              read destini no lock invalid continue end-read
              move des-ragsoc-1 to col1-destino
           end-if.
           move mto-num-ord-cli to col1-num-cli.
           move mto-data-ordine to como-data.
           perform DATE-TO-SCREEN.
           move como-data       to col1-data.
           move mto-cod-agente  to age-codice.
           read agenti no lock 
                invalid move spaces       to col1-agente
            not invalid move age-ragsoc-1 to col1-agente   
           end-read.
           modify gd1(riga, 1), cell-data col1-anno.
           modify gd1(riga, 2), cell-data col1-numero.
           modify gd1(riga, 3), cell-data col1-cliente.
           modify gd1(riga, 4), cell-data col1-destino.
           modify gd1(riga, 5), cell-data col1-num-cli.
           modify gd1(riga, 6), cell-data col1-data.
           modify gd1(riga, 7), cell-data col1-agente 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "aggiorna-stato-master.cpy".
           copy "chiudi-master.cpy".
           copy "evaart.cpy".
           copy "direziona-impegnato-common.cpy".

      ***--- DUMMY: NON TOCCARE
       AGGIORNA-IMPEGNATO-MASTER.
       TROVA-PARAMETRO.
       TRATTA-BLISTER 
           .
      * <TOTEM:END>

       SCRIVI-LOCKFILE.
      * <TOTEM:PARA. SCRIVI-LOCKFILE>
           move 78-evaart to lck-nome-pgm.
           move tipo-ope  to lck-operazione.
           accept lck-data-creazione from century-date.
           accept lck-ora-creazione  from time.
           move user-codi            to lck-utente-creazione.
           write lck-rec invalid rewrite lck-rec end-write.
           read lockfile lock 
           .
      * <TOTEM:END>

       TROVA-GIACENZA.
      * <TOTEM:PARA. TROVA-GIACENZA>
           move 0 to idx-giac.
           set idx-giac to 1.
           search el-riga
           at end
              add 1             to tot-idx-giac
              move tot-idx-giac to idx-giac
              initialize prg-chiave
              move tmro-art to prg-cod-articolo
              move tmro-mag to prg-cod-magazzino
              start progmag key >= prg-chiave
                    invalid continue
                not invalid
                    move 0 to giacenza-LBX
                    move 0 to impegnato-LBX
                    move 0 to imp-master-LBX
                    move 0 to imp-TRAD-LBX
                    move 0 to imp-GDO-LBX
                    perform until 1 = 2
                       read progmag next at end exit perform end-read
                       if prg-cod-articolo  not = tmro-art or
                          prg-cod-magazzino not = tmro-mag
                          exit perform
                       end-if
                       compute giacenza-LBX   = giacenza-LBX   + 
           prg-giacenza
                       compute impegnato-LBX  = impegnato-LBX  + 
           prg-impegnato
                       compute imp-master-LBX = imp-master-LBX + 
           prg-imp-master
                       compute imp-TRAD-LBX   = imp-TRAD-LBX   + 
           prg-imp-TRAD
                       compute imp-GDO-LBX    = imp-GDO-LBX    + 
           prg-imp-GDO
                    end-perform
              end-start

              if GdoInUso
                 compute giacenza = giacenza-LBX  -
                                    impegnato-LBX +
                                    imp-TRAD-LBX
              else
                 compute giacenza = giacenza-LBX  -
                                    impegnato-LBX +
                                    imp-master-LBX
              end-if

              move giacenza        to el-giacenza(tot-idx-giac)
              move tmro-prg-chiave to el-prg-chiave(tot-idx-giac)
              move tot-idx-giac    to idx-giac

           when tmro-prg-chiave = el-prg-chiave(idx-giac)
                move el-giacenza(idx-giac)   to giacenza
           end-search 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           set RecLocked to false.
           open i-o lockfile.
           perform DELETE-LOCKFILE.
           if RecLocked
              move 78-evaart to lck-nome-pgm
              read lockfile  no lock invalid continue end-read
              display message "Funzione già in uso da: " 
           lck-utente-creazione
                        title titolo
                         icon 2
              perform ACCETORDFORN-EV-AFTER-PROGRAM
              goback
           end-if.
           close lockfile.

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\REGALO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "REGALO.BMP", 
                   GIVING REGALO-BMP.

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\bloccato-eva.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "bloccato-eva.BMP", 
                   GIVING BLOCCATO-EVA-BMP.   

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\REGALO2.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "REGALO2.BMP", 
                   GIVING REGALO2-BMP.

           COPY RESOURCE "F:\Lubex\GESLUX\RESOURCE\bloccato-eva2.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "bloccato-eva2.BMP", 
                   GIVING BLOCCATO-EVA2-BMP.

      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10I-Occidentale.
           MOVE 10                 TO WFONT-SIZE.
           MOVE "Verdana"          TO WFONT-NAME.
           SET WFCHARSET-DONT-CARE TO TRUE.
           SET WFONT-BOLD          TO FALSE.
           SET WFONT-ITALIC        TO TRUE.
           SET WFONT-UNDERLINE     TO FALSE.
           SET WFONT-STRIKEOUT     TO FALSE.
           SET WFONT-FIXED-PITCH   TO FALSE.
           MOVE 0                  TO WFONT-CHAR-SET.
           CALL "W$FONT" USING WFONT-GET-FONT,
                               Verdana10I-Occidentale, 
                               WFONT-DATA.

           accept GdoInUsoFlag from environment "GDO_IN_USO".
           move LK-BL-PROG-ID    TO COMO-PROG-ID.

           set vecchia-evasione to true 
           .
      * <TOTEM:END>
       ef-anno-BeforeProcedure.
      * <TOTEM:PARA. ef-anno-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-anno-AfterProcedure.
      * <TOTEM:PARA. ef-anno-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       accetordforn-Ev-After-Program.
      * <TOTEM:PARA. accetordforn-Ev-After-Program>
           perform AFTER-PROGRAM.
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       ef-dest-BeforeProcedure.
      * <TOTEM:PARA. ef-dest-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-dest-AfterProcedure.
      * <TOTEM:PARA. ef-dest-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca ,enabled in e-cerca.
           if e-cerca = 1
              perform CERCA
           end-if 
           .
      * <TOTEM:END>
       pb-applica-BeforeProcedure.
      * <TOTEM:PARA. pb-applica-BeforeProcedure>
           modify pb-applica, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-applica-AfterProcedure.
      * <TOTEM:PARA. pb-applica-AfterProcedure>
           modify pb-applica, bitmap-number = 1 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-ART 
           .
      * <TOTEM:END>
       gd-articoli-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-articoli-Ev-Msg-Finish-Entry>
           inquire gd-art(event-data-2, 1), cell-data in art-codice.
           if art-codice = 0
              modify gd-art, record-to-delete event-data-2
           else
              read articoli no lock 
                   invalid 
                   move spaces to art-descrizione
                   set event-action to event-action-fail
                   display message "Articolo non valido"
                             title tit-err
                              icon 2
              end-read
              move art-descrizione to col-des
              modify gd-art(event-data-2, 2), cell-data col-des
           end-if 
           .
      * <TOTEM:END>
       gd-articoli-BeforeProcedure.
      * <TOTEM:PARA. gd-articoli-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       gd-articoli-AfterProcedure.
      * <TOTEM:PARA. gd-articoli-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       pb-applica-LinkTo.
      * <TOTEM:PARA. pb-applica-LinkTo>
           set tutto-ok to true.
           perform varying control-id from 78-ID-ef-cli by 1
                     until control-id > 78-ID-ef-age
              perform CONTROLLO
              if errori
                 exit perform
              end-if
           end-perform.
           if tutto-ok
              move 0 to lab-giac-buf
              display lab-giac
              modify lab-giac, color 3
              modify lab1,     color 3

              move cli-codice to como-cli-codice
              move age-codice to como-age-codice
              initialize tab-articoli
              move 0 to tot-articoli
              perform varying idx-art from 1 by 1 
                        until idx-art > 100
                 inquire gd-art(idx-art + 1, 1), cell-data in art-codice
                 if art-codice = 0
                    exit perform
                 end-if
                 move art-codice to el-articolo(idx-art)
                 add 1 to tot-articoli
              end-perform

              perform SCR-ELAB-OPEN-ROUTINE
              modify pb-applica, bitmap-number = 1
              move 78-ID-ef-cli to control-id
              move 4 to accept-control
              perform CANCELLA-COLORE
              if not trovato
                 display message "Non ci sono ordini che soddisfano i cr
      -    "iteri richiesti"
                           title titolo
                            icon 2
              else
                 set ApplicaFiltri to true
              end-if
           end-if 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd2-Ev-Msg-Begin-Entry>
      *****     if event-data-1 not = 7
      *****        set event-action to event-action-fail
      *****     else
      *****        inquire gd2(event-data-2, 7), cell-data in old-qta
      *****     end-if.
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd2-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd2-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd2-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd2-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd2-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-2 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO-1 
           .
      * <TOTEM:END>
       gd2-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd2-Ev-Msg-Finish-Entry>
           set tutto-ok to true.
           inquire gd2(event-data-2, 7), cell-data in col2-qta.
           modify  gd2(event-data-2, 7), cell-data    col2-qta.
           move col2-qta to como-qta.
           inquire gd2, last-row  in tot-righe.
           inquire gd2(event-data-2, 1), hidden-data in g2-hidden.

           if hid-si-blister
              move event-data-2 to riga2
              if event-data-2 > 2
                 perform until 1 = 2
                    inquire gd2(riga2, 1), hidden-data in g2-hidden
                    if not hid-si-blister or hid-qta-imballi not = 0
                       exit perform
                    end-if
                    subtract 1 from riga2
                 end-perform
              end-if
              move como-qta to col2-qta
              modify gd2(riga2, 7),  cell-data col2-qta
                      
              inquire gd2(riga2, 1), hidden-data g2-hidden
              move hid-chiave to tmro-chiave
              read tmp-mrordini no lock
              move col2-qta to tmro-qta
              perform AGGIORNA-DESCRIZIONE-BLISTER
              perform FROM-2-TO-3

              add 1 to riga2
              perform until 1 = 2
                 inquire gd2(riga2, 1), hidden-data in g2-hidden
                 if not hid-si-blister or hid-qta-imballi not = 0
                    exit perform
                 end-if
                 modify  gd2(riga2, 7),   cell-data col2-qta
                      
                 inquire gd2(riga2, 1), hidden-data g2-hidden
                 move hid-chiave to tmro-chiave
                 read tmp-mrordini no lock
                 move col2-qta to tmro-qta
                 perform AGGIORNA-DESCRIZIONE-BLISTER
                 perform FROM-2-TO-3

                 add 1 to riga2
                 if riga2 > tot-righe
                    exit perform
                 end-if
              end-perform
              inquire gd2(event-data-2, 1), hidden-data in g2-hidden
              move hid-prg-chiave to tmro-prg-chiave
              move 0 to old-qta como-qta
              perform DISPLAY-GIACENZA
           else

              inquire gd2(event-data-2, 1), hidden-data g2-hidden
              move hid-chiave to tmro-chiave
              read tmp-mrordini no lock

              perform IMBALLI-QTA
              move event-data-2 to riga2
              perform FROM-2-TO-3
           end-if.

      ***---
       AGGIORNA-DESCRIZIONE-BLISTER.
           move tmro-art to art-codice.
           read articoli no lock.
           if tmro-qta-imballi not = 0
              move tmro-qta to imballi-ed
              call "C$JUSTIFY" using imballi-ed, "L"
              inspect art-descrizione  replacing trailing spaces by 
           low-value
              inspect tmro-des-imballo replacing trailing spaces by 
           low-value

              initialize tmro-descr
              string  art-descrizione  delimited by low-value
                      " - "            delimited by size
                      tmro-des-imballo delimited by low-value
                      " da "           delimited by size
                      imballi-ed       delimited by spaces
                      into tmro-descr
              end-string
              
              inspect tmro-des-imballo replacing trailing low-value by 
           spaces
              if tmro-qta-imballi not = 0
                 move tmro-qta to tmro-qta-imballi
              end-if
              rewrite tmro-rec
              modify gd2(riga2, 2), cell-data tmro-descr
           end-if 
           .
      * <TOTEM:END>
       gd3-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd3-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       pb-genera-BeforeProcedure.
      * <TOTEM:PARA. pb-genera-BeforeProcedure>
           modify pb-genera, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-genera-AfterProcedure.
      * <TOTEM:PARA. pb-genera-AfterProcedure>
           modify pb-genera, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-genera-LinkTo.
      * <TOTEM:PARA. pb-genera-LinkTo>
           set contatore-lock to false.
           set errori         to true.
           inquire gd3, last-row in tot-righe.
           if tot-righe > 1
              display message "Confermi generazione evasioni?"
                        title titolo
                         type mb-yes-no
                      default mb-no
                         icon 2
                       giving scelta
           end-if.

           if scelta = mb-yes
              perform CONTROLLI
           end-if.

           if tutto-ok
              set ExitPerform to false
              close    mtordini mrordini
              open i-o mtordini mrordini

              initialize tab-ordini tab-master
              move 1 to idx
              move 0 to tot-idx-m

              move spaces to tge-chiave
              read tparamge no lock

              move 0 to save-cli
              move 0 to save-des
              move 0 to tot-peso
              move 0 to save-prog
              set record-ok to true
              move low-value to tmeva-rec
              start tmp-evaart key >= tmeva-k-ord
                    invalid continue
                not invalid
                    perform until 1 = 2
                       |Mi ritorna dal blister
                       if ExitPerform
                          exit perform
                       end-if
                       read tmp-evaart next 
                            at end
                            exit perform
                       end-read

                       if tmeva-prog not = save-prog
                          if el-sw-valore(tmeva-prog) = 0
                             move tmeva-prog to save-prog
                             if tmeva-ritira-si
                                display message 
                                "Evasione OMAGGIO!!!!"
                         x"0d0a""Cliente:  "tmeva-cliente
                         x"0d0a""Destino: "tmeva-destino
                         x"0d0a""Con ritiro presso Lubex."
                         x"0d0a""Confermi?"
                                      title titolo
                                       type mb-yes-no
                                       icon 2
                                     giving scelta
                             else
                                display message 
                                "Evasione OMAGGIO!!!!"
                         x"0d0a""Cliente:  "tmeva-cliente
                         x"0d0a""Destino: "tmeva-destino
                         x"0d0a""Merce franco destino."
                         x"0d0a""Confermi?"
                                      title titolo
                                       type mb-yes-no
                                       icon 2
                                     giving scelta
                             end-if
                             if scelta = mb-yes
                                set record-ok to true
                             else
                                set record-ok   to false
                             end-if
                          else
                             set record-ok to true
                          end-if
                       end-if

                       if record-ok
                          
                          move tmeva-chiave-testa to mto-chiave         
                         
                          read mtordini no lock                       
                          set idx-m to 1

                          search el-chiave-m
                          at end
                             add 1 to tot-idx-m
                             move mto-chiave to el-chiave-m(tot-idx-m)
                          when el-chiave-m(idx-m) = mto-chiave
                               continue |MI serve solo aggiungere
                          end-search

                          if tmeva-cod-cli     not = save-cli or
                             tmeva-prg-destino not = save-des or
                             tmeva-ritira      not = save-ritira
                             move tmeva-cod-cli     to save-cli
                                                       mto-cod-cli
                                                       cli-codice 
                                                       des-codice
                             move tmeva-prg-destino to save-des
                                                       des-prog
                                                       mto-prg-destino
                             move tmeva-ritira      to save-ritira
                             set  cli-tipo-C      to true
                             read clienti no lock invalid continue 
           end-read
                             if des-prog not = 0
                                read destini no lock invalid continue 
           end-read
                             else
                                move cli-utf to des-deposito-utf
                             end-if
                             perform SCRIVI-TESTA
                             |lOCK SUI CONTATORI ESCO SUBITO
                             if contatore-lock
                                exit perform
                             end-if
                          end-if

                          perform SCRIVI-RIGHE
                       end-if
                 
                    end-perform
              end-start

              perform FINE-OPERAZIONE

           end-if 
           .
      * <TOTEM:END>
       pb-sia-BeforeProcedure.
      * <TOTEM:PARA. pb-sia-BeforeProcedure>
           .
      * <TOTEM:END>
       pb-sia-AfterProcedure.
      * <TOTEM:PARA. pb-sia-AfterProcedure>
           .
      * <TOTEM:END>
       pb-si-LinkTo.
      * <TOTEM:PARA. pb-si-LinkTo>
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

