      *{TOTEM}PRG-COMMENT
      * calc.Cbl
      * calc.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          calc.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        lunedì 2 febbraio 2015 11:39:22.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:calc, INIT:calc, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tmarche.sl".
           COPY "timbalqta.sl".
           COPY "timballi.sl".
           COPY "rmovmag.sl".
           COPY "tparamge.sl".
           COPY "tcaumag.sl".
           COPY "tmovmag.sl".
           COPY "progmag.sl".
           COPY "articoli.sl".
           COPY "timposte.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tmarche.fd".
           COPY "timbalqta.fd".
           COPY "timballi.fd".
           COPY "rmovmag.fd".
           COPY "tparamge.fd".
           COPY "tcaumag.fd".
           COPY "tmovmag.fd".
           COPY "progmag.fd".
           COPY "articoli.fd".
           COPY "timposte.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "GESLUX - Calcolatrice". 
           COPY  "COSTO-MEDIO.DEF".
           COPY  "IMPOSTE.DEF".
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 3.
       77 BOTTONE-OK-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 BOTTONE-CANCEL-BMP           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 BLUE-DA-28X24-BMP            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BLUE-FINO-28X24-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 totale           PIC  s9(15)v99.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 form1-handle
                  USAGE IS HANDLE OF WINDOW.
       77 ef-gdo-buf       PIC  X(5).
       77 e-marca          PIC  9
                  VALUE IS 1.
       77 ef-marca-buf     PIC  9(5).
       77 lab-marca-buf    PIC  X(50)
                  VALUE IS "0 = TUTTE".
       77 ef-descr-buf     PIC  X(50).
       77 ef-art-buf       PIC  z(6).
       77 lab-art-buf      PIC  X(50).
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 save-articolo    PIC  9(6).
       77 save-descr       PIC  x(50).
       77 save-marca       PIC  9(4).
       77 imballi-ed       PIC  z.zz9.
       77 mese PIC  99.
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 gd-titolo-rec.
           05 col-marca        PIC  x(50).
           05 col-art          PIC  z(6).
           05 col-des          PIC  X(50).
           05 col-imb          PIC  X(50).
       01 gd-mov-rec.
           05 col-tit          PIC  X(9).
           05 col-corr         PIC  ---.---.--9.
           05 col-pass         PIC  ---.---.--9.
           05 col-var-qta      PIC  ---.---.--9.
           05 col-var-perce    PIC  zz9,99.
       01 gd-giac-rec.
           05 col-1            PIC  X(50).
           05 col-giac         PIC  ---.---.--9.
       77 STATUS-rmovmag   PIC  X(2).
           88 Valid-STATUS-rmovmag VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       01 data-start.
           05 aaaa-pass        PIC  9(4).
           05 mm-pass          PIC  99.
           05 gg-pass          PIC  99.
       01 data-end.
           05 aaaa-corr        PIC  9(4).
           05 mm-corr          PIC  99.
           05 gg-corr          PIC  99.
       77 data-start-num   PIC  9(8).
       77 data-end-num     PIC  9(8).
       77 sw-righe         PIC  9.
       77 qta-tot-c        PIC  s9(8).
       77 qta-tot-p        PIC  s9(8).
       77 qta-c            PIC  s9(8)
                  OCCURS 12 TIMES.
       77 qta-p            PIC  s9(8)
                  OCCURS 12 TIMES.
       77 var-qta          PIC  s9(8).
       77 var-perce        PIC  s9(3)v99.
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 STATUS-tmovmag   PIC  X(2).
           88 Valid-STATUS-tmovmag VALUE IS "00" THRU "09". 
       77 VPROGMAG-INDIETRO-BMP        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 VPROGMAG-AVANTI-BMP          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 FATTO-BMP        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       01 rec-calc.
           05 col-mag          PIC  x(3).
           05 col-peso         PIC  zz9,999.
           05 col-imballo      PIC  x(50).
           05 col-giacenza     PIC  zz.zzz.zz9.
       77 scr-calc-handle
                  USAGE IS HANDLE OF WINDOW.
       77 col1 PIC  ----.---.--9,99.
       77 col2 PIC  ----.---.--9,99.
       77 col3 PIC  ----.---.--9,99.
       77 col4 PIC  ----.---.--9,99.
       77 col5 PIC  ----.---.--9,99.
       77 STATUS-lisagente PIC  X(2).
           88 Valid-STATUS-lisagente VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 como-valore      PIC  9(9)v99.
       77 calc-bmp         PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       01 scr-stampa-Gd-1-Record.
           05 Gd-1-Col-1       PIC  X(08).
           05 Gd-1-Col-2       PIC  X(08).
           05 Gd-1-Col-3       PIC  X(08).
           05 Gd-1-Col-4       PIC  X(08).
           05 Gd-1-Col-5       PIC  X(08).

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-form1-FLAG-REFRESH PIC  9.
          88 form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-Screen1-FLAG-REFRESH PIC  9.
          88 Screen1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-scr-calc-FLAG-REFRESH PIC  9.
          88 scr-calc-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-rmovmag-BUF     PIC X(446).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-tmovmag-BUF     PIC X(256).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-timposte-BUF     PIC X(277).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-rmovmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rmovmag-LOCK  VALUE "Y".
       77 DataSet1-rmovmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rmovmag-KEY-Asc  VALUE "A".
          88 DataSet1-rmovmag-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-tmovmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmovmag-LOCK  VALUE "Y".
       77 DataSet1-tmovmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmovmag-KEY-Asc  VALUE "A".
          88 DataSet1-tmovmag-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-progmag-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY1-Asc  VALUE "A".
          88 DataSet1-progmag-KEY1-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".

       77 rmovmag-k-articolo-SPLITBUF  PIC X(19).
       77 rmovmag-rmo-chiave-ricerca-SPLITBUF  PIC X(25).
       77 rmovmag-k-progmag-SPLITBUF  PIC X(21).
       77 rmovmag-k-art-data-SPLITBUF  PIC X(15).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 tmovmag-key01-SPLITBUF  PIC X(17).
       77 tmovmag-k2-SPLITBUF  PIC X(20).
       77 tmovmag-k-data-SPLITBUF  PIC X(17).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 articoli-art-k1-SPLITBUF  PIC X(51).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-art VALUE 5001.
       78  78-ID-ef-valore VALUE 5002.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           form1, 
           BEFORE PROCEDURE form1-BeforeProcedure,
           AFTER PROCEDURE  form1-AFTER-SCREEN
           .

      * ENTRY FIELD
       05
           ef-art, 
           Entry-Field, 
           COL 11,00, 
           LINE 3,50,
           LINES 1,33 ,
           SIZE 7,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ENABLED 1,
           ID IS 78-ID-ef-art,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-art-buf,
           AFTER PROCEDURE ef-art-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-valore, 
           Entry-Field, 
           COL 11,00, 
           LINE 6,00,
           LINES 1,33 ,
           SIZE 15,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-valore,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE como-valore,
           AFTER PROCEDURE ef-valore-AfterProcedure, 
           .


      * FRAME
       05
           scr-stampa-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 7,50,
           LINES 2,72 ,
           SIZE 44,10 ,
           LOWERED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-sib, 
           Push-Button, 
           COL 29,10, 
           LINE 8,11,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           FONT IS Small-Font,
           ID IS 100,
           AFTER PROCEDURE pb-sib-AfterProcedure, 
           BEFORE PROCEDURE pb-sib-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-noa, 
           Push-Button, 
           COL 36,90, 
           LINE 8,11,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           FONT IS Small-Font,
           ID IS 200,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-noa-AfterProcedure, 
           BEFORE PROCEDURE pb-noa-BeforeProcedure, 
           .

      * LABEL
       05
           lab3, 
           Label, 
           COL 3,00, 
           LINE 3,72,
           LINES 1,33 ,
           SIZE 7,00 ,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Articolo",
           .

      * LABEL
       05
           lab-art, 
           Label, 
           COL 19,00, 
           LINE 3,61,
           LINES 2,00 ,
           SIZE 26,00 ,
           COLOR IS 5,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-art-buf,
           .

      * LABEL
       05
           Form1-La-1abbbaab, 
           Label, 
           COL 15,50, 
           LINE 1,39,
           LINES 1,11 ,
           SIZE 15,00 ,
           COLOR IS 80,
           ID IS 561,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TITLE "Filtri di selezione",
           .

      * BAR
       05
           Screen4-Br-1aaaaba, 
           Bar,
           COL 1,00, 
           LINE 2,06,
           SIZE 14,30 ,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * BAR
       05
           Screen4-Br-1aaaabaa, 
           Bar,
           COL 30,80, 
           LINE 2,06,
           SIZE 14,30 ,
           ID IS 20,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * LABEL
       05
           scr-stampa-blockpgm-1, 
           Label, 
           COL 2,00, 
           LINE 1,00,
           LINES 1,00 ,
           SIZE 1,00 ,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           scr-stampa-Custom1-1, 
           Label, 
           COL 6,90, 
           LINE 1,39,
           LINES 0,44 ,
           SIZE 4,70 ,
           FONT IS Default-Font,
           ID IS 5,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           lab3a, 
           Label, 
           COL 3,00, 
           LINE 6,17,
           LINES 1,33 ,
           SIZE 7,00 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Importo",
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCIa, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 30,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           tool-cerca, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 31,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           Screen1, 
           AFTER PROCEDURE  Screen1-AFTER-SCREEN
           BEFORE PROCEDURE  Screen1-BEFORE-SCREEN
           .

      * PUSH BUTTON
       05
           pb-fatto, 
           Push-Button, 
           COL 35,20, 
           LINE 36,17,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE FATTO-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           FONT IS Small-Font,
           ID IS 1,
           ESCAPE-BUTTON,
           TITLE "Fatto",
           AFTER PROCEDURE pb-fatto-AfterProcedure, 
           BEFORE PROCEDURE pb-fatto-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-indietro, 
           Push-Button, 
           COL 31,50, 
           LINE 2,22,
           LINES 58,00 ,
           SIZE 60,00 ,
           BITMAP-HANDLE VPROGMAG-INDIETRO-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 67,
           FONT IS Small-Font,
           ID IS 2,
           SELF-ACT,
           TITLE "&Indietro",
           .

      * PUSH BUTTON
       05
           pb-avanti, 
           Push-Button, 
           COL 40,20, 
           LINE 2,22,
           LINES 58,00 ,
           SIZE 60,00 ,
           BITMAP-HANDLE VPROGMAG-AVANTI-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           EXCEPTION-VALUE 68,
           FONT IS Small-Font,
           ID IS 3,
           SELF-ACT,
           TITLE "&Avanti",
           .

      * GRID
       05
           gd-titolo, 
           Grid, 
           COL 1,80, 
           LINE 7,00,
           LINES 3,22 ,
           SIZE 74,80 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 51, 57, 107),
           ALIGNMENT ("U", "R", "U", "U"),
           SEPARATION (5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           FONT IS Verdana12B-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 2,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 68,
           VPADDING 50,
           EVENT PROCEDURE gd-titolo-Event-Proc,
           .

      * GRID
       05
           gd-mov, 
           Grid, 
           COL 1,70, 
           LINE 11,00,
           LINES 21,89 ,
           SIZE 75,00 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 10, 20, 30, 40),
           ALIGNMENT ("C", "R", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 14,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 75,
           VPADDING 50,
           EVENT PROCEDURE gd-mov-Event-Proc,
           .

      * GRID
       05
           gd-giac, 
           Grid, 
           COL 1,70, 
           LINE 34,00,
           LINES 1,61 ,
           SIZE 75,00 ,
           BOXED,
           DATA-COLUMNS (1, 51),
           ALIGNMENT ("U", "R"),
           SEPARATION (5, 5),
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 1,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 75,
           VPADDING 50,
           .

      * FORM
       01 
           scr-calc, 
           AFTER PROCEDURE  scr-calc-AFTER-SCREEN
           BEFORE PROCEDURE  scr-calc-BEFORE-SCREEN
           .

      * GRID
       05
           gd-calc-1, 
           Grid, 
           COL 2,80, 
           LINE 4,72,
           LINES 18,78 ,
           SIZE 60,20 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 4, 11, 14),
           ALIGNMENT ("C", "R", "C", "R"),
           SEPARATION (5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS Verdana12B-Occidentale,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 60,
           VPADDING 50,
           EVENT PROCEDURE gd-mov-Event-Proc,
           .

      * GRID
       05
           gd-calc-2, 
           Grid, 
           COL 2,80, 
           LINE 24,17,
           LINES 4,78 ,
           SIZE 60,10 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 9, 17, 25, 33),
           ALIGNMENT ("C", "R", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5),
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 3,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VPADDING 50,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * GRID
       05
           gd-calc-gdo, 
           Grid, 
           COL 2,80, 
           LINE 29,67,
           LINES 3,22 ,
           SIZE 60,10 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 9, 17, 25, 33),
           ALIGNMENT ("C", "R", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5),
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 7,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 2,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VPADDING 50,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-progressivi, 
           Push-Button, 
           COL 14,50, 
           LINE 36,89,
           LINES 29,00 ,
           SIZE 153,00 ,
           BITMAP-HANDLE CALC-BMP,
           BITMAP-NUMBER 3,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 10,
           TITLE "&Progressivi",
           AFTER PROCEDURE pb-progressivi-AfterProcedure, 
           BEFORE PROCEDURE pb-progressivi-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-movper, 
           Push-Button, 
           COL 36,20, 
           LINE 36,89,
           LINES 29,00 ,
           SIZE 153,00 ,
           BITMAP-HANDLE CALC-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 11,
           TITLE "&Movimentazione",
           AFTER PROCEDURE pb-movper-AfterProcedure, 
           BEFORE PROCEDURE pb-movper-BeforeProcedure, 
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 2,80, 
           LINE 1,00,
           LINES 3,22 ,
           SIZE 60,20 ,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * LABEL
       05
           Screen2-La-1, 
           Label, 
           COL 3,90, 
           LINE 2,28,
           LINES 1,17 ,
           SIZE 7,00 ,
           FONT IS Verdana12B-Occidentale,
           ID IS 8,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Articolo",
           .

      * LABEL
       05
           lab-cod-art, 
           Label, 
           COL 11,80, 
           LINE 2,28,
           LINES 1,17 ,
           SIZE 7,00 ,
           COLOR IS 2,
           FONT IS Verdana12B-Occidentale,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           TRANSPARENT,
           TITLE ef-art-buf,
           .

      * LABEL
       05
           lab-des-art, 
           Label, 
           COL 20,30, 
           LINE 2,28,
           LINES 1,17 ,
           SIZE 41,00 ,
           COLOR IS 2,
           FONT IS Verdana12B-Occidentale,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-art-buf,
           .

      * BAR
       05
           Screen2-Br-1, 
           Bar,
           COL 2,80, 
           LINE 23,83,
           SIZE 60,20 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           WIDTH 1,
           .

      * BAR
       05
           Screen2-Br-1a, 
           Bar,
           COL 2,80, 
           LINE 29,28,
           SIZE 60,20 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           WIDTH 1,
           .

      * GRID
       05
           gd-calc-trad, 
           Grid, 
           COL 2,80, 
           LINE 33,33,
           LINES 3,22 ,
           SIZE 60,10 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 9, 17, 25, 33),
           ALIGNMENT ("C", "R", "R", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5),
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           NUM-ROWS 2,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VPADDING 50,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:calc, INIT:calc, BeforeDeclarative>
      ***---
       TMARCHE-ERR SECTION.
           use after error procedure on tmarche.
           set tutto-ok  to true.
           evaluate status-tmarche
           when "35"
                display message "File [TMARCHE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMARCHE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMARCHE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TIMBALQTA-ERR SECTION.
           use after error procedure on timbalqta.
           set tutto-ok  to true.
           evaluate status-timbalqta
           when "35"
                display message "File [TIMBALQTA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TIMBALQTA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TIMBALQTA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TIMBALLI-ERR SECTION.
           use after error procedure on timballi.
           set tutto-ok  to true.
           evaluate status-timballi
           when "35"
                display message "File [TIMBALLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TIMBALLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TIMBALLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       RMOVMAG-ERR SECTION.
           use after error procedure on rmovmag.
           set tutto-ok  to true.
           evaluate status-rmovmag
           when "35"
                display message "File [RMOVMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [RMOVMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[RMOVMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TPARAMGE-ERR SECTION.
           use after error procedure on tparamge.
           set tutto-ok  to true.
           evaluate status-tparamge
           when "35"
                display message "File [TPARAMGE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TPARAMGE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TPARAMGE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TCAUMAG-ERR SECTION.
           use after error procedure on tcaumag.
           set tutto-ok  to true.
           evaluate status-tcaumag
           when "35"
                display message "File [TCAUMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TCAUMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TCAUMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMOVMAG-ERR SECTION.
           use after error procedure on tmovmag.
           set tutto-ok  to true.
           evaluate status-tmovmag
           when "35"
                display message "File [TMOVMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMOVMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMOVMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       PROGMAG-ERR SECTION.
           use after error procedure on progmag.
           set tutto-ok  to true.
           evaluate status-progmag
           when "35"
                display message "File [PROGMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [PROGMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[PROGMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TIMPOSTE-ERR SECTION.
           use after error procedure on timposte.
           set tutto-ok  to true.
           evaluate status-timposte
           when "35"
                display message "File [TIMPOSTE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TIMPOSTE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TIMPOSTE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM stmarcon-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:calc, INIT:calc, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana12B-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, FATTO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, VPROGMAG-INDIETRO-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, VPROGMAG-AVANTI-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, CALC-BMP
      *    After-Program
           PERFORM stmarcon-Ev-After-Program
           set environment "KEYSTROKE" to "DATA=46   46".
           set environment "KEYSTROKE" to "DATA=44   44".
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
      * Verdana12B-Occidentale
           INITIALIZE WFONT-DATA Verdana12B-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12B-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-sib
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-noa
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCIa
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * tool-cerca
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
      * pb-fatto
           COPY RESOURCE "FATTO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "FATTO.BMP", 
                   GIVING FATTO-BMP.
      * pb-indietro
           COPY RESOURCE "VPROGMAG-INDIETRO.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "VPROGMAG-INDIETRO.BMP", 
                   GIVING VPROGMAG-INDIETRO-BMP.
      * pb-avanti
           COPY RESOURCE "VPROGMAG-AVANTI.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "VPROGMAG-AVANTI.BMP", 
                   GIVING VPROGMAG-AVANTI-BMP.
      * pb-progressivi
           COPY RESOURCE "CALC.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "CALC.BMP", 
                   GIVING CALC-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tmarche
           PERFORM OPEN-timbalqta
           PERFORM OPEN-timballi
           PERFORM OPEN-rmovmag
           PERFORM OPEN-tparamge
           PERFORM OPEN-tcaumag
           PERFORM OPEN-tmovmag
           PERFORM OPEN-progmag
           PERFORM OPEN-articoli
           PERFORM OPEN-timposte
      *    After Open
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:calc, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:calc, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:calc, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rmovmag.
      * <TOTEM:EPT. INIT:calc, FD:rmovmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rmovmag
           IF NOT Valid-STATUS-rmovmag
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:rmovmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:calc, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:calc, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmovmag.
      * <TOTEM:EPT. INIT:calc, FD:tmovmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmovmag
           IF NOT Valid-STATUS-tmovmag
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:tmovmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:calc, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:calc, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:calc, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:calc, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tmarche
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-timballi
           PERFORM CLOSE-rmovmag
           PERFORM CLOSE-tparamge
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-tmovmag
           PERFORM CLOSE-progmag
           PERFORM CLOSE-articoli
           PERFORM CLOSE-timposte
      *    After Close
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:calc, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:calc, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:calc, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-rmovmag.
      * <TOTEM:EPT. INIT:calc, FD:rmovmag, BeforeClose>
      * <TOTEM:END>
           CLOSE rmovmag
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:calc, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           CLOSE tparamge
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:calc, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-tmovmag.
      * <TOTEM:EPT. INIT:calc, FD:tmovmag, BeforeClose>
      * <TOTEM:END>
           CLOSE tmovmag
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:calc, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:calc, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:calc, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       rmovmag-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-articolo-SPLITBUF
           MOVE rmo-anno OF rmovmag(1:4) TO 
           rmovmag-k-articolo-SPLITBUF(1:4)
           MOVE rmo-movim OF rmovmag(1:8) TO 
           rmovmag-k-articolo-SPLITBUF(5:8)
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-k-articolo-SPLITBUF(13:6)
           .

       rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE rmovmag-rmo-chiave-ricerca-SPLITBUF
           MOVE rmo-tipo OF rmovmag(1:1) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(1:1)
           MOVE rmo-cod-clifor OF rmovmag(1:5) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(2:5)
           MOVE rmo-causale OF rmovmag(1:4) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(7:4)
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(11:6)
           MOVE rmo-data-movim OF rmovmag(1:8) TO 
           rmovmag-rmo-chiave-ricerca-SPLITBUF(17:8)
           .

       rmovmag-k-progmag-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-progmag-SPLITBUF
           MOVE rmo-chiave-progmag OF rmovmag(1:20) TO 
           rmovmag-k-progmag-SPLITBUF(1:20)
           .

       rmovmag-k-art-data-MERGE-SPLITBUF.
           INITIALIZE rmovmag-k-art-data-SPLITBUF
           MOVE rmo-articolo OF rmovmag(1:6) TO 
           rmovmag-k-art-data-SPLITBUF(1:6)
           MOVE rmo-data-movim OF rmovmag(1:8) TO 
           rmovmag-k-art-data-SPLITBUF(7:8)
           .

       DataSet1-rmovmag-INITSTART.
           IF DataSet1-rmovmag-KEY-Asc
              MOVE Low-Value TO rmo-chiave OF rmovmag
           ELSE
              MOVE High-Value TO rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-INITEND.
           IF DataSet1-rmovmag-KEY-Asc
              MOVE High-Value TO rmo-chiave OF rmovmag
           ELSE
              MOVE Low-Value TO rmo-chiave OF rmovmag
           END-IF
           .

      * rmovmag
       DataSet1-rmovmag-START.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY >= rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY <= rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-NOTGREATER.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY <= rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY >= rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-GREATER.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY > rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY < rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-START-LESS.
           IF DataSet1-rmovmag-KEY-Asc
              START rmovmag KEY < rmo-chiave OF rmovmag
           ELSE
              START rmovmag KEY > rmo-chiave OF rmovmag
           END-IF
           .

       DataSet1-rmovmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rmovmag-LOCK
              READ rmovmag WITH LOCK 
              KEY rmo-chiave OF rmovmag
           ELSE
              READ rmovmag WITH NO LOCK 
              KEY rmo-chiave OF rmovmag
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT 
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rmovmag-KEY-Asc
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag NEXT WITH LOCK
              ELSE
                 READ rmovmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag PREVIOUS WITH LOCK
              ELSE
                 READ rmovmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rmovmag-KEY-Asc
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag PREVIOUS WITH LOCK
              ELSE
                 READ rmovmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rmovmag-LOCK
                 READ rmovmag NEXT WITH LOCK
              ELSE
                 READ rmovmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rmovmag-k-articolo-MERGE-SPLITBUF
           PERFORM rmovmag-rmo-chiave-ricerca-MERGE-SPLITBUF
           PERFORM rmovmag-k-progmag-MERGE-SPLITBUF
           PERFORM rmovmag-k-art-data-MERGE-SPLITBUF
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rmovmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rmovmag TO TOTEM-ERR-STAT
           MOVE "rmovmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rmovmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       tmovmag-key01-MERGE-SPLITBUF.
           INITIALIZE tmovmag-key01-SPLITBUF
           MOVE tmo-anno(1:4) TO tmovmag-key01-SPLITBUF(1:4)
           MOVE tmo-causale(1:4) TO tmovmag-key01-SPLITBUF(5:4)
           MOVE tmo-numero(1:8) TO tmovmag-key01-SPLITBUF(9:8)
           .

       tmovmag-k2-MERGE-SPLITBUF.
           INITIALIZE tmovmag-k2-SPLITBUF
           MOVE tmo-tipo(1:1) TO tmovmag-k2-SPLITBUF(1:1)
           MOVE tmo-cod-clifor(1:5) TO tmovmag-k2-SPLITBUF(2:5)
           MOVE tmo-destino(1:5) TO tmovmag-k2-SPLITBUF(7:5)
           MOVE tmo-data-movim(1:8) TO tmovmag-k2-SPLITBUF(12:8)
           .

       tmovmag-k-data-MERGE-SPLITBUF.
           INITIALIZE tmovmag-k-data-SPLITBUF
           MOVE tmo-data-movim(1:8) TO tmovmag-k-data-SPLITBUF(1:8)
           MOVE tmo-numero(1:8) TO tmovmag-k-data-SPLITBUF(9:8)
           .

       DataSet1-tmovmag-INITSTART.
           IF DataSet1-tmovmag-KEY-Asc
              MOVE Low-Value TO tmo-chiave
           ELSE
              MOVE High-Value TO tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-INITEND.
           IF DataSet1-tmovmag-KEY-Asc
              MOVE High-Value TO tmo-chiave
           ELSE
              MOVE Low-Value TO tmo-chiave
           END-IF
           .

      * tmovmag
       DataSet1-tmovmag-START.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY >= tmo-chiave
           ELSE
              START tmovmag KEY <= tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-NOTGREATER.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY <= tmo-chiave
           ELSE
              START tmovmag KEY >= tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-GREATER.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY > tmo-chiave
           ELSE
              START tmovmag KEY < tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-START-LESS.
           IF DataSet1-tmovmag-KEY-Asc
              START tmovmag KEY < tmo-chiave
           ELSE
              START tmovmag KEY > tmo-chiave
           END-IF
           .

       DataSet1-tmovmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmovmag-LOCK
              READ tmovmag WITH LOCK 
              KEY tmo-chiave
           ELSE
              READ tmovmag WITH NO LOCK 
              KEY tmo-chiave
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT 
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmovmag-KEY-Asc
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag NEXT WITH LOCK
              ELSE
                 READ tmovmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag PREVIOUS WITH LOCK
              ELSE
                 READ tmovmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmovmag-KEY-Asc
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag PREVIOUS WITH LOCK
              ELSE
                 READ tmovmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmovmag-LOCK
                 READ tmovmag NEXT WITH LOCK
              ELSE
                 READ tmovmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tmovmag-key01-MERGE-SPLITBUF
           PERFORM tmovmag-k2-MERGE-SPLITBUF
           PERFORM tmovmag-k-data-MERGE-SPLITBUF
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmovmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmovmag TO TOTEM-ERR-STAT
           MOVE "tmovmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmovmag, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE Low-Value TO prg-chiave OF progmag
              ELSE
                 MOVE High-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 MOVE High-Value TO prg-chiave OF progmag
              ELSE
                 MOVE Low-Value TO prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-progmag-KEY1-ORDER
           END-EVALUATE
           .

      * progmag
       DataSet1-progmag-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY >= prg-chiave OF progmag
              ELSE
                 START progmag KEY <= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY <= prg-chiave OF progmag
              ELSE
                 START progmag KEY >= prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY > prg-chiave OF progmag
              ELSE
                 START progmag KEY < prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 START progmag KEY < prg-chiave OF progmag
              ELSE
                 START progmag KEY > prg-chiave OF progmag
              END-IF
           END-EVALUATE
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-LOCK
                 READ progmag WITH LOCK 
                 KEY prg-chiave OF progmag
              ELSE
                 READ progmag WITH NO LOCK 
                 KEY prg-chiave OF progmag
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-progmag-KEY1-Asc
                 IF DataSet1-progmag-LOCK
                    READ progmag PREVIOUS WITH LOCK
                 ELSE
                    READ progmag PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-progmag-LOCK
                    READ progmag NEXT WITH LOCK
                 ELSE
                    READ progmag NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE mar-rec OF tmarche
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE imb-rec OF timballi
           INITIALIZE rmo-rec OF rmovmag
           INITIALIZE tge-rec OF tparamge
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE tmo-rec OF tmovmag
           INITIALIZE prg-rec OF progmag
           INITIALIZE art-rec OF articoli
           INITIALIZE imp-rec OF timposte
           .


      * GRID
       gd-titolo-Content.
      * CELLS' SETTING
              MODIFY gd-titolo, X = 1, Y = 1,
                CELL-DATA = "Marca",
      * CELLS' SETTING
              MODIFY gd-titolo, X = 2, Y = 1,
                CELL-DATA = "Codice",
      * CELLS' SETTING
              MODIFY gd-titolo, X = 3, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-titolo, X = 4, Y = 1,
                CELL-DATA = "Imballo Standard",
           .

      * GRID
       gd-mov-Content.
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 1,
                CELL-DATA = "Mese",
      * CELLS' SETTING
              MODIFY gd-mov, X = 2, Y = 1,
                CELL-DATA = "Q.tà anno corr.",
      * CELLS' SETTING
              MODIFY gd-mov, X = 3, Y = 1,
                CELL-DATA = "Q.tà anno pass.",
      * CELLS' SETTING
              MODIFY gd-mov, X = 4, Y = 1,
                CELL-DATA = "Variazione Q.tà",
      * CELLS' SETTING
              MODIFY gd-mov, X = 5, Y = 1,
                CELL-DATA = "Variazione %",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 2,
                CELL-DATA = "Gennaio",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 3,
                CELL-DATA = "Febbraio",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 4,
                CELL-DATA = "Marzo",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 5,
                CELL-DATA = "Aprile",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 6,
                CELL-DATA = "Maggio",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 7,
                CELL-DATA = "Giugno",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 8,
                CELL-DATA = "Luglio",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 9,
                CELL-DATA = "Agosto",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 10,
                CELL-DATA = "Settembre",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 11,
                CELL-DATA = "Ottobre",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 12,
                CELL-DATA = "Novembre",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 13,
                CELL-DATA = "Dicembre",
      * CELLS' SETTING
              MODIFY gd-mov, X = 1, Y = 14,
                CELL-DATA = "T O T A L I",
           .

      * GRID
       gd-giac-Content.
      * CELLS' SETTING
              MODIFY gd-giac, X = 1, Y = 1,
                CELL-DATA = "Giacenza attuale",
           .

      * GRID
       gd-calc-1-Content.
      * CELLS' SETTING
              MODIFY gd-calc-1, X = 1, Y = 1,
                CELL-DATA = "Magazzino",
      * CELLS' SETTING
              MODIFY gd-calc-1, X = 2, Y = 1,
                CELL-DATA = "Peso",
      * CELLS' SETTING
              MODIFY gd-calc-1, X = 3, Y = 1,
                CELL-DATA = "Imballo",
      * CELLS' SETTING
              MODIFY gd-calc-1, X = 4, Y = 1,
                CELL-DATA = "Giacenza",
           .

      * GRID
       gd-calc-2-Content.
      * CELLS' SETTING
              MODIFY gd-calc-2, X = 2, Y = 1,
                CELL-DATA = "Imponibile",
      * CELLS' SETTING
              MODIFY gd-calc-2, X = 3, Y = 1,
                CELL-DATA = "I. Consumo",
      * CELLS' SETTING
              MODIFY gd-calc-2, X = 4, Y = 1,
                CELL-DATA = "Cou/Cobat",
      * CELLS' SETTING
              MODIFY gd-calc-2, X = 5, Y = 1,
                CELL-DATA = "TOTALE",
      * CELLS' SETTING
              MODIFY gd-calc-2, X = 1, Y = 2,
                CELL-DATA = "Listino Vendita",
      * CELLS' SETTING
              MODIFY gd-calc-2, X = 1, Y = 3,
                CELL-DATA = "Costo Medio",
           .

      * GRID
       gd-calc-gdo-Content.
      * CELLS' SETTING
              MODIFY gd-calc-gdo, X = 2, Y = 1,
                CELL-DATA = "Imponibile",
      * CELLS' SETTING
              MODIFY gd-calc-gdo, X = 3, Y = 1,
                CELL-DATA = "I. Consumo",
      * CELLS' SETTING
              MODIFY gd-calc-gdo, X = 4, Y = 1,
                CELL-DATA = "Cou/Cobat",
      * CELLS' SETTING
              MODIFY gd-calc-gdo, X = 5, Y = 1,
                CELL-DATA = "TOTALE",
      * CELLS' SETTING
              MODIFY gd-calc-gdo, X = 1, Y = 2,
                CELL-DATA = "G.D.O.",
           .

      * GRID
       gd-calc-trad-Content.
      * CELLS' SETTING
              MODIFY gd-calc-trad, X = 2, Y = 1,
                CELL-DATA = "Imponibile",
      * CELLS' SETTING
              MODIFY gd-calc-trad, X = 3, Y = 1,
                CELL-DATA = "I. Consumo",
      * CELLS' SETTING
              MODIFY gd-calc-trad, X = 4, Y = 1,
                CELL-DATA = "Cou/Cobat",
      * CELLS' SETTING
              MODIFY gd-calc-trad, X = 5, Y = 1,
                CELL-DATA = "TOTALE",
      * CELLS' SETTING
              MODIFY gd-calc-trad, X = 1, Y = 2,
                CELL-DATA = "Tradizionale",
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rmovmag-INITREC.
           INITIALIZE rmo-rec OF rmovmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmovmag-INITREC.
           INITIALIZE tmo-rec OF tmovmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       form1-Open-Routine.
           PERFORM form1-Scrn
           PERFORM form1-Proc
           .

       form1-Scrn.
           PERFORM form1-Create-Win
           PERFORM form1-Init-Value
           PERFORM form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM form1-DISPLAY
           .

       form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 9,22,
              SIZE 44,10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE scr-stampa-Event-Proc,
              HANDLE IS form1-handle,
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterCreateWin>



           .
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY form1 UPON form1-handle
      * DISPLAY-COLUMNS settings
           .

       form1-PROC.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeAccept>
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT form1
                 ON EXCEPTION
                    PERFORM form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-handle
           INITIALIZE Key-Status
           .

       form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-sib-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form1-CLEAR.
           PERFORM form1-INIT-VALUE
           PERFORM form1-DISPLAY
           .

       form1-DISPLAY.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY form1 UPON form1-handle
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       form1-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:form1, FORM:form1, SetDefault>
      * <TOTEM:END>
           PERFORM form1-FLD-TO-BUF
           .


       form1-ALLGRID-RESET.
           .

      * for Form's Validation
       form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterBufToFld>
      * <TOTEM:END>
           .

       form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form1, FORM:form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form1, FORM:form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form1-SHOW-MSG-ROUTINE
           .

       form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form1-DISPLAY-MESSAGE
           .

       form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form1-Save-Status.
           .             

       form1-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen form1
      ***---
       form1-BEFORE-SCREEN.

      * Generazione settaggio keyboard "." ---> ","
           evaluate control-id
           |78-ID-ef-valore è l'ID del campo ef-valore
           when 78-ID-ef-valore
                if  KeyboardReleased
                   set KeyboardSaved to true
      *            sostituisco il punto come virgola
                   set environment "KEYSTROKE" to "DATA=44 46"
                end-if
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Paragrafo per la struttura del codice in AFTER sulla screen form1
      ***---
       form1-AFTER-SCREEN.

      * Generazione risettaggio keyboard "." ---> "."
           evaluate control-id
           |78-ID-ef-valore è l'ID del campo ef-valore
           when 78-ID-ef-valore
                if  KeyboardSaved
                   set KeyboardReleased to true
      *            setto la tastiera originale (PUNTO come PUNTO, VIROGLA come VIRGOLA)
                   set environment "KEYSTROKE" to "DATA=44   44"
                   set environment "KEYSTROKE" to "DATA=46   46"
                end-if

           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione stringa perform CONTROLLO

       Screen1-Open-Routine.
           PERFORM Screen1-Scrn
           PERFORM Screen1-Proc
           .

       Screen1-Scrn.
           PERFORM Screen1-Create-Win
           PERFORM Screen1-Init-Value
           PERFORM Screen1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen1-DISPLAY
           .

       Screen1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 37,83,
              SIZE 76,50,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE "                                                   
      -    "                         .:: VERIFICA DATI ::.",
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS Screen1-Handle,
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterCreateWin>


           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen1 UPON Screen1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-titolo, DISPLAY-COLUMNS (1, 17, 23, 49)
              MODIFY gd-mov, DISPLAY-COLUMNS (1, 11, 27, 43, 59)
              MODIFY gd-giac, DISPLAY-COLUMNS (1, 59)
           .

       Screen1-PROC.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeAccept>
           perform CARICA-ARTICOLO.
           modify screen1-handle, visible true

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen1
                 ON EXCEPTION
                    PERFORM Screen1-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen1-Handle
           INITIALIZE Key-Status
           .

       Screen1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen1-Exit
                 END-IF
              WHEN Key-Status = 67
                 PERFORM pb-indietro-LinkTo
              WHEN Key-Status = 68
                 PERFORM pb-avanti-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen1-CLEAR.
           PERFORM Screen1-INIT-VALUE
           PERFORM Screen1-DISPLAY
           .

       Screen1-DISPLAY.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen1 UPON Screen1-Handle
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Screen1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen1-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-titolo-Content
      * GRID
           PERFORM gd-mov-Content
      * GRID
           PERFORM gd-giac-Content
           .

       Screen1-Init-Value.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, SetDefault>
      * <TOTEM:END>
           PERFORM Screen1-FLD-TO-BUF
           .


       Screen1-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen1, FORM:Screen1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Screen1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen1-SHOW-MSG-ROUTINE
           .

       Screen1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen1-DISPLAY-MESSAGE
           .

       Screen1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen1-Save-Status.
           .             

       Screen1-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen Screen1
      ***---
       Screen1-BEFORE-SCREEN.

      * Generazione settaggio keyboard "." ---> ","
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Paragrafo per la struttura del codice in AFTER sulla screen Screen1
      ***---
       Screen1-AFTER-SCREEN.

      * Generazione risettaggio keyboard "." ---> "."
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione stringa perform CONTROLLO

       scr-calc-Open-Routine.
           PERFORM scr-calc-Scrn
           PERFORM scr-calc-Proc
           .

       scr-calc-Scrn.
           PERFORM scr-calc-Create-Win
           PERFORM scr-calc-Init-Value
           PERFORM scr-calc-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM scr-calc-DISPLAY
           .

       scr-calc-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 38,33,
              SIZE 63,80,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE "                                                   
      -    "          .:: VERIFICA DATI ::.",
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS scr-calc-handle,
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY scr-calc UPON scr-calc-handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-calc-1, DISPLAY-COLUMNS (1, 13, 23, 46)
              MODIFY gd-calc-2, DISPLAY-COLUMNS (1, 16, 27, 38, 49)
              MODIFY gd-calc-gdo, DISPLAY-COLUMNS (1, 16, 27, 38, 49)
              MODIFY gd-calc-trad, DISPLAY-COLUMNS (1, 16, 27, 38, 49)
           .

       scr-calc-PROC.
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, BeforeAccept>
           perform CARICA-PROGMAG-SONS.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT scr-calc
                 ON EXCEPTION
                    PERFORM scr-calc-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY scr-calc-handle
           INITIALIZE Key-Status
           .

       scr-calc-Evaluate-Func.
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM scr-calc-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM scr-calc-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM pb-progressivi-LinkTo
              WHEN Key-Status = 1000
                 PERFORM pb-movper-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       scr-calc-CLEAR.
           PERFORM scr-calc-INIT-VALUE
           PERFORM scr-calc-DISPLAY
           .

       scr-calc-DISPLAY.
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY scr-calc UPON scr-calc-handle
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       scr-calc-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       scr-calc-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-calc-1-Content
      * GRID
           PERFORM gd-calc-2-Content
      * GRID
           PERFORM gd-calc-gdo-Content
      * GRID
           PERFORM gd-calc-trad-Content
           .

       scr-calc-Init-Value.
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, SetDefault>
      * <TOTEM:END>
           PERFORM scr-calc-FLD-TO-BUF
           .


       scr-calc-ALLGRID-RESET.
           .

      * for Form's Validation
       scr-calc-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       scr-calc-Buf-To-Fld.
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, AfterBufToFld>
      * <TOTEM:END>
           .

       scr-calc-Fld-To-Buf.
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:scr-calc, FORM:scr-calc, AfterFldToBuf>
      * <TOTEM:END>
           .

       scr-calc-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform scr-calc-BUF-TO-FLD.
           move 0 to scelta.
           .
       scr-calc-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM scr-calc-SHOW-MSG-ROUTINE
           .

       scr-calc-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM scr-calc-DISPLAY-MESSAGE
           .

       scr-calc-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       scr-calc-Save-Status.
           .             

       scr-calc-Restore-Status.
           .


      * Paragrafo per la struttura del codice in BEFORE sulla screen scr-calc
      ***---
       scr-calc-BEFORE-SCREEN.

      * Generazione settaggio keyboard "." ---> ","
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Paragrafo per la struttura del codice in AFTER sulla screen scr-calc
      ***---
       scr-calc-AFTER-SCREEN.

      * Generazione risettaggio keyboard "." ---> "."
           evaluate control-id
           |99999 è un valore fittizio, che non sarà MAI usato,
           |ma mi serve per non riscontrare errori di compilazione
           |in caso non avessi generato nulla nella BEFORE della screen
           when 99999 continue
           when other continue
           end-evaluate.

      * Generazione stringa perform CONTROLLO



       form1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5002 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM ef-art-BeforeProcedure
           When 5002 PERFORM ef-valore-BeforeProcedure
           END-EVALUATE
           perform form1-BEFORE-SCREEN
           .

       scr-stampa-Event-Proc.
           .

       Screen1-Event-Proc.
           .

       gd-titolo-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 4 ALSO
                    Screen1-Handle 
              PERFORM gd-titolo-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

       gd-mov-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 5 ALSO
                    Screen1-Handle 
              PERFORM gd-mov-Ev-Msg-Begin-Entry
           WHEN Msg-Begin-Drag ALSO 5 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 5 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 5 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 5 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 5 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 5 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       Screen2-Event-Proc.
           .

       Screen2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 6 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-2-Ev-Msg-Begin-Entry
           WHEN Msg-Begin-Entry ALSO 7 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-gdo-Ev-Msg-Begin-Entry
           WHEN Msg-Begin-Entry ALSO 3 ALSO
                    scr-calc-handle 
              PERFORM gd-calc-trad-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CARICA-PROGMAG-SONS.
      * <TOTEM:PARA. CARICA-PROGMAG-SONS>
           initialize mar-rec.
           set trovato to false.
           modify gd-calc-1, reset-grid = 1.
           modify gd-calc-2, reset-grid = 1.
           modify gd-calc-gdo, reset-grid = 1.
           perform GD-CALC-1-CONTENT.
           perform GD-CALC-2-CONTENT.
           perform GD-CALC-GDO-CONTENT.
           perform GD-CALC-TRAD-CONTENT.

           move low-value  to prg-chiave.
           move art-codice to prg-cod-articolo.
           start progmag key is >= prg-chiave
                 invalid continue
             not invalid
                 move art-marca-prodotto to mar-codice
                 move spaces             to tge-codice

                 accept imp-data from century-date
                 start timposte key <= imp-chiave
                       invalid continue
                   not invalid
                       read timposte previous
                 end-start

                 read tmarche  no lock invalid continue end-read
                 read timposte no lock invalid continue end-read
                 move 2 to riga
                 perform until 1 = 2
                    read progmag next at end exit perform end-read
                    if prg-cod-articolo not = art-codice
                       exit perform
                    end-if
                    if prg-cod-magazzino not = spaces and
                       prg-tipo-imballo  not = spaces and
                       prg-peso          not = 0
                       set trovato to true
                       perform DESCRIZIONE-IMBALLO
                       move prg-cod-magazzino to col-mag
                       move prg-peso          to col-peso
                       move prg-giacenza      to col-giacenza
                       modify gd-calc-1, insert-rows = 1
                       modify gd-calc-1(riga, 1), cell-data = col-mag
                       modify gd-calc-1(riga, 2), cell-data = col-peso
                       modify gd-calc-1(riga, 3), cell-data = 
           col-imballo
                       modify gd-calc-1(riga, 4), cell-data = 
           col-giacenza
                       add 1 to riga
                    else
                       perform CALCOLA-COSTO-MP
                       perform CALCOLA-COSTO-MP-WHEN-ZERO
                    end-if
                 end-perform
           end-start.

           if trovato
              set  TrattamentoGDO   to true
              move art-peso-utf     to prg-peso-utf
              move art-peso-non-utf to prg-peso-non-utf
              perform CALCOLA-IMPOSTE
              perform RIGA-LISTINO
              perform RIGA-COSTO-MP
LUBEXX*        if tipo-valore = 1 |SCONTO
LUBEXX*           perform GRID-SCONTO
LUBEXX*        else               |VALORE
                 perform GRID-NETTO
LUBEXX*        end-if
LUBEXX*        modify gd-calc-gdo(2, 1), cell-data = col1
              modify gd-calc-gdo(2, 2), cell-data = col2
              modify gd-calc-gdo(2, 3), cell-data = col3
              modify gd-calc-gdo(2, 4), cell-data = col4
              modify gd-calc-gdo(2, 5), cell-data = col5
              
LUBEXX        |Qui il calcolo delle imposte è diverso dalla
LUBEXX        |logica standard: viene si calcolato con il
LUBEXX        |controllo sulle marche in quanto calcolo di
LUBEXX        |tipo tradizionale, ma le imposte vengono cmq
LUBEXX        |scorporate (così comeda indicazione specifica)
LUBEXX        set  TrattamentoGDO   to false
LUBEXX        move art-peso-utf     to prg-peso-utf
LUBEXX        move art-peso-non-utf to prg-peso-non-utf
LUBEXX        perform CALCOLA-IMPOSTE
LUBEXX        perform RIGA-LISTINO
LUBEXX        perform RIGA-COSTO-MP
LUBEXX*        if tipo-valore = 1 |SCONTO
LUBEXX*           perform GRID-SCONTO
LUBEXX*        else               |VALORE
LUBEXX           perform GRID-NETTO
LUBEXX*        end-if
LUBEXX*        modify gd-calc-gdo(2, 1), cell-data = col1
LUBEXX        modify gd-calc-trad(2, 2), cell-data = col2
LUBEXX        modify gd-calc-trad(2, 3), cell-data = col3
LUBEXX        modify gd-calc-trad(2, 4), cell-data = col4
LUBEXX        modify gd-calc-trad(2, 5), cell-data = col5

              modify scr-calc-handle, visible true
           else
              move 27 to key-status
           end-if.

      ***---
       RIGA-LISTINO.
           move art-prezzo-vendita to col1.
           move imposta-consumo    to col2.
           compute totale = imposta-cobat + imposta-cou.
           move totale             to col3.
           compute totale = art-prezzo-vendita + totale.
           move totale             to col4.
           modify gd-calc-2(2, 2), cell-data = col1.
           modify gd-calc-2(2, 3), cell-data = col2.
           modify gd-calc-2(2, 4), cell-data = col3.
           modify gd-calc-2(2, 5), cell-data = col4.

      ***---
       RIGA-COSTO-MP.
           move costo-mp        to col4.
           move imposta-consumo to col2.
           compute totale = imposta-cou + imposta-cobat.
           move totale  to col3.
           compute totale = costo-mp - imposta-consumo - imposta-cou.
           move totale       to col1.
           modify gd-calc-2(3, 2), cell-data = col1.
           modify gd-calc-2(3, 3), cell-data = col2.
           modify gd-calc-2(3, 4), cell-data = col3.
           modify gd-calc-2(3, 5), cell-data = col4.

      ***---
       GRID-SCONTO.
           if art-prezzo-vendita not = 0
              compute totale = 
                      art-prezzo-vendita - 
                   (( art-prezzo-vendita * como-valore ) / 100 )
           else
              move 0 to totale
           end-if.
           move como-valore to col1.
           move totale      to col2.
           move imposta-consumo to col3.
           compute totale = imposta-cou + imposta-cobat.
           move totale  to col4.
           compute como-valore = 
                   art-prezzo-vendita - 
                (( art-prezzo-vendita * como-valore ) / 100 ).
           compute totale = como-valore + totale.
           move totale to col5.

      ***---
       GRID-NETTO.
LUBEXX*     if art-prezzo-vendita not = 0
LUBEXX*        if art-prezzo-vendita >= como-valore
LUBEXX*           compute totale =
LUBEXX*                (( art-prezzo-vendita - como-valore )* 100 ) 
LUBEXX*                                             / art-prezzo-vendita
LUBEXX*        else
LUBEXX*           move 0 to totale
LUBEXX*        end-if
LUBEXX*     else
LUBEXX*        move 0 to totale
LUBEXX*     end-if.
LUBEXX*     move totale          to col1.
           move como-valore     to col5.
           move imposta-consumo to col3.
           compute totale = imposta-cou + imposta-cobat.
           move totale          to col4.
           compute totale = como-valore - totale - imposta-consumo.
           move totale          to col2 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id

           when 78-ID-ef-art                             
                inquire ef-art,   value in art-codice
                move "articoli"         to como-file
                call   "zoom-gt"     using como-file, art-rec
                                    giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0
                   move art-codice      to ef-art-buf
                   move art-descrizione to lab-art-buf
                   display ef-art lab-art
                end-if
                
           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

           evaluate control-id

           when 78-ID-ef-art
                inquire ef-art,   value in art-codice
                read articoli no lock
                     invalid
                     set errori  to true
                     move spaces to lab-art-buf
                     display message "Articolo NON valido"
                               title tit-err
                                icon 2
                 not invalid
                     move art-descrizione    to lab-art-buf
                     move art-marca-prodotto to ef-marca-buf 
                                                mar-codice
                     read tmarche no lock
                          invalid move spaces          to lab-marca-buf
                      not invalid move mar-descrizione to lab-marca-buf
                     end-read
                end-read
                display lab-art

           when 78-ID-ef-valore
                inquire ef-valore, value in como-valore
                if como-valore = 0
                   set errori to true
                   display message "Importo obbligatorio"
                             title tit-err
                              icon 2
                end-if

           end-evaluate.

           if errori
              perform CANCELLA-COLORE
              move 4 to accept-control
           end-if 
           .
      * <TOTEM:END>

       DESCRIZIONE-IMBALLO.
      * <TOTEM:PARA. DESCRIZIONE-IMBALLO>
           move prg-tipo-imballo to imq-codice.
           read timbalqta
               invalid continue
           not invalid
               move imq-tipo to imb-codice
               read timballi no lock invalid continue end-read
           end-read.
           inspect imb-descrizione replacing trailing spaces 
                                                by low-value.
           initialize col-imballo.
           move imq-qta-imb       to imballi-ed.
           call "C$JUSTIFY"    using imballi-ed, "L".
           string imb-descrizione delimited by low-value
                  " da "          delimited by size
                  imballi-ed      delimited by spaces
                  " x "           delimited by size
                  art-udm-imballo delimited by size
                  into col-imballo
           end-string 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "calcola-colore-trasparente.cpy".
           copy "carica-articolo.cpy".
           copy "costo-medio.cpy".
           copy "calcola-costo-mp-when-zero.cpy" 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           if event-data-2 < 2 move 2 to event-data-2 end-if.
           modify gd-calc-1 y = event-data-2, start-y = event-data-2
                            x = 5,            start-x = 1,
                            region-color = 80 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       stmarcon-Ev-Before-Program.
      * <TOTEM:PARA. stmarcon-Ev-Before-Program>
           perform CALCOLA-COLORE-TRASPARENTE.
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       stmarcon-Ev-After-Program.
      * <TOTEM:PARA. stmarcon-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       ef-art-BeforeProcedure.
      * <TOTEM:PARA. ef-art-BeforeProcedure>
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-art-AfterProcedure.
      * <TOTEM:PARA. ef-art-AfterProcedure>
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           perform CONTROLLO.
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       gd-titolo-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-titolo-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-mov-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-mov-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       pb-indietro-LinkTo.
      * <TOTEM:PARA. pb-indietro-LinkTo>
           call "W$MOUSE"     using set-mouse-shape, wait-pointer.
           set trovato     to false.
           move save-descr to art-descrizione.
           start articoli key is < art-k1
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read articoli previous 
                         at end   continue
                                  exit perform
                    end-read
                    if save-marca = art-marca-prodotto
                       move art-descrizione to save-descr
                       modify gd-titolo, mass-update = 1
                       modify gd-mov,    mass-update = 1
                       modify gd-giac,   mass-update = 1
                       perform CARICA-ARTICOLO
                       if sw-righe = 1
                          modify gd-titolo, mass-update = 0
                          modify gd-mov,    mass-update = 0
                          modify gd-giac,   mass-update = 0
                          display screen1
                          set trovato to true
                          exit perform
                       end-if
                    end-if
                 end-perform
           end-start.
           call "W$MOUSE"     using set-mouse-shape, arrow-pointer.

           if not trovato
              display message "Raggiunto inizio file"
                        title titolo
              move save-articolo to art-codice
              read articoli no lock
                   invalid continue
               not invalid perform CARICA-ARTICOLO
              end-read
              modify gd-titolo, mass-update = 0
              modify gd-mov,    mass-update = 0
              modify gd-giac,   mass-update = 0
              display screen1
           end-if 
           .
      * <TOTEM:END>
       pb-avanti-LinkTo.
      * <TOTEM:PARA. pb-avanti-LinkTo>
           call "W$MOUSE"     using set-mouse-shape, wait-pointer.
           set trovato     to false.
           move save-descr to art-descrizione.
           start articoli key is > art-k1
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read articoli next 
                         at end   continue
                                  exit perform
                    end-read
                    if save-marca = art-marca-prodotto
                       move art-descrizione to save-descr
                       modify gd-titolo, mass-update = 1
                       modify gd-mov,    mass-update = 1
                       modify gd-giac,   mass-update = 1
                       perform CARICA-ARTICOLO
                       if sw-righe = 1
                          modify gd-titolo, mass-update = 0
                          modify gd-mov,    mass-update = 0
                          modify gd-giac,   mass-update = 0
                          display screen1
                          set trovato to true
                          exit perform
                       end-if
                    end-if
                 end-perform
           end-start.
           call "W$MOUSE"     using set-mouse-shape, arrow-pointer.

           if not trovato
              display message "Raggiunta fine file"
                        title titolo
              move save-articolo to art-codice
              read articoli no lock
                   invalid continue
               not invalid perform CARICA-ARTICOLO
              end-read
              modify gd-titolo, mass-update = 0
              modify gd-mov,    mass-update = 0
              modify gd-giac,   mass-update = 0
              display screen1
           end-if 
           .
      * <TOTEM:END>
       pb-fatto-BeforeProcedure.
      * <TOTEM:PARA. pb-fatto-BeforeProcedure>
           modify pb-fatto, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-fatto-AfterProcedure.
      * <TOTEM:PARA. pb-fatto-AfterProcedure>
           modify pb-fatto, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-sib-BeforeProcedure.
      * <TOTEM:PARA. pb-sib-BeforeProcedure>
           modify pb-sib, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-sib-AfterProcedure.
      * <TOTEM:PARA. pb-sib-AfterProcedure>
           modify pb-sib, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-sib-LinkTo.
      * <TOTEM:PARA. pb-sib-LinkTo>
           set tutto-ok to true.

           perform varying control-id from 78-ID-ef-art by 1
                     until control-id > 78-ID-ef-valore
              perform CONTROLLO
              if errori exit perform end-if
           end-perform.

           if tutto-ok
              move ef-marca-buf    to save-marca
              move art-codice      to save-articolo
              move art-descrizione to save-descr
              modify form1-handle, visible false

              perform SCR-CALC-OPEN-ROUTINE
                                              
              modify form1-handle, visible true

              modify pb-sib, bitmap-number = 1
              modify pb-noa, bitmap-number = 1

              perform CANCELLA-COLORE

              move 78-ID-ef-art to control-id
              move 4            to accept-control

           else
              modify pb-sib, bitmap-number = 1
           end-if 
           .
      * <TOTEM:END>
       pb-noa-BeforeProcedure.
      * <TOTEM:PARA. pb-noa-BeforeProcedure>
           modify pb-noa, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-noa-AfterProcedure.
      * <TOTEM:PARA. pb-noa-AfterProcedure>
           modify pb-noa, bitmap-number = 1 
           .
      * <TOTEM:END>
       gd-calc-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-calc-1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       ef-valore-BeforeProcedure.
      * <TOTEM:PARA. ef-valore-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-valore-AfterProcedure.
      * <TOTEM:PARA. ef-valore-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO 
           .
      * <TOTEM:END>
       gd-calc-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-calc-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-calc-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-calc-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-calc-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-calc-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-calc-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-calc-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-calc-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-calc-1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       pb-movper-LinkTo.
      * <TOTEM:PARA. pb-movper-LinkTo>
           modify scr-calc-handle, visible false.
           perform SCREEN1-OPEN-ROUTINE.
           modify scr-calc-handle, visible true 
           .
      * <TOTEM:END>
       pb-progressivi-BeforeProcedure.
      * <TOTEM:PARA. pb-progressivi-BeforeProcedure>
           modify pb-progressivi, bitmap-number = 4 
           .
      * <TOTEM:END>
       pb-progressivi-AfterProcedure.
      * <TOTEM:PARA. pb-progressivi-AfterProcedure>
           modify pb-progressivi, bitmap-number = 3 
           .
      * <TOTEM:END>
       pb-movper-BeforeProcedure.
      * <TOTEM:PARA. pb-movper-BeforeProcedure>
           modify pb-movper, bitmap-number = 2 
           .
      * <TOTEM:END>
       pb-movper-AfterProcedure.
      * <TOTEM:PARA. pb-movper-AfterProcedure>
           modify pb-movper, bitmap-number = 1 
           .
      * <TOTEM:END>
       pb-progressivi-LinkTo.
      * <TOTEM:PARA. pb-progressivi-LinkTo>
           modify scr-calc-handle, visible false.
           move art-codice to prg-cod-articolo.
           move spaces     to prg-cod-magazzino.
           move spaces     to prg-tipo-imballo.
           move 0          to prg-peso.
           call   "vprogmag" using prg-chiave.
           cancel "vprogmag".
           modify scr-calc-handle, visible true 
           .
      * <TOTEM:END>
       gd-calc-2-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-calc-2-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-calc-gdo-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-calc-gdo-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-calc-trad-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-calc-trad-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

