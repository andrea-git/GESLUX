      *{TOTEM}PRG-COMMENT
      * invioordforn.Cbl
      * invioordforn.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          invioordforn.
       AUTHOR.              andre.
       DATE-WRITTEN.        giovedì 12 maggio 2022 16:26:53.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:invioordforn, INIT:invioordforn, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "clienti.sl".
           COPY "articoli.sl".
           COPY "tparamge.sl".
           COPY "tordforn.sl".
           COPY "rordforn.sl".
           COPY "tcaumag.sl".
           COPY "timballi.sl".
           COPY "timbalqta.sl".
           COPY "nordforn.sl".
           COPY "rlistini.sl".
           COPY "art-ordforn.sl".
           COPY "destinif.sl".
           COPY "usr-tel.sl".
           COPY "tpiombo.sl".
           COPY "timposte.sl".
           COPY "impforn.sl".
           COPY "tsetinvio.sl".
           COPY "lineseq-mail.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "clienti.fd".
           COPY "articoli.fd".
           COPY "tparamge.fd".
           COPY "tordforn.fd".
           COPY "rordforn.fd".
           COPY "tcaumag.fd".
           COPY "timballi.fd".
           COPY "timbalqta.fd".
           COPY "nordforn.fd".
           COPY "rlistini.fd".
           COPY "art-ordforn.fd".
           COPY "destinif.fd".
           COPY "usr-tel.fd".
           COPY "tpiombo.fd".
           COPY "timposte.fd".
           COPY "impforn.fd".
           COPY "tsetinvio.fd".
           COPY "lineseq-mail.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 Screen1-Handle
                  USAGE IS HANDLE OF WINDOW.
           COPY  "LINK-GESLOCK.DEF".
       77 save-anno        PIC  9(4).
       77 como-numero      PIC  9(6).
       77 mese-rif         PIC  9(6).
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 STATUS-tordini   PIC  X(2).
           88 Valid-STATUS-tordini VALUE IS "00" THRU "09". 
       77 STATUS-rordini   PIC  X(2).
           88 Valid-STATUS-rordini VALUE IS "00" THRU "09". 
       77 anno PIC  9(4).
       77 numero           PIC  9(8).
       77 Screen2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 Form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 data-stampa      PIC  99/99/9999
                  VALUE IS "99/99/9999".
       77 ORA-STAMPA       PIC  X(5)
                  VALUE IS "99:99".
       77 CountChar        PIC  999.
       77 StartChar        PIC  999.
       77 numero-x8        PIC  x(8).
       77 numero-z8        PIC  z(8).
       77 numero-98        PIC  9(8).
       77 path PIC  x(512).
       77 prg-peso         PIC  9(5)V9(3).
       77 prg-peso-utf     PIC  9(5)V9(3).
       77 prg-peso-non-utf PIC  9(5)V9(3).
       77 tot-colli        PIC  9(10).
       77 tot-peso         PIC  9(9)v999.
       77 tot-utf          PIC  9(9)v999.
       77 tot-non-utf      PIC  9(9)v999.
       77 como-prz-finale  PIC  9(9)v9999.
       77 imballi-ed       PIC  z(4).
       77 resto            PIC  9(8).
       77 num-edit         PIC  z(8).
       77 tentativi        PIC  99.
       77 cont2            PIC  9(4).
       77 cont3            PIC  9(4).
       77 como-LinkBody    PIC  x(3000).
       77 FileDest         PIC  x(256).
       77 mail-cc-lubex    PIC  x(400).
       01 rec-grid.
           05 col-art          PIC  z(6).
           05 col-descr-art    PIC  x(50).
           05 col-imballo      PIC  X(30).
           05 col-qta          PIC  z(8).
           05 col-prz          PIC  zzz.zz9,9999.
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 TITOLO           PIC  X(50)
                  VALUE IS "Geslux - Invio Ordini Fornitori".
       77 OK-73X21-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 CANCEL-73X21-BMP PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-tparamge  PIC  X(2).
           88 Valid-STATUS-tparamge VALUE IS "00" THRU "09". 
       77 path-zoom-tordini            PIC  X(256)
                  VALUE IS spaces.
       01 filler           PIC  9.
           88 record-ok VALUE IS 1,    WHEN SET TO FALSE  0. 
       77 STATUS-zoom-tordini          PIC  X(2).
           88 Valid-STATUS-zoom-tordini VALUE IS "00" THRU "09". 
       77 ext-file EXTERNAL   PIC  x(256).
       77 STATUS-tcaumag   PIC  X(2).
           88 Valid-STATUS-tcaumag VALUE IS "00" THRU "09". 
       77 v-ok PIC  9
                  VALUE IS 1.
       77 STATUS-tnomen    PIC  X(2).
           88 Valid-STATUS-tnomen VALUE IS "00" THRU "09". 
       77 STATUS-rordforn  PIC  X(2).
           88 Valid-STATUS-rordforn VALUE IS "00" THRU "09". 
       77 STATUS-tordforn  PIC  X(2).
           88 Valid-STATUS-tordforn VALUE IS "00" THRU "09". 
       77 STATUS-timballi  PIC  X(2).
           88 Valid-STATUS-timballi VALUE IS "00" THRU "09". 
       77 STATUS-timbalqta PIC  X(2).
           88 Valid-STATUS-timbalqta VALUE IS "00" THRU "09". 
       77 STATUS-nordforn  PIC  X(2).
           88 Valid-STATUS-nordforn VALUE IS "00" THRU "09". 
       77 cont PIC  9(3).
       77 tipo-invio       PIC  S9(1)
                  VALUE IS 3.
           88 t-mail VALUE IS 1. 
           88 t-fax VALUE IS 2. 
           88 t-manuale VALUE IS 3. 
       77 mail PIC  X(100).
       77 fax  PIC  X(50).
       77 e-fax            PIC  9
                  VALUE IS 1.
       77 e-mail           PIC  9
                  VALUE IS 1.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 129.
       77 tof-rif-forn     PIC  X(20)
                  VALUE IS "tor-num-ord-cli".
       77 como-prz-totale  PIC  9(8)v99.
       77 STATUS-rlistini  PIC  X(2).
           88 Valid-STATUS-rlistini VALUE IS "00" THRU "09". 
       77 STATUS-art-ordforn           PIC  X(2).
           88 Valid-STATUS-art-ordforn VALUE IS "00" THRU "09". 
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 STATUS-destinif  PIC  X(2).
           88 Valid-STATUS-destinif VALUE IS "00" THRU "09". 
       77 mail-cc          PIC  X(900).
       77 status-usr-tel   PIC  X(2).
           88 Valid-status-usr-tel VALUE IS "00" THRU "09". 
       77 Verdana7-Occidentale
                  USAGE IS HANDLE OF FONT.
       01 rec-note.
           05 col-note         PIC  x(200).
           05 col-nulla        PIC  x.
       77 form3-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 note-mail        PIC  X(500).
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 STATUS-impforn   PIC  X(2).
           88 Valid-STATUS-impforn VALUE IS "00" THRU "09". 
       77 STATUS-tsetmerc  PIC  X(2).
           88 Valid-STATUS-tsetmerc VALUE IS "00" THRU "09". 
       77 STATUS-tsetinvio PIC  X(2).
           88 Valid-STATUS-tsetinvio VALUE IS "00" THRU "09". 
       77 path-lineseq-mail            PIC  X(256).
       77 STATUS-lineseq-mail          PIC  X(2).
           88 Valid-STATUS-lineseq-mail VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-Screen2-FLAG-REFRESH PIC  9.
          88 Screen2-FLAG-REFRESH  VALUE 1 FALSE 0. 
      * DATA CONTROL BUFFER
       01 Screen2-BUF.
      * Data.Label
              05 Screen2-DaLa-11-BUF PIC zzzz9.
      * Data.Label
              05 Screen2-DaLa-14-BUF PIC z(8).
      * Data.Label
              05 Screen2-DaLa-1-BUF PIC X(40).
      * Data.Label
              05 Screen2-DaLa-2-BUF PIC X(40).
      * Data.Label
              05 Screen2-DaLa-3-BUF PIC X(5).
      * Data.Label
              05 Screen2-DaLa-4-BUF PIC X(35).
      * Data.Label
              05 Screen2-DaLa-5-BUF PIC X(2).
      * Data.Label
              05 Screen2-DaLa-14a-BUF PIC zz.zzz.zz9,99.
      * Data.Label
              05 lbl-data-rif-BUF PIC 99/99/9999.
      * Data.Label
              05 Screen2-DaLa-1a-BUF PIC X(40).
      * Data.Label
              05 Screen2-DaLa-2a-BUF PIC X(40).
      * Data.Label
              05 Screen2-DaLa-3a-BUF PIC X(5).
      * Data.Label
              05 Screen2-DaLa-4a-BUF PIC X(35).
      * Data.Label
              05 Screen2-DaLa-5a-BUF PIC X(2).

       77 TMP-Screen2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Screen2-tordforn-RESTOREBUF  PIC X(556).
       77 TMP-Screen2-KEYIS  PIC 9(3) VALUE 1.
       77 Screen2-MULKEY-TMPBUF   PIC X(556).
       77 STATUS-form3-FLAG-REFRESH PIC  9.
          88 form3-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-tparamge-BUF     PIC X(815).
       77 TMP-DataSet1-tordforn-BUF     PIC X(556).
       77 TMP-DataSet1-rordforn-BUF     PIC X(544).
       77 TMP-DataSet1-tcaumag-BUF     PIC X(254).
       77 TMP-DataSet1-timballi-BUF     PIC X(210).
       77 TMP-DataSet1-timbalqta-BUF     PIC X(167).
       77 TMP-DataSet1-nordforn-BUF     PIC X(381).
       77 TMP-DataSet1-rlistini-BUF     PIC X(448).
       77 TMP-DataSet1-art-ordforn-BUF     PIC X(302).
       77 TMP-DataSet1-destinif-BUF     PIC X(1322).
       77 TMP-DataSet1-usr-tel-BUF     PIC X(1362).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(739).
       77 TMP-DataSet1-timposte-BUF     PIC X(717).
       77 TMP-DataSet1-impforn-BUF     PIC X(220).
       77 TMP-DataSet1-tsetinvio-BUF     PIC X(1023).
       77 TMP-DataSet1-lineseq-mail-BUF     PIC X(1000).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-tparamge-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tparamge-LOCK  VALUE "Y".
       77 DataSet1-tparamge-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tparamge-KEY-Asc  VALUE "A".
          88 DataSet1-tparamge-KEY-Desc VALUE "D".
       77 DataSet1-tordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tordforn-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tordforn-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tordforn-KEY1-Asc  VALUE "A".
          88 DataSet1-tordforn-KEY1-Desc VALUE "D".
       77 DataSet1-rordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rordforn-LOCK  VALUE "Y".
       77 DataSet1-rordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rordforn-KEY-Asc  VALUE "A".
          88 DataSet1-rordforn-KEY-Desc VALUE "D".
       77 DataSet1-tcaumag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tcaumag-LOCK  VALUE "Y".
       77 DataSet1-tcaumag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tcaumag-KEY-Asc  VALUE "A".
          88 DataSet1-tcaumag-KEY-Desc VALUE "D".
       77 DataSet1-timballi-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timballi-LOCK  VALUE "Y".
       77 DataSet1-timballi-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timballi-KEY-Asc  VALUE "A".
          88 DataSet1-timballi-KEY-Desc VALUE "D".
       77 DataSet1-timbalqta-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timbalqta-LOCK  VALUE "Y".
       77 DataSet1-timbalqta-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timbalqta-KEY-Asc  VALUE "A".
          88 DataSet1-timbalqta-KEY-Desc VALUE "D".
       77 DataSet1-nordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-nordforn-LOCK  VALUE "Y".
       77 DataSet1-nordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-nordforn-KEY-Asc  VALUE "A".
          88 DataSet1-nordforn-KEY-Desc VALUE "D".
       77 DataSet1-rlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rlistini-LOCK  VALUE "Y".
       77 DataSet1-rlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rlistini-KEY-Asc  VALUE "A".
          88 DataSet1-rlistini-KEY-Desc VALUE "D".
       77 DataSet1-art-ordforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-art-ordforn-LOCK  VALUE "Y".
       77 DataSet1-art-ordforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-art-ordforn-KEY-Asc  VALUE "A".
          88 DataSet1-art-ordforn-KEY-Desc VALUE "D".
       77 DataSet1-destinif-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destinif-LOCK  VALUE "Y".
       77 DataSet1-destinif-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destinif-KEY-Asc  VALUE "A".
          88 DataSet1-destinif-KEY-Desc VALUE "D".
       77 DataSet1-usr-tel-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-usr-tel-LOCK  VALUE "Y".
       77 DataSet1-usr-tel-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-usr-tel-KEY-Asc  VALUE "A".
          88 DataSet1-usr-tel-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-impforn-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-impforn-LOCK  VALUE "Y".
       77 DataSet1-impforn-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-impforn-KEY-Asc  VALUE "A".
          88 DataSet1-impforn-KEY-Desc VALUE "D".
       77 DataSet1-tsetinvio-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tsetinvio-LOCK  VALUE "Y".
       77 DataSet1-tsetinvio-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tsetinvio-KEY-Asc  VALUE "A".
          88 DataSet1-tsetinvio-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-mail-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-mail-LOCK  VALUE "Y".
       77 DataSet1-lineseq-mail-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-mail-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-mail-KEY-Desc VALUE "D".

       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 tordforn-tof-k-causale-SPLITBUF  PIC X(17).
       77 tordforn-tof-k-stato-SPLITBUF  PIC X(14).
       77 tordforn-k-fornitore-SPLITBUF  PIC X(24).
       77 tordforn-tof-k-data-SPLITBUF  PIC X(21).
       77 tordforn-tof-k-consegna-SPLITBUF  PIC X(21).
       77 rordforn-rof-k-articolo-SPLITBUF  PIC X(24).
       77 rordforn-rof-k-art-mag-SPLITBUF  PIC X(27).
       77 tcaumag-k-mag-SPLITBUF  PIC X(5).
       77 rlistini-rlis-k-art-SPLITBUF  PIC X(33).
       77 rlistini-rlis-k-descr-SPLITBUF  PIC X(66).
       77 destinif-K1-SPLITBUF  PIC X(51).
       77 destinif-desf-k2-SPLITBUF  PIC X(51).

           copy "link-st-ordforn.def".
           copy "link-wprogmag.def".
           copy "mail.def".
           copy "wait-3-secs.def".
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-rb-mail VALUE 5001.
       78  78-ID-ef-mail VALUE 5002.
       78  78-ID-rb-fax VALUE 5003.
       78  78-ID-ef-fax VALUE 5004.
       78  78-ID-rb-manuale VALUE 5005.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           .

      * ENTRY FIELD
       05
           ef-anno, 
           Entry-Field, 
           COL 18,00, 
           LINE 2,00,
           LINES 1,33 ,
           SIZE 5,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 1001,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE anno,
           AFTER PROCEDURE ef-anno-AfterProcedure, 
           BEFORE PROCEDURE ef-anno-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-num, 
           Entry-Field, 
           COL 15,00, 
           LINE 4,00,
           LINES 1,33 ,
           SIZE 8,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 1002,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE numero,
           AFTER PROCEDURE ef-num-AfterProcedure, 
           BEFORE PROCEDURE ef-num-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-Custom1-1, 
           Label, 
           COL 14,10, 
           LINE 1,72,
           LINES 1,39 ,
           SIZE 1,60 ,
           FONT IS Default-Font,
           ID IS 5,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 2,00, 
           LINE 2,00,
           LINES 1,31 ,
           SIZE 6,00 ,
           ID IS 1003,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Anno",
           .

      * LABEL
       05
           Screen1-La-2, 
           Label, 
           COL 2,00, 
           LINE 4,00,
           LINES 1,31 ,
           SIZE 12,00 ,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Num. d'ordine",
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 5,50,
           LINES 2,78 ,
           SIZE 23,00 ,
           LOWERED,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           PB-ESEGUI, 
           Push-Button, 
           COL 8,00, 
           LINE 6,17,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1001,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           AFTER PROCEDURE PB-ESEGUI-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUI-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-cancel, 
           Push-Button, 
           COL 15,90, 
           LINE 6,17,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2-BeforeProcedure, 
           .

      * LABEL
       05
           Screen1-blockpgm-1, 
           Label, 
           COL 17,10, 
           LINE 1,28,
           LINES 0,44 ,
           SIZE 4,00 ,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE toolbar-bmp,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 11,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 12,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           Screen2, 
           .

      * PUSH BUTTON
       05
           PB-ESEGUIa, 
           Push-Button, 
           COL 89,88, 
           LINE 42,63,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 500,
           SELF-ACT,
           TERMINATION-VALUE 13,
           TITLE "E&segue il programma selezionato",
           VISIBLE v-ok,
           AFTER PROCEDURE PB-ESEGUIa-AfterProcedure, 
           BEFORE PROCEDURE PB-ESEGUIa-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           Form1-Pb-2a, 
           Push-Button, 
           COL 99,75, 
           LINE 42,63,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           FRAMED,
           SQUARE,
           ENABLED 1,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 501,
           NO-AUTO-DEFAULT,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esce dall'applicativo",
           AFTER PROCEDURE Form1-Pb-2a-AfterProcedure, 
           BEFORE PROCEDURE Form1-Pb-2a-BeforeProcedure, 
           .

      * RADIO BUTTON
       05
           rb-mail, 
           Radio-Button, 
           COL 3,00, 
           LINE 33,69,
           LINES 1,31 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1001
           FLAT,
           GROUP 1,
           GROUP-VALUE 1,
           ID IS 78-ID-rb-mail,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Mail",
           VALUE tipo-invio,
           VISIBLE 1,
           AFTER PROCEDURE Screen2-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Rb-1-BeforeProcedure, 
           .
      * ENTRY FIELD
       05
           ef-mail, 
           Entry-Field, 
           COL 15,00, 
           LINE 33,69,
           LINES 1,31 ,
           SIZE 40,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-mail,
           ID IS 78-ID-ef-mail,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE mail,
           VISIBLE 1,
           AFTER PROCEDURE Screen2-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Ef-1-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-mail-cc, 
           Entry-Field, 
           COL 60,00, 
           LINE 33,69,
           LINES 1,31 ,
           SIZE 48,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-mail,
           ID IS 131,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 200,
           VALUE mail-cc,
           VISIBLE 1,
           AFTER PROCEDURE Screen2-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Ef-1-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-note-mail, 
           Entry-Field, 
           COL 15,00, 
           LINE 35,38,
           LINES 4,00 ,
           SIZE 93,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-mail,
           ID IS 132,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           MAX-TEXT 500,
           VSCROLL-BAR,
           USE-RETURN,
           VALUE note-mail,
           VISIBLE 1,
           AFTER PROCEDURE Screen2-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Ef-1-BeforeProcedure, 
           .

      * RADIO BUTTON
       05
           rb-fax, 
           Radio-Button, 
           COL 3,00, 
           LINE 39,69,
           LINES 1,31 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1002
           FLAT,
           GROUP 1,
           GROUP-VALUE 2,
           ID IS 78-ID-rb-fax,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Fax",
           VALUE tipo-invio,
           VISIBLE 1,
           AFTER PROCEDURE Screen2-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Rb-1-BeforeProcedure, 
           .
      * ENTRY FIELD
       05
           ef-fax, 
           Entry-Field, 
           COL 15,00, 
           LINE 39,69,
           LINES 1,31 ,
           SIZE 40,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-fax,
           ID IS 78-ID-ef-fax,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE fax,
           VISIBLE 1,
           AFTER PROCEDURE Screen2-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Ef-1-BeforeProcedure, 
           .

      * RADIO BUTTON
       05
           rb-manuale, 
           Radio-Button, 
           COL 3,00, 
           LINE 41,19,
           LINES 1,31 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1003
           FLAT,
           GROUP 1,
           GROUP-VALUE 3,
           ID IS 78-ID-rb-manuale,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Manuale",
           VALUE tipo-invio,
           AFTER PROCEDURE Screen2-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE Screen2-Rb-1-BeforeProcedure, 
           .
      * GRID
       05
           Screen2-Gd-1, 
           Grid, 
           COL 4,25, 
           LINE 11,00,
           LINES 11,25 ,
           SIZE 103,00 ,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 7, 57, 87, 95),
           ALIGNMENT ("R", "L", "U", "R", "R"),
           SEPARATION (5, 5, 5, 5, 5),
           DATA-TYPES ("9(6)", "x(50)", "X", "9(8)", "9(8)v99"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 33,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 100,
           VPADDING 20,
           VSCROLL,
           EVENT PROCEDURE Screen2-Gd-1-Event-Proc,
           .

      * DB_LABEL
       05
           Screen2-DaLa-11, 
           Label, 
           COL 19,00, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 8,00 ,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-11-BUF,
           LEFT,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-14, 
           Label, 
           COL 93,63, 
           LINE 7,50,
           LINES 1,31 ,
           SIZE 12,00 ,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-14-BUF,
           LEFT,
           TRANSPARENT,
           .

      * BAR
       05
           Screen2-Br-1, 
           Bar,
           COL 1,00, 
           LINE 22,50,
           SIZE 109,00 ,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 1,
           .

      * BAR
       05
           Screen2-Br-1a, 
           Bar,
           COL 1,00, 
           LINE 10,50,
           SIZE 109,00 ,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 1,
           .

      * LABEL
       05
           Screen2-La-3, 
           Label, 
           COL 5,75, 
           LINE 7,50,
           LINES 1,31 ,
           SIZE 10,00 ,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE data-stampa,
           .

      * LABEL
       05
           Screen2-La-4, 
           Label, 
           COL 15,75, 
           LINE 7,50,
           LINES 1,31 ,
           SIZE 2,00 ,
           ID IS 30,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "-",
           .

      * LABEL
       05
           Screen2-La-5, 
           Label, 
           COL 17,75, 
           LINE 7,50,
           LINES 1,31 ,
           SIZE 5,00 ,
           ID IS 31,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE ORA-STAMPA,
           .

      * FRAME
       05
           Screen2-Fr-1, 
           Frame, 
           COL 3,00, 
           LINE 1,44,
           LINES 5,50 ,
           SIZE 50,00 ,
           COLOR IS 2,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Fornitore",
           .

      * DB_LABEL
       05
           Screen2-DaLa-1, 
           Label, 
           COL 5,50, 
           LINE 2,44,
           LINES 1,31 ,
           SIZE 46,00 ,
           COLOR IS 2,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-1-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-2, 
           Label, 
           COL 5,50, 
           LINE 3,94,
           LINES 1,31 ,
           SIZE 46,00 ,
           COLOR IS 2,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-2-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-3, 
           Label, 
           COL 5,63, 
           LINE 5,44,
           LINES 1,31 ,
           SIZE 6,00 ,
           COLOR IS 2,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-3-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-4, 
           Label, 
           COL 12,63, 
           LINE 5,44,
           LINES 1,31 ,
           SIZE 35,00 ,
           COLOR IS 2,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-4-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-5, 
           Label, 
           COL 48,50, 
           LINE 5,44,
           LINES 1,31 ,
           SIZE 3,00 ,
           COLOR IS 2,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-5-BUF,
           TRANSPARENT,
           .

      * LABEL
       05
           Screen2-La-7, 
           Label, 
           COL 79,67, 
           LINE 7,50,
           LINES 1,31 ,
           SIZE 13,00 ,
           ID IS 36,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Ordine num.:",
           .

      * LABEL
       05
           Screen2-La-8, 
           Label, 
           COL 5,63, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 13,00 ,
           ID IS 37,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Cod. Fornitore:",
           .

      * BAR
       05
           Screen2-Br-1b, 
           Bar,
           COL 1,00, 
           LINE 42,56,
           SIZE 109,00 ,
           ID IS 502,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (8, 8),
           SHADING (-1, 1),
           WIDTH 2,
           .

      * BAR
       05
           Screen2-Br-1c, 
           Bar,
           COL 19,00, 
           LINE 32,63,
           SIZE 91,00 ,
           ID IS 503,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           COLORS (1),
           SHADING (-1),
           WIDTH 1,
           .

      * LABEL
       05
           Form1-La-5aaaca, 
           Label, 
           COL 2,00, 
           LINE 31,94,
           LINES 1,31 ,
           SIZE 17,00 ,
           COLOR IS 80,
           ID IS 128,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TITLE "Modalità invio",
           .

      * LABEL
       05
           Screen2-La-8a, 
           Label, 
           COL 7,00, 
           LINE 33,69,
           LINES 1,31 ,
           SIZE 8,00 ,
           ID IS 136,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "E-Mail",
           VISIBLE 1,
           .

      * LABEL
       05
           Screen2-La-8aa, 
           Label, 
           COL 7,00, 
           LINE 39,69,
           LINES 1,31 ,
           SIZE 8,00 ,
           ID IS 137,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Fax",
           VISIBLE 1,
           .

      * LABEL
       05
           Screen2-La-8ab, 
           Label, 
           COL 7,00, 
           LINE 41,19,
           LINES 1,31 ,
           SIZE 12,33 ,
           ID IS 138,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Manuale",
           .

      * DB_LABEL
       05
           Screen2-DaLa-14a, 
           Label, 
           COL 93,63, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 12,00 ,
           ID IS 139,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-14a-BUF,
           LEFT,
           TRANSPARENT,
           .

      * LABEL
       05
           Screen2-La-7a, 
           Label, 
           COL 79,67, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 13,00 ,
           ID IS 140,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Importo Ordine",
           .

      * DB_LABEL
       05
           lbl-data-rif, 
           Label, 
           COL 57,00, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 10,00 ,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE lbl-data-rif-BUF,
           LEFT,
           TRANSPARENT,
           .

      * LABEL
       05
           Screen2-La-2a, 
           Label, 
           COL 44,00, 
           LINE 9,00,
           LINES 1,31 ,
           SIZE 13,00 ,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Data Consegna",
           .

      * FRAME
       05
           Screen2-Fr-1a, 
           Frame, 
           COL 56,00, 
           LINE 1,44,
           LINES 5,50 ,
           SIZE 50,00 ,
           COLOR IS 2,
           ID IS 20,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Destino",
           .

      * DB_LABEL
       05
           Screen2-DaLa-1a, 
           Label, 
           COL 58,00, 
           LINE 2,44,
           LINES 1,31 ,
           SIZE 46,00 ,
           COLOR IS 2,
           ID IS 21,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-1a-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-2a, 
           Label, 
           COL 58,00, 
           LINE 3,94,
           LINES 1,31 ,
           SIZE 46,00 ,
           COLOR IS 2,
           ID IS 24,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-2a-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-3a, 
           Label, 
           COL 58,00, 
           LINE 5,44,
           LINES 1,31 ,
           SIZE 6,00 ,
           COLOR IS 2,
           ID IS 26,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-3a-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-4a, 
           Label, 
           COL 65,00, 
           LINE 5,44,
           LINES 1,31 ,
           SIZE 35,00 ,
           COLOR IS 2,
           ID IS 27,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-4a-BUF,
           TRANSPARENT,
           .

      * DB_LABEL
       05
           Screen2-DaLa-5a, 
           Label, 
           COL 101,00, 
           LINE 5,44,
           LINES 1,31 ,
           SIZE 3,00 ,
           COLOR IS 2,
           ID IS 28,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE Screen2-DaLa-5a-BUF,
           TRANSPARENT,
           .

      * LABEL
       05
           Screen2-La-8ac, 
           Label, 
           COL 56,00, 
           LINE 33,69,
           LINES 1,31 ,
           SIZE 3,00 ,
           ID IS 32,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "CC",
           VISIBLE 1,
           .

      * GRID
       05
           gd-note, 
           Grid, 
           COL 4,25, 
           LINE 22,88,
           LINES 8,63 ,
           SIZE 103,00 ,
           BOXED,
           DATA-COLUMNS (1, 201),
           ALIGNMENT ("L", "C"),
           SEPARATION (5, 5),
           DATA-TYPES ("x(200)", "x"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-COLOR 144
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           FONT IS Verdana7-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HSCROLL,
           ID IS 511,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TILED-HEADINGS,
           VISIBLE 1,
           VPADDING 40,
           VSCROLL,
           EVENT PROCEDURE gd-note-Event,
           .

      * LABEL
       05
           Screen2-La-8ad, 
           Label, 
           COL 7,00, 
           LINE 35,38,
           LINES 1,31 ,
           SIZE 8,00 ,
           ID IS 512,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Note",
           VISIBLE 1,
           .

      * FORM
       01 
           form3, 
           .

      * LABEL
       05
           form3-La-1, 
           Label, 
           COL 1,57, 
           LINE 2,00,
           LINES 2,00 ,
           SIZE 51,86 ,
           FONT IS Verdana12BI-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Invio Mail in corso...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:invioordforn, INIT:invioordforn, BeforeDeclarative>
       copy "mail-decl.cpy".

       TORDFORN-ERR SECTION.
           use after error procedure on TORDFORN.
           evaluate status-TORDFORN
           when "35"
                display message "File [TORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.
 
      ***---
       RORDFORN-ERR SECTION.
           use after error procedure on RORDFORN.
           set tutto-ok  to true.
           evaluate status-RORDFORN
           when "35"
                display message "File [RORDFORN] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [RORDFORN] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[RORDFORN] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       CLIENTI-ERR SECTION.
           use after error procedure on clienti.
           set tutto-ok  to true.
           evaluate status-clienti
           when "35"
                display message "File [CLIENTI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [CLIENTI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[CLIENTI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       ARTICOLI-ERR SECTION.
           use after error procedure on articoli.
           set tutto-ok  to true.
           evaluate status-articoli
           when "35"
                display message "File [ARTICOLI] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [ARTICOLI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[ARTICOLI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TPARAMGE-ERR SECTION.
           use after error procedure on tparamge.
           set tutto-ok  to true.
           evaluate status-tparamge
           when "35"
                display message "File [TPARAMGE] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TPARAMGE] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TPARAMGE] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 

      ***---
       TCAUMAG-ERR SECTION.
           use after error procedure on tcaumag.
           set tutto-ok  to true.
           evaluate status-tcaumag
           when "35"
                display message "File [TCAUMAG] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TCAUMAG] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TCAUMAG] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM bprepb-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:invioordforn, INIT:invioordforn, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana12-Occidentale
           DESTROY Verdana7-Occidentale
           DESTROY Verdana10-Occidentale
           DESTROY Verdana12BI-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, toolbar-bmp
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
      *    After-Program
           PERFORM accetordforn-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA

      * Verdana7-Occidentale
           INITIALIZE WFONT-DATA Verdana7-Occidentale
           MOVE 7 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana7-Occidentale, WFONT-DATA
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * PB-ESEGUI
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-cancel
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCI
           COPY RESOURCE "toolbar.bmp".
           CALL "w$bitmap" USING WBITMAP-LOAD "toolbar.bmp", 
                   GIVING toolbar-bmp.
      * TOOL-CERCA
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-clienti
           PERFORM OPEN-articoli
      *    tparamge OPEN MODE IS FALSE
      *    PERFORM OPEN-tparamge
           PERFORM OPEN-tordforn
           PERFORM OPEN-rordforn
           PERFORM OPEN-tcaumag
           PERFORM OPEN-timballi
           PERFORM OPEN-timbalqta
           PERFORM OPEN-nordforn
           PERFORM OPEN-rlistini
           PERFORM OPEN-art-ordforn
           PERFORM OPEN-destinif
           PERFORM OPEN-usr-tel
           PERFORM OPEN-tpiombo
           PERFORM OPEN-timposte
           PERFORM OPEN-impforn
      *    tsetinvio OPEN MODE IS FALSE
      *    PERFORM OPEN-tsetinvio
      *    lineseq-mail OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq-mail
      *    After Open
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:invioordforn, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:invioordforn, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tparamge.
      * <TOTEM:EPT. INIT:invioordforn, FD:tparamge, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tparamge
           IF NOT Valid-STATUS-tparamge
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:tparamge, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:tordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tordforn
           IF STATUS-tordforn = "35"
              OPEN OUTPUT tordforn
                IF Valid-STATUS-tordforn
                   CLOSE tordforn
                   OPEN I-O tordforn
                END-IF
           END-IF
           IF NOT Valid-STATUS-tordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:tordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:rordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rordforn
           IF NOT Valid-STATUS-rordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:rordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tcaumag.
      * <TOTEM:EPT. INIT:invioordforn, FD:tcaumag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tcaumag
           IF NOT Valid-STATUS-tcaumag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:tcaumag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timballi.
      * <TOTEM:EPT. INIT:invioordforn, FD:timballi, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timballi
           IF NOT Valid-STATUS-timballi
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:timballi, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timbalqta.
      * <TOTEM:EPT. INIT:invioordforn, FD:timbalqta, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timbalqta
           IF NOT Valid-STATUS-timbalqta
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:timbalqta, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-nordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:nordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT nordforn
           IF NOT Valid-STATUS-nordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:nordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rlistini.
      * <TOTEM:EPT. INIT:invioordforn, FD:rlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rlistini
           IF NOT Valid-STATUS-rlistini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:rlistini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-art-ordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:art-ordforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT art-ordforn
           IF NOT Valid-STATUS-art-ordforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:art-ordforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destinif.
      * <TOTEM:EPT. INIT:invioordforn, FD:destinif, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destinif
           IF NOT Valid-STATUS-destinif
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:destinif, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-usr-tel.
      * <TOTEM:EPT. INIT:invioordforn, FD:usr-tel, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT usr-tel
           IF NOT Valid-status-usr-tel
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:usr-tel, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:invioordforn, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:invioordforn, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-impforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:impforn, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT impforn
           IF NOT Valid-STATUS-impforn
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:impforn, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tsetinvio.
      * <TOTEM:EPT. INIT:invioordforn, FD:tsetinvio, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tsetinvio
           IF NOT Valid-STATUS-tsetinvio
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:tsetinvio, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq-mail.
      * <TOTEM:EPT. INIT:invioordforn, FD:lineseq-mail, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq-mail
           IF NOT Valid-STATUS-lineseq-mail
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:invioordforn, FD:lineseq-mail, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-clienti
           PERFORM CLOSE-articoli
      *    tparamge CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tparamge
           PERFORM CLOSE-tordforn
           PERFORM CLOSE-rordforn
           PERFORM CLOSE-tcaumag
           PERFORM CLOSE-timballi
           PERFORM CLOSE-timbalqta
           PERFORM CLOSE-nordforn
           PERFORM CLOSE-rlistini
           PERFORM CLOSE-art-ordforn
           PERFORM CLOSE-destinif
           PERFORM CLOSE-usr-tel
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-timposte
           PERFORM CLOSE-impforn
           PERFORM CLOSE-tsetinvio
      *    lineseq-mail CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq-mail
      *    After Close
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:invioordforn, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:invioordforn, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-tparamge.
      * <TOTEM:EPT. INIT:invioordforn, FD:tparamge, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-tordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:tordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE tordforn
           .

       CLOSE-rordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:rordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE rordforn
           .

       CLOSE-tcaumag.
      * <TOTEM:EPT. INIT:invioordforn, FD:tcaumag, BeforeClose>
      * <TOTEM:END>
           CLOSE tcaumag
           .

       CLOSE-timballi.
      * <TOTEM:EPT. INIT:invioordforn, FD:timballi, BeforeClose>
      * <TOTEM:END>
           CLOSE timballi
           .

       CLOSE-timbalqta.
      * <TOTEM:EPT. INIT:invioordforn, FD:timbalqta, BeforeClose>
      * <TOTEM:END>
           CLOSE timbalqta
           .

       CLOSE-nordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:nordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE nordforn
           .

       CLOSE-rlistini.
      * <TOTEM:EPT. INIT:invioordforn, FD:rlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE rlistini
           .

       CLOSE-art-ordforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:art-ordforn, BeforeClose>
      * <TOTEM:END>
           CLOSE art-ordforn
           .

       CLOSE-destinif.
      * <TOTEM:EPT. INIT:invioordforn, FD:destinif, BeforeClose>
      * <TOTEM:END>
           CLOSE destinif
           .

       CLOSE-usr-tel.
      * <TOTEM:EPT. INIT:invioordforn, FD:usr-tel, BeforeClose>
      * <TOTEM:END>
           CLOSE usr-tel
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:invioordforn, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:invioordforn, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-impforn.
      * <TOTEM:EPT. INIT:invioordforn, FD:impforn, BeforeClose>
      * <TOTEM:END>
           CLOSE impforn
           .

       CLOSE-tsetinvio.
      * <TOTEM:EPT. INIT:invioordforn, FD:tsetinvio, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq-mail.
      * <TOTEM:EPT. INIT:invioordforn, FD:lineseq-mail, BeforeClose>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tparamge-INITSTART.
           IF DataSet1-tparamge-KEY-Asc
              MOVE Low-Value TO tge-chiave
           ELSE
              MOVE High-Value TO tge-chiave
           END-IF
           .

       DataSet1-tparamge-INITEND.
           IF DataSet1-tparamge-KEY-Asc
              MOVE High-Value TO tge-chiave
           ELSE
              MOVE Low-Value TO tge-chiave
           END-IF
           .

      * tparamge
       DataSet1-tparamge-START.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY >= tge-chiave
           ELSE
              START tparamge KEY <= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-NOTGREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY <= tge-chiave
           ELSE
              START tparamge KEY >= tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-GREATER.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY > tge-chiave
           ELSE
              START tparamge KEY < tge-chiave
           END-IF
           .

       DataSet1-tparamge-START-LESS.
           IF DataSet1-tparamge-KEY-Asc
              START tparamge KEY < tge-chiave
           ELSE
              START tparamge KEY > tge-chiave
           END-IF
           .

       DataSet1-tparamge-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tparamge-LOCK
              READ tparamge WITH LOCK 
              KEY tge-chiave
           ELSE
              READ tparamge WITH NO LOCK 
              KEY tge-chiave
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT 
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tparamge-KEY-Asc
              IF DataSet1-tparamge-LOCK
                 READ tparamge PREVIOUS WITH LOCK
              ELSE
                 READ tparamge PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tparamge-LOCK
                 READ tparamge NEXT WITH LOCK
              ELSE
                 READ tparamge NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tparamge-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tparamge TO TOTEM-ERR-STAT
           MOVE "tparamge" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tparamge, AfterDelete>
      * <TOTEM:END>
           .

       tordforn-tof-k-causale-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-causale-SPLITBUF
           MOVE tof-causale(1:4) TO tordforn-tof-k-causale-SPLITBUF(1:4)
           MOVE tof-chiave(1:12) TO 
           tordforn-tof-k-causale-SPLITBUF(5:12)
           .

       tordforn-tof-k-stato-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-stato-SPLITBUF
           MOVE tof-stato(1:1) TO tordforn-tof-k-stato-SPLITBUF(1:1)
           MOVE tof-chiave(1:12) TO tordforn-tof-k-stato-SPLITBUF(2:12)
           .

       tordforn-k-fornitore-MERGE-SPLITBUF.
           INITIALIZE tordforn-k-fornitore-SPLITBUF
           MOVE tof-cod-forn(1:5) TO tordforn-k-fornitore-SPLITBUF(1:5)
           MOVE tof-destino(1:5) TO tordforn-k-fornitore-SPLITBUF(6:5)
           MOVE tof-stato(1:1) TO tordforn-k-fornitore-SPLITBUF(11:1)
           MOVE tof-chiave(1:12) TO tordforn-k-fornitore-SPLITBUF(12:12)
           .

       tordforn-tof-k-data-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-data-SPLITBUF
           MOVE tof-data-ordine OF tordforn(1:8) TO 
           tordforn-tof-k-data-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-data-SPLITBUF(9:12)
           .

       tordforn-tof-k-consegna-MERGE-SPLITBUF.
           INITIALIZE tordforn-tof-k-consegna-SPLITBUF
           MOVE tof-data-consegna OF tordforn(1:8) TO 
           tordforn-tof-k-consegna-SPLITBUF(1:8)
           MOVE tof-chiave OF tordforn(1:12) TO 
           tordforn-tof-k-consegna-SPLITBUF(9:12)
           .

       DataSet1-tordforn-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE Low-Value TO tof-chiave
              ELSE
                 MOVE High-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 MOVE High-Value TO tof-chiave
              ELSE
                 MOVE Low-Value TO tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           .

      * tordforn
       DataSet1-tordforn-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY >= tof-chiave
              ELSE
                 START tordforn KEY <= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY <= tof-chiave
              ELSE
                 START tordforn KEY >= tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY > tof-chiave
              ELSE
                 START tordforn KEY < tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 START tordforn KEY < tof-chiave
              ELSE
                 START tordforn KEY > tof-chiave
              END-IF
           END-EVALUATE
           .

       DataSet1-tordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-LOCK
                 READ tordforn WITH LOCK 
                 KEY tof-chiave
              ELSE
                 READ tordforn WITH NO LOCK 
                 KEY tof-chiave
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT 
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tordforn-KEY1-Asc
                 IF DataSet1-tordforn-LOCK
                    READ tordforn PREVIOUS WITH LOCK
                 ELSE
                    READ tordforn PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tordforn-LOCK
                    READ tordforn NEXT WITH LOCK
                 ELSE
                    READ tordforn NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tordforn-tof-k-causale-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-stato-MERGE-SPLITBUF
           PERFORM tordforn-k-fornitore-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-data-MERGE-SPLITBUF
           PERFORM tordforn-tof-k-consegna-MERGE-SPLITBUF
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeWrite>
      * <TOTEM:END>
           WRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tof-rec OF tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, BeforeDelete>
      * <TOTEM:END>
           DELETE tordforn.
           MOVE STATUS-tordforn TO TOTEM-ERR-STAT
           MOVE "tordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tordforn, AfterDelete>
      * <TOTEM:END>
           .

       rordforn-rof-k-articolo-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-articolo-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-articolo-SPLITBUF(1:6)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-articolo-SPLITBUF(7:17)
           .

       rordforn-rof-k-art-mag-MERGE-SPLITBUF.
           INITIALIZE rordforn-rof-k-art-mag-SPLITBUF
           MOVE rof-cod-articolo OF rordforn(1:6) TO 
           rordforn-rof-k-art-mag-SPLITBUF(1:6)
           MOVE rof-cod-magazzino OF rordforn(1:3) TO 
           rordforn-rof-k-art-mag-SPLITBUF(7:3)
           MOVE rof-chiave OF rordforn(1:17) TO 
           rordforn-rof-k-art-mag-SPLITBUF(10:17)
           .

       DataSet1-rordforn-INITSTART.
           IF DataSet1-rordforn-KEY-Asc
              MOVE Low-Value TO rof-chiave OF rordforn
           ELSE
              MOVE High-Value TO rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-INITEND.
           IF DataSet1-rordforn-KEY-Asc
              MOVE High-Value TO rof-chiave OF rordforn
           ELSE
              MOVE Low-Value TO rof-chiave OF rordforn
           END-IF
           .

      * rordforn
       DataSet1-rordforn-START.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY >= rof-chiave OF rordforn
           ELSE
              START rordforn KEY <= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-NOTGREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY <= rof-chiave OF rordforn
           ELSE
              START rordforn KEY >= rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-GREATER.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY > rof-chiave OF rordforn
           ELSE
              START rordforn KEY < rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-START-LESS.
           IF DataSet1-rordforn-KEY-Asc
              START rordforn KEY < rof-chiave OF rordforn
           ELSE
              START rordforn KEY > rof-chiave OF rordforn
           END-IF
           .

       DataSet1-rordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rordforn-LOCK
              READ rordforn WITH LOCK 
              KEY rof-chiave OF rordforn
           ELSE
              READ rordforn WITH NO LOCK 
              KEY rof-chiave OF rordforn
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT 
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rordforn-KEY-Asc
              IF DataSet1-rordforn-LOCK
                 READ rordforn PREVIOUS WITH LOCK
              ELSE
                 READ rordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rordforn-LOCK
                 READ rordforn NEXT WITH LOCK
              ELSE
                 READ rordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rordforn-rof-k-articolo-MERGE-SPLITBUF
           PERFORM rordforn-rof-k-art-mag-MERGE-SPLITBUF
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rordforn TO TOTEM-ERR-STAT
           MOVE "rordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rordforn, AfterDelete>
      * <TOTEM:END>
           .

       tcaumag-k-mag-MERGE-SPLITBUF.
           INITIALIZE tcaumag-k-mag-SPLITBUF
           MOVE tca-cod-magaz(1:3) TO tcaumag-k-mag-SPLITBUF(1:3)
           MOVE tca-ord-forn(1:1) TO tcaumag-k-mag-SPLITBUF(4:1)
           .

       DataSet1-tcaumag-INITSTART.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE Low-Value TO tca-chiave
           ELSE
              MOVE High-Value TO tca-chiave
           END-IF
           .

       DataSet1-tcaumag-INITEND.
           IF DataSet1-tcaumag-KEY-Asc
              MOVE High-Value TO tca-chiave
           ELSE
              MOVE Low-Value TO tca-chiave
           END-IF
           .

      * tcaumag
       DataSet1-tcaumag-START.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY >= tca-chiave
           ELSE
              START tcaumag KEY <= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-NOTGREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY <= tca-chiave
           ELSE
              START tcaumag KEY >= tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-GREATER.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY > tca-chiave
           ELSE
              START tcaumag KEY < tca-chiave
           END-IF
           .

       DataSet1-tcaumag-START-LESS.
           IF DataSet1-tcaumag-KEY-Asc
              START tcaumag KEY < tca-chiave
           ELSE
              START tcaumag KEY > tca-chiave
           END-IF
           .

       DataSet1-tcaumag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tcaumag-LOCK
              READ tcaumag WITH LOCK 
              KEY tca-chiave
           ELSE
              READ tcaumag WITH NO LOCK 
              KEY tca-chiave
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT 
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tcaumag-KEY-Asc
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag PREVIOUS WITH LOCK
              ELSE
                 READ tcaumag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tcaumag-LOCK
                 READ tcaumag NEXT WITH LOCK
              ELSE
                 READ tcaumag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tcaumag-k-mag-MERGE-SPLITBUF
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tcaumag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tcaumag TO TOTEM-ERR-STAT
           MOVE "tcaumag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tcaumag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timballi-INITSTART.
           IF DataSet1-timballi-KEY-Asc
              MOVE Low-Value TO imb-chiave
           ELSE
              MOVE High-Value TO imb-chiave
           END-IF
           .

       DataSet1-timballi-INITEND.
           IF DataSet1-timballi-KEY-Asc
              MOVE High-Value TO imb-chiave
           ELSE
              MOVE Low-Value TO imb-chiave
           END-IF
           .

      * timballi
       DataSet1-timballi-START.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY >= imb-chiave
           ELSE
              START timballi KEY <= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-NOTGREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY <= imb-chiave
           ELSE
              START timballi KEY >= imb-chiave
           END-IF
           .

       DataSet1-timballi-START-GREATER.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY > imb-chiave
           ELSE
              START timballi KEY < imb-chiave
           END-IF
           .

       DataSet1-timballi-START-LESS.
           IF DataSet1-timballi-KEY-Asc
              START timballi KEY < imb-chiave
           ELSE
              START timballi KEY > imb-chiave
           END-IF
           .

       DataSet1-timballi-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timballi-LOCK
              READ timballi WITH LOCK 
              KEY imb-chiave
           ELSE
              READ timballi WITH NO LOCK 
              KEY imb-chiave
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT 
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timballi-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timballi-KEY-Asc
              IF DataSet1-timballi-LOCK
                 READ timballi PREVIOUS WITH LOCK
              ELSE
                 READ timballi PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timballi-LOCK
                 READ timballi NEXT WITH LOCK
              ELSE
                 READ timballi NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timballi-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timballi TO TOTEM-ERR-STAT
           MOVE "timballi" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timballi, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-INITSTART.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE Low-Value TO imq-chiave
           ELSE
              MOVE High-Value TO imq-chiave
           END-IF
           .

       DataSet1-timbalqta-INITEND.
           IF DataSet1-timbalqta-KEY-Asc
              MOVE High-Value TO imq-chiave
           ELSE
              MOVE Low-Value TO imq-chiave
           END-IF
           .

      * timbalqta
       DataSet1-timbalqta-START.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY >= imq-chiave
           ELSE
              START timbalqta KEY <= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-NOTGREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY <= imq-chiave
           ELSE
              START timbalqta KEY >= imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-GREATER.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY > imq-chiave
           ELSE
              START timbalqta KEY < imq-chiave
           END-IF
           .

       DataSet1-timbalqta-START-LESS.
           IF DataSet1-timbalqta-KEY-Asc
              START timbalqta KEY < imq-chiave
           ELSE
              START timbalqta KEY > imq-chiave
           END-IF
           .

       DataSet1-timbalqta-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timbalqta-LOCK
              READ timbalqta WITH LOCK 
              KEY imq-chiave
           ELSE
              READ timbalqta WITH NO LOCK 
              KEY imq-chiave
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT 
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timbalqta-KEY-Asc
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta PREVIOUS WITH LOCK
              ELSE
                 READ timbalqta PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timbalqta-LOCK
                 READ timbalqta NEXT WITH LOCK
              ELSE
                 READ timbalqta NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timbalqta-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timbalqta TO TOTEM-ERR-STAT
           MOVE "timbalqta" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timbalqta, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-nordforn-INITSTART.
           IF DataSet1-nordforn-KEY-Asc
              MOVE Low-Value TO nof-chiave OF nordforn
           ELSE
              MOVE High-Value TO nof-chiave OF nordforn
           END-IF
           .

       DataSet1-nordforn-INITEND.
           IF DataSet1-nordforn-KEY-Asc
              MOVE High-Value TO nof-chiave OF nordforn
           ELSE
              MOVE Low-Value TO nof-chiave OF nordforn
           END-IF
           .

      * nordforn
       DataSet1-nordforn-START.
           IF DataSet1-nordforn-KEY-Asc
              START nordforn KEY >= nof-chiave OF nordforn
           ELSE
              START nordforn KEY <= nof-chiave OF nordforn
           END-IF
           .

       DataSet1-nordforn-START-NOTGREATER.
           IF DataSet1-nordforn-KEY-Asc
              START nordforn KEY <= nof-chiave OF nordforn
           ELSE
              START nordforn KEY >= nof-chiave OF nordforn
           END-IF
           .

       DataSet1-nordforn-START-GREATER.
           IF DataSet1-nordforn-KEY-Asc
              START nordforn KEY > nof-chiave OF nordforn
           ELSE
              START nordforn KEY < nof-chiave OF nordforn
           END-IF
           .

       DataSet1-nordforn-START-LESS.
           IF DataSet1-nordforn-KEY-Asc
              START nordforn KEY < nof-chiave OF nordforn
           ELSE
              START nordforn KEY > nof-chiave OF nordforn
           END-IF
           .

       DataSet1-nordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-nordforn-LOCK
              READ nordforn WITH LOCK 
              KEY nof-chiave OF nordforn
           ELSE
              READ nordforn WITH NO LOCK 
              KEY nof-chiave OF nordforn
           END-IF
           MOVE STATUS-nordforn TO TOTEM-ERR-STAT 
           MOVE "nordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-nordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-nordforn-KEY-Asc
              IF DataSet1-nordforn-LOCK
                 READ nordforn NEXT WITH LOCK
              ELSE
                 READ nordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-nordforn-LOCK
                 READ nordforn PREVIOUS WITH LOCK
              ELSE
                 READ nordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-nordforn TO TOTEM-ERR-STAT
           MOVE "nordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-nordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-nordforn-KEY-Asc
              IF DataSet1-nordforn-LOCK
                 READ nordforn PREVIOUS WITH LOCK
              ELSE
                 READ nordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-nordforn-LOCK
                 READ nordforn NEXT WITH LOCK
              ELSE
                 READ nordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-nordforn TO TOTEM-ERR-STAT
           MOVE "nordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-nordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-nordforn TO TOTEM-ERR-STAT
           MOVE "nordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-nordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-nordforn TO TOTEM-ERR-STAT
           MOVE "nordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-nordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-nordforn TO TOTEM-ERR-STAT
           MOVE "nordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nordforn, AfterDelete>
      * <TOTEM:END>
           .

       rlistini-rlis-k-art-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-art-SPLITBUF
           MOVE rlis-articolo OF rlistini(1:6) TO 
           rlistini-rlis-k-art-SPLITBUF(1:6)
           MOVE rlis-chiave-ricerca OF rlistini(1:26) TO 
           rlistini-rlis-k-art-SPLITBUF(7:26)
           .

       rlistini-rlis-k-descr-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-descr-SPLITBUF
           MOVE rlis-codice OF rlistini(1:15) TO 
           rlistini-rlis-k-descr-SPLITBUF(1:15)
           MOVE rlis-des-libera OF rlistini(1:50) TO 
           rlistini-rlis-k-descr-SPLITBUF(16:50)
           .

       DataSet1-rlistini-INITSTART.
           IF DataSet1-rlistini-KEY-Asc
              MOVE Low-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE High-Value TO rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-INITEND.
           IF DataSet1-rlistini-KEY-Asc
              MOVE High-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE Low-Value TO rlis-chiave OF rlistini
           END-IF
           .

      * rlistini
       DataSet1-rlistini-START.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY >= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY <= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-NOTGREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY <= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY >= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-GREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY > rlis-chiave OF rlistini
           ELSE
              START rlistini KEY < rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-LESS.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY < rlis-chiave OF rlistini
           ELSE
              START rlistini KEY > rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rlistini-LOCK
              READ rlistini WITH LOCK 
              KEY rlis-chiave OF rlistini
           ELSE
              READ rlistini WITH NO LOCK 
              KEY rlis-chiave OF rlistini
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT 
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-INITSTART.
           IF DataSet1-art-ordforn-KEY-Asc
              MOVE Low-Value TO aor-chiave
           ELSE
              MOVE High-Value TO aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-INITEND.
           IF DataSet1-art-ordforn-KEY-Asc
              MOVE High-Value TO aor-chiave
           ELSE
              MOVE Low-Value TO aor-chiave
           END-IF
           .

      * art-ordforn
       DataSet1-art-ordforn-START.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY >= aor-chiave
           ELSE
              START art-ordforn KEY <= aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-START-NOTGREATER.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY <= aor-chiave
           ELSE
              START art-ordforn KEY >= aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-START-GREATER.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY > aor-chiave
           ELSE
              START art-ordforn KEY < aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-START-LESS.
           IF DataSet1-art-ordforn-KEY-Asc
              START art-ordforn KEY < aor-chiave
           ELSE
              START art-ordforn KEY > aor-chiave
           END-IF
           .

       DataSet1-art-ordforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-art-ordforn-LOCK
              READ art-ordforn WITH LOCK 
              KEY aor-chiave
           ELSE
              READ art-ordforn WITH NO LOCK 
              KEY aor-chiave
           END-IF
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT 
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-art-ordforn-KEY-Asc
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn NEXT WITH LOCK
              ELSE
                 READ art-ordforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn PREVIOUS WITH LOCK
              ELSE
                 READ art-ordforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-art-ordforn-KEY-Asc
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn PREVIOUS WITH LOCK
              ELSE
                 READ art-ordforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-art-ordforn-LOCK
                 READ art-ordforn NEXT WITH LOCK
              ELSE
                 READ art-ordforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-art-ordforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-art-ordforn TO TOTEM-ERR-STAT
           MOVE "art-ordforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:art-ordforn, AfterDelete>
      * <TOTEM:END>
           .

       destinif-K1-MERGE-SPLITBUF.
           INITIALIZE destinif-K1-SPLITBUF
           MOVE desf-ragsoc-1(1:40) TO destinif-K1-SPLITBUF(1:40)
           MOVE desf-codice(1:5) TO destinif-K1-SPLITBUF(41:5)
           MOVE desf-prog(1:5) TO destinif-K1-SPLITBUF(46:5)
           .

       destinif-desf-k2-MERGE-SPLITBUF.
           INITIALIZE destinif-desf-k2-SPLITBUF
           MOVE desf-codice(1:5) TO destinif-desf-k2-SPLITBUF(1:5)
           MOVE desf-ragsoc-1(1:40) TO destinif-desf-k2-SPLITBUF(6:40)
           MOVE desf-prog(1:5) TO destinif-desf-k2-SPLITBUF(46:5)
           .

       DataSet1-destinif-INITSTART.
           IF DataSet1-destinif-KEY-Asc
              MOVE Low-Value TO desf-chiave
           ELSE
              MOVE High-Value TO desf-chiave
           END-IF
           .

       DataSet1-destinif-INITEND.
           IF DataSet1-destinif-KEY-Asc
              MOVE High-Value TO desf-chiave
           ELSE
              MOVE Low-Value TO desf-chiave
           END-IF
           .

      * destinif
       DataSet1-destinif-START.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY >= desf-chiave
           ELSE
              START destinif KEY <= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-NOTGREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY <= desf-chiave
           ELSE
              START destinif KEY >= desf-chiave
           END-IF
           .

       DataSet1-destinif-START-GREATER.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY > desf-chiave
           ELSE
              START destinif KEY < desf-chiave
           END-IF
           .

       DataSet1-destinif-START-LESS.
           IF DataSet1-destinif-KEY-Asc
              START destinif KEY < desf-chiave
           ELSE
              START destinif KEY > desf-chiave
           END-IF
           .

       DataSet1-destinif-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destinif-LOCK
              READ destinif WITH LOCK 
              KEY desf-chiave
           ELSE
              READ destinif WITH NO LOCK 
              KEY desf-chiave
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT 
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destinif-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destinif-KEY-Asc
              IF DataSet1-destinif-LOCK
                 READ destinif PREVIOUS WITH LOCK
              ELSE
                 READ destinif PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destinif-LOCK
                 READ destinif NEXT WITH LOCK
              ELSE
                 READ destinif NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destinif-K1-MERGE-SPLITBUF
           PERFORM destinif-desf-k2-MERGE-SPLITBUF
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destinif-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destinif TO TOTEM-ERR-STAT
           MOVE "destinif" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destinif, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-INITSTART.
           IF DataSet1-usr-tel-KEY-Asc
              MOVE Low-Value TO usr-chiave
           ELSE
              MOVE High-Value TO usr-chiave
           END-IF
           .

       DataSet1-usr-tel-INITEND.
           IF DataSet1-usr-tel-KEY-Asc
              MOVE High-Value TO usr-chiave
           ELSE
              MOVE Low-Value TO usr-chiave
           END-IF
           .

      * usr-tel
       DataSet1-usr-tel-START.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY >= usr-chiave
           ELSE
              START usr-tel KEY <= usr-chiave
           END-IF
           .

       DataSet1-usr-tel-START-NOTGREATER.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY <= usr-chiave
           ELSE
              START usr-tel KEY >= usr-chiave
           END-IF
           .

       DataSet1-usr-tel-START-GREATER.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY > usr-chiave
           ELSE
              START usr-tel KEY < usr-chiave
           END-IF
           .

       DataSet1-usr-tel-START-LESS.
           IF DataSet1-usr-tel-KEY-Asc
              START usr-tel KEY < usr-chiave
           ELSE
              START usr-tel KEY > usr-chiave
           END-IF
           .

       DataSet1-usr-tel-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-usr-tel-LOCK
              READ usr-tel WITH LOCK 
              KEY usr-chiave
           ELSE
              READ usr-tel WITH NO LOCK 
              KEY usr-chiave
           END-IF
           MOVE status-usr-tel TO TOTEM-ERR-STAT 
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-usr-tel-KEY-Asc
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel NEXT WITH LOCK
              ELSE
                 READ usr-tel NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel PREVIOUS WITH LOCK
              ELSE
                 READ usr-tel PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-usr-tel-KEY-Asc
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel PREVIOUS WITH LOCK
              ELSE
                 READ usr-tel PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-usr-tel-LOCK
                 READ usr-tel NEXT WITH LOCK
              ELSE
                 READ usr-tel NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeWrite>
      * <TOTEM:END>
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeRewrite>
      * <TOTEM:END>
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-usr-tel-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, BeforeDelete>
      * <TOTEM:END>
           MOVE status-usr-tel TO TOTEM-ERR-STAT
           MOVE "usr-tel" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:usr-tel, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-impforn-INITSTART.
           IF DataSet1-impforn-KEY-Asc
              MOVE Low-Value TO imf-chiave OF impforn
           ELSE
              MOVE High-Value TO imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-INITEND.
           IF DataSet1-impforn-KEY-Asc
              MOVE High-Value TO imf-chiave OF impforn
           ELSE
              MOVE Low-Value TO imf-chiave OF impforn
           END-IF
           .

      * impforn
       DataSet1-impforn-START.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY >= imf-chiave OF impforn
           ELSE
              START impforn KEY <= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-NOTGREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY <= imf-chiave OF impforn
           ELSE
              START impforn KEY >= imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-GREATER.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY > imf-chiave OF impforn
           ELSE
              START impforn KEY < imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-START-LESS.
           IF DataSet1-impforn-KEY-Asc
              START impforn KEY < imf-chiave OF impforn
           ELSE
              START impforn KEY > imf-chiave OF impforn
           END-IF
           .

       DataSet1-impforn-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-impforn-LOCK
              READ impforn WITH LOCK 
              KEY imf-chiave OF impforn
           ELSE
              READ impforn WITH NO LOCK 
              KEY imf-chiave OF impforn
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT 
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-impforn-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-impforn-KEY-Asc
              IF DataSet1-impforn-LOCK
                 READ impforn PREVIOUS WITH LOCK
              ELSE
                 READ impforn PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-impforn-LOCK
                 READ impforn NEXT WITH LOCK
              ELSE
                 READ impforn NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-impforn-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-impforn TO TOTEM-ERR-STAT
           MOVE "impforn" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:impforn, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-INITSTART.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE Low-Value TO tsi-chiave
           ELSE
              MOVE High-Value TO tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-INITEND.
           IF DataSet1-tsetinvio-KEY-Asc
              MOVE High-Value TO tsi-chiave
           ELSE
              MOVE Low-Value TO tsi-chiave
           END-IF
           .

      * tsetinvio
       DataSet1-tsetinvio-START.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY >= tsi-chiave
           ELSE
              START tsetinvio KEY <= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-NOTGREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY <= tsi-chiave
           ELSE
              START tsetinvio KEY >= tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-GREATER.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY > tsi-chiave
           ELSE
              START tsetinvio KEY < tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-START-LESS.
           IF DataSet1-tsetinvio-KEY-Asc
              START tsetinvio KEY < tsi-chiave
           ELSE
              START tsetinvio KEY > tsi-chiave
           END-IF
           .

       DataSet1-tsetinvio-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-LOCK
              READ tsetinvio WITH LOCK 
              KEY tsi-chiave
           ELSE
              READ tsetinvio WITH NO LOCK 
              KEY tsi-chiave
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT 
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tsetinvio-KEY-Asc
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio PREVIOUS WITH LOCK
              ELSE
                 READ tsetinvio PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tsetinvio-LOCK
                 READ tsetinvio NEXT WITH LOCK
              ELSE
                 READ tsetinvio NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tsetinvio-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tsetinvio TO TOTEM-ERR-STAT
           MOVE "tsetinvio" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tsetinvio, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-INITSTART.
           .

       DataSet1-lineseq-mail-INITEND.
           .

       DataSet1-lineseq-mail-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga-mail OF lineseq-mail.
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-mail-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq-mail TO TOTEM-ERR-STAT
           MOVE "lineseq-mail" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq-mail, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE cli-rec OF clienti
           INITIALIZE art-rec OF articoli
           INITIALIZE tge-rec OF tparamge
           INITIALIZE tof-rec OF tordforn
           INITIALIZE rof-rec OF rordforn
           INITIALIZE tca-rec OF tcaumag
           INITIALIZE imb-rec OF timballi
           INITIALIZE imq-rec OF timbalqta
           INITIALIZE nof-rec OF nordforn
           INITIALIZE rlis-rec OF rlistini
           INITIALIZE aor-rec OF art-ordforn
           INITIALIZE desf-rec OF destinif
           INITIALIZE usr-rec OF usr-tel
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE imp-rec OF timposte
           INITIALIZE imf-rec OF impforn
           INITIALIZE tsi-rec OF tsetinvio
           INITIALIZE line-riga-mail OF lineseq-mail
           .


      * GRID
       Screen2-Gd-1-Content.
      * CELLS' SETTING
              MODIFY Screen2-Gd-1, X = 1, Y = 1,
                CELL-DATA = "Articolo",
      * CELLS' SETTING
              MODIFY Screen2-Gd-1, X = 3, Y = 1,
                CELL-DATA = "Imballo",
      * CELLS' SETTING
              MODIFY Screen2-Gd-1, X = 4, Y = 1,
                CELL-DATA = "Q.tà",
      * CELLS' SETTING
              MODIFY Screen2-Gd-1, X = 5, Y = 1,
                CELL-DATA = "Prezzo",
           .

      * GRID
       gd-note-Content.
      * CELLS' SETTING
              MODIFY gd-note, X = 1, Y = 1,
                CELL-DATA = "Note",
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tparamge-INITREC.
           INITIALIZE tge-rec OF tparamge
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tordforn-INITREC.
           INITIALIZE tof-rec OF tordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rordforn-INITREC.
           INITIALIZE rof-rec OF rordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tcaumag-INITREC.
           INITIALIZE tca-rec OF tcaumag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timballi-INITREC.
           INITIALIZE imb-rec OF timballi
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timbalqta-INITREC.
           INITIALIZE imq-rec OF timbalqta
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-nordforn-INITREC.
           INITIALIZE nof-rec OF nordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rlistini-INITREC.
           INITIALIZE rlis-rec OF rlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-art-ordforn-INITREC.
           INITIALIZE aor-rec OF art-ordforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destinif-INITREC.
           INITIALIZE desf-rec OF destinif
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-usr-tel-INITREC.
           INITIALIZE usr-rec OF usr-tel
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-impforn-INITREC.
           INITIALIZE imf-rec OF impforn
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tsetinvio-INITREC.
           INITIALIZE tsi-rec OF tsetinvio
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-mail-INITREC.
           INITIALIZE line-riga-mail OF lineseq-mail
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 2 ALSO 0
                  PERFORM Screen2-Buf-To-Fld
           END-EVALUATE
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 7,28,
              SIZE 23,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE "Invio Ordine Fornitore",
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS Form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Form1 UPON Form1-Handle
      * DISPLAY-COLUMNS settings
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           accept como-data from century-date.
           move tge-anno    to anno save-anno.
           display ef-anno.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1001
                 PERFORM PB-ESEGUI-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Form1 UPON Form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>

           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       Form1-Init-Value.
           MOVE "Invio Ordine Fornitore" TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .

       Screen2-Open-Routine.
           PERFORM Screen2-Scrn
           PERFORM Screen2-Proc
           .

       Screen2-Scrn.
           PERFORM Screen2-Create-Win
           PERFORM Screen2-Init-Value
           PERFORM Screen2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Screen2-DISPLAY
           .

       Screen2-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 44,00,
              SIZE 109,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen2-Event-Proc,
              HANDLE IS Screen2-Handle,
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Screen2 UPON Screen2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY Screen2-Gd-1, DISPLAY-COLUMNS (1, 9, 49, 79, 87)
              MODIFY gd-note, DISPLAY-COLUMNS (1, 251)
           .

       Screen2-PROC.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAccept>
           move 1 to v-ok.
           initialize tof-rec
                      cli-rec replacing numeric data by zeroes
                                   alphanumeric data by spaces.

           perform RIEMPI-CHIAVE.
           perform READ-RECORD-LOCK.
           if errori
              read tordforn no lock
                 invalid
                    continue
              end-read
              move zero   to v-ok           
           end-if           
         
           move tof-cod-forn to cli-codice
                                desf-codice.
           set  cli-tipo-F   to true.
           read clienti 
              invalid 
                 continue 
           end-read.

           move tof-destino  to desf-prog.
           read destinif
              invalid 
                 continue 
           end-read.

           accept como-data from century-date.
           perform DATE-TO-SCREEN.
           move como-data to data-stampa.

           accept como-ora from time.
           string como-ora(1:2) delimited by size
                  ":"           delimited by size
                  como-ora(3:2) delimited by size
                  into ora-stampa
           end-string.
                                       
           initialize tca-rec.
           move tof-causale to tca-codice.
           read tcaumag no lock 
              invalid 
                 continue 
           end-read.

           move tof-chiave   to nof-chiave-ordine
           move low-value    to nof-num-nota
           start nordforn key not < nof-chiave
              invalid
                 continue
              not invalid
                 perform until 1 = 2|varying cont from 1 by 1 
                    read nordforn next
                       at end
                          exit perform
                    end-read
                    if tof-chiave not = nof-chiave-ordine
                       exit perform
                    end-if
                    move nof-nota  to col-note
                    modify gd-note, RECORD-TO-ADD rec-note
                 end-perform
           end-start.

           move 1            to riga
           move zero         to como-prz-totale
           move low-value    to rof-riga.
           move tof-anno     to rof-anno.
           move tof-numero   to rof-numero.
           start rordforn key not < rof-chiave 
              invalid 
                 continue 
              not invalid
                 perform until 1 = 2
                    read rordforn next 
                       at end 
                          exit perform 
                    end-read
                    if tof-anno   not = rof-anno or 
                       tof-numero not = rof-numero
                       exit perform
                    end-if
                    perform METTI-IN-GRIGLIA
                 end-perform
           end-start.
           
           if tof-da-confermare-si
              perform CARICA-ART-DA-CONF
           end-if

           move zero   to e-mail
                          e-fax
           if tof-email not = space
              set t-mail        to true
              move 1            to e-mail
           else
              if tof-fax not = space
                 set t-fax      to true
                 move 1         to e-fax
              else
                 set t-manuale  to true
              end-if
           end-if

           move tof-email to mail
           move tof-fax   to fax

           move desf-mail-ref-ord-cc  to mail-cc
           accept mail-cc-lubex from environment "ORDFORN_ADDRESSES_CC"
           if mail-cc-lubex not = space
              if mail-cc = space
                 move mail-cc-lubex   to mail-cc
              else
                 inspect mail-cc replacing trailing space by low-value
                 move zero   to cont
                 inspect mail-cc   
                          tallying cont for characters before low-value
                 if mail-cc(cont:1) not = ";"
                    string mail-cc delimited by low-value
                        ";"     delimited by size
                        into mail-cc
                 end-if
                 string mail-cc       delimited by low-value
                        mail-cc-lubex delimited by size
                       into mail-cc
                 inspect mail-cc replacing trailing low-value by space
              end-if
           end-if

           perform SCREEN2-IUD-DISPLAY.

           modify Screen2-Handle, visible true.
           modify pb-eseguia,     visible v-ok.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Screen2
                 ON EXCEPTION
                    PERFORM Screen2-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY Screen2-Handle
           INITIALIZE Key-Status
           .

       Screen2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Screen2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Screen2-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM PB-ESEGUIa-LinkTo
              WHEN Key-Status = 1001
                 PERFORM rb-mail-LinkTo
              WHEN Key-Status = 1002
                 PERFORM rb-fax-LinkTo
              WHEN Key-Status = 1003
                 PERFORM rb-manuale-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Screen2-CLEAR.
           PERFORM Screen2-INIT-VALUE
           PERFORM Screen2-DISPLAY
           .

       Screen2-DISPLAY.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Screen2 UPON Screen2-Handle
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen1-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       Screen2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeExit>
           unlock tordforn all records.

           .
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Screen2-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM Screen2-Gd-1-Content
      * GRID
           PERFORM gd-note-Content
           .

       Screen2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tordforn-KEY1-ORDER
           END-EVALUATE
           PERFORM Screen2-DataSet1-Update-Key
           .

       Screen2-DataSet1-Update-Key.
           MOVE tof-rec OF tordforn TO
                     Screen2-MULKEY-TMPBUF
           PERFORM Screen2-CLEAR
           PERFORM Screen2-INIT-DATA
           MOVE Screen2-MULKEY-TMPBUF TO
                     tof-rec OF tordforn
           PERFORM DataSet1-tordforn-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
           .

       Screen2-DUPLICATE-MOVEKEY.
           .

       Screen2-First.
           PERFORM Screen2-DUMMY-FIRST
           PERFORM DataSet1-tordforn-INITSTART
           PERFORM DataSet1-tordforn-START
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Next
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFirst>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Previous.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tordforn-START-LESS
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Prev
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-PREVIOUS
           PERFORM Screen2-IUD-Display
           .

       Screen2-Next.
              PERFORM Screen2-Buf-To-Fld
              PERFORM DataSet1-tordforn-START-GREATER
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Next
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterNext>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-NEXT
           PERFORM Screen2-IUD-Display
           .
      
       Screen2-Last.
           PERFORM Screen2-DUMMY-LAST
           PERFORM DataSet1-tordforn-INITEND
           PERFORM DataSet1-tordforn-START-NOTGREATER
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-tordforn-Read-Prev
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterLast>
      * <TOTEM:END>
           PERFORM Screen2-DUPLICATE-MOVEKEY.
           PERFORM Screen2-IUD-Display
           .

       Screen2-Curr.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordforn-Read
           PERFORM Screen2-DUPLICATE-MOVEKEY
           PERFORM Screen2-DUMMY-CURR
           PERFORM Screen2-IUD-Display
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterCurrent>
      * <TOTEM:END>
           .

       Screen2-IUD-Display.
           IF Valid-STATUS-tordforn
              PERFORM Screen2-ALLGRID-RESET
              PERFORM Screen2-Fld-To-Buf
              PERFORM Screen2-NAVI-FOR-MASTERGRID
              PERFORM Screen2-DISPLAY
           ELSE
              IF Screen2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Screen2-Extended-File-Status
              END-IF
           END-IF
           .

       Screen2-Add.
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-ADD
           PERFORM DataSet1-tordforn-INITREC
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordforn-Rec-Write
           IF Valid-STATUS-tordforn
              PERFORM Screen2-RESUMMARY-INS
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterAdd>
      * <TOTEM:END>
           .
     
       Screen2-Update.
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordforn-START              
           IF NOT Valid-STATUS-tordforn
              PERFORM Screen2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-tordforn-Read
           PERFORM Screen2-Buf-To-Fld
           PERFORM Screen2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Screen2-DUMMY-UPDATE
           PERFORM Screen2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-tordforn-Rec-Rewrite
           IF Valid-STATUS-tordforn
              PERFORM Screen2-RESUMMARY-DEL
              PERFORM Screen2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Screen2-IUD-Display
           END-IF
           PERFORM Screen2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterUpdate>
      * <TOTEM:END>
           .

       Screen2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Screen2-DUMMY-DELETE
      * delete
           PERFORM Screen2-Buf-To-Fld
           PERFORM DataSet1-tordforn-Rec-Delete
           IF Valid-STATUS-tordforn
              PERFORM Screen2-CLEAR
              PERFORM Screen2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-tordforn
           END-IF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterDelete>
      * <TOTEM:END>
           PERFORM Screen2-ERR-CHECKING
           .

       Screen2-NAVI-FOR-MASTERGRID.
           .

       Screen2-ERR-CHECKING.
           IF Valid-STATUS-tordforn
              PERFORM Screen2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Screen2-Extended-File-Status
           END-IF
           .

       Screen2-RESUMMARY-INS.
           .

       Screen2-RESUMMARY-DEL.
           .


       Screen2-DUMMY-FIRST.
           .

       Screen2-DUMMY-PREVIOUS.
           .

       Screen2-DUMMY-NEXT.
           .

       Screen2-DUMMY-LAST.
           .

       Screen2-DUMMY-CURR.
           .

       Screen2-DUMMY-ADD.
           .

       Screen2-DUMMY-UPDATE.
           .

       Screen2-DUMMY-UPDATE-INIT.
           .

       Screen2-DUMMY-DELETE.
           .

       Screen2-DUMMY-DELETE-INIT.
           .

       Screen2-Init-Value.
           INITIALIZE Screen2-BUF
      * FORM : Screen2
           PERFORM DataSet1-INIT-RECORD
      * DB_LABEL
              MOVE "tor-cod-cli" TO tof-cod-forn
      * DB_LABEL
              MOVE "tor-numero" TO tof-numero
      * DB_LABEL
              MOVE "cli-ragsoc-1" TO cli-ragsoc-1
      * DB_LABEL
              MOVE "cli-indirizzo" TO cli-indirizzo
      * DB_LABEL
              MOVE "cli-cap" TO cli-cap
      * DB_LABEL
              MOVE "cli-localita" TO cli-localita
      * DB_LABEL
              MOVE "cli-prov" TO cli-prov
      * DB_LABEL
              MOVE "tor-numero" TO como-prz-totale
      * DB_LABEL
              MOVE "tor-data-ordine" TO tof-data-consegna
      * DB_LABEL
              MOVE "desf-ragsoc-1" TO desf-ragsoc-1
      * DB_LABEL
              MOVE "desf-indirizzo" TO desf-indirizzo
      * DB_LABEL
              MOVE "desf-cap" TO desf-cap
      * DB_LABEL
              MOVE "desf-localita" TO desf-localita
      * DB_LABEL
              MOVE "desf-prov" TO desf-prov
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, SetDefault>
      * <TOTEM:END>
           PERFORM Screen2-FLD-TO-BUF
           .


       Screen2-ALLGRID-RESET.
           .

      * for Form's Validation
       Screen2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Screen2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterBufToFld>
      * <TOTEM:END>
           .

       Screen2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, BeforeFldToBuf>
      * <TOTEM:END>
      * DB_LABEL : Screen2-DaLa-11
              MOVE tof-cod-forn  TO Screen2-DaLa-11-BUF
      * DB_LABEL : Screen2-DaLa-14
              MOVE tof-numero  TO Screen2-DaLa-14-BUF
      * DB_LABEL : Screen2-DaLa-1
              MOVE cli-ragsoc-1  TO Screen2-DaLa-1-BUF
      * DB_LABEL : Screen2-DaLa-2
              MOVE cli-indirizzo  TO Screen2-DaLa-2-BUF
      * DB_LABEL : Screen2-DaLa-3
              MOVE cli-cap  TO Screen2-DaLa-3-BUF
      * DB_LABEL : Screen2-DaLa-4
              MOVE cli-localita  TO Screen2-DaLa-4-BUF
      * DB_LABEL : Screen2-DaLa-5
              MOVE cli-prov  TO Screen2-DaLa-5-BUF
      * DB_LABEL : Screen2-DaLa-14a
              MOVE como-prz-totale  TO Screen2-DaLa-14a-BUF
      * DB_LABEL : lbl-data-rif
              MOVE tof-data-consegna  TO lbl-data-rif-BUF
      * DB_LABEL : Screen2-DaLa-1a
              MOVE desf-ragsoc-1  TO Screen2-DaLa-1a-BUF
      * DB_LABEL : Screen2-DaLa-2a
              MOVE desf-indirizzo  TO Screen2-DaLa-2a-BUF
      * DB_LABEL : Screen2-DaLa-3a
              MOVE desf-cap  TO Screen2-DaLa-3a-BUF
      * DB_LABEL : Screen2-DaLa-4a
              MOVE desf-localita  TO Screen2-DaLa-4a-BUF
      * DB_LABEL : Screen2-DaLa-5a
              MOVE desf-prov  TO Screen2-DaLa-5a-BUF
      * <TOTEM:EPT. FORM:Screen2, FORM:Screen2, AfterFldToBuf>
           move tof-data-consegna  to como-data.
           perform DATE-TO-SCREEN.
           move como-data to lbl-data-rif-buf.

           .
      * <TOTEM:END>
           .

       Screen2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Screen2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Screen2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Screen2-SHOW-MSG-ROUTINE
           .

       Screen2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Screen2-DISPLAY-MESSAGE
           .

       Screen2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Screen2-Save-Status.
           MOVE DataSet1-tordforn-KEY1-ORDER TO TMP-Screen2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Screen2-KEYIS
           MOVE tof-rec OF tordforn TO 
              TMP-Screen2-tordforn-RESTOREBUF
           .             

       Screen2-Restore-Status.
           MOVE TMP-Screen2-KEY1-ORDER TO DataSet1-tordforn-KEY1-ORDER
           MOVE TMP-Screen2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Screen2-tordforn-RESTOREBUF TO
              tof-rec OF tordforn
           PERFORM DataSet1-tordforn-START
           IF Valid-STATUS-tordforn
              PERFORM DataSet1-tordforn-Read-Next
           ELSE
              PERFORM DataSet1-tordforn-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-tordforn OR
              (Valid-STATUS-tordforn AND
                 tof-rec OF tordforn = 
                   TMP-Screen2-tordforn-RESTOREBUF)
              PERFORM DataSet1-tordforn-Read-Next
           END-PERFORM
           .

       form3-Open-Routine.
           PERFORM form3-Scrn
           PERFORM form3-Proc
           .

       form3-Scrn.
           PERFORM form3-Create-Win
           PERFORM form3-Init-Value
           PERFORM form3-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form3-DISPLAY
           .

       form3-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 3,00,
              SIZE 53,14,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LINK TO THREAD,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE form3-Event-Proc,
              HANDLE IS form3-Handle,
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form3 UPON form3-Handle
      * DISPLAY-COLUMNS settings
           .

       form3-PROC.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeAccept>
           | Eliminata altrimenti con la "C$SLEEP" resta clessidra
      *****     call "W$MOUSE" using set-mouse-shape, wait-pointer
           perform STAMPA-ORDINE.
           if stof-path-pdf = spaces
              set errori to true
           else
              perform INVIO-MAIL
           end-if.              

      *****     call "W$MOUSE" using set-mouse-shape, arrow-pointer

           if errori
              if stof-tof-numero = 0  
                 display message box "Invio non riuscito."
                              x"0d0a""L'ordine non corrisponde a quello 
      -    "stampato."
                              x"0d0a""Riprovare o contattare assistenza"
                              x"0d0a"line-riga-mail
                          title titolo
              else
                 display message box "Invio non riuscito."
                              x"0d0a""L'ordine non sarà aggiornato"
                              x"0d0a"line-riga-mail
                          title titolo
              end-if
           else
              display message box "Invio riuscito."
                       title titolo
           end-if.


           perform FORM3-EXIT.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM form3-Evaluate-Func
                 MOVE 3 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form3-Handle
           INITIALIZE Key-Status
           .

       form3-Evaluate-Func.
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form3-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form3-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form3-CLEAR.
           PERFORM form3-INIT-VALUE
           PERFORM form3-DISPLAY
           .

       form3-DISPLAY.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form3 UPON form3-Handle
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterDisplay>
      *<<** Customized_Default, SP-G, Screen1-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>
           .

       form3-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form3-Init-Data.
           MOVE 3 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       form3-Init-Value.
      * <TOTEM:EPT. FORM:form3, FORM:form3, SetDefault>
      * <TOTEM:END>
           PERFORM form3-FLD-TO-BUF
           .


       form3-ALLGRID-RESET.
           .

      * for Form's Validation
       form3-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form3-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterBufToFld>
      * <TOTEM:END>
           .

       form3-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterFldToBuf>
      * <TOTEM:END>
           .

       form3-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form3-BUF-TO-FLD.
           move 0 to scelta.
           .
       form3-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form3-SHOW-MSG-ROUTINE
           .

       form3-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form3-DISPLAY-MESSAGE
           .

       form3-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form3-Save-Status.
           .             

       form3-Restore-Status.
           .



       Screen1-Event-Proc.
           .

       Screen2-Event-Proc.
           .

       Screen2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 33 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 33 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 33 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 33 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 33 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 33 ALSO
                    Screen2-Handle 
              PERFORM Screen2-Gd-1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       gd-note-Event.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Entry ALSO 511 ALSO
                    Screen2-Handle 
              PERFORM gd-note-Ev-Msg-Begin-Entry
           END-EVALUATE
           .

       form3-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy".
           copy "color-custom.cpy".
           copy "mail.cpy".
           copy "wait-3-secs.cpy".

      ***---
       CALCOLA-TRASPORTO.
      * DUMMY: NON SERVE IL PREZZO DI CONFRONTO
           .
      * <TOTEM:END>

       CALCOLA-MESE-RIFERIMENTO.
      * <TOTEM:PARA. CALCOLA-MESE-RIFERIMENTO>
           accept como-data   from century-date
           if como-data >= tof-data-consegna
              move 1   to mese-rif
           else
              compute como-numero = 
                         (function integer-of-date(tof-data-consegna) - 
                          function integer-of-date(como-data))
              divide como-numero by 30 giving mese-rif
                                    remainder resto
              if resto not = zero
                 add 1 to mese-rif
              end-if
           end-if.
           move mese-rif to tof-mese-rif 
           .
      * <TOTEM:END>

       CARICA-ART-DA-CONF.
      * <TOTEM:PARA. CARICA-ART-DA-CONF>
           move tof-chiave   to aor-chiave-testa
           move low-value    to aor-prog
           start art-ordforn key not < aor-chiave
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read art-ordforn next
                       at end
                          exit perform
                    end-read
                    if tof-chiave not = aor-chiave-testa
                       exit perform
                    end-if

                    perform METTI-IN-GRIGLIA-DA-CONF
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           move "tordforn-stato"   to como-file.

           inquire ef-anno, value in tof-anno.
           inquire ef-num,  value in tof-numero.
           set tof-inserito    to true
           call "zoom-gt"   using como-file, tof-rec
                            giving stato-zoom
           cancel "zoom-gt"
           if stato-zoom = 0
              move tof-numero   to numero
              display ef-num
              move tof-anno     to anno
              display ef-anno
           end-if 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok   to true
           evaluate true
           when t-mail
                inquire ef-mail, VALUE mail
                if mail = space
                   display message box "Indirizzo E-mail obbligatorio"
                          title titolo
                   move 78-id-ef-mail to control-id
                   set errori   to true
                end-if
           when t-fax
                inquire ef-fax, VALUE fax
                if fax = space
                   display message box "Numero di Fax obbligatorio"
                          title titolo
                   move 78-id-ef-fax to control-id
                   set errori   to true
                end-if
           end-evaluate
           .
      * <TOTEM:END>

       DESCRIZIONE-IMBALLO.
      * <TOTEM:PARA. DESCRIZIONE-IMBALLO>
           move rof-imb-ordinato   to imq-codice
           read timbalqta
              invalid
                 initialize imq-dati
           end-read

           move imq-tipo  to imb-codice           
           read timballi
              invalid
                 initialize imb-dati
           end-read
           inspect imb-descrizione replacing trailing 
                                   spaces by low-value.
           move imq-qta-imb  to imballi-ed.
           call "C$JUSTIFY"  using imballi-ed, "L".
           initialize col-imballo.

           string  imb-descrizione delimited by low-value
                   " da "          delimited by size
                   imballi-ed      delimited by spaces
                   " x "           delimited by size
                   art-udm-imballo delimited by size
                   into col-imballo
           end-string
           .
      * <TOTEM:END>

       INVIO.
      * <TOTEM:PARA. INVIO>
           set tutto-ok   to true
           evaluate true
           when t-mail
                perform FORM3-OPEN-ROUTINE
           when t-fax
                perform STAMPA-ORDINE
           when t-manuale
                continue
           end-evaluate

           if tutto-ok
              perform CALCOLA-MESE-RIFERIMENTO
              accept como-data from century-date
              accept como-ora  from time

              move como-data to tof-data-invio
              move como-ora  to tof-ora-invio
              move user-codi to tof-utente-invio


              move como-data to tof-data-ultima-modifica
              move como-ora  to tof-ora-ultima-modifica
              move user-codi to tof-utente-ultima-modifica

              if not tof-inviato
                 perform SCORRI-RIGHE
              end-if

              set tof-inviato   to true

              evaluate true
              when t-manuale
                   set tof-invio-man  to true
              when t-fax  
                   set tof-invio-fax  to true
                   inquire ef-fax, VALUE fax
                   move fax           to tof-fax
              when t-mail
                   set tof-invio-mail to true
                   inquire ef-mail, VALUE mail
                   move mail          to tof-email
              end-evaluate

              rewrite tof-rec 
                 invalid 
                    continue 
              end-rewrite
           end-if.

      ***---
       SCORRI-RIGHE.
           move tof-chiave   to rof-chiave-testa
           move low-value    to rof-riga
           start rordforn key not < rof-chiave
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read rordforn next
                       at end
                          exit perform
                    end-read
                    if tof-chiave not = rof-chiave-testa
                       exit perform
                    end-if

                    perform CHIAMA-PROGMAG
                 end-perform
           end-start.


      ***---
       CHIAMA-PROGMAG.
           move tof-causale     to link-causale
           perform VALORIZZA-ARRAY-CAUSALI
           set link-update      to true
           move rof-prg-chiave  to link-key
           move tof-mese-rif    to link-mese-rif
           move tof-chiave      to link-chiave-origine.

           move user-codi to link-user of link-wprogmag
      *    aggiungo l'ordinato (l'ordine, dopo essere stato confermato,
      *    viene inviato al fornitore e diventa esecutivo)
           move rof-qta-ord  to link-valore
           if link-valore not = zero
              move "0010000000000000" to link-array
              call   "wprogmag"    using link-wprogmag
              cancel "wprogmag"
           end-if.

      ***---
       VALORIZZA-ARRAY-CAUSALI.
           set link-update-um     to true.
           set link-update-peso   to false.
           set link-update-valore to false.
           move "000000000000000" to link-array.
           move link-causale      to tca-codice.
           read tcaumag no lock invalid continue end-read 
           .
      * <TOTEM:END>

       INVIO-MAIL.
      * <TOTEM:PARA. INVIO-MAIL>
      *     perform 4 times
      *        perform WAIT-3-SECS
      *     end-perform.

           perform PREPARA-SUBJECT.
           perform PREPARA-CORPO.
           perform PREPARA-INDIRIZZO.
           perform PREPARA-INDIRIZZO-CC.
           perform PREPARA-FROM.
           move stof-path-pdf to LinkAttach.

           perform CONTROLLA-FILE-INVIATO.

           if tutto-ok
              set errori to true
              move 0 to tentativi
              move "invioordforn" to NomeProgramma
              perform 5 times
                 add 1 to tentativi
                 perform SEND-MAIL

      *        call "C$DELETE" using FileDest
                 open input lineseq-mail
                 read  lineseq-mail next
                 if line-riga-mail = "True"
                    set tutto-ok to true
                    close lineseq-mail
                    exit perform
                 end-if
                 close lineseq-mail

              end-perform
           end-if.


      ***---
       CONTROLLA-FILE-INVIATO.  
           set tutto-ok to true.
           move 0 to CountChar.
           accept  path from environment "PATH_PDF_ORDFORN".
           inspect path replacing trailing spaces by low-value.
           inspect path tallying CountChar for characters before 
           low-value.
           add 1 to CountChar giving StartChar.
           
           perform varying CountChar from StartChar by 1 
                     until CountChar > 100
              if LinkAttach(CountChar:1) = "_"
                 compute CountChar = CountChar - StartChar
                 move LinkAttach(StartChar:CountChar) to numero-x8
                 call "C$JUSTIFY" using numero-x8, "R"
                 inspect numero-x8 replacing leading x"20" by x"30"
                 move numero-x8 to numero-z8
                 move numero-z8 to numero-98
                 if numero-98 not = numero
                    set errori to true
                    display message "FILE PDF NON CONGRUO!"
                              title tit-err
                               icon 2
                 end-if
                 exit perform
              end-if
           end-perform 
           .
      * <TOTEM:END>

       METTI-IN-GRIGLIA.
      * <TOTEM:PARA. METTI-IN-GRIGLIA>
           add 1 to riga
           initialize rec-grid
           move rof-cod-articolo   to col-art 
                                      art-codice.
           read articoli 
                invalid move "ARTICOLO NON TROVATO"   to art-descrizione
           end-read
           move art-descrizione to col-descr-art
           perform DESCRIZIONE-IMBALLO
           perform PREZZO-FINALE

           move rof-qta-ord             to col-qta
           modify Screen2-Gd-1, RECORD-TO-ADD rec-grid
           modify Screen2-Gd-1(riga), ROW-COLOR 516
           .
      * <TOTEM:END>

       METTI-IN-GRIGLIA-DA-CONF.
      * <TOTEM:PARA. METTI-IN-GRIGLIA-DA-CONF>
           add 1 to riga
           initialize rec-grid
           move aor-articolo    to col-art 
                                   art-codice
                                   rof-cod-articolo
           move aor-descrizione to col-descr-art

           if aor-imballo = space
              move space  to col-imballo
           else
              move aor-imballo  to rof-imb-ordinato   
              perform DESCRIZIONE-IMBALLO
           end-if


           move aor-prz-unit to rof-prz-unitario.

           move 0 to rof-sconto-1
                     rof-sconto-2
                     rof-sconto-3
                     rof-sconto-4
                     rof-sconto-5
                     rof-cod-listino.

           move aor-netto    to rof-imponib-merce.
           move aor-imp-cons to rof-imp-consumo.
           move aor-coubat   to rof-imp-cou-cobat.
           move aor-add-pb   to rof-add-piombo.

           move aor-qta   to rof-qta-ord
                             col-qta.

           move aor-costi-agg to rof-costi-aggiuntivi.
           perform PREZZO-FINALE.
           
           modify Screen2-Gd-1, record-to-add rec-grid
           modify Screen2-Gd-1(riga), row-color 48 
           .
      * <TOTEM:END>

       PREPARA-CORPO.
      * <TOTEM:PARA. PREPARA-CORPO>
           initialize linkBody

           move tof-numero    to num-edit
           call "C$JUSTIFY" using num-edit, "L"
           inspect num-edit replacing trailing space by low-value

           accept linkBody from environment "ORDFORN_BODY"
      *    controllo di dover inserire il numero d'ordine
           initialize cont
           inspect linkBody tallying cont for all "$1"
           if cont not = zero
              perform cont times
                 initialize cont2
                 inspect linkBody tallying cont2 
                                         for characters before "$1"
                 add 3 to cont2 giving cont3
                 initialize como-linkbody
                 if cont2 = zero
                    string num-edit            delimited by low-value
                           linkbody(cont3:)    delimited by size
                          into como-linkbody
                 else
                    string linkbody(1:cont2)   delimited by size
                           num-edit            delimited by low-value
                           linkbody(cont3:)    delimited by size
                           into como-linkbody
                 end-if
                 move como-linkbody   to linkbody
              end-perform
           end-if

      *    controllo di dover inserire l'anno dell'ordine
           initialize cont
           inspect linkBody tallying cont for all "$2"
           if cont not = zero
              perform cont times
                 initialize cont2
                 inspect linkBody tallying cont2 
                                         for characters before "$2"
                 add 3 to cont2 giving cont3
                 initialize como-linkbody
                 if cont2 = zero
                    string tof-anno            delimited by size
                           linkbody(cont3:)    delimited by size
                           into como-linkbody
                 else
                    string linkbody(1:cont2)   delimited by size
                           tof-anno            delimited by size
                           linkbody(cont3:)    delimited by size
                           into como-linkbody
                 end-if
                 move como-linkbody   to linkbody
              end-perform
           end-if

           if linkBody = space
              string "In allegato il dettaglio dell'ordine " 
                                      delimited by size
                     num-edit            delimited by low-value
                     "/"                 delimited by size
                     tof-anno            delimited by size
                     into LinkBody
           end-if.

           if note-mail not = space
              inspect LinkBody replacing trailing space by low-value
              string LinkBody   delimited by low-value
                     x"0D0A"    delimited by size
                     "NOTE"     delimited by size
                     x"0D0A"    delimited by size
                     note-mail  delimited by size
                     into LinkBody
              inspect LinkBody replacing trailing low-value by space
           end-if 
           .
      * <TOTEM:END>

       PREPARA-FROM.
      * <TOTEM:PARA. PREPARA-FROM>
           move user-codi to usr-codice
           read usr-tel
              invalid
                 initialize usr-ind-from
           end-read
           move usr-ind-from to LinkAddressFrom
           .
      * <TOTEM:END>

       PREPARA-INDIRIZZO.
      * <TOTEM:PARA. PREPARA-INDIRIZZO>
           initialize LinkAddress
           inspect mail replacing trailing space by low-value
           initialize cont 
           inspect mail tallying cont for characters before low-value
           if mail(cont:1) = ";"
              move low-value to mail(cont:1)
           end-if
           inspect mail replacing trailing low-value by space
           move mail   to LinkAddress

      ***     string mail delimited by low-value
      ****            ";"  delimited by size
      ***            into LinkAddress
           .
      * <TOTEM:END>

       PREPARA-INDIRIZZO-CC.
      * <TOTEM:PARA. PREPARA-INDIRIZZO-CC>
           move mail-cc   to LinkAddressCC
           initialize cont
           inspect LinkAddressCC replacing trailing space by low-value
           inspect LinkAddressCC 
                       tallying cont for characters before low-value
           if cont not = zero
              if LinkAddressCC(cont:1) = ";"
                 move low-value to LinkAddressCC(cont:1)
              end-if
           end-if
           inspect LinkAddressCC replacing trailing low-value by space
           .
      * <TOTEM:END>

       PREPARA-SUBJECT.
      * <TOTEM:PARA. PREPARA-SUBJECT>
           accept LinkSubject from environment "ORDFORN_SUBJECT"

           if LinkSubject = space
              move "TRASMISSIONE ORDINE D'ACQUISTO"  to LinkSubject
           end-if
           .
      * <TOTEM:END>

       PREZZO-FINALE.
      * <TOTEM:PARA. PREZZO-FINALE>
           move rof-prz-unitario   to como-prz-finale.

           move rof-cod-listino    to rlis-codice.
           move rof-cod-articolo   to rlis-articolo.
           compute como-prz-finale = 
                   rof-imponib-merce +
                   rof-imp-consumo   +
                   rof-imp-cou-cobat +
                   rof-add-piombo    |+
                   |rof-costi-aggiuntivi.
               
           multiply rof-qta-ord by como-prz-finale giving 
           como-prz-finale

           move como-prz-finale to col-prz.
           add  como-prz-finale to como-prz-totale 
           .
      * <TOTEM:END>

       READ-RECORD-LOCK.
      * <TOTEM:PARA. READ-RECORD-LOCK>
           set RecLocked to false.
           initialize geslock-linkage.
           move "tordforn" to geslock-nome-file.

           set tutto-ok to true.
           read tordforn with lock 
              invalid 
                 continue 
           end-read.

           if RecLocked
              move 1 to geslock-v-riprova
              move 0 to geslock-v-ignora
              move 1 to geslock-v-termina
              call   "geslock" using geslock-linkage
              cancel "geslock"
              evaluate true
              when riprova 
                   perform READ-RECORD-LOCK
              when ignora  
              when termina 
                   set errori to true
                   unlock tordforn all records
              end-evaluate
           end-if 
           .
      * <TOTEM:END>

       RIEMPI-CHIAVE.
      * <TOTEM:PARA. RIEMPI-CHIAVE>
           inquire ef-anno, value in anno.
           inquire ef-num,  value in numero.
           move anno   to tof-anno.
           move numero to tof-numero 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire screen2-gd-1, last-row in tot-righe.
           move event-data-2 to riga.
           if riga < 2 move 2 to riga end-if.
           if riga > tot-righe move tot-righe to riga end-if.
           modify Screen2-Gd-1, start-x = 1, x = 7,
                                start-y = riga, y = riga,
                                region-color = 144 
           .
      * <TOTEM:END>

       STAMPA-ORDINE.
      * <TOTEM:PARA. STAMPA-ORDINE>
           perform RIEMPI-CHIAVE.
           move tof-chiave  to stof-tof-chiave stof-tof-chiave-a.
           move 0           to stof-tof-data-da.
           move 99999999    to stof-tof-data-a.
           if t-mail   
              set stof-pdf     to true
           else
              set stof-normale to true
           end-if
           call   "st-ordforn" using st-ordforn-linkage.
           cancel "st-ordforn" 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       bprepb-Ev-Before-Program.
      * <TOTEM:PARA. bprepb-Ev-Before-Program>
           move spaces to tge-anno.
           open input tparamge.
           move spaces to tge-codice.
           read tparamge no lock invalid continue end-read.
           close tparamge.
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       Screen2-Gd-1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. Screen2-Gd-1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       ef-anno-BeforeProcedure.
      * <TOTEM:PARA. ef-anno-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-anno-AfterProcedure.
      * <TOTEM:PARA. ef-anno-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       ef-num-BeforeProcedure.
      * <TOTEM:PARA. ef-num-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       ef-num-AfterProcedure.
      * <TOTEM:PARA. ef-num-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled = e-cerca 
           .
      * <TOTEM:END>
       PB-ESEGUIa-LinkTo.
      * <TOTEM:PARA. PB-ESEGUIa-LinkTo>
           display message box "S'intende procedere all'invio"
                        x"0d0a""dell'ordine selezionato?"
                   title = titolo
                   type mb-yes-no
                   default mb-no
                   giving scelta

           if scelta = mb-yes
              modify pb-eseguia,  visible false
              modify Form1-Pb-2a, visible false
   
              perform CONTROLLO
              if tutto-ok
                 perform INVIO
                 call   "tprev-elab" using user-codi
                 cancel "tprev-elab"
                 move 27 to key-status
              end-if                           
              modify pb-eseguia,  visible true
              modify Form1-Pb-2a, visible true
           end-if 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       PB-ESEGUIa-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-BeforeProcedure>
           modify PB-ESEGUIa, bitmap-number 2
           .
      * <TOTEM:END>
       PB-ESEGUIa-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUIa-AfterProcedure>
           modify PB-ESEGUIa, bitmap-number 1
           .
      * <TOTEM:END>
       Form1-Pb-2a-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-BeforeProcedure>
           modify Form1-Pb-2a, bitmap-number 2
           .
      * <TOTEM:END>
       Form1-Pb-2a-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2a-AfterProcedure>
           modify Form1-Pb-2a, bitmap-number 1
           .
      * <TOTEM:END>
       PB-ESEGUI-BeforeProcedure.
      * <TOTEM:PARA. PB-ESEGUI-BeforeProcedure>
           modify PB-ESEGUI, bitmap-number 2 
           .
      * <TOTEM:END>
       PB-ESEGUI-AfterProcedure.
      * <TOTEM:PARA. PB-ESEGUI-AfterProcedure>
           modify PB-ESEGUI, bitmap-number 1 
           .
      * <TOTEM:END>
       PB-ESEGUI-LinkTo.
      * <TOTEM:PARA. PB-ESEGUI-LinkTo>
           set tutto-ok to true.
           perform RIEMPI-CHIAVE.
           read tordforn no lock
                invalid 
                set errori to true
                display message "Ordine non caricato"
                          title tit-err
                           icon 2
              not invalid
                  evaluate true
                  when tof-inviato
                       |RICHIESTO DA WALTER (19/06/09)
                       continue
      *****                 set errori to true
      *****                 display message "Ordine già inviato"
      *****                           title tit-err   
      *****                            icon 2
                  when tof-in-lavorazione
                       set errori to true
                       display message "Ordine già in lavorazione"
                                 title tit-err   
                                  icon 2
                  when tof-chiuso
                       set errori to true
                       display message "Ordine già chiuso"
                                 title tit-err   
                                  icon 2
                  end-evaluate
           end-read.

           perform CANCELLA-COLORE.
           if tutto-ok
      *        perform READ-RECORD-LOCK
      *        if tutto-ok
                 modify Form1-Handle, visible false
                 perform SCREEN2-OPEN-ROUTINE     
                 unlock tordforn all records
                 modify Form1-Handle, visible true
                 move 1001 to control-id
      *        end-if                              
              move 1002 to control-id
           else                      
              move 1002 to control-id
           end-if.  
                                     
           move    4 to accept-control.
           
           modify pb-esegui, bitmap-number = 1.
           modify pb-cancel, bitmap-number = 1 
           .
      * <TOTEM:END>
       Form1-Pb-2-BeforeProcedure.
      * <TOTEM:PARA. Form1-Pb-2-BeforeProcedure>
           modify pb-cancel, bitmap-number 2 
           .
      * <TOTEM:END>
       Form1-Pb-2-AfterProcedure.
      * <TOTEM:PARA. Form1-Pb-2-AfterProcedure>
           modify pb-cancel, bitmap-number 1 
           .
      * <TOTEM:END>
       accetordforn-Ev-After-Program.
      * <TOTEM:PARA. accetordforn-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       Screen2-Rb-1-BeforeProcedure.
      * <TOTEM:PARA. Screen2-Rb-1-BeforeProcedure>
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       Screen2-Rb-1-AfterProcedure.
      * <TOTEM:PARA. Screen2-Rb-1-AfterProcedure>
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       Screen2-Ef-1-BeforeProcedure.
      * <TOTEM:PARA. Screen2-Ef-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen2-Ef-1-AfterProcedure.
      * <TOTEM:PARA. Screen2-Ef-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       rb-mail-LinkTo.
      * <TOTEM:PARA. rb-mail-LinkTo>
           move 1      to e-mail
           move zero   to e-fax
           modify ef-mail       ENABLED e-mail
           modify ef-note-mail  ENABLED e-mail
           modify ef-mail-cc    ENABLED e-mail
           modify ef-fax        ENABLED e-fax
           .
      * <TOTEM:END>
       rb-fax-LinkTo.
      * <TOTEM:PARA. rb-fax-LinkTo>
           move zero   to e-mail
           move 1      to e-fax
           modify ef-mail       ENABLED e-mail
           modify ef-note-mail  ENABLED e-mail
           modify ef-mail-cc    ENABLED e-mail
           modify ef-fax        ENABLED e-fax
           .
      * <TOTEM:END>
       rb-manuale-LinkTo.
      * <TOTEM:PARA. rb-manuale-LinkTo>
           move zero   to e-mail
                          e-fax
           modify ef-mail       ENABLED e-mail
           modify ef-note-mail  ENABLED e-mail
           modify ef-mail-cc    ENABLED e-mail
           modify ef-fax        ENABLED e-fax
           .
      * <TOTEM:END>
       gd-note-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-note-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

