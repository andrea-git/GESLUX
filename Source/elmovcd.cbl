      *{TOTEM}PRG-COMMENT
      * elmovcd.Cbl
      * elmovcd.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          elmovcd.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        martedì 26 maggio 2015 17:28:09.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:elmovcd, INIT:elmovcd, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tmp-elmovc.sl".
           COPY "reva.sl".
           COPY "teva.sl".
           COPY "tmagaz.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tmp-elmovc.fd".
           COPY "reva.fd".
           COPY "teva.fd".
           COPY "tmagaz.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\lubex\geslux\Copylib\standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Geslux - Elenco bozze d'evasione correlate". 
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 form2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 FILLER           PIC  9.
           88 CallManutenzione VALUE IS 1    WHEN SET TO FALSE  0. 
       01 rec-grid.
           05 col-nulla        PIC  x.
           05 Col-anno         PIC  9(4).
           05 Col-numero       PIC  z(7)9.
           05 col-riga         PIC  z(9)9.
           05 col-qta          PIC  z(8).
           05 Col-data         PIC  99/99/9999.
           05 Col-mag          PIC  x(40).
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 como-x           PIC  x.
       01 como-chiave-ordine.
           05 como-anno        PIC  9(4).
           05 como-numero-ordine           PIC  9(8).
       77 Form3-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 font-evidenzia-griglia
                  USAGE IS HANDLE OF FONT.
       77 elemento-bmp     PIC  s9(9)
                  USAGE IS COMP-4
                  VALUE IS ZERO.
       77 como-riga
                  USAGE IS UNSIGNED-INT.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 path-tmp-elmovc  PIC  X(256).
       77 STATUS-tmp-elmovc            PIC  X(2).
           88 Valid-STATUS-tmp-elmovc VALUE IS "00" THRU "09". 
       77 STATUS-reva      PIC  X(2).
           88 Valid-STATUS-reva VALUE IS "00" THRU "09". 
       77 STATUS-teva      PIC  X(2).
           88 Valid-STATUS-teva VALUE IS "00" THRU "09". 
       77 STATUS-tmagaz    PIC  X(2).
           88 Valid-STATUS-tmagaz VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form2-FLAG-REFRESH PIC  9.
          88 Form2-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-Form2-KEY1-ORDER  PIC X VALUE "A".
       77 TMP-Form2-teva-RESTOREBUF  PIC X(199).
       77 TMP-Form2-KEYIS  PIC 9(3) VALUE 1.
       77 Form2-MULKEY-TMPBUF   PIC X(199).
       77 STATUS-form3-FLAG-REFRESH PIC  9.
          88 form3-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tmp-elmovc-BUF     PIC X(23).
       77 TMP-DataSet1-reva-BUF     PIC X(260).
       77 TMP-DataSet1-teva-BUF     PIC X(199).
       77 TMP-DataSet1-tmagaz-BUF     PIC X(212).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tmp-elmovc-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-elmovc-LOCK  VALUE "Y".
       77 DataSet1-tmp-elmovc-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-elmovc-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-elmovc-KEY-Desc VALUE "D".
       77 DataSet1-reva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-reva-LOCK  VALUE "Y".
       77 DataSet1-reva-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-reva-KEY-Asc  VALUE "A".
          88 DataSet1-reva-KEY-Desc VALUE "D".
       77 DataSet1-teva-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-teva-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-teva-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-teva-KEY1-Asc  VALUE "A".
          88 DataSet1-teva-KEY1-Desc VALUE "D".
       77 DataSet1-tmagaz-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmagaz-LOCK  VALUE "Y".
       77 DataSet1-tmagaz-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmagaz-KEY-Asc  VALUE "A".
          88 DataSet1-tmagaz-KEY-Desc VALUE "D".

       77 reva-reva-k-articolo-SPLITBUF  PIC X(26).
       77 teva-teva-stato-SPLITBUF  PIC X(14).

           copy "link-gbozze.def".
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "LINK-ELMOVCD.DEF".
           COPY  "COMMON-LINKAGE.DEF".

      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form2, 
           .

      * FRAME
       05
           Screen1-Fr-1, 
           Frame, 
           COL 1,17, 
           LINE 46,54,
           LINES 3,00 ,
           SIZE 33,00 ,
           LOWERED,
           FULL-HEIGHT,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * GRID
       05
           gd-mov, 
           Grid, 
           COL 3,17, 
           LINE 2,00,
           LINES 42,00 ,
           SIZE 133,00 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 2, 6, 14, 24, 32, 42),
           ALIGNMENT ("C", "C", "R", "R", "R", "C", "L"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5),
           DATA-TYPES ("X", "9(4)", "9(8)", "9(10)", "9(8)", "D(10)", "x
      -    "(40)"),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           HEADING-FONT IS Verdana10B-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 130,
           VPADDING 50,
           VSCROLL,
           EVENT PROCEDURE Screen1-Gd-1-Event-Proc,
           .

      * PUSH BUTTON
       05
           pb-ok2, 
           Push-Button, 
           COL 110,83, 
           LINE 46,69,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1000,
           FLAT,
           ID IS 200,
           AFTER PROCEDURE pb-ok2-AfterProcedure, 
           BEFORE PROCEDURE pb-ok2-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-annulla2, 
           Push-Button, 
           COL 123,83, 
           LINE 46,69,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 201,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-annulla2-AfterProcedure, 
           BEFORE PROCEDURE pb-annulla2-BeforeProcedure, 
           .

      * FRAME
       05
           Screen1-Fr-1a, 
           Frame, 
           COL 34,54, 
           LINE 46,54,
           LINES 3,00 ,
           SIZE 75,83 ,
           LOWERED,
           FULL-HEIGHT,
           ID IS 202,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * LABEL
       05
           Screen1-La-1, 
           Label, 
           COL 36,54, 
           LINE 47,39,
           LINES 1,31 ,
           SIZE 73,00 ,
           ID IS 203,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Doppio Click o Invio per modificare l'ordine",
           .

      * FRAME
       05
           Screen1-Fr-1aa, 
           Frame, 
           COL 110,50, 
           LINE 46,54,
           LINES 3,00 ,
           SIZE 27,17 ,
           LOWERED,
           FULL-HEIGHT,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * FORM
       01 
           form3, 
           .

      * LABEL
       05
           form3-La-1, 
           Label, 
           COL 2,29, 
           LINE 1,69,
           LINES 1,62 ,
           SIZE 47,43 ,
           FONT IS Verdana12BI-Occidentale,
           ID IS 2,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE "Caricamento movimenti in corso...",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING link-elmovcd, LK-BLOCKPGM, USER-CODI, 
           LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:elmovcd, INIT:elmovcd, BeforeDeclarative>
      ***---
       TEVA-ERR SECTION.
           use after error procedure on TEVA.
           set tutto-ok  to true.
           evaluate status-TEVA
           when "35"
                display message "File [TEVA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TEVA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TEVA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       REVA-ERR SECTION.
           use after error procedure on REVA.
           set tutto-ok  to true.
           evaluate status-REVA
           when "35"
                display message "File [REVA] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [REVA] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[REVA] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.
 
      ***---
       TMAGAZ-ERR SECTION.
           use after error procedure on TMAGAZ.
           set tutto-ok  to true.
           evaluate status-TMAGAZ
           when "35"
                display message "File [TMAGAZ] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [TMAGAZ] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[TMAGAZ] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ginqui-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form2-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:elmovcd, INIT:elmovcd, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana12BI-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana12BI-Occidentale
           INITIALIZE WFONT-DATA Verdana12BI-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-ok2
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-annulla2
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tmp-elmovc
           PERFORM OPEN-reva
           PERFORM OPEN-teva
           PERFORM OPEN-tmagaz
      *    After Open
           .

       OPEN-tmp-elmovc.
      * <TOTEM:EPT. INIT:elmovcd, FD:tmp-elmovc, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tmp-elmovc
           IF STATUS-tmp-elmovc = "35"
              OPEN OUTPUT tmp-elmovc
                IF Valid-STATUS-tmp-elmovc
                   CLOSE tmp-elmovc
                   OPEN I-O tmp-elmovc
                END-IF
           END-IF
           IF NOT Valid-STATUS-tmp-elmovc
              PERFORM  Form2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:elmovcd, FD:tmp-elmovc, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-reva.
      * <TOTEM:EPT. INIT:elmovcd, FD:reva, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT reva
           IF NOT Valid-STATUS-reva
              PERFORM  Form2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:elmovcd, FD:reva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-teva.
      * <TOTEM:EPT. INIT:elmovcd, FD:teva, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT teva
           IF NOT Valid-STATUS-teva
              PERFORM  Form2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:elmovcd, FD:teva, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmagaz.
      * <TOTEM:EPT. INIT:elmovcd, FD:tmagaz, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmagaz
           IF NOT Valid-STATUS-tmagaz
              PERFORM  Form2-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:elmovcd, FD:tmagaz, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tmp-elmovc
           PERFORM CLOSE-reva
           PERFORM CLOSE-teva
           PERFORM CLOSE-tmagaz
      *    After Close
           .

       CLOSE-tmp-elmovc.
      * <TOTEM:EPT. INIT:elmovcd, FD:tmp-elmovc, BeforeClose>
      * <TOTEM:END>
           CLOSE tmp-elmovc
           .

       CLOSE-reva.
      * <TOTEM:EPT. INIT:elmovcd, FD:reva, BeforeClose>
      * <TOTEM:END>
           CLOSE reva
           .

       CLOSE-teva.
      * <TOTEM:EPT. INIT:elmovcd, FD:teva, BeforeClose>
      * <TOTEM:END>
           CLOSE teva
           .

       CLOSE-tmagaz.
      * <TOTEM:EPT. INIT:elmovcd, FD:tmagaz, BeforeClose>
      * <TOTEM:END>
           CLOSE tmagaz
           .

       DataSet1-tmp-elmovc-INITSTART.
           IF DataSet1-tmp-elmovc-KEY-Asc
              MOVE Low-Value TO tmp-emc-chiave
           ELSE
              MOVE High-Value TO tmp-emc-chiave
           END-IF
           .

       DataSet1-tmp-elmovc-INITEND.
           IF DataSet1-tmp-elmovc-KEY-Asc
              MOVE High-Value TO tmp-emc-chiave
           ELSE
              MOVE Low-Value TO tmp-emc-chiave
           END-IF
           .

      * tmp-elmovc
       DataSet1-tmp-elmovc-START.
           IF DataSet1-tmp-elmovc-KEY-Asc
              START tmp-elmovc KEY >= tmp-emc-chiave
           ELSE
              START tmp-elmovc KEY <= tmp-emc-chiave
           END-IF
           .

       DataSet1-tmp-elmovc-START-NOTGREATER.
           IF DataSet1-tmp-elmovc-KEY-Asc
              START tmp-elmovc KEY <= tmp-emc-chiave
           ELSE
              START tmp-elmovc KEY >= tmp-emc-chiave
           END-IF
           .

       DataSet1-tmp-elmovc-START-GREATER.
           IF DataSet1-tmp-elmovc-KEY-Asc
              START tmp-elmovc KEY > tmp-emc-chiave
           ELSE
              START tmp-elmovc KEY < tmp-emc-chiave
           END-IF
           .

       DataSet1-tmp-elmovc-START-LESS.
           IF DataSet1-tmp-elmovc-KEY-Asc
              START tmp-elmovc KEY < tmp-emc-chiave
           ELSE
              START tmp-elmovc KEY > tmp-emc-chiave
           END-IF
           .

       DataSet1-tmp-elmovc-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmp-elmovc-LOCK
              READ tmp-elmovc WITH LOCK 
              KEY tmp-emc-chiave
           ELSE
              READ tmp-elmovc WITH NO LOCK 
              KEY tmp-emc-chiave
           END-IF
           MOVE STATUS-tmp-elmovc TO TOTEM-ERR-STAT 
           MOVE "tmp-elmovc" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-elmovc-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmp-elmovc-KEY-Asc
              IF DataSet1-tmp-elmovc-LOCK
                 READ tmp-elmovc NEXT WITH LOCK
              ELSE
                 READ tmp-elmovc NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-elmovc-LOCK
                 READ tmp-elmovc PREVIOUS WITH LOCK
              ELSE
                 READ tmp-elmovc PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmp-elmovc TO TOTEM-ERR-STAT
           MOVE "tmp-elmovc" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-elmovc-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmp-elmovc-KEY-Asc
              IF DataSet1-tmp-elmovc-LOCK
                 READ tmp-elmovc PREVIOUS WITH LOCK
              ELSE
                 READ tmp-elmovc PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmp-elmovc-LOCK
                 READ tmp-elmovc NEXT WITH LOCK
              ELSE
                 READ tmp-elmovc NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmp-elmovc TO TOTEM-ERR-STAT
           MOVE "tmp-elmovc" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-elmovc-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeWrite>
      * <TOTEM:END>
           WRITE tmp-emc-rec OF tmp-elmovc.
           MOVE STATUS-tmp-elmovc TO TOTEM-ERR-STAT
           MOVE "tmp-elmovc" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-elmovc-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tmp-emc-rec OF tmp-elmovc.
           MOVE STATUS-tmp-elmovc TO TOTEM-ERR-STAT
           MOVE "tmp-elmovc" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-elmovc-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, BeforeDelete>
      * <TOTEM:END>
           DELETE tmp-elmovc.
           MOVE STATUS-tmp-elmovc TO TOTEM-ERR-STAT
           MOVE "tmp-elmovc" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-elmovc, AfterDelete>
      * <TOTEM:END>
           .

       reva-reva-k-articolo-MERGE-SPLITBUF.
           INITIALIZE reva-reva-k-articolo-SPLITBUF
           MOVE reva-qta OF reva(1:8) TO 
           reva-reva-k-articolo-SPLITBUF(1:8)
           MOVE reva-chiave OF reva(1:17) TO 
           reva-reva-k-articolo-SPLITBUF(9:17)
           .

       DataSet1-reva-INITSTART.
           IF DataSet1-reva-KEY-Asc
              MOVE Low-Value TO reva-chiave
           ELSE
              MOVE High-Value TO reva-chiave
           END-IF
           .

       DataSet1-reva-INITEND.
           IF DataSet1-reva-KEY-Asc
              MOVE High-Value TO reva-chiave
           ELSE
              MOVE Low-Value TO reva-chiave
           END-IF
           .

      * reva
       DataSet1-reva-START.
           IF DataSet1-reva-KEY-Asc
              START reva KEY >= reva-chiave
           ELSE
              START reva KEY <= reva-chiave
           END-IF
           .

       DataSet1-reva-START-NOTGREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY <= reva-chiave
           ELSE
              START reva KEY >= reva-chiave
           END-IF
           .

       DataSet1-reva-START-GREATER.
           IF DataSet1-reva-KEY-Asc
              START reva KEY > reva-chiave
           ELSE
              START reva KEY < reva-chiave
           END-IF
           .

       DataSet1-reva-START-LESS.
           IF DataSet1-reva-KEY-Asc
              START reva KEY < reva-chiave
           ELSE
              START reva KEY > reva-chiave
           END-IF
           .

       DataSet1-reva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-reva-LOCK
              READ reva WITH LOCK 
              KEY reva-chiave
           ELSE
              READ reva WITH NO LOCK 
              KEY reva-chiave
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT 
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-reva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-reva-KEY-Asc
              IF DataSet1-reva-LOCK
                 READ reva PREVIOUS WITH LOCK
              ELSE
                 READ reva PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-reva-LOCK
                 READ reva NEXT WITH LOCK
              ELSE
                 READ reva NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM reva-reva-k-articolo-MERGE-SPLITBUF
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-reva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:reva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-reva TO TOTEM-ERR-STAT
           MOVE "reva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:reva, AfterDelete>
      * <TOTEM:END>
           .

       teva-teva-stato-MERGE-SPLITBUF.
           INITIALIZE teva-teva-stato-SPLITBUF
           MOVE teva-stato OF teva(1:1) TO teva-teva-stato-SPLITBUF(1:1)
           MOVE teva-chiave OF teva(1:12) TO 
           teva-teva-stato-SPLITBUF(2:12)
           .

       DataSet1-teva-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 MOVE Low-Value TO teva-chiave OF teva
              ELSE
                 MOVE High-Value TO teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 MOVE High-Value TO teva-chiave OF teva
              ELSE
                 MOVE Low-Value TO teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           .

      * teva
       DataSet1-teva-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY >= teva-chiave OF teva
              ELSE
                 START teva KEY <= teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY <= teva-chiave OF teva
              ELSE
                 START teva KEY >= teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY > teva-chiave OF teva
              ELSE
                 START teva KEY < teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 START teva KEY < teva-chiave OF teva
              ELSE
                 START teva KEY > teva-chiave OF teva
              END-IF
           END-EVALUATE
           .

       DataSet1-teva-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-LOCK
                 READ teva WITH LOCK 
                 KEY teva-chiave OF teva
              ELSE
                 READ teva WITH NO LOCK 
                 KEY teva-chiave OF teva
              END-IF
           END-EVALUATE
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT 
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 IF DataSet1-teva-LOCK
                    READ teva NEXT WITH LOCK
                 ELSE
                    READ teva NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-teva-LOCK
                    READ teva PREVIOUS WITH LOCK
                 ELSE
                    READ teva PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-teva-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-teva-KEY1-Asc
                 IF DataSet1-teva-LOCK
                    READ teva PREVIOUS WITH LOCK
                 ELSE
                    READ teva PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-teva-LOCK
                    READ teva NEXT WITH LOCK
                 ELSE
                    READ teva NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM teva-teva-stato-MERGE-SPLITBUF
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-teva-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:teva, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-teva TO TOTEM-ERR-STAT
           MOVE "teva" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:teva, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-INITSTART.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE Low-Value TO mag-chiave
           ELSE
              MOVE High-Value TO mag-chiave
           END-IF
           .

       DataSet1-tmagaz-INITEND.
           IF DataSet1-tmagaz-KEY-Asc
              MOVE High-Value TO mag-chiave
           ELSE
              MOVE Low-Value TO mag-chiave
           END-IF
           .

      * tmagaz
       DataSet1-tmagaz-START.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY >= mag-chiave
           ELSE
              START tmagaz KEY <= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-NOTGREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY <= mag-chiave
           ELSE
              START tmagaz KEY >= mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-GREATER.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY > mag-chiave
           ELSE
              START tmagaz KEY < mag-chiave
           END-IF
           .

       DataSet1-tmagaz-START-LESS.
           IF DataSet1-tmagaz-KEY-Asc
              START tmagaz KEY < mag-chiave
           ELSE
              START tmagaz KEY > mag-chiave
           END-IF
           .

       DataSet1-tmagaz-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmagaz-LOCK
              READ tmagaz WITH LOCK 
              KEY mag-chiave
           ELSE
              READ tmagaz WITH NO LOCK 
              KEY mag-chiave
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT 
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmagaz-KEY-Asc
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz PREVIOUS WITH LOCK
              ELSE
                 READ tmagaz PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmagaz-LOCK
                 READ tmagaz NEXT WITH LOCK
              ELSE
                 READ tmagaz NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmagaz-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmagaz TO TOTEM-ERR-STAT
           MOVE "tmagaz" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmagaz, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE tmp-emc-rec OF tmp-elmovc
           INITIALIZE reva-rec OF reva
           INITIALIZE teva-rec OF teva
           INITIALIZE mag-rec OF tmagaz
           .


      * GRID
       gd-mov-Content.
      * CELLS' SETTING
              MODIFY gd-mov, X = 2, Y = 1,
                CELL-DATA = "Anno",
      * CELLS' SETTING
              MODIFY gd-mov, X = 3, Y = 1,
                CELL-DATA = "Numero",
      * CELLS' SETTING
              MODIFY gd-mov, X = 4, Y = 1,
                CELL-DATA = "Riga",
      * CELLS' SETTING
              MODIFY gd-mov, X = 5, Y = 1,
                CELL-DATA = "Qta",
      * CELLS' SETTING
              MODIFY gd-mov, X = 6, Y = 1,
                CELL-DATA = "Data",
      * CELLS' SETTING
              MODIFY gd-mov, X = 7, Y = 1,
                CELL-DATA = "Magazzino",
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-elmovc-INITREC.
           INITIALIZE tmp-emc-rec OF tmp-elmovc
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-reva-INITREC.
           INITIALIZE reva-rec OF reva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-teva-INITREC.
           INITIALIZE teva-rec OF teva
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmagaz-INITREC.
           INITIALIZE mag-rec OF tmagaz
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           EVALUATE TOTEM-Form-Index ALSO TOTEM-Frame-Index
              WHEN 1 ALSO 0
                  PERFORM Form2-Buf-To-Fld
           END-EVALUATE
           .

       Form2-Open-Routine.
           PERFORM Form2-Scrn
           PERFORM Form2-Proc
           .

       Form2-Scrn.
           PERFORM Form2-Create-Win
           PERFORM Form2-Init-Value
           PERFORM Form2-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM Form2-DISPLAY
           .

       Form2-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 48,54,
              SIZE 137,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Small-Font,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE titolo,
              WITH SYSTEM MENU,
              USER-GRAY,
           VISIBLE 0,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen1-Event-Proc,
              HANDLE IS form2-Handle,
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY Form2 UPON form2-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-mov, DISPLAY-COLUMNS (1, 4, 16, 28, 40, 55, 69)
           .

       Form2-PROC.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeAccept>
           set CallManutenzione to false.
           perform Form3-Open-Routine.

           if not trovato
              perform FORM2-EXIT
           else                                  
              modify form2-Handle, visible = 1 
              move 2 to riga event-data-2
              modify gd-mov, CURSOR-Y = 2
              perform CAMBIA-FONT-RIGA
           end-if.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form2
                 ON EXCEPTION
                    PERFORM Form2-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterEndAccept>
           if CallManutenzione
              perform ORDINE-DA-GRIGLIA
              set CallManutenzione to false
           end-if

      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form2-Handle
           INITIALIZE Key-Status
           .

       Form2-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form2-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form2-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-ok2-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form2-CLEAR.
           PERFORM Form2-INIT-VALUE
           PERFORM Form2-DISPLAY
           .

       Form2-DISPLAY.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form2 UPON form2-Handle
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterDisplay>
      * <TOTEM:END>
           .

       Form2-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form2-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-mov-Content
           .

       Form2-DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           PERFORM Form2-DataSet1-Update-Key
           .

       Form2-DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           PERFORM Form2-DataSet1-Update-Key
           .

       Form2-DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-teva-KEY1-ORDER
           END-EVALUATE
           PERFORM Form2-DataSet1-Update-Key
           .

       Form2-DataSet1-Update-Key.
           MOVE teva-rec OF teva TO
                     Form2-MULKEY-TMPBUF
           PERFORM Form2-CLEAR
           PERFORM Form2-INIT-DATA
           MOVE Form2-MULKEY-TMPBUF TO
                     teva-rec OF teva
           PERFORM DataSet1-teva-Read
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-CURR
           PERFORM Form2-IUD-Display
           .

       Form2-DUPLICATE-MOVEKEY.
           .

       Form2-First.
           PERFORM Form2-DUMMY-FIRST
           PERFORM DataSet1-teva-INITSTART
           PERFORM DataSet1-teva-START
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeFirst>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Next
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterFirst>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY.
           PERFORM Form2-IUD-Display
           .

       Form2-Previous.
              PERFORM Form2-Buf-To-Fld
              PERFORM DataSet1-teva-START-LESS
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforePrevious>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Prev
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterPrevious>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-PREVIOUS
           PERFORM Form2-IUD-Display
           .

       Form2-Next.
              PERFORM Form2-Buf-To-Fld
              PERFORM DataSet1-teva-START-GREATER
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeNext>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Next
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterNext>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-NEXT
           PERFORM Form2-IUD-Display
           .
      
       Form2-Last.
           PERFORM Form2-DUMMY-LAST
           PERFORM DataSet1-teva-INITEND
           PERFORM DataSet1-teva-START-NOTGREATER
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeLast>
      * <TOTEM:END>
           PERFORM DataSet1-teva-Read-Prev
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterLast>
      * <TOTEM:END>
           PERFORM Form2-DUPLICATE-MOVEKEY.
           PERFORM Form2-IUD-Display
           .

       Form2-Curr.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeCurrent>
      * <TOTEM:END>
           PERFORM Form2-Buf-To-Fld
           PERFORM DataSet1-teva-Read
           PERFORM Form2-DUPLICATE-MOVEKEY
           PERFORM Form2-DUMMY-CURR
           PERFORM Form2-IUD-Display
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterCurrent>
      * <TOTEM:END>
           .

       Form2-IUD-Display.
           IF Valid-STATUS-teva
              PERFORM Form2-ALLGRID-RESET
              PERFORM Form2-Fld-To-Buf
              PERFORM Form2-NAVI-FOR-MASTERGRID
              PERFORM Form2-DISPLAY
           ELSE
              IF Form2-FLAG-REFRESH
                 CONTINUE
              ELSE
                 PERFORM Form2-Extended-File-Status
              END-IF
           END-IF
           .

       Form2-Add.
           PERFORM Form2-Buf-To-Fld
           PERFORM Form2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form2-DUMMY-ADD
           PERFORM DataSet1-teva-INITREC
           PERFORM Form2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeAdd>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-teva-Rec-Write
           IF Valid-STATUS-teva
              PERFORM Form2-RESUMMARY-INS
              PERFORM Form2-DUMMY-UPDATE-INIT
              MOVE "301" TO TOTEM-MSG-ID
              PERFORM Form2-IUD-Display
           END-IF
           PERFORM Form2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterAdd>
      * <TOTEM:END>
           .
     
       Form2-Update.
           PERFORM Form2-Buf-To-Fld
           PERFORM DataSet1-teva-START              
           IF NOT Valid-STATUS-teva
              PERFORM Form2-Extended-File-Status
              EXIT PARAGRAPH
           END-IF
           PERFORM DataSet1-teva-Read
           PERFORM Form2-Buf-To-Fld
           PERFORM Form2-VALIDATION-ROUTINE
           IF NOT TOTEM-CHECK-OK
               EXIT PARAGRAPH
           END-IF
           PERFORM Form2-DUMMY-UPDATE
           PERFORM Form2-Buf-To-Fld
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeUpdate>
      * <TOTEM:END>
      * write
           PERFORM DataSet1-teva-Rec-Rewrite
           IF Valid-STATUS-teva
              PERFORM Form2-RESUMMARY-DEL
              PERFORM Form2-DUMMY-UPDATE-INIT
              MOVE "302" TO TOTEM-MSG-ID
              PERFORM Form2-IUD-Display
           END-IF
           PERFORM Form2-ERR-CHECKING
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterUpdate>
      * <TOTEM:END>
           .

       Form2-Delete.
           MOVE "203" TO TOTEM-MSG-ID
           PERFORM MESSAGE-BOX-DISPLAY
           IF TOTEM-MSG-RETURN-VALUE NOT = 1
              INITIALIZE TOTEM-MSG-TEXT
              EXIT PARAGRAPH 
           END-IF
           MOVE SPACES TO TOTEM-TRANSACTION-FLAG
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeDelete>
      * <TOTEM:END>
           PERFORM Form2-DUMMY-DELETE
      * delete
           PERFORM Form2-Buf-To-Fld
           PERFORM DataSet1-teva-Rec-Delete
           IF Valid-STATUS-teva
              PERFORM Form2-CLEAR
              PERFORM Form2-DUMMY-DELETE-INIT
              MOVE "303" TO TOTEM-MSG-ID
              MOVE "00" to STATUS-teva
           END-IF
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterDelete>
      * <TOTEM:END>
           PERFORM Form2-ERR-CHECKING
           .

       Form2-NAVI-FOR-MASTERGRID.
           .

       Form2-ERR-CHECKING.
           IF Valid-STATUS-teva
              PERFORM Form2-SHOW-MSG-ROUTINE
           ELSE
              PERFORM Form2-Extended-File-Status
           END-IF
           .

       Form2-RESUMMARY-INS.
           .

       Form2-RESUMMARY-DEL.
           .


       Form2-DUMMY-FIRST.
           .

       Form2-DUMMY-PREVIOUS.
           .

       Form2-DUMMY-NEXT.
           .

       Form2-DUMMY-LAST.
           .

       Form2-DUMMY-CURR.
           .

       Form2-DUMMY-ADD.
           .

       Form2-DUMMY-UPDATE.
           .

       Form2-DUMMY-UPDATE-INIT.
           .

       Form2-DUMMY-DELETE.
           .

       Form2-DUMMY-DELETE-INIT.
           .

       Form2-Init-Value.
           MOVE titolo TO TOTEM-MSG-TITLE
      * FORM : Form2
           PERFORM DataSet1-INIT-RECORD
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, SetDefault>
      * <TOTEM:END>
           PERFORM Form2-FLD-TO-BUF
           .


       Form2-ALLGRID-RESET.
           .

      * for Form's Validation
       Form2-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form2-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterBufToFld>
      * <TOTEM:END>
           .

       Form2-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form2, FORM:Form2, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form2-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form2-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form2-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form2-SHOW-MSG-ROUTINE
           .

       Form2-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form2-DISPLAY-MESSAGE
           .

       Form2-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form2-Save-Status.
           MOVE DataSet1-teva-KEY1-ORDER TO TMP-Form2-KEY1-ORDER
           MOVE DataSet1-KEYIS TO TMP-Form2-KEYIS
           MOVE teva-rec OF teva TO 
              TMP-Form2-teva-RESTOREBUF
           .             

       Form2-Restore-Status.
           MOVE TMP-Form2-KEY1-ORDER TO DataSet1-teva-KEY1-ORDER
           MOVE TMP-Form2-KEYIS TO DataSet1-KEYIS
           MOVE TMP-Form2-teva-RESTOREBUF TO
              teva-rec OF teva
           PERFORM DataSet1-teva-START
           IF Valid-STATUS-teva
              PERFORM DataSet1-teva-Read-Next
           ELSE
              PERFORM DataSet1-teva-INITREC
           END-IF
           PERFORM UNTIL NOT Valid-STATUS-teva OR
              (Valid-STATUS-teva AND
                 teva-rec OF teva = 
                   TMP-Form2-teva-RESTOREBUF)
              PERFORM DataSet1-teva-Read-Next
           END-PERFORM
           .

       form3-Open-Routine.
           PERFORM form3-Scrn
           PERFORM form3-Proc
           .

       form3-Scrn.
           PERFORM form3-Create-Win
           PERFORM form3-Init-Value
           PERFORM form3-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form3-DISPLAY
           .

       form3-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 3,00,
              SIZE 50,00,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE form3-Event-Proc,
              HANDLE IS form3-Handle,
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form3 UPON form3-Handle
      * DISPLAY-COLUMNS settings
           .

       form3-PROC.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeAccept>
           call "w$mouse" using set-mouse-shape, wait-pointer
           modify gd-mov, reset-grid  = 1.
           modify gd-mov, mass-update = 1. 
           perform GD-MOV-CONTENT.
           perform CARICA-MOVIMENTI.
           modify gd-mov, mass-update = 0.

           call "w$mouse" using set-mouse-shape, arrow-pointer.

           perform Form3-Exit.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM form3-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form3-Handle
           INITIALIZE Key-Status
           .

       form3-Evaluate-Func.
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form3-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form3-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form3-CLEAR.
           PERFORM form3-INIT-VALUE
           PERFORM form3-DISPLAY
           .

       form3-DISPLAY.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form3 UPON form3-Handle
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterDisplay>
      * <TOTEM:END>
           .

       form3-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form3-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       form3-Init-Value.
      * <TOTEM:EPT. FORM:form3, FORM:form3, SetDefault>
      * <TOTEM:END>
           PERFORM form3-FLD-TO-BUF
           .


       form3-ALLGRID-RESET.
           .

      * for Form's Validation
       form3-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form3-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterBufToFld>
      * <TOTEM:END>
           .

       form3-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterFldToBuf>
      * <TOTEM:END>
           .

       form3-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form3-BUF-TO-FLD.
           move 0 to scelta.
           .
       form3-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form3-SHOW-MSG-ROUTINE
           .

       form3-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form3-DISPLAY-MESSAGE
           .

       form3-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form3-Save-Status.
           .             

       form3-Restore-Status.
           .



       Screen1-Event-Proc.
           .

       Screen1-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 1 ALSO
                    form2-Handle 
              PERFORM gd-ordini-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

       form3-Event-Proc.
           .

      * USER DEFINE PARAGRAPH
       CAMBIA-FONT-RIGA.
      * <TOTEM:PARA. CAMBIA-FONT-RIGA>
           modify gd-mov(riga), ROW-FONT = small-font.

           modify gd-mov(riga, 1),
                  bitmap        = elemento-bmp,
                  bitmap-number = 1,
                  bitmap-width  = 16.

           move event-data-2 to riga.
           modify gd-mov(riga), ROW-FONT = font-evidenzia-griglia.


           modify gd-mov(riga, 1),
                  bitmap        = elemento-bmp,
                  bitmap-number = 2,
                  bitmap-width  = 16 
           .
      * <TOTEM:END>

       CARICA-MOVIMENTI.
      * <TOTEM:PARA. CARICA-MOVIMENTI>
           move link-rof-chiave to reva-chiave-ordf

           start reva key not < reva-chiave-ordf
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read reva next no lock
                       at end
                          exit perform
                    end-read
                    if link-rof-chiave not = reva-chiave-ordf
                       exit perform
                    end-if
                    move reva-anno    to tmp-emc-anno
                    move reva-numero  to tmp-emc-numero
                    move reva-riga    to tmp-emc-prg
                    write tmp-emc-rec
                       invalid
                          continue
                    end-write
                 end-perform
           end-start.

           set trovato to false.

           modify gd-mov, mass-update = 1.

           move low-value to tmp-emc-chiave
           start tmp-elmovc key not < tmp-emc-chiave
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read tmp-elmovc next 
                       at end
                          exit perform
                    end-read
                    move tmp-emc-anno    to teva-anno
                    move tmp-emc-numero  to teva-numero
                    read teva no lock
                       invalid 
                          continue
                    end-read

                    move tmp-emc-anno    to reva-anno  
                    move tmp-emc-numero  to reva-numero
                    move tmp-emc-prg     to reva-riga  
                    read reva no lock
                       invalid 
                          continue
                       not invalid
                          perform METTI-IN-GRIGLIA
                    end-read

                 end-perform
           end-start.
           modify gd-mov, mass-update = 0 
           .
      * <TOTEM:END>

       CHIAMA-MANUTENZIONE.
      * <TOTEM:PARA. CHIAMA-MANUTENZIONE>
           move como-anno          to LinkAnno.
           move como-numero-ordine to linkNumero.

           modify form2-Handle, visible false.
           call   "gbozze" using lk-blockpgm
                                   user-codi
                                   1|livello-abil
                                   gbozze-linkage.
           cancel "gbozze".                 
           modify form2-Handle, visible true.

           inquire gd-mov, cursor-y in riga.
           
           set CallManutenzione to false
           if RicaricaGrid
              move riga to store-riga
              perform FORM3-OPEN-ROUTINE
              move store-riga to riga
           end-if.
           
           move riga to event-data-2.
           modify gd-mov, CURSOR-Y = riga.
           perform CAMBIA-FONT-RIGA 
           .
      * <TOTEM:END>

       METTI-IN-GRIGLIA.
      * <TOTEM:PARA. METTI-IN-GRIGLIA>
           move teva-anno       to Col-anno.

           move teva-numero     to Col-numero

           move teva-data       to como-data.
           perform DATE-TO-SCREEN.
           move como-data       to col-data.

           move teva-mag  to mag-codice
           read tmagaz
              invalid
                 move "** NON TROVATO **"   to mag-descrizione
           end-read.
           move mag-descrizione to Col-mag
           
           move reva-riga              to col-riga
           move reva-qta               to col-qta

           modify gd-mov, record-to-add rec-grid

           inquire gd-mov, last-row = riga.

           set trovato to true 
           .
      * <TOTEM:END>

       ORDINE-DA-GRIGLIA.
      * <TOTEM:PARA. ORDINE-DA-GRIGLIA>
           inquire gd-mov(riga), record-data = rec-grid.

           move col-anno            to como-anno.
           move Col-numero          to como-numero-ordine.
           move riga                to como-riga.

           if como-anno not = 0 and como-numero-ordine not = 0

              perform CHIAMA-MANUTENZIONE

              move como-riga to riga, event-data-2
              modify gd-mov, cursor-y riga
              perform SPOSTAMENTO
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "utydata.cpy" 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire gd-mov, last-row in tot-righe.
           if event-data-2 < 2 move 2 to event-data-2 end-if.
           if event-data-2 > tot-righe move tot-righe to event-data-2 
           end-if.
           if riga not = event-data-2 
              perform CAMBIA-FONT-RIGA
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       ginqui-Ev-Before-Program.
      * <TOTEM:PARA. ginqui-Ev-Before-Program>
      *     perform CALCOLA-COLORE-TRASPARENTE.

      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA, font-evidenzia-griglia
           MOVE 10               TO WFONT-SIZE
           MOVE "Arial"          TO WFONT-NAME
           SET WFONT-BOLD        TO true
           SET WFONT-ITALIC      TO true
           SET WFONT-UNDERLINE   TO FALSE
           SET WFONT-STRIKEOUT   TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0                TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     font-evidenzia-griglia, WFONT-DATA


           copy resource "elemento.bmp".
           call "W$BITMAP" using wbitmap-load, "elemento.bmp"
                          giving elemento-bmp.

           accept path-tmp-elmovc from environment "TEMP"
           accept como-data  from century-date
           accept como-ora   from time

           inspect path-tmp-elmovc replacing trailing space by low-value
           string path-tmp-elmovc  delimited by low-value
                  "/tmp-elmovc_"   delimited by size
                  como-data        delimited by size
                  "_"              delimited by size
                  como-ora         delimited by size
                  into path-tmp-elmovc

           inspect path-tmp-elmovc replacing trailing low-value by space
           open output tmp-elmovc
           close tmp-elmovc
           .
      * <TOTEM:END>
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           DESTROY font-evidenzia-griglia.

           call "W$BITMAP" using wbitmap-destroy, elemento-bmp.

           delete file tmp-elmovc 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Begin-Entry>
           inquire gd-mov, entry-reason in como-x.
           set event-action to event-action-fail-terminate.
           evaluate como-x
           when X"00"|doppio click
           when X"0D"|invio
                inquire gd-mov, CURSOR-Y = riga
                set CallManutenzione to true
           end-evaluate 
           .
      * <TOTEM:END>
       pb-ok2-LinkTo.
      * <TOTEM:PARA. pb-ok2-LinkTo>
           inquire gd-mov, CURSOR-Y = riga.

           perform ORDINE-DA-GRIGLIA 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-ordini-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-ordini-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       pb-ok2-BeforeProcedure.
      * <TOTEM:PARA. pb-ok2-BeforeProcedure>
           modify pb-ok2, bitmap-number 2
           .
      * <TOTEM:END>
       pb-ok2-AfterProcedure.
      * <TOTEM:PARA. pb-ok2-AfterProcedure>
           modify pb-ok2, bitmap-number 1
           .
      * <TOTEM:END>
       pb-annulla2-BeforeProcedure.
      * <TOTEM:PARA. pb-annulla2-BeforeProcedure>
           modify pb-annulla2, bitmap-number 2
           .
      * <TOTEM:END>
       pb-annulla2-AfterProcedure.
      * <TOTEM:PARA. pb-annulla2-AfterProcedure>
           modify pb-annulla2, bitmap-number 1
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

