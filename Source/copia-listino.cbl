      *{TOTEM}PRG-COMMENT
      * copia-listino.Cbl
      * copia-listino.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          copia-listino.
       AUTHOR.              ANDREA EVENTI.
       DATE-WRITTEN.        martedì 1 aprile 2014 19:14:03.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:copia-listino, INIT:copia-listino, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tlistini.sl".
           COPY "rlistini.sl".
           COPY "rlistini.sl"
                REPLACING ==rlistini== BY ==rlistini1==,
                          ==STATUS-rlistini== BY ==STATUS-rlistini1==
                .
           COPY "nlistini.sl".
           COPY "nlistini.sl"
                REPLACING ==nlistini== BY ==nlistini1==,
                          ==STATUS-nlistini== BY ==STATUS-nlistini1==
                .
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tlistini.fd".
           COPY "rlistini.fd".
           COPY "rlistini.fd"
                REPLACING ==rlistini== BY ==rlistini1==,
                          ==STATUS-rlistini== BY ==STATUS-rlistini1==
                .
           COPY "nlistini.fd".
           COPY "nlistini.fd"
                REPLACING ==nlistini== BY ==nlistini1==,
                          ==STATUS-nlistini== BY ==STATUS-nlistini1==
                .
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "F:\Lubex\GESLUX\Copylib\UTYDATA.DEF".
               COPY "F:\Lubex\GESLUX\Copylib\comune.def".
               COPY "F:\Lubex\GESLUX\Copylib\custom.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       77 STATUS-rlistini  PIC  X(2).
           88 Valid-STATUS-rlistini VALUE IS "00" THRU "09". 
       77 STATUS-tlistini  PIC  X(2).
           88 Valid-STATUS-tlistini VALUE IS "00" THRU "09". 
       77 STATUS-rlistini1 PIC  X(2).
           88 VALID-STATUS-rlistini1 VALUE IS "00" THRU "09". 
       77 STATUS-nlistini  PIC  X(2).
           88 Valid-STATUS-nlistini VALUE IS "00" THRU "09". 
       77 STATUS-nlistini1 PIC  X(2).
           88 VALID-STATUS-nlistini1 VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 TMP-DataSet1-tlistini-BUF     PIC X(257).
       77 TMP-DataSet1-rlistini-BUF     PIC X(448).
       77 TMP-DataSet1-rlistini1-BUF     PIC X(448).
       77 TMP-DataSet1-nlistini-BUF     PIC X(824).
       77 TMP-DataSet1-nlistini1-BUF     PIC X(824).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tlistini-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tlistini-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tlistini-KEY1-Asc  VALUE "A".
          88 DataSet1-tlistini-KEY1-Desc VALUE "D".
       77 DataSet1-rlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rlistini-LOCK  VALUE "Y".
       77 DataSet1-rlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rlistini-KEY-Asc  VALUE "A".
          88 DataSet1-rlistini-KEY-Desc VALUE "D".
       77 DataSet1-rlistini1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rlistini1-LOCK  VALUE "Y".
       77 DataSet1-rlistini1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rlistini1-KEY-Asc  VALUE "A".
          88 DataSet1-rlistini1-KEY-Desc VALUE "D".
       77 DataSet1-nlistini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-nlistini-LOCK  VALUE "Y".
       77 DataSet1-nlistini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-nlistini-KEY-Asc  VALUE "A".
          88 DataSet1-nlistini-KEY-Desc VALUE "D".
       77 DataSet1-nlistini1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-nlistini1-LOCK  VALUE "Y".
       77 DataSet1-nlistini1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-nlistini1-KEY-Asc  VALUE "A".
          88 DataSet1-nlistini1-KEY-Desc VALUE "D".

       77 rlistini-rlis-k-art-SPLITBUF  PIC X(33).
       77 rlistini-rlis-k-descr-SPLITBUF  PIC X(66).
       77 rlistini1-rlis-k-art-SPLITBUF  PIC X(33).
       77 rlistini1-rlis-k-descr-SPLITBUF  PIC X(66).

      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COPIA-LISTINO.LKS".
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING copia-listino-linkage, LK-BLOCKPGM, 
           USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:copia-listino, INIT:copia-listino, BeforeDeclarative>
      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
      *    Before Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:copia-listino, INIT:copia-listino, BeforeDestroyResource>
      * <TOTEM:END>
      *    After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
           PERFORM copia-listino-Ev-After-Init
           .
    
       INIT-FONT.
           .

       INIT-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tlistini
           PERFORM OPEN-rlistini
           PERFORM OPEN-rlistini1
           PERFORM OPEN-nlistini
           PERFORM OPEN-nlistini1
      *    After Open
           .

       OPEN-tlistini.
      * <TOTEM:EPT. INIT:copia-listino, FD:tlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O tlistini
           IF STATUS-tlistini = "35"
              OPEN OUTPUT tlistini
                IF Valid-STATUS-tlistini
                   CLOSE tlistini
                   OPEN I-O tlistini
                END-IF
           END-IF
           IF NOT Valid-STATUS-tlistini
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:copia-listino, FD:tlistini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rlistini.
      * <TOTEM:EPT. INIT:copia-listino, FD:rlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rlistini
           IF NOT Valid-STATUS-rlistini
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:copia-listino, FD:rlistini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rlistini1.
      * <TOTEM:EPT. INIT:copia-listino, FD:rlistini1, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O rlistini1
           IF STATUS-rlistini1 = "35"
              OPEN OUTPUT rlistini1
                IF VALID-STATUS-rlistini1
                   CLOSE rlistini1
                   OPEN I-O rlistini1
                END-IF
           END-IF
           IF NOT VALID-STATUS-rlistini1
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:copia-listino, FD:rlistini1, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-nlistini.
      * <TOTEM:EPT. INIT:copia-listino, FD:nlistini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT nlistini
           IF NOT Valid-STATUS-nlistini
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:copia-listino, FD:nlistini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-nlistini1.
      * <TOTEM:EPT. INIT:copia-listino, FD:nlistini1, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O nlistini1
           IF STATUS-nlistini1 = "35"
              OPEN OUTPUT nlistini1
                IF VALID-STATUS-nlistini1
                   CLOSE nlistini1
                   OPEN I-O nlistini1
                END-IF
           END-IF
           IF NOT VALID-STATUS-nlistini1
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:copia-listino, FD:nlistini1, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tlistini
           PERFORM CLOSE-rlistini
           PERFORM CLOSE-rlistini1
           PERFORM CLOSE-nlistini
           PERFORM CLOSE-nlistini1
      *    After Close
           .

       CLOSE-tlistini.
      * <TOTEM:EPT. INIT:copia-listino, FD:tlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE tlistini
           .

       CLOSE-rlistini.
      * <TOTEM:EPT. INIT:copia-listino, FD:rlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE rlistini
           .

       CLOSE-rlistini1.
      * <TOTEM:EPT. INIT:copia-listino, FD:rlistini1, BeforeClose>
      * <TOTEM:END>
           CLOSE rlistini1
           .

       CLOSE-nlistini.
      * <TOTEM:EPT. INIT:copia-listino, FD:nlistini, BeforeClose>
      * <TOTEM:END>
           CLOSE nlistini
           .

       CLOSE-nlistini1.
      * <TOTEM:EPT. INIT:copia-listino, FD:nlistini1, BeforeClose>
      * <TOTEM:END>
           CLOSE nlistini1
           .

       DataSet1-tlistini-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 MOVE Low-Value TO tlis-chiave OF tlistini
              ELSE
                 MOVE High-Value TO tlis-chiave OF tlistini
              END-IF
           END-EVALUATE
           .

       DataSet1-tlistini-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 MOVE High-Value TO tlis-chiave OF tlistini
              ELSE
                 MOVE Low-Value TO tlis-chiave OF tlistini
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tlistini-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tlistini-KEY1-ORDER
           END-EVALUATE
           .

      * tlistini
       DataSet1-tlistini-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 START tlistini KEY >= tlis-chiave OF tlistini
              ELSE
                 START tlistini KEY <= tlis-chiave OF tlistini
              END-IF
           END-EVALUATE
           .

       DataSet1-tlistini-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 START tlistini KEY <= tlis-chiave OF tlistini
              ELSE
                 START tlistini KEY >= tlis-chiave OF tlistini
              END-IF
           END-EVALUATE
           .

       DataSet1-tlistini-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 START tlistini KEY > tlis-chiave OF tlistini
              ELSE
                 START tlistini KEY < tlis-chiave OF tlistini
              END-IF
           END-EVALUATE
           .

       DataSet1-tlistini-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 START tlistini KEY < tlis-chiave OF tlistini
              ELSE
                 START tlistini KEY > tlis-chiave OF tlistini
              END-IF
           END-EVALUATE
           .

       DataSet1-tlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-LOCK
                 READ tlistini WITH LOCK 
                 KEY tlis-chiave OF tlistini
              ELSE
                 READ tlistini WITH NO LOCK 
                 KEY tlis-chiave OF tlistini
              END-IF
           END-EVALUATE
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT 
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 IF DataSet1-tlistini-LOCK
                    READ tlistini NEXT WITH LOCK
                 ELSE
                    READ tlistini NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tlistini-LOCK
                    READ tlistini PREVIOUS WITH LOCK
                 ELSE
                    READ tlistini PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tlistini-KEY1-Asc
                 IF DataSet1-tlistini-LOCK
                    READ tlistini PREVIOUS WITH LOCK
                 ELSE
                    READ tlistini PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tlistini-LOCK
                    READ tlistini NEXT WITH LOCK
                 ELSE
                    READ tlistini NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeWrite>
      * <TOTEM:END>
           WRITE tlis-rec OF tlistini.
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE tlis-rec OF tlistini.
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, BeforeDelete>
      * <TOTEM:END>
           DELETE tlistini.
           MOVE STATUS-tlistini TO TOTEM-ERR-STAT
           MOVE "tlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tlistini, AfterDelete>
      * <TOTEM:END>
           .

       rlistini-rlis-k-art-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-art-SPLITBUF
           MOVE rlis-articolo OF rlistini(1:6) TO 
           rlistini-rlis-k-art-SPLITBUF(1:6)
           MOVE rlis-chiave-ricerca OF rlistini(1:26) TO 
           rlistini-rlis-k-art-SPLITBUF(7:26)
           .

       rlistini-rlis-k-descr-MERGE-SPLITBUF.
           INITIALIZE rlistini-rlis-k-descr-SPLITBUF
           MOVE rlis-codice OF rlistini(1:15) TO 
           rlistini-rlis-k-descr-SPLITBUF(1:15)
           MOVE rlis-des-libera OF rlistini(1:50) TO 
           rlistini-rlis-k-descr-SPLITBUF(16:50)
           .

       DataSet1-rlistini-INITSTART.
           IF DataSet1-rlistini-KEY-Asc
              MOVE Low-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE High-Value TO rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-INITEND.
           IF DataSet1-rlistini-KEY-Asc
              MOVE High-Value TO rlis-chiave OF rlistini
           ELSE
              MOVE Low-Value TO rlis-chiave OF rlistini
           END-IF
           .

      * rlistini
       DataSet1-rlistini-START.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY >= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY <= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-NOTGREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY <= rlis-chiave OF rlistini
           ELSE
              START rlistini KEY >= rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-GREATER.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY > rlis-chiave OF rlistini
           ELSE
              START rlistini KEY < rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-START-LESS.
           IF DataSet1-rlistini-KEY-Asc
              START rlistini KEY < rlis-chiave OF rlistini
           ELSE
              START rlistini KEY > rlis-chiave OF rlistini
           END-IF
           .

       DataSet1-rlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rlistini-LOCK
              READ rlistini WITH LOCK 
              KEY rlis-chiave OF rlistini
           ELSE
              READ rlistini WITH NO LOCK 
              KEY rlis-chiave OF rlistini
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT 
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rlistini-KEY-Asc
              IF DataSet1-rlistini-LOCK
                 READ rlistini PREVIOUS WITH LOCK
              ELSE
                 READ rlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini-LOCK
                 READ rlistini NEXT WITH LOCK
              ELSE
                 READ rlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rlistini TO TOTEM-ERR-STAT
           MOVE "rlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini, AfterDelete>
      * <TOTEM:END>
           .

       rlistini1-rlis-k-art-MERGE-SPLITBUF.
           INITIALIZE rlistini1-rlis-k-art-SPLITBUF
           MOVE rlis-articolo OF rlistini(1:6) TO 
           rlistini1-rlis-k-art-SPLITBUF(1:6)
           MOVE rlis-chiave-ricerca OF rlistini(1:26) TO 
           rlistini1-rlis-k-art-SPLITBUF(7:26)
           .

       rlistini1-rlis-k-descr-MERGE-SPLITBUF.
           INITIALIZE rlistini1-rlis-k-descr-SPLITBUF
           MOVE rlis-codice OF rlistini(1:15) TO 
           rlistini1-rlis-k-descr-SPLITBUF(1:15)
           MOVE rlis-des-libera OF rlistini(1:50) TO 
           rlistini1-rlis-k-descr-SPLITBUF(16:50)
           .

       DataSet1-rlistini1-INITSTART.
           IF DataSet1-rlistini1-KEY-Asc
              MOVE Low-Value TO rlis-chiave OF rlistini1
           ELSE
              MOVE High-Value TO rlis-chiave OF rlistini1
           END-IF
           .

       DataSet1-rlistini1-INITEND.
           IF DataSet1-rlistini1-KEY-Asc
              MOVE High-Value TO rlis-chiave OF rlistini1
           ELSE
              MOVE Low-Value TO rlis-chiave OF rlistini1
           END-IF
           .

      * rlistini1
       DataSet1-rlistini1-START.
           IF DataSet1-rlistini1-KEY-Asc
              START rlistini1 KEY >= rlis-chiave OF rlistini1
           ELSE
              START rlistini1 KEY <= rlis-chiave OF rlistini1
           END-IF
           .

       DataSet1-rlistini1-START-NOTGREATER.
           IF DataSet1-rlistini1-KEY-Asc
              START rlistini1 KEY <= rlis-chiave OF rlistini1
           ELSE
              START rlistini1 KEY >= rlis-chiave OF rlistini1
           END-IF
           .

       DataSet1-rlistini1-START-GREATER.
           IF DataSet1-rlistini1-KEY-Asc
              START rlistini1 KEY > rlis-chiave OF rlistini1
           ELSE
              START rlistini1 KEY < rlis-chiave OF rlistini1
           END-IF
           .

       DataSet1-rlistini1-START-LESS.
           IF DataSet1-rlistini1-KEY-Asc
              START rlistini1 KEY < rlis-chiave OF rlistini1
           ELSE
              START rlistini1 KEY > rlis-chiave OF rlistini1
           END-IF
           .

       DataSet1-rlistini1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rlistini1-LOCK
              READ rlistini1 WITH LOCK 
              KEY rlis-chiave OF rlistini1
           ELSE
              READ rlistini1 WITH NO LOCK 
              KEY rlis-chiave OF rlistini1
           END-IF
           PERFORM rlistini1-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini1-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini1 TO TOTEM-ERR-STAT 
           MOVE "rlistini1" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rlistini1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rlistini1-KEY-Asc
              IF DataSet1-rlistini1-LOCK
                 READ rlistini1 NEXT WITH LOCK
              ELSE
                 READ rlistini1 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini1-LOCK
                 READ rlistini1 PREVIOUS WITH LOCK
              ELSE
                 READ rlistini1 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini1-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini1-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini1 TO TOTEM-ERR-STAT
           MOVE "rlistini1" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rlistini1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rlistini1-KEY-Asc
              IF DataSet1-rlistini1-LOCK
                 READ rlistini1 PREVIOUS WITH LOCK
              ELSE
                 READ rlistini1 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rlistini1-LOCK
                 READ rlistini1 NEXT WITH LOCK
              ELSE
                 READ rlistini1 NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rlistini1-rlis-k-art-MERGE-SPLITBUF
           PERFORM rlistini1-rlis-k-descr-MERGE-SPLITBUF
           MOVE STATUS-rlistini1 TO TOTEM-ERR-STAT
           MOVE "rlistini1" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rlistini1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeWrite>
      * <TOTEM:END>
           WRITE rlis-rec OF rlistini1.
           MOVE STATUS-rlistini1 TO TOTEM-ERR-STAT
           MOVE "rlistini1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeRewrite>
      * <TOTEM:END>
           REWRITE rlis-rec OF rlistini1.
           MOVE STATUS-rlistini1 TO TOTEM-ERR-STAT
           MOVE "rlistini1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rlistini1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, BeforeDelete>
      * <TOTEM:END>
           DELETE rlistini1.
           MOVE STATUS-rlistini1 TO TOTEM-ERR-STAT
           MOVE "rlistini1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rlistini1, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-nlistini-INITSTART.
           IF DataSet1-nlistini-KEY-Asc
              MOVE Low-Value TO nlis-chiave OF nlistini
           ELSE
              MOVE High-Value TO nlis-chiave OF nlistini
           END-IF
           .

       DataSet1-nlistini-INITEND.
           IF DataSet1-nlistini-KEY-Asc
              MOVE High-Value TO nlis-chiave OF nlistini
           ELSE
              MOVE Low-Value TO nlis-chiave OF nlistini
           END-IF
           .

      * nlistini
       DataSet1-nlistini-START.
           IF DataSet1-nlistini-KEY-Asc
              START nlistini KEY >= nlis-chiave OF nlistini
           ELSE
              START nlistini KEY <= nlis-chiave OF nlistini
           END-IF
           .

       DataSet1-nlistini-START-NOTGREATER.
           IF DataSet1-nlistini-KEY-Asc
              START nlistini KEY <= nlis-chiave OF nlistini
           ELSE
              START nlistini KEY >= nlis-chiave OF nlistini
           END-IF
           .

       DataSet1-nlistini-START-GREATER.
           IF DataSet1-nlistini-KEY-Asc
              START nlistini KEY > nlis-chiave OF nlistini
           ELSE
              START nlistini KEY < nlis-chiave OF nlistini
           END-IF
           .

       DataSet1-nlistini-START-LESS.
           IF DataSet1-nlistini-KEY-Asc
              START nlistini KEY < nlis-chiave OF nlistini
           ELSE
              START nlistini KEY > nlis-chiave OF nlistini
           END-IF
           .

       DataSet1-nlistini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-nlistini-LOCK
              READ nlistini WITH LOCK 
              KEY nlis-chiave OF nlistini
           ELSE
              READ nlistini WITH NO LOCK 
              KEY nlis-chiave OF nlistini
           END-IF
           MOVE STATUS-nlistini TO TOTEM-ERR-STAT 
           MOVE "nlistini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-nlistini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-nlistini-KEY-Asc
              IF DataSet1-nlistini-LOCK
                 READ nlistini NEXT WITH LOCK
              ELSE
                 READ nlistini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-nlistini-LOCK
                 READ nlistini PREVIOUS WITH LOCK
              ELSE
                 READ nlistini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-nlistini TO TOTEM-ERR-STAT
           MOVE "nlistini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-nlistini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-nlistini-KEY-Asc
              IF DataSet1-nlistini-LOCK
                 READ nlistini PREVIOUS WITH LOCK
              ELSE
                 READ nlistini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-nlistini-LOCK
                 READ nlistini NEXT WITH LOCK
              ELSE
                 READ nlistini NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-nlistini TO TOTEM-ERR-STAT
           MOVE "nlistini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-nlistini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-nlistini TO TOTEM-ERR-STAT
           MOVE "nlistini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-nlistini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-nlistini TO TOTEM-ERR-STAT
           MOVE "nlistini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-nlistini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-nlistini TO TOTEM-ERR-STAT
           MOVE "nlistini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-nlistini1-INITSTART.
           IF DataSet1-nlistini1-KEY-Asc
              MOVE Low-Value TO nlis-chiave OF nlistini1
           ELSE
              MOVE High-Value TO nlis-chiave OF nlistini1
           END-IF
           .

       DataSet1-nlistini1-INITEND.
           IF DataSet1-nlistini1-KEY-Asc
              MOVE High-Value TO nlis-chiave OF nlistini1
           ELSE
              MOVE Low-Value TO nlis-chiave OF nlistini1
           END-IF
           .

      * nlistini1
       DataSet1-nlistini1-START.
           IF DataSet1-nlistini1-KEY-Asc
              START nlistini1 KEY >= nlis-chiave OF nlistini1
           ELSE
              START nlistini1 KEY <= nlis-chiave OF nlistini1
           END-IF
           .

       DataSet1-nlistini1-START-NOTGREATER.
           IF DataSet1-nlistini1-KEY-Asc
              START nlistini1 KEY <= nlis-chiave OF nlistini1
           ELSE
              START nlistini1 KEY >= nlis-chiave OF nlistini1
           END-IF
           .

       DataSet1-nlistini1-START-GREATER.
           IF DataSet1-nlistini1-KEY-Asc
              START nlistini1 KEY > nlis-chiave OF nlistini1
           ELSE
              START nlistini1 KEY < nlis-chiave OF nlistini1
           END-IF
           .

       DataSet1-nlistini1-START-LESS.
           IF DataSet1-nlistini1-KEY-Asc
              START nlistini1 KEY < nlis-chiave OF nlistini1
           ELSE
              START nlistini1 KEY > nlis-chiave OF nlistini1
           END-IF
           .

       DataSet1-nlistini1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-nlistini1-LOCK
              READ nlistini1 WITH LOCK 
              KEY nlis-chiave OF nlistini1
           ELSE
              READ nlistini1 WITH NO LOCK 
              KEY nlis-chiave OF nlistini1
           END-IF
           MOVE STATUS-nlistini1 TO TOTEM-ERR-STAT 
           MOVE "nlistini1" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-nlistini1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-nlistini1-KEY-Asc
              IF DataSet1-nlistini1-LOCK
                 READ nlistini1 NEXT WITH LOCK
              ELSE
                 READ nlistini1 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-nlistini1-LOCK
                 READ nlistini1 PREVIOUS WITH LOCK
              ELSE
                 READ nlistini1 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-nlistini1 TO TOTEM-ERR-STAT
           MOVE "nlistini1" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-nlistini1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-nlistini1-KEY-Asc
              IF DataSet1-nlistini1-LOCK
                 READ nlistini1 PREVIOUS WITH LOCK
              ELSE
                 READ nlistini1 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-nlistini1-LOCK
                 READ nlistini1 NEXT WITH LOCK
              ELSE
                 READ nlistini1 NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-nlistini1 TO TOTEM-ERR-STAT
           MOVE "nlistini1" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-nlistini1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeWrite>
      * <TOTEM:END>
           WRITE nlis-rec OF nlistini1.
           MOVE STATUS-nlistini1 TO TOTEM-ERR-STAT
           MOVE "nlistini1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-nlistini1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeRewrite>
      * <TOTEM:END>
           REWRITE nlis-rec OF nlistini1.
           MOVE STATUS-nlistini1 TO TOTEM-ERR-STAT
           MOVE "nlistini1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-nlistini1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, BeforeDelete>
      * <TOTEM:END>
           DELETE nlistini1.
           MOVE STATUS-nlistini1 TO TOTEM-ERR-STAT
           MOVE "nlistini1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:nlistini1, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE tlis-rec OF tlistini
           INITIALIZE rlis-rec OF rlistini
           INITIALIZE rlis-rec OF rlistini1
           INITIALIZE nlis-rec OF nlistini
           INITIALIZE nlis-rec OF nlistini1
           .


      * FD's Initialize Paragraph
       DataSet1-tlistini-INITREC.
           INITIALIZE tlis-rec OF tlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rlistini-INITREC.
           INITIALIZE rlis-rec OF rlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rlistini1-INITREC.
           INITIALIZE rlis-rec OF rlistini1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-nlistini-INITREC.
           INITIALIZE nlis-rec OF nlistini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-nlistini1-INITREC.
           INITIALIZE nlis-rec OF nlistini1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .



      * USER DEFINE PARAGRAPH
       VAL-TESTA.
      * <TOTEM:PARA. VAL-TESTA>
           move clis-forn-from     to tlis-codice

           read tlistini no lock
              invalid
                 continue
           end-read

           move clis-forn-to    to tlis-codice

           move como-data to tlis-data-creazione
                             tlis-data-ultima-modifica
           move como-ora  to tlis-ora-creazione
                             tlis-ora-ultima-modifica
           move user-codi to tlis-utente-creazione
                             tlis-utente-ultima-modifica
           write tlis-rec
              invalid
                 rewrite tlis-rec
           end-write
           .
      * <TOTEM:END>

       VAL-RIGHE.
      * <TOTEM:PARA. VAL-RIGHE>
      *    cancello tutti i lis-km di destinazione
           move clis-forn-to    to rlis-codice of rlistini1
           move low-value       to rlis-articolo of rlistini1


           start rlistini1 key not < rlis-chiave of rlistini1
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read rlistini1 next
                       at end
                          exit perform
                    end-read
                    if clis-forn-to not = rlis-codice of rlistini1 
                       exit perform
                    end-if
                    delete rlistini1 record
                 end-perform
           end-start.

           move clis-forn-from     to rlis-codice of rlistini
           move low-value          to rlis-articolo of rlistini

           start rlistini key not < rlis-chiave of rlistini
              invalid
                 continue
              not invalid
                 perform until 1 = 2
                    read rlistini next
                       at end
                          exit perform
                    end-read
                    if clis-forn-from 
                                not = rlis-codice of rlistini 
                       exit perform
                    end-if

                    move rlis-rec of rlistini  to rlis-rec of rlistini1
                    move clis-forn-to    to rlis-codice of rlistini1


                    move como-data to rlis-data-creazione of rlistini1
                                      rlis-data-modifica of rlistini1
                    move como-ora  to rlis-ora-creazione of rlistini1
                                      rlis-ora-modifica of rlistini1
                    move user-codi to rlis-utente-creazione of rlistini1
                                      rlis-utente-modifica of rlistini1
                    write rlis-rec of rlistini1
                       invalid
                          rewrite rlis-rec of rlistini1
                    end-write
                 end-perform
           end-start 
           .
      * <TOTEM:END>

       VAL-NOTE.
      * <TOTEM:PARA. VAL-NOTE>
      *    cancello tutti i lis-km di destinazione
           move clis-forn-to to nlis-tlis-codice of nlistini1.
           move low-value    to nlis-num-nota    of nlistini1.

           start nlistini1 key >= nlis-chiave of nlistini1
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read nlistini1 next
                       at end
                          exit perform
                    end-read
                    if clis-forn-to not = nlis-tlis-codice of nlistini1 
                       exit perform
                    end-if
                    delete nlistini1 record
                 end-perform
           end-start.

           move clis-forn-from to nlis-tlis-codice of nlistini.
           move low-value      to nlis-num-nota    of nlistini.

           start nlistini key >= nlis-chiave of nlistini
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read nlistini next at end exit perform end-read
                    if clis-forn-from not = nlis-tlis-codice of 
           nlistini 
                       exit perform
                    end-if

                    move nlis-rec of nlistini  to nlis-rec         of 
           nlistini1
                    move clis-forn-to          to nlis-tlis-codice of 
           nlistini1

                    move como-data to nlis-data-creazione         of 
           nlistini1
                                      nlis-data-ultima-modifica   of 
           nlistini1
                    move como-ora  to nlis-ora-creazione          of 
           nlistini1
                                      nlis-ora-ultima-modifica    of 
           nlistini1
                    move user-codi to nlis-utente-creazione       of 
           nlistini1
                                      nlis-utente-ultima-modifica of 
           nlistini1
                    write nlis-rec of nlistini1
                          invalid rewrite nlis-rec of nlistini1
                    end-write
                 end-perform
           end-start 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       copia-listino-Ev-After-Init.
      * <TOTEM:PARA. copia-listino-Ev-After-Init>
           accept como-data  from century-date
           accept como-ora   from time

      *    valorizzo il listino
           perform VAL-TESTA

           perform VAL-RIGHE

           perform VAL-NOTE

           perform EXIT-STOP-ROUTINE 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

