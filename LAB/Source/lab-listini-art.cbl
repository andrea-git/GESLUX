      *{TOTEM}PRG-COMMENT
      * lab-listini-art.Cbl
      * lab-listini-art.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          lab-listini-art.
       AUTHOR.              andre.
       DATE-WRITTEN.        venerdì 10 novembre 2023 00:20:25.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:lab-listini-art, INIT:lab-listini-art, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tgrupgdo.sl".
           COPY "articoli.sl".
           COPY "rpromo.sl".
           COPY "tpromo.sl".
           COPY "blister.sl".
           COPY "timposte.sl".
           COPY "tmp-listini.sl".
           COPY "progmag.sl".
           COPY "param.sl".
           COPY "tpiombo.sl".
           COPY "clienti.sl".
           COPY "ttipocli.sl".
           COPY "listini.sl".
           COPY "listini.sl"
                REPLACING ==listini== BY ==listini1==,
                          ==STATUS-listini== BY ==STATUS-listini1==
                .
           COPY "tmarche.sl".
           COPY "lineseq.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tgrupgdo.fd".
           COPY "articoli.fd".
           COPY "rpromo.fd".
           COPY "tpromo.fd".
           COPY "blister.fd".
           COPY "timposte.fd".
           COPY "tmp-listini.fd".
           COPY "progmag.fd".
           COPY "param.fd".
           COPY "tpiombo.fd".
           COPY "clienti.fd".
           COPY "ttipocli.fd".
           COPY "listini.fd".
           COPY "listini.fd"
                REPLACING ==listini== BY ==listini1==,
                          ==STATUS-listini== BY ==STATUS-listini1==
                .
           COPY "tmarche.fd".
           COPY "lineseq.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "acugui.def".
               COPY "acucobol.def".
               COPY "fonts.def".
               COPY "crtvars.def".
               COPY "showmsg.def".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Geslux LAB - Consultazione listini". 
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 RowsToPrint      PIC  9(5).
           COPY  "TROVA-PARAMETRO.DEF".
           COPY  "LINK-ST-LISTINI.DEF".
           COPY  "IMPOSTE.DEF".
           COPY  "LINK-GESLOCK.DEF".
       77 data-oggi        PIC  9(8).
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 data-richiesta   PIC  9(8).
       77 data-richiesta-dal           PIC  9(8).
       01 FILLER           PIC  9.
           88 record-ok VALUE IS 1    WHEN SET TO FALSE  0. 
       77 data-richiesta-al            PIC  9(8).
       01 chiave-lettura   PIC  9.
           88 k-gdo VALUE IS 0. 
           88 k-gdo-art VALUE IS 1. 
           88 k-gdo-codart VALUE IS 2. 
           88 k-data VALUE IS 3. 
           88 k-art VALUE IS 4. 
           88 k-codart VALUE IS 5. 
       77 save-gdo         PIC  x(5).
       77 save-fa          PIC  9
                  VALUE IS 0.
       77 save-sp          PIC  9
                  VALUE IS 0.
       77 save-storico     PIC  9
                  VALUE IS 0.
       77 save-data        PIC  9(8)
                  VALUE IS 0.
       77 save-dal         PIC  9(8)
                  VALUE IS 0.
       77 save-al          PIC  9(8)
                  VALUE IS 0.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0.
       77 tot-consumo      PIC  9(9)v99.
       77 tot-cou          PIC  9(9)v99.
       77 tot-cobat        PIC  9(9)v99.
       77 tot-add          PIC  9(9)v99.
       01 FILLER           PIC  9
                  VALUE IS 0.
           88 ricarica VALUE IS 1    WHEN SET TO FALSE  0. 
       77 prezzo-z         PIC  zzz.zzz.zz9,99.
       77 como-mese        PIC  9(2).
       77 prezzo-x         PIC  x(14).
       77 como-prezzo      PIC  9(10)v99.
       77 mese-ini         PIC  x(5).
       77 mese-fine        PIC  x(5).
       01 FILLER           PIC  x.
           88 carica VALUE IS "C". 
           88 chiamata VALUE IS "S". 
           88 excel VALUE IS "E". 
           88 stampa-diretta VALUE IS "D". 
       77 data-vigore      PIC  9(8).
       77 ok-73x21-bmp     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 cancel-73x21-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 ESCI-73X21-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 comodo           PIC  s9(12)v99.
       77 prezzo-edit      PIC  zzz.zzz,zz.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 1.
       77 ef-gdo-buf       PIC  x(5).
       77 STATUS-tgrupgdo  PIC  X(2).
           88 Valid-STATUS-tgrupgdo VALUE IS "00" THRU "09". 
       77 lab-gdo-buf      PIC  X(50).
       77 lab-art-buf      PIC  x(40).
       77 ef-art-buf       PIC  z(6).
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 ef-data-buf      PIC  99/99/9999.
       77 form2-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-listini   PIC  X(2).
           88 Valid-STATUS-listini VALUE IS "00" THRU "09". 
       77 Verdana16-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana14B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 form2-Bt-1-Handle            PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 form2-DaImg-1-Handle         PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 lab-agg-buf      PIC  x(50).
       77 lab-data-vigore-buf          PIC  99/99/9999.
       77 bottone-stampa-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-exit-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 save-articolo    PIC  9(6).
       77 old-col-prz      PIC  x(10).
       77 save-cod-art-cli PIC  x(15).
       01 rec-grid.
           05 col-num          PIC  z(7).
           05 col-art          PIC  z(6).
           05 col-data         PIC  x(8).
           05 col-cod-art      PIC  X(15).
           05 col-des          PIC  X(50).
           05 col-imb          PIC  x(3).
           05 col-ean          PIC  x(13).
           05 col-cons         PIC  zzz.zz9,99.
           05 col-prod         PIC  zzz.zz9,99.
           05 col-cou          PIC  zzz.zz9,99.
           05 col-add          PIC  zzz.zz9,99.
           05 col-prz          PIC  x(10).
           05 col-promo        PIC  X(30).
           05 col-faro         PIC  zzz.zz9,99
                      BLANK WHEN ZERO.
       77 STATUS-tmarche   PIC  X(2).
           88 Valid-STATUS-tmarche VALUE IS "00" THRU "09". 
       77 STATUS-timposte  PIC  X(2).
           88 Valid-STATUS-timposte VALUE IS "00" THRU "09". 
       77 path-tmp-listini PIC  X(256)
                  VALUE IS spaces.
       77 STATUS-tmp-listini           PIC  X(2).
           88 Valid-STATUS-tmp-listini VALUE IS "00" THRU "09". 
       77 Verdana10I-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana24BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 form3-MN-1-HANDLE
                  USAGE IS HANDLE OF MENU.
       77 Verdana18BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 tit  PIC  X(35)
                  VALUE IS "Caricamento listino in corso...".
       77 form3-HANDLE
                  USAGE IS HANDLE OF WINDOW.
       77 STATUS-rpromo    PIC  X(2).
           88 Valid-STATUS-rpromo VALUE IS "00" THRU "09". 
       77 STATUS-tpromo    PIC  X(2).
           88 Valid-STATUS-tpromo VALUE IS "00" THRU "09". 
       77 lab-data-ric-buf PIC  99/99/9999.
       77 STATUS-blister   PIC  X(2).
           88 Valid-STATUS-blister VALUE IS "00" THRU "09". 
       77 STATUS-tpiombo   PIC  X(2).
           88 Valid-STATUS-tpiombo VALUE IS "00" THRU "09". 
       77 FILLER           PIC  9.
           88 CallManutenzione VALUE IS 1    WHEN SET TO FALSE  0. 
       77 como-x           PIC  x.
       77 lab-prog-buf     PIC  x(50).
       77 art-ed           PIC  z(6).
       77 peso-ed          PIC  zz9,999.
       77 bottone-elimina-bmp          PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 v-prog           PIC  9
                  VALUE IS 0.
       77 STATUS-cli-prg   PIC  X(2).
           88 Valid-STATUS-cli-prg VALUE IS "00" THRU "09". 
       77 STATUS-progmag   PIC  X(2).
           88 Valid-STATUS-progmag VALUE IS "00" THRU "09". 
       77 STATUS-listini1  PIC  X(2).
           88 VALID-STATUS-listini1 VALUE IS "00" THRU "09". 
       77 STATUS-param     PIC  X(2).
           88 Valid-STATUS-param VALUE IS "00" THRU "09". 
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 STATUS-destini   PIC  X(2).
           88 Valid-STATUS-destini VALUE IS "00" THRU "09". 
       77 STATUS-ttipocli  PIC  X(2).
           88 Valid-STATUS-ttipocli VALUE IS "00" THRU "09". 
       77 STATUS-listini2  PIC  X(2).
           88 VALID-STATUS-listini2 VALUE IS "00" THRU "09". 
       77 ef-cod-art-cli-buf           PIC  x(15).
       77 chk-escludi-buf  PIC  9.
       77 excel-bmp        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 chk-esclud-sp-buf            PIC  9
                  VALUE IS 0.
       77 chk-escludi-sp-buf           PIC  9
                  VALUE IS 0.
       77 save-tipo-data   PIC  9
                  VALUE IS 1.
       77 tipo-data        PIC  9
                  VALUE IS 1.
       77 ef-data-dal-buf  PIC  99/99/9999.
       77 ef-data-al-buf   PIC  99/99/9999.
       77 e-data           PIC  9
                  VALUE IS 1.
       77 e-periodo        PIC  9
                  VALUE IS 0.
       77 lab-data-ric-dal-buf         PIC  99/99/9999.
       77 lab-data-ric-al-buf          PIC  99/99/9999.
       77 v-periodo        PIC  9
                  VALUE IS 1.
       77 v-data           PIC  9
                  VALUE IS 1.
       77 aggiungi-BMP     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 BOTTONE-inserisci-BMP        PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12BI-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 v-screen1        PIC  9
                  VALUE IS 1.
       77 Form1-Tb-1-Handleaa
                  USAGE IS HANDLE OF WINDOW.
       77 lab-art-i-buf    PIC  x(40).
       77 ef-art-i-buf     PIC  z(6).
       77 ef-data-i-buf    PIC  99/99/9999.
       77 ef-cod-art-cli-i-buf         PIC  x(15).
       77 ef-prz-i-buf     PIC  zzz.zz9,99.
       77 E-CERCA-I        PIC  9
                  VALUE IS 1.
       77 form1a-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 chk-storico-buf  PIC  9
                  VALUE IS 0.
       77 v-storico        PIC  9
                  VALUE IS 0.

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 STATUS-form3-FLAG-REFRESH PIC  9.
          88 form3-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tgrupgdo-BUF     PIC X(1206).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-rpromo-BUF     PIC X(209).
       77 TMP-DataSet1-tpromo-BUF     PIC X(263).
       77 TMP-DataSet1-blister-BUF     PIC X(2967).
       77 TMP-DataSet1-timposte-BUF     PIC X(717).
       77 TMP-DataSet1-tmp-listini-BUF     PIC X(243).
       77 TMP-DataSet1-progmag-BUF     PIC X(1090).
       77 TMP-DataSet1-param-BUF     PIC X(980).
       77 TMP-DataSet1-tpiombo-BUF     PIC X(739).
       77 TMP-DataSet1-clienti-BUF     PIC X(3610).
       77 TMP-DataSet1-ttipocli-BUF     PIC X(889).
       77 TMP-DataSet1-listini-BUF     PIC X(207).
       77 TMP-DataSet1-listini1-BUF     PIC X(207).
       77 TMP-DataSet1-tmarche-BUF     PIC X(217).
       77 TMP-DataSet1-lineseq-BUF     PIC X(1000).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tgrupgdo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tgrupgdo-LOCK  VALUE "Y".
       77 DataSet1-tgrupgdo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Asc  VALUE "A".
          88 DataSet1-tgrupgdo-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-rpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rpromo-LOCK  VALUE "Y".
       77 DataSet1-rpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rpromo-KEY-Asc  VALUE "A".
          88 DataSet1-rpromo-KEY-Desc VALUE "D".
       77 DataSet1-tpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpromo-LOCK  VALUE "Y".
       77 DataSet1-tpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpromo-KEY-Asc  VALUE "A".
          88 DataSet1-tpromo-KEY-Desc VALUE "D".
       77 DataSet1-blister-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-blister-LOCK  VALUE "Y".
       77 DataSet1-blister-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-blister-KEY-Asc  VALUE "A".
          88 DataSet1-blister-KEY-Desc VALUE "D".
       77 DataSet1-timposte-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-timposte-LOCK  VALUE "Y".
       77 DataSet1-timposte-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-timposte-KEY-Asc  VALUE "A".
          88 DataSet1-timposte-KEY-Desc VALUE "D".
       77 DataSet1-tmp-listini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-listini-LOCK  VALUE "Y".
       77 DataSet1-tmp-listini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-listini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-listini-KEY-Desc VALUE "D".
       77 DataSet1-progmag-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-progmag-LOCK  VALUE "Y".
       77 DataSet1-progmag-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-progmag-KEY-Asc  VALUE "A".
          88 DataSet1-progmag-KEY-Desc VALUE "D".
       77 DataSet1-param-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-param-LOCK  VALUE "Y".
       77 DataSet1-param-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-param-KEY-Asc  VALUE "A".
          88 DataSet1-param-KEY-Desc VALUE "D".
       77 DataSet1-tpiombo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpiombo-LOCK  VALUE "Y".
       77 DataSet1-tpiombo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpiombo-KEY-Asc  VALUE "A".
          88 DataSet1-tpiombo-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-ttipocli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-ttipocli-LOCK  VALUE "Y".
       77 DataSet1-ttipocli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-ttipocli-KEY-Asc  VALUE "A".
          88 DataSet1-ttipocli-KEY-Desc VALUE "D".
       77 DataSet1-listini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-listini-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-listini-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-listini-KEY1-Asc  VALUE "A".
          88 DataSet1-listini-KEY1-Desc VALUE "D".
       77 DataSet1-listini1-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-listini1-LOCK  VALUE "Y".
       77 DataSet1-listini1-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-listini1-KEY-Asc  VALUE "A".
          88 DataSet1-listini1-KEY-Desc VALUE "D".
       77 DataSet1-tmarche-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmarche-LOCK  VALUE "Y".
       77 DataSet1-tmarche-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmarche-KEY-Asc  VALUE "A".
          88 DataSet1-tmarche-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".

       77 tgrupgdo-gdo-k-g2-SPLITBUF  PIC X(9).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 rpromo-k-stampa-SPLITBUF  PIC X(32).
       77 tpromo-tpr-chiave-ricerca-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-gdo-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-ini-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-volantino-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-fine-vol-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-data-ins-SPLITBUF  PIC X(29).
       77 blister-k-magaz-SPLITBUF  PIC X(10).
       77 blister-k-des-SPLITBUF  PIC X(51).
       77 tmp-listini-tmp-k-articolo-SPLITBUF  PIC X(7).
       77 progmag-key01-SPLITBUF  PIC X(21).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 listini-lst-k-gdo-articolo-SPLITBUF  PIC X(20).
       77 listini-lst-k-gdo-cod-art-cli-SPLITBUF  PIC X(29).
       77 listini-lst-k-data-SPLITBUF  PIC X(29).
       77 listini-lst-k-articolo-SPLITBUF  PIC X(20).
       77 listini-lst-k-cod-art-cli-SPLITBUF  PIC X(29).
       77 listini1-lst-k-gdo-articolo-SPLITBUF  PIC X(20).
       77 listini1-lst-k-gdo-cod-art-cli-SPLITBUF  PIC X(29).
       77 listini1-lst-k-data-SPLITBUF  PIC X(29).
       77 listini1-lst-k-articolo-SPLITBUF  PIC X(20).
       77 listini1-lst-k-cod-art-cli-SPLITBUF  PIC X(29).

           copy "common-excel.def".
       77  como-peso      pic zz.zz9,999.
      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-gdo VALUE 5001.
       78  78-ID-ef-art VALUE 5002.
       78  78-ID-ef-cod-art-cli VALUE 5003.
       78  78-ID-chk-escludi VALUE 5004.
       78  78-ID-chk-escludi-sp VALUE 5005.
       78  78-ID-rb-data VALUE 5006.
       78  78-ID-rb-dal VALUE 5007.
       78  78-ID-ef-data VALUE 5008.
       78  78-ID-ef-data-dal VALUE 5009.
       78  78-ID-ef-data-al VALUE 5010.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           BEFORE PROCEDURE Form1-BeforeProcedure,
           .

      * FRAME
       05
           frame-limiti, 
           Frame, 
           COL 56,75, 
           LINE 1,50,
           LINES 12,38 ,
           SIZE 70,88 ,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Ricerca listini articolo",
           TITLE-POSITION 2,
           .

      * ENTRY FIELD
       05
           ef-gdo, 
           Entry-Field, 
           COL 68,75, 
           LINE 3,50,
           LINES 1,33 ,
           SIZE 7,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-gdo,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           MAX-TEXT 5,
           VALUE ef-gdo-buf,
           AFTER PROCEDURE ef-gdo-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-art, 
           Entry-Field, 
           COL 68,75, 
           LINE 5,72,
           LINES 1,33 ,
           SIZE 7,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-art,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-art-buf,
           AFTER PROCEDURE Screen4-Ef-2-AfterProcedure, 
           BEFORE PROCEDURE Screen4-Ef-2-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-cod-art-cli, 
           Entry-Field, 
           COL 68,75, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 18,00 ,
           BOXED,
           COLOR IS 513,
           ID IS 78-ID-ef-cod-art-cli,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE ef-cod-art-cli-buf,
           AFTER PROCEDURE ef-cod-art-cli-AfterProcedure, 
           BEFORE PROCEDURE ef-cod-art-cli-BeforeProcedure, 
           .

      * CHECK BOX
       05
           chk-escludi, 
           Check-Box, 
           COL 89,15, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 2,00 ,
           FLAT,
           FONT IS Small-Font,
           ID IS 78-ID-chk-escludi,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE chk-escludi-buf,
           AFTER PROCEDURE Screen4-Cb-1-AfterProcedure,
           BEFORE PROCEDURE Screen4-Cb-1-BeforeProcedure, 
           .
      * CHECK BOX
       05
           chk-escludi-sp, 
           Check-Box, 
           COL 102,15, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 2,00 ,
           FLAT,
           FONT IS Small-Font,
           ID IS 78-ID-chk-escludi-sp,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE chk-escludi-sp-buf,
           AFTER PROCEDURE Screen4-Cb-1-AfterProcedure,
           BEFORE PROCEDURE Screen4-Cb-1-BeforeProcedure, 
           .
      * CHECK BOX
       05
           chk-storico, 
           Check-Box, 
           COL 116,15, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 2,00 ,
           FLAT,
           FONT IS Small-Font,
           ID IS 14,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           VALUE chk-storico-buf,
           VISIBLE v-storico,
           AFTER PROCEDURE Screen4-Cb-1-AfterProcedure,
           BEFORE PROCEDURE Screen4-Cb-1-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           rb-data, 
           Radio-Button, 
           COL 58,15, 
           LINE 9,83,
           LINES 1,33 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1002
           FLAT,
           FONT IS Small-Font,
           GROUP 1,
           GROUP-VALUE 1,
           ID IS 78-ID-rb-data,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Radio Button",
           VALUE tipo-data,
           AFTER PROCEDURE Screen4-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE Screen4-Rb-1-BeforeProcedure, 
           .
      * RADIO BUTTON
       05
           rb-dal, 
           Radio-Button, 
           COL 58,15, 
           LINE 11,78,
           LINES 1,33 ,
           SIZE 2,00 ,
           EXCEPTION-VALUE 1003
           FLAT,
           FONT IS Small-Font,
           GROUP 1,
           GROUP-VALUE 2,
           ID IS 78-ID-rb-dal,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Radio Button",
           VALUE tipo-data,
           AFTER PROCEDURE Screen4-Rb-1-AfterProcedure, 
           BEFORE PROCEDURE Screen4-Rb-1-BeforeProcedure, 
           .
      * ENTRY FIELD
       05
           ef-data, 
           Entry-Field, 
           COL 68,75, 
           LINE 9,83,
           LINES 1,33 ,
           SIZE 11,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-data,
           ID IS 78-ID-ef-data,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           VALUE ef-data-buf,
           AFTER PROCEDURE Screen4-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen4-Ef-1-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-data-dal, 
           Entry-Field, 
           COL 68,75, 
           LINE 11,78,
           LINES 1,33 ,
           SIZE 11,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-periodo,
           ID IS 78-ID-ef-data-dal,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           VALUE ef-data-dal-buf,
           AFTER PROCEDURE Screen4-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen4-Ef-1-BeforeProcedure, 
           .

      * ENTRY FIELD
       05
           ef-data-al, 
           Entry-Field, 
           COL 85,75, 
           LINE 11,75,
           LINES 1,31 ,
           SIZE 11,00 ,
           BOXED,
           COLOR IS 513,
           ENABLED e-periodo,
           ID IS 78-ID-ef-data-al,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           VALUE ef-data-al-buf,
           AFTER PROCEDURE Screen4-Ef-1-AfterProcedure, 
           BEFORE PROCEDURE Screen4-Ef-1-BeforeProcedure, 
           .

      * LABEL
       05
           Screen4-blockpgm-1, 
           Label, 
           COL 75,25, 
           LINE 2,50,
           LINES 0,44 ,
           SIZE 1,60 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen4-Custom1-2, 
           Label, 
           COL 59,25, 
           LINE 2,39,
           LINES 0,50 ,
           SIZE 2,20 ,
           ID IS 3,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen3-La-1aa, 
           Label, 
           COL 57,75, 
           LINE 3,50,
           LINES 1,33 ,
           SIZE 10,50 ,
           ID IS 4,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Gruppo GDO",
           .

      * LABEL
       05
           lab-gdo, 
           Label, 
           COL 76,75, 
           LINE 3,50,
           LINES 1,33 ,
           SIZE 50,00 ,
           COLOR IS 5,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-gdo-buf,
           .

      * LABEL
       05
           Screen4-La-1, 
           Label, 
           COL 60,85, 
           LINE 9,83,
           LINES 1,33 ,
           SIZE 6,00 ,
           ID IS 11,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Data",
           .

      * LABEL
       05
           Screen4-La-2, 
           Label, 
           COL 57,75, 
           LINE 5,72,
           LINES 1,33 ,
           SIZE 10,50 ,
           ID IS 15,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Articolo",
           .

      * LABEL
       05
           lab-art, 
           Label, 
           COL 76,75, 
           LINE 5,72,
           LINES 1,33 ,
           SIZE 50,00 ,
           COLOR IS 5,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-art-buf,
           .

      * LABEL
       05
           Screen4-La-2a, 
           Label, 
           COL 57,75, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 10,50 ,
           ID IS 203,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Cod. art. cli",
           .

      * LABEL
       05
           Screen4-La-2aa, 
           Label, 
           COL 91,75, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 10,50 ,
           ID IS 205,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Escludi FA",
           .

      * LABEL
       05
           Screen4-La-2aaa, 
           Label, 
           COL 104,75, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 10,50 ,
           ID IS 206,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Escludi SP",
           .

      * LABEL
       05
           Screen4-La-1a, 
           Label, 
           COL 60,85, 
           LINE 11,72,
           LINES 1,33 ,
           SIZE 6,00 ,
           ID IS 207,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Dal",
           .

      * LABEL
       05
           Screen4-La-1aa, 
           Label, 
           COL 81,85, 
           LINE 11,72,
           LINES 1,33 ,
           SIZE 2,00 ,
           ID IS 208,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "al",
           .

      * LABEL
       05
           lab-storico, 
           Label, 
           COL 118,75, 
           LINE 7,78,
           LINES 1,33 ,
           SIZE 7,00 ,
           ID IS 209,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Storico",
           VISIBLE v-storico,
           .

      * PUSH BUTTON
       05
           pb-carica, 
           Push-Button, 
           COL 111,13, 
           LINE 11,19,
           LINES 1,88 ,
           SIZE 13,63 ,
           EXCEPTION-VALUE 1004,
           FONT IS Small-Font,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Carica &listini",
           .

      * GRID
       05
           gd-listini, 
           Grid, 
           COL 2,38, 
           LINE 15,56,
           LINES 42,56 ,
           SIZE 179,63 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           CENTERED-HEADINGS,
           DATA-COLUMNS (1, 8, 14, 22, 37, 87, 90, 103, 113, 123, 133, 
           143, 153, 183),
           ALIGNMENT ("R", "R", "C", "C", "U", "C", "R", "R", "R", "R", 
           "R", "R", "C", "R"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           ROW-HEADINGS,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 177,
           VPADDING 20,
           VSCROLL,
           EVENT PROCEDURE form2-Gd-1-Event-Proc,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 210,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 211,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      * FORM
       01 
           form3, 
           HELP-ID 1,
           .

      * LABEL
       05
           lab, 
           Label, 
           COL 2,00, 
           LINE 2,00,
           LINES 3,00 CELLS,
           SIZE 40,00 CELLS,
           FONT IS Verdana18BI-Occidentale,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           TRANSPARENT,
           TITLE tit,
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:lab-listini-art, INIT:lab-listini-art, BeforeDeclarative>
       LISTINI-ERR SECTION.
           use after error procedure on LISTINI.
           evaluate status-LISTINI
      *****     when "35"
      *****          display message "File [LISTINI] not found!"
      *****                     title titolo
      *****                      icon 3
      *****          set errori to true
           when "39"
                display message "File [LISTINI] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[LISTINI] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
           when "99"
                set RecLocked to true
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM ginqui-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:lab-listini-art, INIT:lab-listini-art, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana10-Occidentale
           DESTROY Verdana18BI-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
      * Verdana18BI-Occidentale
           INITIALIZE WFONT-DATA Verdana18BI-Occidentale
           MOVE 18 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO TRUE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana18BI-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * TOOL-ESCI
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tgrupgdo
           PERFORM OPEN-articoli
           PERFORM OPEN-rpromo
           PERFORM OPEN-tpromo
           PERFORM OPEN-blister
           PERFORM OPEN-timposte
      *    tmp-listini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-listini
           PERFORM OPEN-progmag
           PERFORM OPEN-param
           PERFORM OPEN-tpiombo
           PERFORM OPEN-clienti
           PERFORM OPEN-ttipocli
           PERFORM OPEN-listini
           PERFORM OPEN-listini1
           PERFORM OPEN-tmarche
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
      *    After Open
           .

       OPEN-tgrupgdo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tgrupgdo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tgrupgdo
           IF NOT Valid-STATUS-tgrupgdo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tgrupgdo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rpromo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:rpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rpromo
           IF NOT Valid-STATUS-rpromo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:rpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpromo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpromo
           IF NOT Valid-STATUS-tpromo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-blister.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:blister, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT blister
           IF NOT Valid-STATUS-blister
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:blister, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-timposte.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:timposte, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT timposte
           IF NOT Valid-STATUS-timposte
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:timposte, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-listini.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tmp-listini, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-listini
           IF NOT Valid-STATUS-tmp-listini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tmp-listini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-progmag.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:progmag, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT progmag
           IF NOT Valid-STATUS-progmag
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:progmag, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-param.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:param, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT param
           IF NOT Valid-STATUS-param
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:param, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpiombo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tpiombo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpiombo
           IF NOT Valid-STATUS-tpiombo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tpiombo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-ttipocli.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:ttipocli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT ttipocli
           IF NOT Valid-STATUS-ttipocli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:ttipocli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-listini.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:listini, BeforeOpen>
      * <TOTEM:END>
           OPEN  I-O listini
           IF STATUS-listini = "35"
              OPEN OUTPUT listini
                IF Valid-STATUS-listini
                   CLOSE listini
                   OPEN I-O listini
                END-IF
           END-IF
           IF NOT Valid-STATUS-listini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:listini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-listini1.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:listini1, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT listini1
           IF NOT VALID-STATUS-listini1
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:listini1, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmarche.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tmarche, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tmarche
           IF NOT Valid-STATUS-tmarche
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tmarche, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-listini-art, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tgrupgdo
           PERFORM CLOSE-articoli
           PERFORM CLOSE-rpromo
           PERFORM CLOSE-tpromo
           PERFORM CLOSE-blister
           PERFORM CLOSE-timposte
      *    tmp-listini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-listini
           PERFORM CLOSE-progmag
           PERFORM CLOSE-param
           PERFORM CLOSE-tpiombo
           PERFORM CLOSE-clienti
           PERFORM CLOSE-ttipocli
           PERFORM CLOSE-listini
           PERFORM CLOSE-listini1
           PERFORM CLOSE-tmarche
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
      *    After Close
           .

       CLOSE-tgrupgdo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tgrupgdo, BeforeClose>
      * <TOTEM:END>
           CLOSE tgrupgdo
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-rpromo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:rpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE rpromo
           .

       CLOSE-tpromo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpromo
           .

       CLOSE-blister.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:blister, BeforeClose>
      * <TOTEM:END>
           CLOSE blister
           .

       CLOSE-timposte.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:timposte, BeforeClose>
      * <TOTEM:END>
           CLOSE timposte
           .

       CLOSE-tmp-listini.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tmp-listini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-progmag.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:progmag, BeforeClose>
      * <TOTEM:END>
           CLOSE progmag
           .

       CLOSE-param.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:param, BeforeClose>
      * <TOTEM:END>
           CLOSE param
           .

       CLOSE-tpiombo.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tpiombo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpiombo
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-ttipocli.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:ttipocli, BeforeClose>
      * <TOTEM:END>
           CLOSE ttipocli
           .

       CLOSE-listini.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:listini, BeforeClose>
      * <TOTEM:END>
           CLOSE listini
           .

       CLOSE-listini1.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:listini1, BeforeClose>
      * <TOTEM:END>
           CLOSE listini1
           .

       CLOSE-tmarche.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:tmarche, BeforeClose>
      * <TOTEM:END>
           CLOSE tmarche
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:lab-listini-art, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       tgrupgdo-gdo-k-g2-MERGE-SPLITBUF.
           INITIALIZE tgrupgdo-gdo-k-g2-SPLITBUF
           MOVE gdo-codice-G2 OF tgrupgdo(1:3) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(1:3)
           MOVE gdo-chiave OF tgrupgdo(1:5) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(4:5)
           .

       DataSet1-tgrupgdo-INITSTART.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-INITEND.
           IF DataSet1-tgrupgdo-KEY-Asc
              MOVE High-Value TO gdo-chiave OF tgrupgdo
           ELSE
              MOVE Low-Value TO gdo-chiave OF tgrupgdo
           END-IF
           .

      * tgrupgdo
       DataSet1-tgrupgdo-START.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-NOTGREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-GREATER.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-START-LESS.
           IF DataSet1-tgrupgdo-KEY-Asc
              START tgrupgdo KEY < gdo-chiave OF tgrupgdo
           ELSE
              START tgrupgdo KEY > gdo-chiave OF tgrupgdo
           END-IF
           .

       DataSet1-tgrupgdo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-LOCK
              READ tgrupgdo WITH LOCK 
              KEY gdo-chiave OF tgrupgdo
           ELSE
              READ tgrupgdo WITH NO LOCK 
              KEY gdo-chiave OF tgrupgdo
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT 
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tgrupgdo-KEY-Asc
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo PREVIOUS WITH LOCK
              ELSE
                 READ tgrupgdo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo NEXT WITH LOCK
              ELSE
                 READ tgrupgdo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       rpromo-k-stampa-MERGE-SPLITBUF.
           INITIALIZE rpromo-k-stampa-SPLITBUF
           MOVE rpr-codice(1:15) TO rpromo-k-stampa-SPLITBUF(1:15)
           MOVE rpr-data-creazione(1:8) TO 
           rpromo-k-stampa-SPLITBUF(16:8)
           MOVE rpr-ora-creazione(1:8) TO rpromo-k-stampa-SPLITBUF(24:8)
           .

       DataSet1-rpromo-INITSTART.
           IF DataSet1-rpromo-KEY-Asc
              MOVE Low-Value TO rpr-chiave
           ELSE
              MOVE High-Value TO rpr-chiave
           END-IF
           .

       DataSet1-rpromo-INITEND.
           IF DataSet1-rpromo-KEY-Asc
              MOVE High-Value TO rpr-chiave
           ELSE
              MOVE Low-Value TO rpr-chiave
           END-IF
           .

      * rpromo
       DataSet1-rpromo-START.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY >= rpr-chiave
           ELSE
              START rpromo KEY <= rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-NOTGREATER.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY <= rpr-chiave
           ELSE
              START rpromo KEY >= rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-GREATER.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY > rpr-chiave
           ELSE
              START rpromo KEY < rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-LESS.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY < rpr-chiave
           ELSE
              START rpromo KEY > rpr-chiave
           END-IF
           .

       DataSet1-rpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rpromo-LOCK
              READ rpromo WITH LOCK 
              KEY rpr-chiave
           ELSE
              READ rpromo WITH NO LOCK 
              KEY rpr-chiave
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT 
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rpromo-KEY-Asc
              IF DataSet1-rpromo-LOCK
                 READ rpromo NEXT WITH LOCK
              ELSE
                 READ rpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rpromo-LOCK
                 READ rpromo PREVIOUS WITH LOCK
              ELSE
                 READ rpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rpromo-KEY-Asc
              IF DataSet1-rpromo-LOCK
                 READ rpromo PREVIOUS WITH LOCK
              ELSE
                 READ rpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rpromo-LOCK
                 READ rpromo NEXT WITH LOCK
              ELSE
                 READ rpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterDelete>
      * <TOTEM:END>
           .

       tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ricerca-SPLITBUF
           MOVE tpr-chiave-ricerca OF tpromo(1:21) TO 
           tpromo-tpr-chiave-ricerca-SPLITBUF(1:21)
           .

       tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-gdo-fine-SPLITBUF
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(1:5)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(6:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(14:8)
           .

       tpromo-tpr-chiave-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-fine-SPLITBUF
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(1:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-ini-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ini-SPLITBUF
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(1:8)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-volantino-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-volantino-SPLITBUF
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(1:8)
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(17:5)
           .

       tpromo-tpr-k-fine-vol-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-fine-vol-SPLITBUF
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(1:8)
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(17:5)
           .

       tpromo-tpr-k-data-ins-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-data-ins-SPLITBUF
           MOVE tpr-data-creazione OF tpromo(1:8) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(1:8)
           MOVE tpr-codice OF tpromo(1:15) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(9:15)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(24:5)
           .

       DataSet1-tpromo-INITSTART.
           IF DataSet1-tpromo-KEY-Asc
              MOVE Low-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE High-Value TO tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-INITEND.
           IF DataSet1-tpromo-KEY-Asc
              MOVE High-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE Low-Value TO tpr-chiave OF tpromo
           END-IF
           .

      * tpromo
       DataSet1-tpromo-START.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY >= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY <= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-NOTGREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY <= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY >= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-GREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY > tpr-chiave OF tpromo
           ELSE
              START tpromo KEY < tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-LESS.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY < tpr-chiave OF tpromo
           ELSE
              START tpromo KEY > tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpromo-LOCK
              READ tpromo WITH LOCK 
              KEY tpr-chiave OF tpromo
           ELSE
              READ tpromo WITH NO LOCK 
              KEY tpr-chiave OF tpromo
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT 
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterDelete>
      * <TOTEM:END>
           .

       blister-k-magaz-MERGE-SPLITBUF.
           INITIALIZE blister-k-magaz-SPLITBUF
           MOVE bli-magazzino(1:3) TO blister-k-magaz-SPLITBUF(1:3)
           MOVE bli-codice(1:6) TO blister-k-magaz-SPLITBUF(4:6)
           .

       blister-k-des-MERGE-SPLITBUF.
           INITIALIZE blister-k-des-SPLITBUF
           MOVE bli-descrizione(1:50) TO blister-k-des-SPLITBUF(1:50)
           .

       DataSet1-blister-INITSTART.
           IF DataSet1-blister-KEY-Asc
              MOVE Low-Value TO bli-chiave
           ELSE
              MOVE High-Value TO bli-chiave
           END-IF
           .

       DataSet1-blister-INITEND.
           IF DataSet1-blister-KEY-Asc
              MOVE High-Value TO bli-chiave
           ELSE
              MOVE Low-Value TO bli-chiave
           END-IF
           .

      * blister
       DataSet1-blister-START.
           IF DataSet1-blister-KEY-Asc
              START blister KEY >= bli-chiave
           ELSE
              START blister KEY <= bli-chiave
           END-IF
           .

       DataSet1-blister-START-NOTGREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY <= bli-chiave
           ELSE
              START blister KEY >= bli-chiave
           END-IF
           .

       DataSet1-blister-START-GREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY > bli-chiave
           ELSE
              START blister KEY < bli-chiave
           END-IF
           .

       DataSet1-blister-START-LESS.
           IF DataSet1-blister-KEY-Asc
              START blister KEY < bli-chiave
           ELSE
              START blister KEY > bli-chiave
           END-IF
           .

       DataSet1-blister-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-blister-LOCK
              READ blister WITH LOCK 
              KEY bli-chiave
           ELSE
              READ blister WITH NO LOCK 
              KEY bli-chiave
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT 
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-timposte-INITSTART.
           IF DataSet1-timposte-KEY-Asc
              MOVE Low-Value TO imp-chiave
           ELSE
              MOVE High-Value TO imp-chiave
           END-IF
           .

       DataSet1-timposte-INITEND.
           IF DataSet1-timposte-KEY-Asc
              MOVE High-Value TO imp-chiave
           ELSE
              MOVE Low-Value TO imp-chiave
           END-IF
           .

      * timposte
       DataSet1-timposte-START.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY >= imp-chiave
           ELSE
              START timposte KEY <= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-NOTGREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY <= imp-chiave
           ELSE
              START timposte KEY >= imp-chiave
           END-IF
           .

       DataSet1-timposte-START-GREATER.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY > imp-chiave
           ELSE
              START timposte KEY < imp-chiave
           END-IF
           .

       DataSet1-timposte-START-LESS.
           IF DataSet1-timposte-KEY-Asc
              START timposte KEY < imp-chiave
           ELSE
              START timposte KEY > imp-chiave
           END-IF
           .

       DataSet1-timposte-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-timposte-LOCK
              READ timposte WITH LOCK 
              KEY imp-chiave
           ELSE
              READ timposte WITH NO LOCK 
              KEY imp-chiave
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT 
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-timposte-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-timposte-KEY-Asc
              IF DataSet1-timposte-LOCK
                 READ timposte PREVIOUS WITH LOCK
              ELSE
                 READ timposte PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-timposte-LOCK
                 READ timposte NEXT WITH LOCK
              ELSE
                 READ timposte NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-timposte-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-timposte TO TOTEM-ERR-STAT
           MOVE "timposte" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:timposte, AfterDelete>
      * <TOTEM:END>
           .

       tmp-listini-tmp-k-articolo-MERGE-SPLITBUF.
           INITIALIZE tmp-listini-tmp-k-articolo-SPLITBUF
           MOVE tlst-articolo(1:6) TO 
           tmp-listini-tmp-k-articolo-SPLITBUF(1:6)
           .

       DataSet1-tmp-listini-INITSTART.
           IF DataSet1-tmp-listini-KEY-Asc
              MOVE Low-Value TO tlst-chiave
           ELSE
              MOVE High-Value TO tlst-chiave
           END-IF
           .

       DataSet1-tmp-listini-INITEND.
           IF DataSet1-tmp-listini-KEY-Asc
              MOVE High-Value TO tlst-chiave
           ELSE
              MOVE Low-Value TO tlst-chiave
           END-IF
           .

      * tmp-listini
       DataSet1-tmp-listini-START.
           IF DataSet1-tmp-listini-KEY-Asc
              START tmp-listini KEY >= tlst-chiave
           ELSE
              START tmp-listini KEY <= tlst-chiave
           END-IF
           .

       DataSet1-tmp-listini-START-NOTGREATER.
           IF DataSet1-tmp-listini-KEY-Asc
              START tmp-listini KEY <= tlst-chiave
           ELSE
              START tmp-listini KEY >= tlst-chiave
           END-IF
           .

       DataSet1-tmp-listini-START-GREATER.
           IF DataSet1-tmp-listini-KEY-Asc
              START tmp-listini KEY > tlst-chiave
           ELSE
              START tmp-listini KEY < tlst-chiave
           END-IF
           .

       DataSet1-tmp-listini-START-LESS.
           IF DataSet1-tmp-listini-KEY-Asc
              START tmp-listini KEY < tlst-chiave
           ELSE
              START tmp-listini KEY > tlst-chiave
           END-IF
           .

       DataSet1-tmp-listini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-listini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-listini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-listini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeWrite>
      * <TOTEM:END>
           WRITE tlst-rec OF tmp-listini.
           MOVE STATUS-tmp-listini TO TOTEM-ERR-STAT
           MOVE "tmp-listini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-listini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-listini TO TOTEM-ERR-STAT
           MOVE "tmp-listini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-listini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-listini TO TOTEM-ERR-STAT
           MOVE "tmp-listini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-listini, AfterDelete>
      * <TOTEM:END>
           .

       progmag-key01-MERGE-SPLITBUF.
           INITIALIZE progmag-key01-SPLITBUF
           MOVE prg-cod-magazzino OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(1:3)
           MOVE prg-cod-articolo OF progmag(1:6) TO 
           progmag-key01-SPLITBUF(4:6)
           MOVE prg-tipo-imballo OF progmag(1:3) TO 
           progmag-key01-SPLITBUF(10:3)
           MOVE prg-peso OF progmag(1:8) TO progmag-key01-SPLITBUF(13:8)
           .

       DataSet1-progmag-INITSTART.
           IF DataSet1-progmag-KEY-Asc
              MOVE Low-Value TO prg-chiave OF progmag
           ELSE
              MOVE High-Value TO prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-INITEND.
           IF DataSet1-progmag-KEY-Asc
              MOVE High-Value TO prg-chiave OF progmag
           ELSE
              MOVE Low-Value TO prg-chiave OF progmag
           END-IF
           .

      * progmag
       DataSet1-progmag-START.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY >= prg-chiave OF progmag
           ELSE
              START progmag KEY <= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-NOTGREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY <= prg-chiave OF progmag
           ELSE
              START progmag KEY >= prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-GREATER.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY > prg-chiave OF progmag
           ELSE
              START progmag KEY < prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-START-LESS.
           IF DataSet1-progmag-KEY-Asc
              START progmag KEY < prg-chiave OF progmag
           ELSE
              START progmag KEY > prg-chiave OF progmag
           END-IF
           .

       DataSet1-progmag-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-progmag-LOCK
              READ progmag WITH LOCK 
              KEY prg-chiave OF progmag
           ELSE
              READ progmag WITH NO LOCK 
              KEY prg-chiave OF progmag
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT 
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-progmag-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-progmag-KEY-Asc
              IF DataSet1-progmag-LOCK
                 READ progmag PREVIOUS WITH LOCK
              ELSE
                 READ progmag PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-progmag-LOCK
                 READ progmag NEXT WITH LOCK
              ELSE
                 READ progmag NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM progmag-key01-MERGE-SPLITBUF
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-progmag-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-progmag TO TOTEM-ERR-STAT
           MOVE "progmag" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:progmag, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-param-INITSTART.
           IF DataSet1-param-KEY-Asc
              MOVE Low-Value TO prm-chiave OF param
           ELSE
              MOVE High-Value TO prm-chiave OF param
           END-IF
           .

       DataSet1-param-INITEND.
           IF DataSet1-param-KEY-Asc
              MOVE High-Value TO prm-chiave OF param
           ELSE
              MOVE Low-Value TO prm-chiave OF param
           END-IF
           .

      * param
       DataSet1-param-START.
           IF DataSet1-param-KEY-Asc
              START param KEY >= prm-chiave OF param
           ELSE
              START param KEY <= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-NOTGREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY <= prm-chiave OF param
           ELSE
              START param KEY >= prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-GREATER.
           IF DataSet1-param-KEY-Asc
              START param KEY > prm-chiave OF param
           ELSE
              START param KEY < prm-chiave OF param
           END-IF
           .

       DataSet1-param-START-LESS.
           IF DataSet1-param-KEY-Asc
              START param KEY < prm-chiave OF param
           ELSE
              START param KEY > prm-chiave OF param
           END-IF
           .

       DataSet1-param-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-param-LOCK
              READ param WITH LOCK 
              KEY prm-chiave OF param
           ELSE
              READ param WITH NO LOCK 
              KEY prm-chiave OF param
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT 
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-param-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-param-KEY-Asc
              IF DataSet1-param-LOCK
                 READ param PREVIOUS WITH LOCK
              ELSE
                 READ param PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-param-LOCK
                 READ param NEXT WITH LOCK
              ELSE
                 READ param NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-param-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:param, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-param TO TOTEM-ERR-STAT
           MOVE "param" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:param, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-INITSTART.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE Low-Value TO tpb-chiave
           ELSE
              MOVE High-Value TO tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-INITEND.
           IF DataSet1-tpiombo-KEY-Asc
              MOVE High-Value TO tpb-chiave
           ELSE
              MOVE Low-Value TO tpb-chiave
           END-IF
           .

      * tpiombo
       DataSet1-tpiombo-START.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY >= tpb-chiave
           ELSE
              START tpiombo KEY <= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-NOTGREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY <= tpb-chiave
           ELSE
              START tpiombo KEY >= tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-GREATER.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY > tpb-chiave
           ELSE
              START tpiombo KEY < tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-START-LESS.
           IF DataSet1-tpiombo-KEY-Asc
              START tpiombo KEY < tpb-chiave
           ELSE
              START tpiombo KEY > tpb-chiave
           END-IF
           .

       DataSet1-tpiombo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpiombo-LOCK
              READ tpiombo WITH LOCK 
              KEY tpb-chiave
           ELSE
              READ tpiombo WITH NO LOCK 
              KEY tpb-chiave
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT 
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpiombo-KEY-Asc
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo PREVIOUS WITH LOCK
              ELSE
                 READ tpiombo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpiombo-LOCK
                 READ tpiombo NEXT WITH LOCK
              ELSE
                 READ tpiombo NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpiombo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpiombo TO TOTEM-ERR-STAT
           MOVE "tpiombo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpiombo, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-INITSTART.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE Low-Value TO tcl-chiave
           ELSE
              MOVE High-Value TO tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-INITEND.
           IF DataSet1-ttipocli-KEY-Asc
              MOVE High-Value TO tcl-chiave
           ELSE
              MOVE Low-Value TO tcl-chiave
           END-IF
           .

      * ttipocli
       DataSet1-ttipocli-START.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY >= tcl-chiave
           ELSE
              START ttipocli KEY <= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-NOTGREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY <= tcl-chiave
           ELSE
              START ttipocli KEY >= tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-GREATER.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY > tcl-chiave
           ELSE
              START ttipocli KEY < tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-START-LESS.
           IF DataSet1-ttipocli-KEY-Asc
              START ttipocli KEY < tcl-chiave
           ELSE
              START ttipocli KEY > tcl-chiave
           END-IF
           .

       DataSet1-ttipocli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-ttipocli-LOCK
              READ ttipocli WITH LOCK 
              KEY tcl-chiave
           ELSE
              READ ttipocli WITH NO LOCK 
              KEY tcl-chiave
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT 
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-ttipocli-KEY-Asc
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli PREVIOUS WITH LOCK
              ELSE
                 READ ttipocli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-ttipocli-LOCK
                 READ ttipocli NEXT WITH LOCK
              ELSE
                 READ ttipocli NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-ttipocli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-ttipocli TO TOTEM-ERR-STAT
           MOVE "ttipocli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:ttipocli, AfterDelete>
      * <TOTEM:END>
           .

       listini-lst-k-gdo-articolo-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-gdo-articolo-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-gdo-articolo-SPLITBUF(1:5)
           MOVE lst-articolo OF listini(1:6) TO 
           listini-lst-k-gdo-articolo-SPLITBUF(6:6)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-gdo-articolo-SPLITBUF(12:8)
           .

       listini-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-gdo-cod-art-cli-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-gdo-cod-art-cli-SPLITBUF(1:5)
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini-lst-k-gdo-cod-art-cli-SPLITBUF(6:15)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-gdo-cod-art-cli-SPLITBUF(21:8)
           .

       listini-lst-k-data-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-data-SPLITBUF
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-data-SPLITBUF(1:8)
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-data-SPLITBUF(9:5)
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini-lst-k-data-SPLITBUF(14:15)
           .

       listini-lst-k-articolo-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-articolo-SPLITBUF
           MOVE lst-articolo OF listini(1:6) TO 
           listini-lst-k-articolo-SPLITBUF(1:6)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-articolo-SPLITBUF(7:8)
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-articolo-SPLITBUF(15:5)
           .

       listini-lst-k-cod-art-cli-MERGE-SPLITBUF.
           INITIALIZE listini-lst-k-cod-art-cli-SPLITBUF
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(1:15)
           MOVE lst-data OF listini(1:8) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(16:8)
           MOVE lst-gdo OF listini(1:5) TO 
           listini-lst-k-cod-art-cli-SPLITBUF(24:5)
           .

       DataSet1-listini-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 MOVE Low-Value TO lst-chiave OF listini
              ELSE
                 MOVE High-Value TO lst-chiave OF listini
              END-IF
           END-EVALUATE
           .

       DataSet1-listini-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 MOVE High-Value TO lst-chiave OF listini
              ELSE
                 MOVE Low-Value TO lst-chiave OF listini
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-listini-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-listini-KEY1-ORDER
           END-EVALUATE
           .

      * listini
       DataSet1-listini-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 START listini KEY >= lst-chiave OF listini
              ELSE
                 START listini KEY <= lst-chiave OF listini
              END-IF
           END-EVALUATE
           .

       DataSet1-listini-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 START listini KEY <= lst-chiave OF listini
              ELSE
                 START listini KEY >= lst-chiave OF listini
              END-IF
           END-EVALUATE
           .

       DataSet1-listini-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 START listini KEY > lst-chiave OF listini
              ELSE
                 START listini KEY < lst-chiave OF listini
              END-IF
           END-EVALUATE
           .

       DataSet1-listini-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 START listini KEY < lst-chiave OF listini
              ELSE
                 START listini KEY > lst-chiave OF listini
              END-IF
           END-EVALUATE
           .

       DataSet1-listini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-LOCK
                 READ listini WITH LOCK 
                 KEY lst-chiave OF listini
              ELSE
                 READ listini WITH NO LOCK 
                 KEY lst-chiave OF listini
              END-IF
           END-EVALUATE
           PERFORM listini-lst-k-gdo-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini-lst-k-data-MERGE-SPLITBUF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT 
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-listini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 IF DataSet1-listini-LOCK
                    READ listini NEXT WITH LOCK
                 ELSE
                    READ listini NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-listini-LOCK
                    READ listini PREVIOUS WITH LOCK
                 ELSE
                    READ listini PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM listini-lst-k-gdo-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini-lst-k-data-MERGE-SPLITBUF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-listini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-listini-KEY1-Asc
                 IF DataSet1-listini-LOCK
                    READ listini PREVIOUS WITH LOCK
                 ELSE
                    READ listini PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-listini-LOCK
                    READ listini NEXT WITH LOCK
                 ELSE
                    READ listini NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM listini-lst-k-gdo-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini-lst-k-data-MERGE-SPLITBUF
           PERFORM listini-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeWrite>
      * <TOTEM:END>
           WRITE lst-rec OF listini.
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeRewrite>
      * <TOTEM:END>
           REWRITE lst-rec OF listini.
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-listini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:listini, BeforeDelete>
      * <TOTEM:END>
           DELETE listini.
           MOVE STATUS-listini TO TOTEM-ERR-STAT
           MOVE "listini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini, AfterDelete>
      * <TOTEM:END>
           .

       listini1-lst-k-gdo-articolo-MERGE-SPLITBUF.
           INITIALIZE listini1-lst-k-gdo-articolo-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini1-lst-k-gdo-articolo-SPLITBUF(1:5)
           MOVE lst-articolo OF listini(1:6) TO 
           listini1-lst-k-gdo-articolo-SPLITBUF(6:6)
           MOVE lst-data OF listini(1:8) TO 
           listini1-lst-k-gdo-articolo-SPLITBUF(12:8)
           .

       listini1-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF.
           INITIALIZE listini1-lst-k-gdo-cod-art-cli-SPLITBUF
           MOVE lst-gdo OF listini(1:5) TO 
           listini1-lst-k-gdo-cod-art-cli-SPLITBUF(1:5)
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini1-lst-k-gdo-cod-art-cli-SPLITBUF(6:15)
           MOVE lst-data OF listini(1:8) TO 
           listini1-lst-k-gdo-cod-art-cli-SPLITBUF(21:8)
           .

       listini1-lst-k-data-MERGE-SPLITBUF.
           INITIALIZE listini1-lst-k-data-SPLITBUF
           MOVE lst-data OF listini(1:8) TO 
           listini1-lst-k-data-SPLITBUF(1:8)
           MOVE lst-gdo OF listini(1:5) TO 
           listini1-lst-k-data-SPLITBUF(9:5)
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini1-lst-k-data-SPLITBUF(14:15)
           .

       listini1-lst-k-articolo-MERGE-SPLITBUF.
           INITIALIZE listini1-lst-k-articolo-SPLITBUF
           MOVE lst-articolo OF listini(1:6) TO 
           listini1-lst-k-articolo-SPLITBUF(1:6)
           MOVE lst-data OF listini(1:8) TO 
           listini1-lst-k-articolo-SPLITBUF(7:8)
           MOVE lst-gdo OF listini(1:5) TO 
           listini1-lst-k-articolo-SPLITBUF(15:5)
           .

       listini1-lst-k-cod-art-cli-MERGE-SPLITBUF.
           INITIALIZE listini1-lst-k-cod-art-cli-SPLITBUF
           MOVE lst-cod-art-cli OF listini(1:15) TO 
           listini1-lst-k-cod-art-cli-SPLITBUF(1:15)
           MOVE lst-data OF listini(1:8) TO 
           listini1-lst-k-cod-art-cli-SPLITBUF(16:8)
           MOVE lst-gdo OF listini(1:5) TO 
           listini1-lst-k-cod-art-cli-SPLITBUF(24:5)
           .

       DataSet1-listini1-INITSTART.
           IF DataSet1-listini1-KEY-Asc
              MOVE Low-Value TO lst-chiave OF listini1
           ELSE
              MOVE High-Value TO lst-chiave OF listini1
           END-IF
           .

       DataSet1-listini1-INITEND.
           IF DataSet1-listini1-KEY-Asc
              MOVE High-Value TO lst-chiave OF listini1
           ELSE
              MOVE Low-Value TO lst-chiave OF listini1
           END-IF
           .

      * listini1
       DataSet1-listini1-START.
           IF DataSet1-listini1-KEY-Asc
              START listini1 KEY >= lst-chiave OF listini1
           ELSE
              START listini1 KEY <= lst-chiave OF listini1
           END-IF
           .

       DataSet1-listini1-START-NOTGREATER.
           IF DataSet1-listini1-KEY-Asc
              START listini1 KEY <= lst-chiave OF listini1
           ELSE
              START listini1 KEY >= lst-chiave OF listini1
           END-IF
           .

       DataSet1-listini1-START-GREATER.
           IF DataSet1-listini1-KEY-Asc
              START listini1 KEY > lst-chiave OF listini1
           ELSE
              START listini1 KEY < lst-chiave OF listini1
           END-IF
           .

       DataSet1-listini1-START-LESS.
           IF DataSet1-listini1-KEY-Asc
              START listini1 KEY < lst-chiave OF listini1
           ELSE
              START listini1 KEY > lst-chiave OF listini1
           END-IF
           .

       DataSet1-listini1-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-listini1-LOCK
              READ listini1 WITH LOCK 
              KEY lst-chiave OF listini1
           ELSE
              READ listini1 WITH NO LOCK 
              KEY lst-chiave OF listini1
           END-IF
           PERFORM listini1-lst-k-gdo-articolo-MERGE-SPLITBUF
           PERFORM listini1-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini1-lst-k-data-MERGE-SPLITBUF
           PERFORM listini1-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini1-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini1 TO TOTEM-ERR-STAT 
           MOVE "listini1" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-listini1-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-listini1-KEY-Asc
              IF DataSet1-listini1-LOCK
                 READ listini1 NEXT WITH LOCK
              ELSE
                 READ listini1 NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-listini1-LOCK
                 READ listini1 PREVIOUS WITH LOCK
              ELSE
                 READ listini1 PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM listini1-lst-k-gdo-articolo-MERGE-SPLITBUF
           PERFORM listini1-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini1-lst-k-data-MERGE-SPLITBUF
           PERFORM listini1-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini1-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini1 TO TOTEM-ERR-STAT
           MOVE "listini1" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-listini1-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-listini1-KEY-Asc
              IF DataSet1-listini1-LOCK
                 READ listini1 PREVIOUS WITH LOCK
              ELSE
                 READ listini1 PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-listini1-LOCK
                 READ listini1 NEXT WITH LOCK
              ELSE
                 READ listini1 NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM listini1-lst-k-gdo-articolo-MERGE-SPLITBUF
           PERFORM listini1-lst-k-gdo-cod-art-cli-MERGE-SPLITBUF
           PERFORM listini1-lst-k-data-MERGE-SPLITBUF
           PERFORM listini1-lst-k-articolo-MERGE-SPLITBUF
           PERFORM listini1-lst-k-cod-art-cli-MERGE-SPLITBUF
           MOVE STATUS-listini1 TO TOTEM-ERR-STAT
           MOVE "listini1" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-listini1-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-listini1 TO TOTEM-ERR-STAT
           MOVE "listini1" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-listini1-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-listini1 TO TOTEM-ERR-STAT
           MOVE "listini1" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-listini1-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-listini1 TO TOTEM-ERR-STAT
           MOVE "listini1" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:listini1, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-tmarche-INITSTART.
           IF DataSet1-tmarche-KEY-Asc
              MOVE Low-Value TO mar-chiave
           ELSE
              MOVE High-Value TO mar-chiave
           END-IF
           .

       DataSet1-tmarche-INITEND.
           IF DataSet1-tmarche-KEY-Asc
              MOVE High-Value TO mar-chiave
           ELSE
              MOVE Low-Value TO mar-chiave
           END-IF
           .

      * tmarche
       DataSet1-tmarche-START.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY >= mar-chiave
           ELSE
              START tmarche KEY <= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-NOTGREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY <= mar-chiave
           ELSE
              START tmarche KEY >= mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-GREATER.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY > mar-chiave
           ELSE
              START tmarche KEY < mar-chiave
           END-IF
           .

       DataSet1-tmarche-START-LESS.
           IF DataSet1-tmarche-KEY-Asc
              START tmarche KEY < mar-chiave
           ELSE
              START tmarche KEY > mar-chiave
           END-IF
           .

       DataSet1-tmarche-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tmarche-LOCK
              READ tmarche WITH LOCK 
              KEY mar-chiave
           ELSE
              READ tmarche WITH NO LOCK 
              KEY mar-chiave
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT 
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tmarche-KEY-Asc
              IF DataSet1-tmarche-LOCK
                 READ tmarche PREVIOUS WITH LOCK
              ELSE
                 READ tmarche PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tmarche-LOCK
                 READ tmarche NEXT WITH LOCK
              ELSE
                 READ tmarche NEXT WITH NO LOCK
              END-IF
           END-IF
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmarche-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmarche TO TOTEM-ERR-STAT
           MOVE "tmarche" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmarche, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq.
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE gdo-rec OF tgrupgdo
           INITIALIZE art-rec OF articoli
           INITIALIZE rpr-rec OF rpromo
           INITIALIZE tpr-rec OF tpromo
           INITIALIZE bli-rec OF blister
           INITIALIZE imp-rec OF timposte
           INITIALIZE tlst-rec OF tmp-listini
           INITIALIZE prg-rec OF progmag
           INITIALIZE prm-rec OF param
           INITIALIZE tpb-rec OF tpiombo
           INITIALIZE cli-rec OF clienti
           INITIALIZE tcl-rec OF ttipocli
           INITIALIZE lst-rec OF listini
           INITIALIZE lst-rec OF listini1
           INITIALIZE mar-rec OF tmarche
           INITIALIZE line-riga OF lineseq
           .


      * GRID
       gd-listini-Content.
      * CELLS' SETTING
              MODIFY gd-listini, X = 1, Y = 1,
                CELL-DATA = "N.",
      * CELLS' SETTING
              MODIFY gd-listini, X = 2, Y = 1,
                CELL-DATA = "Articolo",
      * CELLS' SETTING
              MODIFY gd-listini, X = 3, Y = 1,
                CELL-DATA = "Valido dal",
      * CELLS' SETTING
              MODIFY gd-listini, X = 4, Y = 1,
                CELL-DATA = "Art Cod Cli",
      * CELLS' SETTING
              MODIFY gd-listini, X = 5, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd-listini, X = 6, Y = 1,
                CELL-DATA = "Imb",
      * CELLS' SETTING
              MODIFY gd-listini, X = 7, Y = 1,
                CELL-DATA = "EAN",
      * CELLS' SETTING
              MODIFY gd-listini, X = 8, Y = 1,
                CELL-DATA = "Prod.",
      * CELLS' SETTING
              MODIFY gd-listini, X = 9, Y = 1,
                CELL-DATA = "Cons.",
      * CELLS' SETTING
              MODIFY gd-listini, X = 10, Y = 1,
                CELL-DATA = "Cou/Cob",
      * CELLS' SETTING
              MODIFY gd-listini, X = 11, Y = 1,
                CELL-DATA = "Add. Pb",
      * CELLS' SETTING
              MODIFY gd-listini, X = 12, Y = 1,
                CELL-DATA = "Prezzo",
      * CELLS' SETTING
              MODIFY gd-listini, X = 13, Y = 1,
                CELL-DATA = "Prezzo Promo",
      * CELLS' SETTING
              MODIFY gd-listini, X = 14, Y = 1,
                CELL-DATA = "Faro",
      * COLUMNS' SETTING
              MODIFY gd-listini, X = 12  
                COLUMN-FONT = Default-Font,
      * COLUMNS' SETTING
              MODIFY gd-listini, X = 13  
                COLUMN-COLOR = 143,
                COLUMN-FONT = Verdana10B-Occidentale,
      * COLUMNS' SETTING
              MODIFY gd-listini, X = 14  
                COLUMN-COLOR = 485,
                COLUMN-FONT = Verdana10-Occidentale,
           .

      * FD's Initialize Paragraph
       DataSet1-tgrupgdo-INITREC.
           INITIALIZE gdo-rec OF tgrupgdo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rpromo-INITREC.
           INITIALIZE rpr-rec OF rpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpromo-INITREC.
           INITIALIZE tpr-rec OF tpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-blister-INITREC.
           INITIALIZE bli-rec OF blister
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-timposte-INITREC.
           INITIALIZE imp-rec OF timposte
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-listini-INITREC.
           INITIALIZE tlst-rec OF tmp-listini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-progmag-INITREC.
           INITIALIZE prg-rec OF progmag
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-param-INITREC.
           INITIALIZE prm-rec OF param
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpiombo-INITREC.
           INITIALIZE tpb-rec OF tpiombo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-ttipocli-INITREC.
           INITIALIZE tcl-rec OF ttipocli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-listini-INITREC.
           INITIALIZE lst-rec OF listini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-listini1-INITREC.
           INITIALIZE lst-rec OF listini1
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmarche-INITREC.
           INITIALIZE mar-rec OF tmarche
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Independent GRAPHICAL WINDOW
              LINES 58,44,
              SIZE 182,38,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana10-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              AUTO-MINIMIZE,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen4-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,69,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd-listini, DISPLAY-COLUMNS (1, 6, 14, 24, 39, 74, 
           80, 95, 107, 115, 123, 131, 139, 169)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           move "<< HELP >> 0 = TUTTI GLI ARTICOLI" to lab-art-buf.
           display lab-art.
           move "<< HELP >> blank = TUTTI I GRUPPI GDO" to lab-gdo-buf.
           display lab-gdo.
           accept como-data from century-date.
           perform DATE-TO-SCREEN.
           move como-data to ef-data-buf.
           display ef-data.

           accept como-data from century-date.
           move "0101" to como-data(5:4).
           perform DATE-TO-SCREEN.
           move como-data to ef-data-dal-buf.
           display ef-data-dal.

           accept como-data from century-date.
           move "1231" to como-data(5:4).
           perform DATE-TO-SCREEN.
           move como-data to ef-data-al-buf.
           display ef-data-al.
                                                        
           move 1 to chk-escludi-buf chk-escludi-sp-buf.
           display chk-escludi chk-escludi-sp.
                                                      
           close      listini.
           set environment "listini" to "listini_sto".
           open input listini.
           if status-listini = "00"
              move 1 to v-storico
           end-if.          
           move 0 to chk-storico-buf.
           display chk-storico lab-storico.           
           close    listini.            
           set environment "listini" to "listini".    
           open i-o listini.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1002
                 PERFORM rb-data-LinkTo
              WHEN Key-Status = 1003
                 PERFORM rb-dal-LinkTo
              WHEN Key-Status = 1004
                 PERFORM pb-carica-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd-listini-Content
           .

       Form1-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .

       form3-Open-Routine.
           PERFORM form3-Scrn
           PERFORM form3-Proc
           .

       form3-Scrn.
           PERFORM form3-Create-Win
           PERFORM form3-Init-Value
           PERFORM form3-Init-Data
      * Tab keystrok settings
      * Tool Bar
           PERFORM form3-DISPLAY
           .

       form3-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 6,00,
              SIZE 42,00,
              CELL HEIGHT 10,
              CELL WIDTH 10,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              ERASE,
              LABEL-OFFSET 0,
              NO SCROLL,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              HANDLE IS form3-HANDLE,
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterCreateWin>
      *<<** Customized_Default, SP-G, Screen4-blockpgm-1, Disable **>>

           .
      * <TOTEM:END>


      * Tool Bar    
      * Status-bar
           DISPLAY form3 UPON form3-HANDLE
      * DISPLAY-COLUMNS settings
           .

       form3-PROC.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeAccept>
      *     evaluate true
      *     when carica
                move "Ricerca listini in corso..." to tit
                display lab   

                perform RIEMPI-TMP
                                           
                if trovato   
                   move "Caricamento listini in corso..." to tit
                   display lab              
                   
                   modify gd-listini, mass-update = 1
          
                   move 0 to idx
                   perform RIEMPI-GRID

                   move 2 to event-data-2
                   perform SPOSTAMENTO
                   modify  gd-listini, cursor-y    = event-data-2
                   modify  gd-listini, mass-update = 0
                end-if

      *     when chiamata
      *          move "Stampa listino in corso..."      to tit
      *          display lab
      *          perform CHIAMATA-STAMPA
      *
      *     when excel
      *          move "Estrazione escel in corso..."    to tit
      *          display lab
      *          perform ESTRAZIONE-EXCEL
      *
      *     when stampa-diretta
      *          move "Stampa listino in corso..."      to tit
      *          display lab
      *          perform RIEMPI-TMP         
      *          if trovato
      *             perform CHIAMATA-STAMPA
      *             close  tmp-listini
      *          else
      *             display message "Nessun listino trovato"
      *                       title titolo
      *                        icon 2
      *          end-if
      *     end-evaluate.  

           move 27 to key-status.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT OMITTED LINE 1 COL 1
                 ON EXCEPTION
                    PERFORM form3-Evaluate-Func
                 MOVE 2 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterEndAccept>
      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form3-HANDLE
           INITIALIZE Key-Status
           .

       form3-Evaluate-Func.
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM form3-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM form3-Exit
                 END-IF
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       form3-CLEAR.
           PERFORM form3-INIT-VALUE
           PERFORM form3-DISPLAY
           .

       form3-DISPLAY.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY form3 UPON form3-HANDLE
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterDisplay>
           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       form3-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       form3-Init-Data.
           MOVE 2 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
           .

       form3-Init-Value.
      * <TOTEM:EPT. FORM:form3, FORM:form3, SetDefault>
      * <TOTEM:END>
           PERFORM form3-FLD-TO-BUF
           .


       form3-ALLGRID-RESET.
           .

      * for Form's Validation
       form3-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       form3-Buf-To-Fld.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterBufToFld>
      * <TOTEM:END>
           .

       form3-Fld-To-Buf.
      * <TOTEM:EPT. FORM:form3, FORM:form3, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:form3, FORM:form3, AfterFldToBuf>
      * <TOTEM:END>
           .

       form3-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform form3-BUF-TO-FLD.
           move 0 to scelta.
           .
       form3-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM form3-SHOW-MSG-ROUTINE
           .

       form3-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM form3-DISPLAY-MESSAGE
           .

       form3-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       form3-Save-Status.
           .             

       form3-Restore-Status.
           .



       Form1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM ef-gdo-BeforeProcedure
           END-EVALUATE
           .

       Screen4-Event-Proc.
           .

       form2-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 18 ALSO
                    form1-Handle 
              PERFORM gd-listini-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 18 ALSO
                    form1-Handle 
              PERFORM gd-listini-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 18 ALSO
                    form1-Handle 
              PERFORM gd-listini-Ev-Msg-End-Drag
           WHEN Msg-Finish-Entry ALSO 18 ALSO
                    form1-Handle 
              PERFORM gd-listini-Ev-Msg-Finish-Entry
           WHEN Msg-Goto-Cell ALSO 18 ALSO
                    form1-Handle 
              PERFORM gd-listini-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 18 ALSO
                    form1-Handle 
              PERFORM gd-listini-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 18 ALSO
                    form1-Handle 
              PERFORM gd-listini-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-ID-ef-gdo
                inquire ef-gdo, value in gdo-codice
                move   "tgrupgdo"     to como-file
                call   "zoom-gt"   using como-file, gdo-rec
                                  giving stato-zoom
                cancel "zoom-gt"
      
                if stato-zoom = 0
                   move gdo-codice       to ef-gdo-buf
                   move gdo-intestazione to lab-gdo-buf
                   display ef-gdo lab-gdo
                end-if

           when 78-ID-ef-art
                inquire ef-art, value in art-codice
                move   "articoli"     to como-file
                call   "zoom-gt"   using como-file, art-rec
                                  giving stato-zoom
                cancel "zoom-gt"
      
                if stato-zoom = 0
                   move art-codice      to ef-art-buf
                   move art-descrizione to lab-art-buf
                   display ef-art lab-art
                end-if  
                
           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true.

           evaluate CONTROL-ID
      *    
           when 78-ID-ef-gdo
                inquire ef-gdo, value in gdo-codice
                if gdo-codice = spaces
                   move "Tutti i gruppi GDO" to gdo-intestazione
                else
                   read tgrupgdo no lock
                        invalid
                        move spaces to gdo-intestazione
                        set errori to true
                        display message "Gruppo GDO non valido"
                                  title tit-err
                                   icon 2
                   end-read
                end-if
                move gdo-intestazione to lab-gdo-buf
                display lab-gdo

           when 78-ID-ef-data
                inquire ef-data, value in ef-data-buf
                move ef-data-buf to como-data
                perform DATE-FORMAT
                move como-data to ef-data-buf
                display ef-data
                perform DATE-TO-FILE
                move como-data to data-richiesta 
           
           when 78-ID-ef-data-dal
                inquire ef-data-dal, value in ef-data-dal-buf
                move ef-data-dal-buf to como-data
                if como-data not = 0
                   perform DATE-FORMAT
                end-if
                move como-data to ef-data-dal-buf
                display ef-data-dal
                perform DATE-TO-FILE
                move como-data to data-richiesta-dal
           
           when 78-ID-ef-data-al
                inquire ef-data-al, value in ef-data-al-buf
                move ef-data-al-buf to como-data
                if como-data not = 0 and not = 99999999
                   perform DATE-FORMAT
                else
                   move 99999999 to como-data
                end-if
                move como-data to ef-data-al-buf
                display ef-data-al
                perform DATE-TO-FILE
                move como-data to data-richiesta-al

                
                inquire ef-data-dal, value in ef-data-dal-buf
                move ef-data-dal-buf to como-data
                perform DATE-TO-FILE
                move como-data to data-richiesta-dal

                if data-richiesta-dal > data-richiesta-al    
                   set errori to true
                   display message "Periodo non valido"
                             title tit-err
                              icon 2
                end-if

           when 78-ID-ef-art
                inquire ef-art, value in art-codice
                if art-codice = 0                 
                   move "TUTTI GLI ARTICOLI" to lab-art-buf
                else
                   inquire ef-cod-art-cli, value in ef-cod-art-cli-buf
                   if ef-cod-art-cli-buf not = spaces
                      move spaces to ef-cod-art-cli-buf
                      display ef-cod-art-cli
                   end-if
                   read articoli no lock
                        invalid
                        move art-codice to bli-codice
                        read blister no lock
                             invalid
                             move spaces to lab-art-buf
                             set errori to true
                             display message "Articolo non valido"
                                       title tit-err
                                        icon 2
                         not invalid
                             move bli-descrizione to lab-art-buf
                        end-read
                    not invalid
                        move art-descrizione to lab-art-buf
                   end-read
                end-if
                display lab-art

           when 78-ID-ef-cod-art-cli
                inquire ef-art, value in save-articolo
                inquire ef-cod-art-cli, value in save-cod-art-cli
                if save-articolo not = 0 and save-cod-art-cli not = 
           spaces
                   move 0 to ef-art-buf
                   display ef-art    
                   move "TUTTI GLI ARTICOLI" to lab-art-buf
                   display lab-art
                end-if           
           end-evaluate.

           if errori
              perform CANCELLA-COLORE
              move CONTROL-ID to STORE-ID        
              move 4          to ACCEPT-CONTROL  
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy".
           copy "utydata.cpy".
           copy "imposte.cpy".
           copy "addizionale-piombo.cpy".
           copy "trova-parametro.cpy".
           copy "common-excel.cpy".

      ***--- DUMMY ---> NON TOCCARE!!!!
       STATUS-HELP.
           continue 
           .
      * <TOTEM:END>

       READ-LISTINI-LOCK.
      * <TOTEM:PARA. READ-LISTINI-LOCK>
           initialize geslock-linkage.
           move "listini" to geslock-nome-file.

           move tlst-chiave-listino to lst-chiave of listini.
           set tutto-ok to true.
           perform until 1 = 2
              set RecLocked to false
              read listini lock
                   invalid
                   set errori  to true
                   exit perform
              end-read

              if RecLocked
                 move 1 to geslock-v-riprova
                 move 0 to geslock-v-ignora
                 move 1 to geslock-v-termina
                 call   "geslock" using geslock-linkage
                 cancel "geslock"
                 evaluate true
                 when riprova 
                      continue
                 when ignora  
                 when termina 
                      set errori to true
                      exit perform
                 end-evaluate
              else
                 exit perform
              end-if
           end-perform
           .
      * <TOTEM:END>

       RECUPERA-PROMO.
      * <TOTEM:PARA. RECUPERA-PROMO>
           move high-value     to tpr-rec.
           move lst-gdo of listini        to tpr-gdo.
           move data-richiesta to tpr-ini-dpo.

           start tpromo key <= tpr-chiave-ricerca
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read tpromo previous at end exit perform end-read
                    if tpr-gdo not = lst-gdo of listini
                       exit perform
                    end-if
                    if tpr-ini-dpo  <= data-richiesta and
                       tpr-fine-dpo >= data-richiesta and
                       tpr-nazionale
                       move tpr-codice   to rpr-codice
                       move lst-articolo of listini to rpr-articolo
                       initialize tlst-promo
                       read rpromo no lock 
                            invalid continue
                        not invalid
                            perform COMPONI-STRINGA
                            exit perform
                       end-read
                    end-if
                 end-perform
           end-start.

      ***---
       COMPONI-STRINGA.
           move rpr-prz-acq  to prezzo-z.
           move prezzo-z     to prezzo-x.
           inspect prezzo-x  replacing leading x"30" by x"20".
           call "C$JUSTIFY"  using prezzo-x, "L".
           inspect prezzo-x  replacing trailing spaces by low-value.

           move tpr-ini-dpo(5:2) to como-mese.
           evaluate como-mese
           when  1  move "-Gen-" to mese-ini
           when 02  move "-Feb-" to mese-ini
           when 03  move "-Mar-" to mese-ini
           when 04  move "-Apr-" to mese-ini
           when 05  move "-Mag-" to mese-ini
           when 06  move "-Giu-" to mese-ini
           when 07  move "-Lug-" to mese-ini
           when 08  move "-Ago-" to mese-ini
           when 09  move "-Set-" to mese-ini
           when 10  move "-Ott-" to mese-ini
           when 11  move "-Nov-" to mese-ini
           when 12  move "-Dic-" to mese-ini
           end-evaluate.

           
           move tpr-fine-dpo(5:2) to como-mese.
           evaluate como-mese
           when  1  move "-Gen-" to mese-fine
           when 02  move "-Feb-" to mese-fine
           when 03  move "-Mar-" to mese-fine
           when 04  move "-Apr-" to mese-fine
           when 05  move "-Mag-" to mese-fine
           when 06  move "-Giu-" to mese-fine
           when 07  move "-Lug-" to mese-fine
           when 08  move "-Ago-" to mese-fine
           when 09  move "-Set-" to mese-fine
           when 10  move "-Ott-" to mese-fine
           when 11  move "-Nov-" to mese-fine
           when 12  move "-Dic-" to mese-fine
           end-evaluate.

           string ""               delimited size
                  prezzo-x          delimited low-value
                  "  "              delimited low-value
                  tpr-ini-dpo(7:2)  delimited size
                  mese-ini          delimited size
                  tpr-ini-dpo(3:2)  delimited size
                  " "               delimited low-value
                  tpr-fine-dpo(7:2) delimited size
                  mese-fine         delimited size
                  tpr-fine-dpo(3:2) delimited size
                  into tlst-promo
           end-string 
           .
      * <TOTEM:END>

       RIEMPI-GRID.
      * <TOTEM:PARA. RIEMPI-GRID>
           move 0 to idx.

           move low-value to tlst-rec.
           start tmp-listini key >= tlst-chiave end-start.
           perform until 1 = 2
              read tmp-listini next 
                 at end 
                    exit perform 
              end-read    
              initialize rec-grid
              evaluate tlst-prezzo
              when 0         
                   move "SP"        to col-prz
                   if chk-escludi-sp-buf = 1
                      exit perform cycle
                   end-if
              when 999999,99 
                   move "FA"   to col-prz
                   move spaces to col-prod
                   if chk-escludi-buf = 1
                      exit perform cycle
                   end-if
              when other     
                   move tlst-prezzo to prezzo-edit
                   move prezzo-edit to col-prz
              end-evaluate
              add 1 to idx
              move idx                  to col-num
              move tlst-articolo        to col-art
              string tlst-data-vigore(7:2) delimited size
                     "/"                   delimited size
                     tlst-data-vigore(5:2) delimited size
                     "/"                   delimited size
                     tlst-data-vigore(3:2) delimited size
                     into col-data
              end-string
              move tlst-art-descrizione to col-des
              move tlst-imb             to col-imb
              if tlst-ean not = 0
                 move tlst-ean to col-ean
              end-if
              move tlst-faro            to col-faro
              move tlst-cons            to col-cons
              move tlst-cou             to col-cou
              move tlst-add             to col-add
              if tlst-prod not  = 0
                 move tlst-prod         to prezzo-edit
                 move prezzo-edit       to col-prod
              end-if
              move tlst-cod-art-cli     to col-cod-art
              move tlst-promo           to col-promo
                                                       
              add 1 to idx giving riga        

              modify gd-listini(riga, 1),  cell-data col-num
              modify gd-listini(riga, 2),  cell-data col-art
              modify gd-listini(riga, 3),  cell-data col-data
              modify gd-listini(riga, 4),  cell-data col-cod-art
              modify gd-listini(riga, 5),  cell-data col-des    
              modify gd-listini(riga, 6),  cell-data col-imb    
              modify gd-listini(riga, 7),  cell-data col-ean
              modify gd-listini(riga, 8),  cell-data col-prod 
              modify gd-listini(riga, 9),  cell-data col-cons
              modify gd-listini(riga, 10), cell-data col-cou
              modify gd-listini(riga, 11), cell-data col-add
              modify gd-listini(riga, 12), cell-data col-prz
              modify gd-listini(riga, 13), cell-data col-promo
              modify gd-listini(riga, 14), cell-data col-faro

              modify gd-listini(riga, 1), hidden-data 
           tlst-chiave-listino
              modify gd-listini(riga, 2), hidden-data tlst-chiave
      *    Luciano
              modify gd-listini(riga, 3), hidden-data tlst-prg-chiave
      *    Luciano
           end-perform.

           add 1 to idx giving tot-righe 
           .
      * <TOTEM:END>

       RIEMPI-TMP.
      * <TOTEM:PARA. RIEMPI-TMP>
           move 0 to idx RowsToPrint.
           move ef-gdo-buf to gdo-codice.
           read tgrupgdo no lock invalid continue end-read.
           move gdo-tipocli to tcl-codice.
           read ttipocli no lock invalid initialize tcl-rec end-read.
                              
           evaluate true true true
           when save-articolo = 0 save-cod-art-cli not = spaces 
           save-gdo = spaces
                set k-codart to true     
           when save-articolo = 0 save-cod-art-cli not = spaces 
           save-gdo not = spaces
                set k-gdo-codart to true

           when save-articolo not = 0 save-cod-art-cli = spaces 
           save-gdo = spaces
                set k-art to true      
           when save-articolo not = 0 save-cod-art-cli = spaces 
           save-gdo not = spaces
                set k-gdo-art to true      

           when save-articolo = 0 save-cod-art-cli = spaces save-gdo = 
           spaces
                set k-data to true     
           when save-articolo = 0 save-cod-art-cli = spaces save-gdo 
           not = spaces
                set k-gdo to true

           end-evaluate.
                                                    
           set trovato to true.
           move low-value to lst-rec of listini.  

           if tipo-data = 1
              move data-richiesta     to lst-data of listini
           else
              move data-richiesta-al  to lst-data of listini
           end-if.

           evaluate true
           when k-codart
                move save-cod-art-cli to lst-cod-art-cli of listini
                start listini key <= lst-k-cod-art-cli of listini
                      invalid set trovato to false
                end-start
           when k-gdo-codart                                       
                move save-gdo         to lst-gdo         of listini
                move save-cod-art-cli to lst-cod-art-cli of listini
                start listini key <= lst-k-gdo-cod-art-cli of listini
                      invalid set trovato to false
                end-start
           when k-art                                              
                move save-articolo to lst-articolo of listini
                start listini key <= lst-k-articolo of listini
                      invalid set trovato to false
                end-start
           when k-gdo-art                                          
                move save-gdo      to lst-gdo      of listini
                move save-articolo to lst-articolo of listini
                start listini key <= lst-k-gdo-articolo of listini
                      invalid set trovato to false
                end-start
           when k-data                                             
                start listini key <= lst-k-data of listini
                      invalid set trovato to false
                end-start
           when k-gdo                                              
                move save-gdo to lst-gdo of listini
                start listini key <= lst-chiave of listini
                      invalid set trovato to false
                end-start
           end-evaluate.

           if trovato                 
              close       tmp-listini
              open output tmp-listini 
              close       tmp-listini
              open i-o    tmp-listini

              move lst-data of listini to como-data |Così la salvo in formato AAAAMMGG

              move 0 to imp-data
              read timposte no lock invalid continue end-read

              perform until 1 = 2
                 read listini previous no lock at end exit perform 
           end-read
                                                                  
                 evaluate true 
                 when k-codart
                      if save-cod-art-cli not = lst-cod-art-cli of 
           listini
                         exit perform
                      end-if
                 when k-gdo-codart                                      
            
                      if save-gdo         not = lst-gdo         of 
           listini or
                         save-cod-art-cli not = lst-cod-art-cli of 
           listini
                         exit perform
                      end-if  
                 when k-art                                             
            
                      if save-articolo not = lst-articolo of listini
                         exit perform
                      end-if
                 when k-gdo-art                                         
            
                      if save-gdo      not = lst-gdo      of listini or
                         save-articolo not = lst-articolo of listini
                         exit perform
                      end-if
                 when k-data       
                      continue
                 when k-gdo         
                      if save-gdo not = lst-gdo of listini 
                         exit perform
                       end-if          
                 end-evaluate                      
                 if tipo-data = 1
                    if data-richiesta < lst-data of listini
                       exit perform
                    end-if
                 else            
                    if data-richiesta-dal < lst-data of listini
                       exit perform
                    end-if
                 end-if
                 if tipo-data = 1
                    move lst-articolo of listini to tlst-articolo
                    read tmp-listini no lock key tmp-k-articolo
                         invalid perform VALORIZZA-RIGA-TMP
                    end-read
                 else
                    if lst-data of listini < data-richiesta-dal
                       exit perform
                    end-if
                    perform VALORIZZA-RIGA-TMP
                 end-if 
              end-perform     
                               
              set trovato to false
              move low-value to tlst-chiave
              start tmp-listini key >= tlst-chiave 
                    invalid continue
              end-start
              perform until 1 = 2
                 read tmp-listini next 
                    at end 
                       exit perform 
                 end-read    
                 initialize rec-grid
                 evaluate tlst-prezzo
                 when 0            
                      if chk-escludi-sp-buf = 1
                         exit perform cycle
                      else
                         set trovato to true
                         exit perform
                      end-if
                 when 999999,99    
                      if chk-escludi-buf = 1
                         exit perform cycle
                      else
                         set trovato to true
                         exit perform
                      end-if
                 when other     
                      set trovato to true
                      exit perform
                 end-evaluate
              end-perform

           end-if                    
           .
      * <TOTEM:END>

       SALVA-PROGRESSIVO.
      * <TOTEM:PARA. SALVA-PROGRESSIVO>
      *****     inquire gd-listini(riga, 1), hidden-data tlst-chiave-listino
      *****     inquire gd-listini(riga, 3), hidden-data tlst-prg-chiave
      ******    Luciano
      *****
      *****     perform ZOOM-SU-PROGMAG-ARTICOLO.    
      *****
      *****
      ******     05 tlst-chiave-listino.
      ******         10 tlst-gdo-listino PIC  x(5).
      ******         10 tlst-data-listino            PIC  9(8).
      ******         10 tlst-articolo-listino        PIC  9(6).
      ******     05 tlst-prg-chiave.
      ******         20 tlst-prg-cod-articolo        PIC  9(6).
      ******         20 tlst-prg-cod-magazzino       PIC  X(3).
      ******         20 tlst-prg-tipo-imballo        PIC  X(3).
      ******         20 tlst-prg-peso    PIC  9(3)V9(3).
      *****
      *****
      ********---
      ***** ZOOM-SU-PROGMAG-ARTICOLO.
      *****     modify pb-stampa,  visible false.
      *****     modify pb-esci,    visible false.
      *****     modify gd-listini, enabled false.
      *****     move   "prg-timbalqta"     to como-file
      *****     move tlst-articolo-listino to tlst-prg-cod-articolo.
      *****     move "LBX"                 to tlst-prg-cod-magazzino
      *****
      *****     call   "zoom-gt"  using  como-file, tlst-prg-chiave
      *****                       giving stato-zoom.
      *****     cancel "zoom-gt".
      *****
      *****     if stato-zoom = ZERO
      *****        perform SALVA-LISTINO
      *****     end-if.
      *****     modify gd-listini, enabled true. 
      *****     modify pb-stampa,  visible true.
      *****     modify pb-esci,    visible true.
      *****
      *****
      ********---
      ***** SALVA-LISTINO.
      *****     perform READ-LISTINI-LOCK.
      *****
      *****     if tutto-ok
      *****        move tlst-prg-chiave       to lst-prg-chiave of listini
      *****        accept lst-data-modifica   of listini from century-date
      *****        accept lst-ora-modifica    of listini from time
      *****        move user-codi             to lst-utente-modifica of listini
      *****        rewrite lst-rec of listini
      *****           invalid
      *****              set errori  to true
      *****        end-rewrite
      *****     end-if
      *****
      *****     if errori
      *****        display message box "Impossibile salvare il listino"
      *****              icon 3
      *****              title titolo
      *****     else
      *****        modify gd-listini(riga, 3), hidden-data tlst-prg-chiave
      *****        perform VIS-PROG
      *****     end-if 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           if event-data-2 < 2 
              move 2 to event-data-2 
           end-if.
           if event-data-2 > tot-righe
              move tot-righe to event-data-2 
           end-if.
           modify gd-listini, y = event-data-2,
                        start-y = event-data-2,
                              x = 12,
                        start-x = 2,
                   region-color = 80.

           move event-data-2 to riga
           perform VIS-PROG 
           .
      * <TOTEM:END>

       VALORIZZA-RIGA-TMP.
      * <TOTEM:PARA. VALORIZZA-RIGA-TMP>
           perform CALCOLA-IMPOSTE-PROD.

           perform RECUPERA-PROMO.

           move lst-cod-art-cli  of listini     to tlst-cod-art-cli.
           move lst-prezzo       of listini     to tlst-prezzo.
           move lst-data         of listini     to tlst-data-vigore.
           move gdo-data-vigore      to data-vigore.
           if lst-data-modifica  of listini = 0
              move lst-data-creazione  of listini to tlst-data-modifica
           end-if.
           move lst-chiave of listini     to tlst-chiave-listino.
      *    Luciano
           move lst-prg-chiave of listini to tlst-prg-chiave.
      *    Luciano               
           move 0 to tlst-prog  

           if tipo-data = 1
              write tlst-rec invalid continue end-write
           else                  
              perform until 1 = 2
                 write tlst-rec 
                       invalid add 1 to tlst-prog
                   not invalid exit perform
                 end-write
              end-perform
           end-if
           add 1 to idx.

      ***---
       CALCOLA-IMPOSTE-PROD.
           initialize rec-grid.
           move lst-articolo of listini to tlst-articolo art-codice.
           read articoli no lock
                invalid
                move art-codice to bli-codice
                read blister no lock
                     invalid continue
                 not invalid
                     move bli-descrizione to tlst-art-descrizione
                     move spaces          to tlst-imb
                     move spaces          to tlst-ean
                     move bli-prezzo      to tlst-faro
                     |Da Walter: fisso NO
                     set  TrattamentoPiombo    to false
                     |Per cui non leggo nemmeno la marca
                     set  TrattamentoGDO       to true
                     move 0 to comodo tot-consumo tot-cou tot-cobat 
           tot-add
                     perform varying idx from 1 by 1 
                               until idx > 50
                        if bli-el-articolo(idx) = 0
                           exit perform
                        end-if
                        move bli-el-articolo(idx) to art-codice
                        read articoli no lock invalid continue end-read

                        move ef-gdo-buf     to lst-gdo of listini1
                        if tipo-data = 1
                           move data-richiesta    
                             to lst-data of listini1
                        else
                           move data-richiesta-al 
                             to lst-data of listini1
                        end-if

                        move art-codice to lst-articolo of listini1
                        start listini1 key <= lst-k-gdo-articolo of 
           listini1
                              invalid continue
                          not invalid
                              read listini1 previous no lock
                              if lst-gdo of listini1 = ef-gdo-buf and
                                 lst-articolo of listini1 = art-codice
            
                                 if lst-prg-cod-articolo of listini1 
           not = 0
                                    if tipo-data = 1
                                       move lst-prg-chiave of listini1 
                                         to prg-chiave
                                       read progmag no lock
                                            invalid continue
                                        not invalid
                                            move prg-peso-utf     
                                              to art-peso-utf
                                            move prg-peso-non-utf 
                                              to art-peso-non-utf
                                       end-read
                                    else
                                       if lst-data of listini1 >= 
           data-richiesta-dal
                                          move lst-prg-chiave of 
           listini1 
                                            to prg-chiave
                                          read progmag no lock
                                               invalid continue
                                           not invalid
                                               move prg-peso-utf     
                                                 to art-peso-utf
                                               move prg-peso-non-utf 
                                                 to art-peso-non-utf
                                          end-read
                                       end-if
                                    end-if
                                 end-if
                              end-if
                        end-start

                        move art-peso-utf        to prg-peso-utf
                        move art-peso-non-utf    to prg-peso-non-utf
                        move art-marca-prodotto  to mar-codice
                        read tmarche
                        perform CALCOLA-IMPOSTE
                        add imposta-consumo      to tot-consumo
                        add imposta-cou          to tot-cou
                        add imposta-cobat        to tot-cobat
                        if art-si-cobat and tcl-si-piombo
                           accept como-data-ordine from century-date
                           move como-data-ordine   to tpb-data
                           move art-marca-prodotto to tpb-marca
                           move ef-gdo-buf to gdo-codice
                           move gdo-cli-rifer to como-prm-cliente
                           move 0 to como-prm-destino
                           move lst-prezzo of listini to 
           como-prz-unitario
                           perform ADDIZIONALE-PIOMBO
                           move add-piombo to tot-add
                        end-if
                     end-perform

                     add tot-cou  to tot-cobat giving comodo
                     move comodo  to tlst-cou
                     move tot-add to tlst-add

                     move tot-consumo to tlst-cons
                     compute comodo = lst-prezzo   of listini -
                                      tot-consumo -
                                      tot-cou     -
                                      tot-add     -
                                      tot-cobat

                     if comodo > 0
                        move comodo to tlst-prod
                     else
                        move 0 to tlst-prod
                     end-if

                end-read
            not invalid
                move art-descrizione      to tlst-art-descrizione
                move art-imballo-standard to tlst-imb
                move art-codice-ean-1     to tlst-ean
                move art-prezzo-banco     to tlst-faro
                |Da Walter: fisso NO
                set  TrattamentoPiombo    to false
                |Per cui non leggo nemmeno la marca
                set  TrattamentoGDO       to true

                if lst-prg-cod-articolo  of listini not = 0
                   move lst-prg-chiave  of listini to prg-chiave
                   read progmag no lock
                        invalid continue
                    not invalid
                        move prg-peso-utf     to art-peso-utf
                        move prg-peso-non-utf to art-peso-non-utf
                   end-read
                end-if

                move art-peso-utf         to prg-peso-utf
                move art-peso-non-utf     to prg-peso-non-utf
                perform CALCOLA-IMPOSTE
                move imposta-consumo      to tlst-cons
                add  imposta-cou          to imposta-cobat
                                      giving comodo

                move comodo               to tlst-cou  
                move 0 to tlst-add add-piombo
                if art-si-cobat and tcl-si-piombo 
                   |FA e SP
                   if lst-prezzo of listini > 0 and 
                      lst-prezzo of listini < 999999,99
                      accept como-data-ordine from century-date
                      move ef-gdo-buf to gdo-codice
                      move gdo-cli-rifer to como-prm-cliente
                      move como-data-ordine   to tpb-data
                      move art-marca-prodotto to tpb-marca
                      move lst-prezzo of listini to como-prz-unitario
                      move 0 to como-prm-destino
                      perform ADDIZIONALE-PIOMBO 
                      move add-piombo         to tlst-add
                   end-if
                end-if 

                compute comodo = lst-prezzo  of listini -
                                 imposta-consumo -
                                 imposta-cou     -
                                 imposta-cobat   -
                                 add-piombo

                if comodo > 0
                   move comodo to tlst-prod
                else
                   move 0 to tlst-prod
                end-if

           end-read 
           .
      * <TOTEM:END>

       VIS-PROG.
      * <TOTEM:PARA. VIS-PROG>
      *     inquire gd-listini(riga, 3), hidden-data tlst-prg-chiave.
      *     initialize lab-prog-buf.
      *     move 0 to v-prog.
      *
      **    nel file potrebbe esserci spazio, quindi lo trasformo
      *     if tlst-prg-cod-articolo = space
      *        move 0 to tlst-prg-cod-articolo
      *     end-if
      *     
      *     if tlst-prg-cod-articolo not = 0
      *        move 1 to v-prog
      *        move tlst-prg-cod-articolo to art-ed
      *        call "C$JUSTIFY" using art-ed, "L"
      *        inspect art-ed replacing trailing space by low-value
      *        move tlst-prg-peso   to peso-ed
      *        call "C$JUSTIFY" using peso-ed, "L"
      *        inspect peso-ed replacing trailing space by low-value
      *        string "Art. "                delimited size
      *               art-ed                 delimited low-value
      *               " - Mag. "             delimited size
      *               tlst-prg-cod-magazzino delimited size
      *               " - Imb. "             delimited size
      *               tlst-prg-tipo-imballo  delimited size
      *               " - Peso "             delimited size
      *               peso-ed                delimited low-value
      *               into lab-prog-buf
      *        end-string
      *     end-if 
           .
      * <TOTEM:END>

       CARICA-LISTINI.
      * <TOTEM:PARA. CARICA-LISTINI>
           if ef-gdo-buf = spaces and art-codice = 0 and 
           ef-cod-art-cli-buf = spaces
              exit paragraph
           end-if.                             

           if ef-gdo-buf         = save-gdo         and
              art-codice         = save-articolo    and
              chk-escludi-buf    = save-fa          and
              chk-escludi-sp-buf = save-sp          and
              chk-storico-buf    = save-storico     and
              ef-cod-art-cli-buf = save-cod-art-cli and
              data-richiesta     = save-data        and
              data-richiesta-dal = save-dal         and
              data-richiesta-al  = save-al          and
              tipo-data          = save-tipo-data
              exit paragraph
           end-if.

           move ef-gdo-buf         to save-gdo.
           move art-codice         to save-articolo.
           move chk-escludi-buf    to save-fa. 
           move chk-escludi-sp-buf to save-sp. 
           move chk-storico-buf    to save-storico.
           move ef-cod-art-cli-buf to save-cod-art-cli.
           move data-richiesta     to save-data.
           move data-richiesta-dal to save-dal.         
           move data-richiesta-al  to save-al.
           move tipo-data          to save-tipo-data.
                                      
           modify gd-listini, reset-grid = 1.
           perform GD-LISTINI-CONTENT.

           perform FORM3-OPEN-ROUTINE 
              

           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       ginqui-Ev-Before-Program.
      * <TOTEM:PARA. ginqui-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID.
           accept como-data from century-date
           accept como-ora  from time
           initialize path-tmp-listini
           accept  path-tmp-listini from environment "PATH_ST"
           inspect path-tmp-listini replacing trailing 
                                    spaces by low-value
           string path-tmp-listini delimited low-value
                  "TMP-LISTINI"    delimited size
                  "_"              delimited size
                  como-data        delimited size
                  "_"              delimited size
                  como-ora         delimited size
                  ".tmp"           delimited size
             into path-tmp-listini
           end-string.

           open output tmp-listini.
           close       tmp-listini.
           open i-o    tmp-listini 
           .
      * <TOTEM:END>
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           close       tmp-listini.
           delete file tmp-listini 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       ef-gdo-BeforeProcedure.
      * <TOTEM:PARA. ef-gdo-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca 
           .
      * <TOTEM:END>
       ef-gdo-AfterProcedure.
      * <TOTEM:PARA. ef-gdo-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           perform CONTROLLO      
           .
      * <TOTEM:END>
       Screen4-Ef-1-BeforeProcedure.
      * <TOTEM:PARA. Screen4-Ef-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen4-Ef-1-AfterProcedure.
      * <TOTEM:PARA. Screen4-Ef-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO   
           .
      * <TOTEM:END>
       Screen4-Ef-2-BeforeProcedure.
      * <TOTEM:PARA. Screen4-Ef-2-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca 
           .
      * <TOTEM:END>
       Screen4-Ef-2-AfterProcedure.
      * <TOTEM:PARA. Screen4-Ef-2-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           perform CONTROLLO  
           .
      * <TOTEM:END>
       ef-cod-art-cli-BeforeProcedure.
      * <TOTEM:PARA. ef-cod-art-cli-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       ef-cod-art-cli-AfterProcedure.
      * <TOTEM:PARA. ef-cod-art-cli-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO  
           .
      * <TOTEM:END>
       Screen4-Cb-1-BeforeProcedure.
      * <TOTEM:PARA. Screen4-Cb-1-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           .
      * <TOTEM:END>
       Screen4-Cb-1-AfterProcedure.
      * <TOTEM:PARA. Screen4-Cb-1-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           .
      * <TOTEM:END>
       Screen4-Rb-1-BeforeProcedure.
      * <TOTEM:PARA. Screen4-Rb-1-BeforeProcedure>
           modify control-handle, color = colore-nu
           .
      * <TOTEM:END>
       Screen4-Rb-1-AfterProcedure.
      * <TOTEM:PARA. Screen4-Rb-1-AfterProcedure>
           modify control-handle, color = colore-or
           .
      * <TOTEM:END>
       rb-data-LinkTo.
      * <TOTEM:PARA. rb-data-LinkTo>
           move 1 to e-data.
           move 0 to e-periodo.
           display ef-data-dal ef-data-al ef-data 
           .
      * <TOTEM:END>
       rb-dal-LinkTo.
      * <TOTEM:PARA. rb-dal-LinkTo>
           move 0 to e-data.
           move 1 to e-periodo.
           display ef-data-dal ef-data-al ef-data 
           .
      * <TOTEM:END>
       gd-listini-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd-listini-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-listini-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd-listini-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail 
           .
      * <TOTEM:END>
       gd-listini-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd-listini-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-listini-Ev-Msg-Finish-Entry.
      * <TOTEM:PARA. gd-listini-Ev-Msg-Finish-Entry>
           .
      * <TOTEM:END>
       gd-listini-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd-listini-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-listini-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd-listini-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd-listini-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd-listini-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       pb-carica-LinkTo.
      * <TOTEM:PARA. pb-carica-LinkTo>
           perform varying control-id from 78-id-ef-gdo by 1 
                     until control-id > 78-ID-ef-data-al
              perform CONTROLLO
              if errori 
                 exit perform
              end-if
           end-perform.

           if errori                      
              move 4 to accept-control
           else
              perform CARICA-LISTINI
           end-if 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

