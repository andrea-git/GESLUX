      *{TOTEM}PRG-COMMENT
      * lab-promo-art.Cbl
      * lab-promo-art.Cbl is generated by TOTEM
      * This is a generated file. DO NOT modify this file directly.
      *{TOTEM}END
       IDENTIFICATION       DIVISION.
      *{TOTEM}PRGID
       PROGRAM-ID.          lab-promo-art.
       AUTHOR.              andre.
       DATE-WRITTEN.        martedì 4 giugno 2019 11:12:45.
       REMARKS.
      *{TOTEM}END

       ENVIRONMENT          DIVISION.
       CONFIGURATION        SECTION.
       SPECIAL-NAMES.
      *{TOTEM}SPECIAL-NAME
      * <TOTEM:EPT. INIT:lab-promo-art, INIT:lab-promo-art, SpecialName>
      * <TOTEM:END>
      *{TOTEM}END
      *{TOTEM}ACTIVEX-DEF
      *{TOTEM}END
      *{TOTEM}DECIMAL-POINT
           DECIMAL-POINT IS COMMA.
      *{TOTEM}END

       INPUT-OUTPUT         SECTION.
       FILE-CONTROL.
      *{TOTEM}FILE-CONTROL
           COPY "tgrupgdo.sl".
           COPY "tpromo.sl".
           COPY "rpromo.sl".
           COPY "destini.sl".
           COPY "clienti.sl".
           COPY "articoli.sl".
           COPY "tmp-destini.sl".
           COPY "lineseq.sl".
           COPY "locali.sl".
           COPY "tmp-promo-art.sl".
           COPY "blister.sl".
      *{TOTEM}END
       DATA                 DIVISION.
       FILE                 SECTION.
      *{TOTEM}FILE
           COPY "tgrupgdo.fd".
           COPY "tpromo.fd".
           COPY "rpromo.fd".
           COPY "destini.fd".
           COPY "clienti.fd".
           COPY "articoli.fd".
           COPY "tmp-destini.fd".
           COPY "lineseq.fd".
           COPY "locali.fd".
           COPY "tmp-promo-art.fd".
           COPY "blister.fd".
      *{TOTEM}END

       WORKING-STORAGE      SECTION.
      *{TOTEM}ACU-DEF
               COPY "C:\ACUCORP\ACUCBL610\ACUGT\SAMPLE\DEF\ACUGUI.DEF".
               COPY "C:\ACUCORP\ACUCBL610\ACUGT\SAMPLE\DEF\ACUCOBOL.DEF"
           .
               COPY "C:\ACUCORP\ACUCBL610\ACUGT\SAMPLE\DEF\FONTS.DEF".
               COPY "C:\ACUCORP\ACUCBL610\ACUGT\SAMPLE\DEF\CRTVARS.DEF".
               COPY "C:\ACUCORP\ACUCBL610\ACUGT\SAMPLE\DEF\SHOWMSG.DEF".
               COPY "totem.def".
               COPY "standard.def".
      *{TOTEM}END

      *{TOTEM}COPY-WORKING
      * Key Status
       77 Key-Status IS SPECIAL-NAMES CRT STATUS PIC 9(5) VALUE 0.
          88 Enter-Pushed VALUE 13.
          88 Exit-Pushed VALUE 27.
          88 Message-Received VALUE 95.
          88 Event-Occurred VALUE 96.
          88 Screen-No-Input-Field VALUE 97.
          88 Screen-Time-Out VALUE 99.
      * Properties & User defined Working Stoarge
       78 titolo VALUE IS "Geslux LAB - Ricerca promozioni articolo". 
           COPY  "COMMON-EXCEL.DEF".
           COPY  "EXTERNALS.DEF".
           COPY  "LINK-GESLOCK.DEF".
       77 Small-Font
                  USAGE IS HANDLE OF FONT SMALL-FONT.
       77 Default-Font
                  USAGE IS HANDLE OF FONT DEFAULT-FONT.
       77 data-oggi        PIC  9(8).
       77 form1-Handle
                  USAGE IS HANDLE OF WINDOW.
       77 AUTO-ID          PIC  9(6)
                  VALUE IS 0.
       77 ok-73x21-bmp     PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       01 FILLER           PIC  9.
           88 CallManutenzione VALUE IS 1    WHEN SET TO FALSE  0. 
       01 FILLER           PIC  9.
           88 prima-volta VALUE IS 1    WHEN SET TO FALSE  0. 
       77 cancel-73x21-bmp PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Form1-Tb-1-Handlea
                  USAGE IS HANDLE OF WINDOW.
       77 ESCI-73X21-BMP   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-ok-bmp   PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 bottone-cancel-bmp           PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 Verdana12-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 Verdana12B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 toolbar-bmp      PIC  S9(9)
                  USAGE IS COMP-4
                  VALUE IS 0.
       77 E-ESCI           PIC  9
                  VALUE IS 1.
       77 E-CERCA          PIC  9
                  VALUE IS 1.
       77 ef-gdo-buf       PIC  x(5).
       77 start-data       PIC  9(8).
       77 STATUS-tgrupgdo  PIC  X(2).
           88 Valid-STATUS-tgrupgdo VALUE IS "00" THRU "09". 
       77 lab-gdo-buf      PIC  X(50).
       77 STATUS-articoli  PIC  X(2).
           88 Valid-STATUS-articoli VALUE IS "00" THRU "09". 
       77 STATUS-clienti   PIC  X(2).
           88 Valid-STATUS-clienti VALUE IS "00" THRU "09". 
       77 STATUS-destini   PIC  X(2).
           88 Valid-STATUS-destini VALUE IS "00" THRU "09". 
       77 STATUS-rpromo    PIC  X(2).
           88 Valid-STATUS-rpromo VALUE IS "00" THRU "09". 
       77 STATUS-tpromo    PIC  X(2).
           88 Valid-STATUS-tpromo VALUE IS "00" THRU "09". 
       01 rec-grid.
           05 col-art          PIC  z(6).
           05 col-tipo         PIC  x.
           05 col-des          PIC  x(50).
           05 col-prz          PIC  zzz.zz9,99.
           05 col-gdo          PIC  x(5).
           05 col-ini-dpo      PIC  x(10).
           05 col-fine-dpo     PIC  x(10).
           05 col-ini-vol      PIC  x(10).
           05 col-fine-vol     PIC  x(10).
           05 col-nome         PIC  X(50).
       77 hid-codice       PIC  9(15).
       77 lab-art-buf      PIC  X(50).
       77 ef-art-buf       PIC  z(6).
       77 save-gdo         PIC  x(5)
                  VALUE IS spaces.
       77 save-ini         PIC  9(8)
                  VALUE IS 0.
       77 save-fine        PIC  9(8)
                  VALUE IS 0.
       77 save-articolo    PIC  9(6)
                  VALUE IS 0.
       77 save-cliente     PIC  9(5).
       77 save-destino     PIC  9(5).
       77 lab-citta-buf    PIC  x(50).
       77 lab-via-buf      PIC  x(50).
       77 Verdana10-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 path-tmp-destini PIC  X(256).
       77 STATUS-tmp-destini           PIC  X(2).
           88 Valid-STATUS-tmp-destini VALUE IS "00" THRU "09". 
       77 como-x           PIC  x.
       77 ef-fine-buf      PIC  99/99/9999.
       77 ef-ini-buf       PIC  99/99/9999.
       77 como-data-to     PIC  9(8).
       77 Verdana10B-Occidentale
                  USAGE IS HANDLE OF FONT.
       77 como-user        PIC  x(20).
       77 wstampa          PIC  X(256).
       77 STATUS-lineseq   PIC  X(2).
           88 Valid-STATUS-lineseq VALUE IS "00" THRU "09". 
       77 STATUS-locali    PIC  X(2).
           88 Valid-STATUS-locali VALUE IS "00" THRU "09". 
       77 path-tmp-promo-art           PIC  X(256).
       77 STATUS-tmp-promo-art         PIC  X(2).
           88 Valid-STATUS-tmp-promo-art VALUE IS "00" THRU "09". 
       77 STATUS-blister   PIC  X(2).
           88 Valid-STATUS-blister VALUE IS "00" THRU "09". 

      ***********************************************************
      *   Code Gen's Buffer                                     *
      ***********************************************************
       77 STATUS-Form1-FLAG-REFRESH PIC  9.
          88 Form1-FLAG-REFRESH  VALUE 1 FALSE 0. 
       77 TMP-DataSet1-tgrupgdo-BUF     PIC X(1206).
       77 TMP-DataSet1-tpromo-BUF     PIC X(263).
       77 TMP-DataSet1-rpromo-BUF     PIC X(209).
       77 TMP-DataSet1-destini-BUF     PIC X(3386).
       77 TMP-DataSet1-clienti-BUF     PIC X(1910).
       77 TMP-DataSet1-articoli-BUF     PIC X(3669).
       77 TMP-DataSet1-tmp-destini-BUF     PIC X(170).
       77 TMP-DataSet1-lineseq-BUF     PIC X(900).
       77 TMP-DataSet1-locali-BUF     PIC X(203).
       77 TMP-DataSet1-tmp-promo-art-BUF     PIC X(227).
       77 TMP-DataSet1-blister-BUF     PIC X(2967).
      * VARIABLES FOR RECORD LENGTH.
       77  TotemFdSlRecordClearOffset   PIC 9(5) COMP-4.
       77  TotemFdSlRecordLength        PIC 9(5) COMP-4.
      * FILE'S LOCK MODE FLAG
       77 DataSet1-tgrupgdo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tgrupgdo-LOCK  VALUE "Y".
       77 DataSet1-KEYIS   PIC 9(3) VALUE 1.
       77 DataSet1-tgrupgdo-KEY1-ORDER  PIC X VALUE "A".
          88 DataSet1-tgrupgdo-KEY1-Asc  VALUE "A".
          88 DataSet1-tgrupgdo-KEY1-Desc VALUE "D".
       77 DataSet1-tpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tpromo-LOCK  VALUE "Y".
       77 DataSet1-tpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tpromo-KEY-Asc  VALUE "A".
          88 DataSet1-tpromo-KEY-Desc VALUE "D".
       77 DataSet1-rpromo-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-rpromo-LOCK  VALUE "Y".
       77 DataSet1-rpromo-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-rpromo-KEY-Asc  VALUE "A".
          88 DataSet1-rpromo-KEY-Desc VALUE "D".
       77 DataSet1-destini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-destini-LOCK  VALUE "Y".
       77 DataSet1-destini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-destini-KEY-Asc  VALUE "A".
          88 DataSet1-destini-KEY-Desc VALUE "D".
       77 DataSet1-clienti-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-clienti-LOCK  VALUE "Y".
       77 DataSet1-clienti-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-clienti-KEY-Asc  VALUE "A".
          88 DataSet1-clienti-KEY-Desc VALUE "D".
       77 DataSet1-articoli-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-articoli-LOCK  VALUE "Y".
       77 DataSet1-articoli-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-articoli-KEY-Asc  VALUE "A".
          88 DataSet1-articoli-KEY-Desc VALUE "D".
       77 DataSet1-tmp-destini-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-destini-LOCK  VALUE "Y".
       77 DataSet1-tmp-destini-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-destini-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-destini-KEY-Desc VALUE "D".
       77 DataSet1-lineseq-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-lineseq-LOCK  VALUE "Y".
       77 DataSet1-lineseq-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-lineseq-KEY-Asc  VALUE "A".
          88 DataSet1-lineseq-KEY-Desc VALUE "D".
       77 DataSet1-locali-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-locali-LOCK  VALUE "Y".
       77 DataSet1-locali-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-locali-KEY-Asc  VALUE "A".
          88 DataSet1-locali-KEY-Desc VALUE "D".
       77 DataSet1-tmp-promo-art-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-tmp-promo-art-LOCK  VALUE "Y".
       77 DataSet1-tmp-promo-art-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-tmp-promo-art-KEY-Asc  VALUE "A".
          88 DataSet1-tmp-promo-art-KEY-Desc VALUE "D".
       77 DataSet1-blister-LOCK-FLAG   PIC X VALUE SPACE.
           88 DataSet1-blister-LOCK  VALUE "Y".
       77 DataSet1-blister-KEY-ORDER  PIC X VALUE "A".
          88 DataSet1-blister-KEY-Asc  VALUE "A".
          88 DataSet1-blister-KEY-Desc VALUE "D".

       77 tgrupgdo-gdo-k-g2-SPLITBUF  PIC X(9).
       77 tpromo-tpr-chiave-ricerca-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-gdo-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-fine-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-ini-SPLITBUF  PIC X(22).
       77 tpromo-tpr-chiave-volantino-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-fine-vol-SPLITBUF  PIC X(22).
       77 tpromo-tpr-k-data-ins-SPLITBUF  PIC X(29).
       77 rpromo-k-stampa-SPLITBUF  PIC X(32).
       77 destini-K1-SPLITBUF  PIC X(51).
       77 destini-k-localita-SPLITBUF  PIC X(36).
       77 clienti-cli-K1-SPLITBUF  PIC X(47).
       77 clienti-cli-K3-SPLITBUF  PIC X(12).
       77 clienti-cli-K4-SPLITBUF  PIC X(8).
       77 articoli-art-k1-SPLITBUF  PIC X(51).
       77 articoli-art-k-frn-SPLITBUF  PIC X(16).
       77 tmp-destini-k-cli-ragsoc-SPLITBUF  PIC X(41).
       77 tmp-destini-k-des-ragsoc-SPLITBUF  PIC X(41).
       77 tmp-destini-k-des-localita-SPLITBUF  PIC X(41).
       77 tmp-destini-k-des-indirizzo-SPLITBUF  PIC X(41).
       77 tmp-destini-k-des-ord-zoom-SPLITBUF  PIC X(121).
       77 locali-loc-chiave-gdo-fine-SPLITBUF  PIC X(32).
       77 locali-loc-chiave-fine-SPLITBUF  PIC X(32).
       77 locali-loc-chiave-ini-SPLITBUF  PIC X(32).
       77 tmp-promo-art-key01-SPLITBUF  PIC X(22).
       77 tmp-promo-art-k-ord-SPLITBUF  PIC X(71).
       77 blister-k-magaz-SPLITBUF  PIC X(10).
       77 blister-k-des-SPLITBUF  PIC X(51).
      * FOR SPLIT KEY BUFFER
       77 DataSet1-tmp-promo-art-SPLIT-BUF1   PIC X(22).


      *{TOTEM}END

      *{TOTEM}ID-LOGICI
      ***** Elenco ID Logici *****
       78  78-ID-ef-gdo VALUE 5001.
       78  78-ID-ef-ini VALUE 5002.
       78  78-ID-ef-fine VALUE 5003.
       78  78-ID-ef-art VALUE 5004.
      ***** Fine ID Logici *****
      *{TOTEM}END

       LINKAGE          SECTION.
      *{TOTEM}LINKAGE
           COPY  "COMMON-LINKAGE.DEF".
      *{TOTEM}END

       SCREEN           SECTION.
      *{TOTEM}COPY-SCREEN
      * FORM
       01 
           Form1, 
           BEFORE PROCEDURE Form1-BeforeProcedure,
           .

      * FRAME
       05
           frame-limiti, 
           Frame, 
           COL 14,10, 
           LINE 1,50,
           LINES 10,56 ,
           SIZE 85,00 ,
           ID IS 9,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "Ricerca promozioni articolo",
           TITLE-POSITION 2,
           .

      * ENTRY FIELD
       05
           ef-gdo, 
           Entry-Field, 
           COL 28,10, 
           LINE 3,50,
           LINES 1,33 ,
           SIZE 7,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-gdo,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           LEFT,
           VALUE ef-gdo-buf,
           AFTER PROCEDURE ef-gdo-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-ini, 
           Entry-Field, 
           COL 28,10, 
           LINE 5,50,
           LINES 1,33 ,
           SIZE 11,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-ini,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           VALUE ef-ini-buf,
           AFTER PROCEDURE ef-ini-dpo-AfterProcedure, 
           .

      * ENTRY FIELD
       05
           ef-fine, 
           Entry-Field, 
           COL 50,10, 
           LINE 5,50,
           LINES 1,33 ,
           SIZE 11,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-fine,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           CENTER,
           VALUE ef-fine-buf,
           AFTER PROCEDURE ef-fine-AfterProcedure, 
           .

      * PUSH BUTTON
       05
           pb-dest, 
           Push-Button, 
           COL 28,10, 
           LINE 7,50,
           LINES 1,17 ,
           SIZE 3,00 ,
           ENABLED 1,
           EXCEPTION-VALUE 1000,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "...",
           .

      * PUSH BUTTON
       05
           pb-pn, 
           Push-Button, 
           COL 32,10, 
           LINE 7,50,
           LINES 1,17 ,
           SIZE 3,00 ,
           ENABLED 1,
           EXCEPTION-VALUE 1001,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TITLE "PN",
           .

      * ENTRY FIELD
       05
           ef-art, 
           Entry-Field, 
           COL 28,10, 
           LINE 9,50,
           LINES 1,33 ,
           SIZE 7,00 ,
           BOXED,
           UPPER,
           COLOR IS 513,
           ID IS 78-ID-ef-art,                
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RIGHT,
           VALUE ef-art-buf,
           AFTER PROCEDURE ef-art-AfterProcedure, 
           .

      * LABEL
       05
           Screen3-La-1aa, 
           Label, 
           COL 16,10, 
           LINE 3,50,
           LINES 1,33 ,
           SIZE 10,50 ,
           ID IS 10,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Gruppo GDO",
           .

      * LABEL
       05
           lab-gdo, 
           Label, 
           COL 36,10, 
           LINE 3,50,
           LINES 1,33 ,
           SIZE 61,00 ,
           COLOR IS 5,
           ID IS 5,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-gdo-buf,
           .

      * LABEL
       05
           Screen3-La-1aaa, 
           Label, 
           COL 16,10, 
           LINE 5,50,
           LINES 1,33 ,
           SIZE 10,50 ,
           ID IS 6,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Inizio DPO",
           .

      * LABEL
       05
           Screen3-La-1aad, 
           Label, 
           COL 16,10, 
           LINE 9,50,
           LINES 1,17 ,
           SIZE 10,50 ,
           ID IS 13,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Articolo",
           .

      * LABEL
       05
           lab-art, 
           Label, 
           COL 36,10, 
           LINE 9,50,
           LINES 1,33 ,
           SIZE 61,00 ,
           COLOR IS 5,
           ID IS 16,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-art-buf,
           .

      * LABEL
       05
           Screen3-La-1aada, 
           Label, 
           COL 16,10, 
           LINE 7,50,
           LINES 1,17 ,
           SIZE 10,50 ,
           ID IS 17,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Locali",
           .

      * LABEL
       05
           lab-citta, 
           Label, 
           COL 36,10, 
           LINE 7,39,
           LINES 1,17 ,
           SIZE 30,00 ,
           COLOR IS 5,
           ID IS 18,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-citta-buf,
           .

      * LABEL
       05
           lab-via, 
           Label, 
           COL 67,10, 
           LINE 7,50,
           LINES 1,17 ,
           SIZE 30,00 ,
           COLOR IS 5,
           ID IS 12,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE lab-via-buf,
           .

      * LABEL
       05
           Screen3-La-1aaaa, 
           Label, 
           COL 41,10, 
           LINE 5,50,
           LINES 1,33 ,
           SIZE 8,00 ,
           ID IS 19,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "Fine DPO",
           .

      * LABEL
       05
           Screen4-blockpgm-1, 
           Label, 
           COL 67,20, 
           LINE 3,89,
           LINES 1,17 ,
           SIZE 11,10 ,
           ID IS 1,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           TRANSPARENT,
           TITLE "BlockPgm",
           VISIBLE v-custom,
           .

      * LABEL
       05
           Screen4-Custom1-1, 
           Label, 
           COL 82,10, 
           LINE 5,22,
           LINES 2,22 ,
           SIZE 5,00 ,
           FONT IS Default-Font,
           ID IS 4,
           TRANSPARENT,
           TITLE "CUSTOM CONTROL",
           VISIBLE v-custom,
           .

      * FRAME
       05
           Screen4-Fr-1, 
           Frame, 
           COL 1,00, 
           LINE 31,67,
           LINES 2,83 ,
           SIZE 111,20 ,
           ID IS 29,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           .

      * PUSH BUTTON
       05
           pb-ok, 
           Push-Button, 
           COL 95,90, 
           LINE 32,29,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-OK-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 1002,
           FLAT,
           ID IS 200,
           AFTER PROCEDURE pb-ok-AfterProcedure, 
           BEFORE PROCEDURE pb-ok-BeforeProcedure, 
           .

      * PUSH BUTTON
       05
           pb-annulla, 
           Push-Button, 
           COL 103,70, 
           LINE 32,29,
           LINES 30,00 ,
           SIZE 73,00 ,
           BITMAP-HANDLE BOTTONE-CANCEL-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 201,
           SELF-ACT,
           ESCAPE-BUTTON,
           AFTER PROCEDURE pb-annulla-AfterProcedure, 
           BEFORE PROCEDURE pb-annulla-BeforeProcedure, 
           .

      * GRID
       05
           gd1, 
           Grid, 
           COL 2,00, 
           LINE 13,00,
           LINES 18,17 ,
           SIZE 109,10 ,
           ADJUSTABLE-COLUMNS,
           BOXED,
           DATA-COLUMNS (1, 7, 8, 58, 68, 73, 83, 93, 103, 113),
           ALIGNMENT ("R", "C", "U", "R", "C", "C", "C", "C", "C", "U"),
           SEPARATION (5, 5, 5, 5, 5, 5, 5, 5, 5, 5),
           NUM-COL-HEADINGS 1,
           COLUMN-HEADINGS,
           CURSOR-FRAME-WIDTH 0,
           DIVIDER-COLOR 1,
           FONT IS Verdana10-Occidentale,
           HEADING-COLOR 257,
           HEADING-DIVIDER-COLOR 1,
           ID IS 3,
           HEIGHT-IN-CELLS,
           WIDTH-IN-CELLS,
           RECORD-DATA rec-grid,
           TILED-HEADINGS,
           VIRTUAL-WIDTH 134,
           VPADDING 50,
           VSCROLL,
           EVENT PROCEDURE Screen4-Gd-1-Event-Proc,
           .

      * TOOLBAR
       01
           Form1-Tb-1a,
           .    

      * PUSH BUTTON
       05
           TOOL-ESCI, 
           Push-Button, 
           COL 1,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 1,
           UNFRAMED,
           SQUARE,
           ENABLED E-ESCI,
           EXCEPTION-VALUE 27,
           FLAT,
           ID IS 202,
           SELF-ACT,
           ESCAPE-BUTTON,
           TITLE "&Esci",
           .

      * PUSH BUTTON
       05
           TOOL-CERCA, 
           Push-Button, 
           COL 6,00, 
           LINE 1,08,
           LINES 23,00 ,
           SIZE 24,00 ,
           BITMAP-HANDLE TOOLBAR-BMP,
           BITMAP-NUMBER 8,
           UNFRAMED,
           SQUARE,
           ENABLED E-CERCA,
           EXCEPTION-VALUE 8,
           FLAT,
           ID IS 203,
           SELF-ACT,
           TITLE "Cerca (F8)",
           .

      *{TOTEM}END

      *{TOTEM}LINKPARA
       PROCEDURE  DIVISION USING LK-BLOCKPGM, USER-CODI, LIVELLO-ABIL.
      *{TOTEM}END

      *{TOTEM}DECLARATIVE
       DECLARATIVES.
      * <TOTEM:EPT. INIT:lab-promo-art, INIT:lab-promo-art, BeforeDeclarative>
       LINESEQ-ERR SECTION.
           use after error procedure on lineseq.
           set tutto-ok  to true.
           evaluate status-lineseq
           when "35"
                display message "File [LINESEQ] not found!"
                           title titolo
                            icon 3
                set errori to true
           when "39"
                display message "File [LINESEQ] Mismatch size!"
                           title titolo
                            icon 3
                set errori to true
           when "98"
                display message "[LINESEQ] Indexed file corrupt!"
                           title titolo
                            icon 3
                set errori to true
           when "93"
                set RecLocked to true
                initialize geslock-messaggio
                string   "Chiudere file Excel!"
                  x"0d0a""Impossibile procedere!" delimited size
                      into geslock-messaggio
                end-string
                move 1 to geslock-v-riprova
                move 0 to geslock-v-ignora
                move 1 to geslock-v-termina
                move   "File TXT"   to geslock-nome-file
                call   "geslock" using geslock-linkage
                cancel "geslock"
                evaluate true
                when riprova
                     set RecLocked to false
                     open output lineseq
                when termina
                     set errori to true
                end-evaluate
           end-evaluate.

      * <TOTEM:END>
       INPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON INPUT.
       0100-DECL.
           EXIT.
       I-O-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON I-O.
       0200-DECL.
           EXIT.
       OUTPUT-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON OUTPUT.
       0300-DECL.
           EXIT.
       TRANSACTION-ERROR SECTION.
           USE AFTER STANDARD ERROR PROCEDURE ON TRANSACTION.
       0400-DECL.
           EXIT.
       END DECLARATIVES.
      *{TOTEM}END

       MAIN-LOGIC.
      *{TOTEM}ENTRY-BEFPRG
      *    Before-Program
           PERFORM lab-promo-art-Ev-Before-Program
      *{TOTEM}END
           PERFORM INITIALIZE-ROUTINE.
      * run main screen
      *{TOTEM}RUN-MAINSCR
           PERFORM Form1-OPEN-ROUTINE.
      *{TOTEM}END

      *{TOTEM}COPY-PROCEDURE
       EXIT-STOP-ROUTINE.
           PERFORM CLOSE-FILE-RTN
      * <TOTEM:EPT. INIT:lab-promo-art, INIT:lab-promo-art, BeforeDestroyResource>
      * <TOTEM:END>
           DESTROY Verdana10-Occidentale
           DESTROY Verdana10B-Occidentale
           DESTROY Verdana12-Occidentale
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-OK-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, BOTTONE-CANCEL-BMP
           CALL "w$bitmap" USING WBITMAP-DESTROY, TOOLBAR-BMP
      *    After-Program
           PERFORM ginqui-Ev-After-Program
           EXIT PROGRAM TOTEM-PgmStatus
           STOP RUN.

       INITIALIZE-ROUTINE.
      *    Before Init
      * initialize program status variable
           Initialize TOTEM-PgmStatus.
      * get system information
           ACCEPT SYSTEM-INFORMATION FROM SYSTEM-INFO.
      * get terminal information
           ACCEPT TERMINAL-ABILITIES FROM TERMINAL-INFO.
      * set font
           PERFORM INIT-FONT.
      * load bitmap
           PERFORM INIT-BMP.
      * load resource
           PERFORM INIT-RES.
      * create pop-up menu
           PERFORM INIT-POPUP.
      * open files
           PERFORM OPEN-FILE-RTN.
      *    After Init
           .
    
       INIT-FONT.
      * Verdana10-Occidentale
           INITIALIZE WFONT-DATA Verdana10-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10-Occidentale, WFONT-DATA
      * Verdana10B-Occidentale
           INITIALIZE WFONT-DATA Verdana10B-Occidentale
           MOVE 10 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO TRUE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana10B-Occidentale, WFONT-DATA
      * Verdana12-Occidentale
           INITIALIZE WFONT-DATA Verdana12-Occidentale
           MOVE 12 TO WFONT-SIZE
           MOVE "Verdana" TO WFONT-NAME
           SET WFCHARSET-DONT-CARE TO TRUE
           SET WFONT-BOLD TO FALSE
           SET WFONT-ITALIC TO FALSE
           SET WFONT-UNDERLINE TO FALSE
           SET WFONT-STRIKEOUT TO FALSE
           SET WFONT-FIXED-PITCH TO FALSE
           MOVE 0 TO WFONT-CHAR-SET
           CALL "W$FONT" USING WFONT-GET-FONT, 
                     Verdana12-Occidentale, WFONT-DATA
           .

       INIT-BMP.
      * pb-ok
           COPY RESOURCE "BOTTONE-OK.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-OK.BMP", 
                   GIVING BOTTONE-OK-BMP.
      * pb-annulla
           COPY RESOURCE "BOTTONE-CANCEL.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "BOTTONE-CANCEL.BMP", 
                   GIVING BOTTONE-CANCEL-BMP.
      * TOOL-ESCI
           COPY RESOURCE "TOOLBAR.BMP".
           CALL "w$bitmap" USING WBITMAP-LOAD "TOOLBAR.BMP", 
                   GIVING TOOLBAR-BMP.
           .

       INIT-RES.
           .

       INIT-POPUP.
           .

       OPEN-FILE-RTN.
      *    Before Open
           PERFORM OPEN-tgrupgdo
           PERFORM OPEN-tpromo
           PERFORM OPEN-rpromo
           PERFORM OPEN-destini
           PERFORM OPEN-clienti
           PERFORM OPEN-articoli
      *    tmp-destini OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-destini
      *    lineseq OPEN MODE IS FALSE
      *    PERFORM OPEN-lineseq
           PERFORM OPEN-locali
      *    tmp-promo-art OPEN MODE IS FALSE
      *    PERFORM OPEN-tmp-promo-art
           PERFORM OPEN-blister
      *    After Open
           .

       OPEN-tgrupgdo.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tgrupgdo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tgrupgdo
           IF NOT Valid-STATUS-tgrupgdo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tgrupgdo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tpromo.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT tpromo
           IF NOT Valid-STATUS-tpromo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-rpromo.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:rpromo, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT rpromo
           IF NOT Valid-STATUS-rpromo
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:rpromo, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-destini.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:destini, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT destini
           IF NOT Valid-STATUS-destini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:destini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-clienti.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:clienti, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT clienti
           IF NOT Valid-STATUS-clienti
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:clienti, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-articoli.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:articoli, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT articoli
           IF NOT Valid-STATUS-articoli
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:articoli, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-destini.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tmp-destini, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-destini
           IF NOT Valid-STATUS-tmp-destini
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tmp-destini, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-lineseq.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:lineseq, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT lineseq
           IF NOT Valid-STATUS-lineseq
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:lineseq, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-locali.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:locali, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT locali
           IF NOT Valid-STATUS-locali
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:locali, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-tmp-promo-art.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tmp-promo-art, BeforeOpen>
      * <TOTEM:END>
           OPEN  OUTPUT tmp-promo-art
           IF NOT Valid-STATUS-tmp-promo-art
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tmp-promo-art, AfterOpen>
      * <TOTEM:END>
           .

       OPEN-blister.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:blister, BeforeOpen>
      * <TOTEM:END>
           OPEN  INPUT blister
           IF NOT Valid-STATUS-blister
              PERFORM  Form1-EXTENDED-FILE-STATUS
              GO TO EXIT-STOP-ROUTINE
           END-IF
      * <TOTEM:EPT. INIT:lab-promo-art, FD:blister, AfterOpen>
      * <TOTEM:END>
           .

       CLOSE-FILE-RTN.
      *    Before Close
           PERFORM CLOSE-tgrupgdo
           PERFORM CLOSE-tpromo
           PERFORM CLOSE-rpromo
           PERFORM CLOSE-destini
           PERFORM CLOSE-clienti
           PERFORM CLOSE-articoli
      *    tmp-destini CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-destini
      *    lineseq CLOSE MODE IS FALSE
      *    PERFORM CLOSE-lineseq
           PERFORM CLOSE-locali
      *    tmp-promo-art CLOSE MODE IS FALSE
      *    PERFORM CLOSE-tmp-promo-art
           PERFORM CLOSE-blister
      *    After Close
           .

       CLOSE-tgrupgdo.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tgrupgdo, BeforeClose>
      * <TOTEM:END>
           CLOSE tgrupgdo
           .

       CLOSE-tpromo.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE tpromo
           .

       CLOSE-rpromo.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:rpromo, BeforeClose>
      * <TOTEM:END>
           CLOSE rpromo
           .

       CLOSE-destini.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:destini, BeforeClose>
      * <TOTEM:END>
           CLOSE destini
           .

       CLOSE-clienti.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:clienti, BeforeClose>
      * <TOTEM:END>
           CLOSE clienti
           .

       CLOSE-articoli.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:articoli, BeforeClose>
      * <TOTEM:END>
           CLOSE articoli
           .

       CLOSE-tmp-destini.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tmp-destini, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-lineseq.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:lineseq, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-locali.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:locali, BeforeClose>
      * <TOTEM:END>
           CLOSE locali
           .

       CLOSE-tmp-promo-art.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:tmp-promo-art, BeforeClose>
      * <TOTEM:END>
           .

       CLOSE-blister.
      * <TOTEM:EPT. INIT:lab-promo-art, FD:blister, BeforeClose>
      * <TOTEM:END>
           CLOSE blister
           .

       tgrupgdo-gdo-k-g2-MERGE-SPLITBUF.
           INITIALIZE tgrupgdo-gdo-k-g2-SPLITBUF
           MOVE gdo-codice-G2 OF tgrupgdo(1:3) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(1:3)
           MOVE gdo-chiave OF tgrupgdo(1:5) TO 
           tgrupgdo-gdo-k-g2-SPLITBUF(4:5)
           .

       DataSet1-tgrupgdo-INITSTART.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 MOVE Low-Value TO gdo-chiave OF tgrupgdo
              ELSE
                 MOVE High-Value TO gdo-chiave OF tgrupgdo
              END-IF
           END-EVALUATE
           .

       DataSet1-tgrupgdo-INITEND.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 MOVE High-Value TO gdo-chiave OF tgrupgdo
              ELSE
                 MOVE Low-Value TO gdo-chiave OF tgrupgdo
              END-IF
           END-EVALUATE
           .

       DataSet1-CHANGETO-KEY1.
           MOVE 1 TO DataSet1-KEYIS
           .   

       DataSet1-Change-CurrentKey-Asc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "A" TO DataSet1-tgrupgdo-KEY1-ORDER
           END-EVALUATE
           .

       DataSet1-Change-CurrentKey-Desc.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              MOVE "D" TO DataSet1-tgrupgdo-KEY1-ORDER
           END-EVALUATE
           .

      * tgrupgdo
       DataSet1-tgrupgdo-START.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
              ELSE
                 START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
              END-IF
           END-EVALUATE
           .

       DataSet1-tgrupgdo-START-NOTGREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 START tgrupgdo KEY <= gdo-chiave OF tgrupgdo
              ELSE
                 START tgrupgdo KEY >= gdo-chiave OF tgrupgdo
              END-IF
           END-EVALUATE
           .

       DataSet1-tgrupgdo-START-GREATER.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 START tgrupgdo KEY > gdo-chiave OF tgrupgdo
              ELSE
                 START tgrupgdo KEY < gdo-chiave OF tgrupgdo
              END-IF
           END-EVALUATE
           .

       DataSet1-tgrupgdo-START-LESS.
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 START tgrupgdo KEY < gdo-chiave OF tgrupgdo
              ELSE
                 START tgrupgdo KEY > gdo-chiave OF tgrupgdo
              END-IF
           END-EVALUATE
           .

       DataSet1-tgrupgdo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadRecord>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-LOCK
                 READ tgrupgdo WITH LOCK 
                 KEY gdo-chiave OF tgrupgdo
              ELSE
                 READ tgrupgdo WITH NO LOCK 
                 KEY gdo-chiave OF tgrupgdo
              END-IF
           END-EVALUATE
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT 
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadNext>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 IF DataSet1-tgrupgdo-LOCK
                    READ tgrupgdo NEXT WITH LOCK
                 ELSE
                    READ tgrupgdo NEXT WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tgrupgdo-LOCK
                    READ tgrupgdo PREVIOUS WITH LOCK
                 ELSE
                    READ tgrupgdo PREVIOUS WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeReadPrev>
      * <TOTEM:END>
           EVALUATE DataSet1-KEYIS
           WHEN 1
              IF DataSet1-tgrupgdo-KEY1-Asc
                 IF DataSet1-tgrupgdo-LOCK
                    READ tgrupgdo PREVIOUS WITH LOCK
                 ELSE
                    READ tgrupgdo PREVIOUS WITH NO LOCK
                 END-IF
              ELSE
                 IF DataSet1-tgrupgdo-LOCK
                    READ tgrupgdo NEXT WITH LOCK
                 ELSE
                    READ tgrupgdo NEXT WITH NO LOCK
                 END-IF
              END-IF
           END-EVALUATE
           PERFORM tgrupgdo-gdo-k-g2-MERGE-SPLITBUF
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tgrupgdo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tgrupgdo TO TOTEM-ERR-STAT
           MOVE "tgrupgdo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tgrupgdo, AfterDelete>
      * <TOTEM:END>
           .

       tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ricerca-SPLITBUF
           MOVE tpr-chiave-ricerca OF tpromo(1:21) TO 
           tpromo-tpr-chiave-ricerca-SPLITBUF(1:21)
           .

       tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-gdo-fine-SPLITBUF
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(1:5)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(6:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-gdo-fine-SPLITBUF(14:8)
           .

       tpromo-tpr-chiave-fine-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-fine-SPLITBUF
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(1:8)
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-fine-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-ini-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-ini-SPLITBUF
           MOVE tpr-ini-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(1:8)
           MOVE tpr-fine-dpo OF tpromo(1:8) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-ini-SPLITBUF(17:5)
           .

       tpromo-tpr-chiave-volantino-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-chiave-volantino-SPLITBUF
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(1:8)
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-chiave-volantino-SPLITBUF(17:5)
           .

       tpromo-tpr-k-fine-vol-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-fine-vol-SPLITBUF
           MOVE tpr-fine-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(1:8)
           MOVE tpr-ini-volantino OF tpromo(1:8) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(9:8)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-fine-vol-SPLITBUF(17:5)
           .

       tpromo-tpr-k-data-ins-MERGE-SPLITBUF.
           INITIALIZE tpromo-tpr-k-data-ins-SPLITBUF
           MOVE tpr-data-creazione OF tpromo(1:8) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(1:8)
           MOVE tpr-codice OF tpromo(1:15) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(9:15)
           MOVE tpr-gdo OF tpromo(1:5) TO 
           tpromo-tpr-k-data-ins-SPLITBUF(24:5)
           .

       DataSet1-tpromo-INITSTART.
           IF DataSet1-tpromo-KEY-Asc
              MOVE Low-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE High-Value TO tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-INITEND.
           IF DataSet1-tpromo-KEY-Asc
              MOVE High-Value TO tpr-chiave OF tpromo
           ELSE
              MOVE Low-Value TO tpr-chiave OF tpromo
           END-IF
           .

      * tpromo
       DataSet1-tpromo-START.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY >= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY <= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-NOTGREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY <= tpr-chiave OF tpromo
           ELSE
              START tpromo KEY >= tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-GREATER.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY > tpr-chiave OF tpromo
           ELSE
              START tpromo KEY < tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-START-LESS.
           IF DataSet1-tpromo-KEY-Asc
              START tpromo KEY < tpr-chiave OF tpromo
           ELSE
              START tpromo KEY > tpr-chiave OF tpromo
           END-IF
           .

       DataSet1-tpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-tpromo-LOCK
              READ tpromo WITH LOCK 
              KEY tpr-chiave OF tpromo
           ELSE
              READ tpromo WITH NO LOCK 
              KEY tpr-chiave OF tpromo
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT 
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-tpromo-KEY-Asc
              IF DataSet1-tpromo-LOCK
                 READ tpromo PREVIOUS WITH LOCK
              ELSE
                 READ tpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-tpromo-LOCK
                 READ tpromo NEXT WITH LOCK
              ELSE
                 READ tpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM tpromo-tpr-chiave-ricerca-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-fine-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-ini-MERGE-SPLITBUF
           PERFORM tpromo-tpr-chiave-volantino-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-fine-vol-MERGE-SPLITBUF
           PERFORM tpromo-tpr-k-data-ins-MERGE-SPLITBUF
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tpromo TO TOTEM-ERR-STAT
           MOVE "tpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tpromo, AfterDelete>
      * <TOTEM:END>
           .

       rpromo-k-stampa-MERGE-SPLITBUF.
           INITIALIZE rpromo-k-stampa-SPLITBUF
           MOVE rpr-codice(1:15) TO rpromo-k-stampa-SPLITBUF(1:15)
           MOVE rpr-data-creazione(1:8) TO 
           rpromo-k-stampa-SPLITBUF(16:8)
           MOVE rpr-ora-creazione(1:8) TO rpromo-k-stampa-SPLITBUF(24:8)
           .

       DataSet1-rpromo-INITSTART.
           IF DataSet1-rpromo-KEY-Asc
              MOVE Low-Value TO rpr-chiave
           ELSE
              MOVE High-Value TO rpr-chiave
           END-IF
           .

       DataSet1-rpromo-INITEND.
           IF DataSet1-rpromo-KEY-Asc
              MOVE High-Value TO rpr-chiave
           ELSE
              MOVE Low-Value TO rpr-chiave
           END-IF
           .

      * rpromo
       DataSet1-rpromo-START.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY >= rpr-chiave
           ELSE
              START rpromo KEY <= rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-NOTGREATER.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY <= rpr-chiave
           ELSE
              START rpromo KEY >= rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-GREATER.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY > rpr-chiave
           ELSE
              START rpromo KEY < rpr-chiave
           END-IF
           .

       DataSet1-rpromo-START-LESS.
           IF DataSet1-rpromo-KEY-Asc
              START rpromo KEY < rpr-chiave
           ELSE
              START rpromo KEY > rpr-chiave
           END-IF
           .

       DataSet1-rpromo-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-rpromo-LOCK
              READ rpromo WITH LOCK 
              KEY rpr-chiave
           ELSE
              READ rpromo WITH NO LOCK 
              KEY rpr-chiave
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT 
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-rpromo-KEY-Asc
              IF DataSet1-rpromo-LOCK
                 READ rpromo NEXT WITH LOCK
              ELSE
                 READ rpromo NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rpromo-LOCK
                 READ rpromo PREVIOUS WITH LOCK
              ELSE
                 READ rpromo PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-rpromo-KEY-Asc
              IF DataSet1-rpromo-LOCK
                 READ rpromo PREVIOUS WITH LOCK
              ELSE
                 READ rpromo PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-rpromo-LOCK
                 READ rpromo NEXT WITH LOCK
              ELSE
                 READ rpromo NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM rpromo-k-stampa-MERGE-SPLITBUF
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-rpromo-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-rpromo TO TOTEM-ERR-STAT
           MOVE "rpromo" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:rpromo, AfterDelete>
      * <TOTEM:END>
           .

       destini-K1-MERGE-SPLITBUF.
           INITIALIZE destini-K1-SPLITBUF
           MOVE des-ragsoc-1(1:40) TO destini-K1-SPLITBUF(1:40)
           MOVE des-codice(1:5) TO destini-K1-SPLITBUF(41:5)
           MOVE des-prog(1:5) TO destini-K1-SPLITBUF(46:5)
           .

       destini-k-localita-MERGE-SPLITBUF.
           INITIALIZE destini-k-localita-SPLITBUF
           MOVE des-localita(1:35) TO destini-k-localita-SPLITBUF(1:35)
           .

       DataSet1-destini-INITSTART.
           IF DataSet1-destini-KEY-Asc
              MOVE Low-Value TO des-chiave
           ELSE
              MOVE High-Value TO des-chiave
           END-IF
           .

       DataSet1-destini-INITEND.
           IF DataSet1-destini-KEY-Asc
              MOVE High-Value TO des-chiave
           ELSE
              MOVE Low-Value TO des-chiave
           END-IF
           .

      * destini
       DataSet1-destini-START.
           IF DataSet1-destini-KEY-Asc
              START destini KEY >= des-chiave
           ELSE
              START destini KEY <= des-chiave
           END-IF
           .

       DataSet1-destini-START-NOTGREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY <= des-chiave
           ELSE
              START destini KEY >= des-chiave
           END-IF
           .

       DataSet1-destini-START-GREATER.
           IF DataSet1-destini-KEY-Asc
              START destini KEY > des-chiave
           ELSE
              START destini KEY < des-chiave
           END-IF
           .

       DataSet1-destini-START-LESS.
           IF DataSet1-destini-KEY-Asc
              START destini KEY < des-chiave
           ELSE
              START destini KEY > des-chiave
           END-IF
           .

       DataSet1-destini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-destini-LOCK
              READ destini WITH LOCK 
              KEY des-chiave
           ELSE
              READ destini WITH NO LOCK 
              KEY des-chiave
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT 
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-destini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-destini-KEY-Asc
              IF DataSet1-destini-LOCK
                 READ destini PREVIOUS WITH LOCK
              ELSE
                 READ destini PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-destini-LOCK
                 READ destini NEXT WITH LOCK
              ELSE
                 READ destini NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM destini-K1-MERGE-SPLITBUF
           PERFORM destini-k-localita-MERGE-SPLITBUF
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-destini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:destini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-destini TO TOTEM-ERR-STAT
           MOVE "destini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:destini, AfterDelete>
      * <TOTEM:END>
           .

       clienti-cli-K1-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K1-SPLITBUF
           MOVE cli-tipo-CF OF clienti(1:1) TO 
           clienti-cli-K1-SPLITBUF(1:1)
           MOVE cli-ragsoc-1 OF clienti(1:40) TO 
           clienti-cli-K1-SPLITBUF(2:40)
           MOVE cli-codice OF clienti(1:5) TO 
           clienti-cli-K1-SPLITBUF(42:5)
           .

       clienti-cli-K3-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K3-SPLITBUF
           MOVE cli-gdo OF clienti(1:5) TO clienti-cli-K3-SPLITBUF(1:5)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K3-SPLITBUF(6:6)
           .

       clienti-cli-K4-MERGE-SPLITBUF.
           INITIALIZE clienti-cli-K4-SPLITBUF
           MOVE cli-utf OF clienti(1:1) TO clienti-cli-K4-SPLITBUF(1:1)
           MOVE cli-chiave OF clienti(1:6) TO 
           clienti-cli-K4-SPLITBUF(2:6)
           .

       DataSet1-clienti-INITSTART.
           IF DataSet1-clienti-KEY-Asc
              MOVE Low-Value TO cli-chiave OF clienti
           ELSE
              MOVE High-Value TO cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-INITEND.
           IF DataSet1-clienti-KEY-Asc
              MOVE High-Value TO cli-chiave OF clienti
           ELSE
              MOVE Low-Value TO cli-chiave OF clienti
           END-IF
           .

      * clienti
       DataSet1-clienti-START.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY >= cli-chiave OF clienti
           ELSE
              START clienti KEY <= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-NOTGREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY <= cli-chiave OF clienti
           ELSE
              START clienti KEY >= cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-GREATER.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY > cli-chiave OF clienti
           ELSE
              START clienti KEY < cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-START-LESS.
           IF DataSet1-clienti-KEY-Asc
              START clienti KEY < cli-chiave OF clienti
           ELSE
              START clienti KEY > cli-chiave OF clienti
           END-IF
           .

       DataSet1-clienti-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-clienti-LOCK
              READ clienti WITH LOCK 
              KEY cli-chiave OF clienti
           ELSE
              READ clienti WITH NO LOCK 
              KEY cli-chiave OF clienti
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT 
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-clienti-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-clienti-KEY-Asc
              IF DataSet1-clienti-LOCK
                 READ clienti PREVIOUS WITH LOCK
              ELSE
                 READ clienti PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-clienti-LOCK
                 READ clienti NEXT WITH LOCK
              ELSE
                 READ clienti NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM clienti-cli-K1-MERGE-SPLITBUF
           PERFORM clienti-cli-K3-MERGE-SPLITBUF
           PERFORM clienti-cli-K4-MERGE-SPLITBUF
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-clienti-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-clienti TO TOTEM-ERR-STAT
           MOVE "clienti" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:clienti, AfterDelete>
      * <TOTEM:END>
           .

       articoli-art-k1-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k1-SPLITBUF
           MOVE art-descrizione OF articoli(1:50) TO 
           articoli-art-k1-SPLITBUF(1:50)
           .

       articoli-art-k-frn-MERGE-SPLITBUF.
           INITIALIZE articoli-art-k-frn-SPLITBUF
           MOVE art-cod-art-frn OF articoli(1:15) TO 
           articoli-art-k-frn-SPLITBUF(1:15)
           .

       DataSet1-articoli-INITSTART.
           IF DataSet1-articoli-KEY-Asc
              MOVE Low-Value TO art-chiave OF articoli
           ELSE
              MOVE High-Value TO art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-INITEND.
           IF DataSet1-articoli-KEY-Asc
              MOVE High-Value TO art-chiave OF articoli
           ELSE
              MOVE Low-Value TO art-chiave OF articoli
           END-IF
           .

      * articoli
       DataSet1-articoli-START.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY >= art-chiave OF articoli
           ELSE
              START articoli KEY <= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-NOTGREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY <= art-chiave OF articoli
           ELSE
              START articoli KEY >= art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-GREATER.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY > art-chiave OF articoli
           ELSE
              START articoli KEY < art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-START-LESS.
           IF DataSet1-articoli-KEY-Asc
              START articoli KEY < art-chiave OF articoli
           ELSE
              START articoli KEY > art-chiave OF articoli
           END-IF
           .

       DataSet1-articoli-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-articoli-LOCK
              READ articoli WITH LOCK 
              KEY art-chiave OF articoli
           ELSE
              READ articoli WITH NO LOCK 
              KEY art-chiave OF articoli
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT 
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-articoli-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-articoli-KEY-Asc
              IF DataSet1-articoli-LOCK
                 READ articoli PREVIOUS WITH LOCK
              ELSE
                 READ articoli PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-articoli-LOCK
                 READ articoli NEXT WITH LOCK
              ELSE
                 READ articoli NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM articoli-art-k1-MERGE-SPLITBUF
           PERFORM articoli-art-k-frn-MERGE-SPLITBUF
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-articoli-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-articoli TO TOTEM-ERR-STAT
           MOVE "articoli" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:articoli, AfterDelete>
      * <TOTEM:END>
           .

       tmp-destini-k-cli-ragsoc-MERGE-SPLITBUF.
           INITIALIZE tmp-destini-k-cli-ragsoc-SPLITBUF
           MOVE tmd-cli-ragsoc(1:40) TO 
           tmp-destini-k-cli-ragsoc-SPLITBUF(1:40)
           .

       tmp-destini-k-des-ragsoc-MERGE-SPLITBUF.
           INITIALIZE tmp-destini-k-des-ragsoc-SPLITBUF
           MOVE tmd-des-ragsoc(1:40) TO 
           tmp-destini-k-des-ragsoc-SPLITBUF(1:40)
           .

       tmp-destini-k-des-localita-MERGE-SPLITBUF.
           INITIALIZE tmp-destini-k-des-localita-SPLITBUF
           MOVE tmd-localita(1:40) TO 
           tmp-destini-k-des-localita-SPLITBUF(1:40)
           .

       tmp-destini-k-des-indirizzo-MERGE-SPLITBUF.
           INITIALIZE tmp-destini-k-des-indirizzo-SPLITBUF
           MOVE tmd-indirizzo(1:40) TO 
           tmp-destini-k-des-indirizzo-SPLITBUF(1:40)
           .

       tmp-destini-k-des-ord-zoom-MERGE-SPLITBUF.
           INITIALIZE tmp-destini-k-des-ord-zoom-SPLITBUF
           MOVE tmd-des-ragsoc(1:40) TO 
           tmp-destini-k-des-ord-zoom-SPLITBUF(1:40)
           MOVE tmd-localita(1:40) TO 
           tmp-destini-k-des-ord-zoom-SPLITBUF(41:40)
           MOVE tmd-indirizzo(1:40) TO 
           tmp-destini-k-des-ord-zoom-SPLITBUF(81:40)
           .

       DataSet1-tmp-destini-INITSTART.
           IF DataSet1-tmp-destini-KEY-Asc
              MOVE Low-Value TO tmd-chiave
           ELSE
              MOVE High-Value TO tmd-chiave
           END-IF
           .

       DataSet1-tmp-destini-INITEND.
           IF DataSet1-tmp-destini-KEY-Asc
              MOVE High-Value TO tmd-chiave
           ELSE
              MOVE Low-Value TO tmd-chiave
           END-IF
           .

      * tmp-destini
       DataSet1-tmp-destini-START.
           IF DataSet1-tmp-destini-KEY-Asc
              START tmp-destini KEY >= tmd-chiave
           ELSE
              START tmp-destini KEY <= tmd-chiave
           END-IF
           .

       DataSet1-tmp-destini-START-NOTGREATER.
           IF DataSet1-tmp-destini-KEY-Asc
              START tmp-destini KEY <= tmd-chiave
           ELSE
              START tmp-destini KEY >= tmd-chiave
           END-IF
           .

       DataSet1-tmp-destini-START-GREATER.
           IF DataSet1-tmp-destini-KEY-Asc
              START tmp-destini KEY > tmd-chiave
           ELSE
              START tmp-destini KEY < tmd-chiave
           END-IF
           .

       DataSet1-tmp-destini-START-LESS.
           IF DataSet1-tmp-destini-KEY-Asc
              START tmp-destini KEY < tmd-chiave
           ELSE
              START tmp-destini KEY > tmd-chiave
           END-IF
           .

       DataSet1-tmp-destini-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-destini-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-destini-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-destini-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeWrite>
      * <TOTEM:END>
           WRITE tmd-rec OF tmp-destini.
           MOVE STATUS-tmp-destini TO TOTEM-ERR-STAT
           MOVE "tmp-destini" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-destini-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-destini TO TOTEM-ERR-STAT
           MOVE "tmp-destini" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-destini-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-destini TO TOTEM-ERR-STAT
           MOVE "tmp-destini" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-destini, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-lineseq-INITSTART.
           .

       DataSet1-lineseq-INITEND.
           .

       DataSet1-lineseq-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeWrite>
      * <TOTEM:END>
           WRITE line-riga OF lineseq.
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-lineseq-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-lineseq TO TOTEM-ERR-STAT
           MOVE "lineseq" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:lineseq, AfterDelete>
      * <TOTEM:END>
           .

       locali-loc-chiave-gdo-fine-MERGE-SPLITBUF.
           INITIALIZE locali-loc-chiave-gdo-fine-SPLITBUF
           MOVE loc-gdo(1:5) TO locali-loc-chiave-gdo-fine-SPLITBUF(1:5)
           MOVE loc-cliente(1:5) TO 
           locali-loc-chiave-gdo-fine-SPLITBUF(6:5)
           MOVE loc-destino(1:5) TO 
           locali-loc-chiave-gdo-fine-SPLITBUF(11:5)
           MOVE loc-fine-dpo(1:8) TO 
           locali-loc-chiave-gdo-fine-SPLITBUF(16:8)
           MOVE loc-ini-dpo(1:8) TO 
           locali-loc-chiave-gdo-fine-SPLITBUF(24:8)
           .

       locali-loc-chiave-fine-MERGE-SPLITBUF.
           INITIALIZE locali-loc-chiave-fine-SPLITBUF
           MOVE loc-fine-dpo(1:8) TO 
           locali-loc-chiave-fine-SPLITBUF(1:8)
           MOVE loc-ini-dpo(1:8) TO locali-loc-chiave-fine-SPLITBUF(9:8)
           MOVE loc-gdo(1:5) TO locali-loc-chiave-fine-SPLITBUF(17:5)
           MOVE loc-cliente(1:5) TO 
           locali-loc-chiave-fine-SPLITBUF(22:5)
           MOVE loc-destino(1:5) TO 
           locali-loc-chiave-fine-SPLITBUF(27:5)
           .

       locali-loc-chiave-ini-MERGE-SPLITBUF.
           INITIALIZE locali-loc-chiave-ini-SPLITBUF
           MOVE loc-ini-dpo(1:8) TO locali-loc-chiave-ini-SPLITBUF(1:8)
           MOVE loc-fine-dpo(1:8) TO locali-loc-chiave-ini-SPLITBUF(9:8)
           MOVE loc-gdo(1:5) TO locali-loc-chiave-ini-SPLITBUF(17:5)
           MOVE loc-cliente(1:5) TO locali-loc-chiave-ini-SPLITBUF(22:5)
           MOVE loc-destino(1:5) TO locali-loc-chiave-ini-SPLITBUF(27:5)
           .

       DataSet1-locali-INITSTART.
           IF DataSet1-locali-KEY-Asc
              MOVE Low-Value TO loc-chiave
           ELSE
              MOVE High-Value TO loc-chiave
           END-IF
           .

       DataSet1-locali-INITEND.
           IF DataSet1-locali-KEY-Asc
              MOVE High-Value TO loc-chiave
           ELSE
              MOVE Low-Value TO loc-chiave
           END-IF
           .

      * locali
       DataSet1-locali-START.
           IF DataSet1-locali-KEY-Asc
              START locali KEY >= loc-chiave
           ELSE
              START locali KEY <= loc-chiave
           END-IF
           .

       DataSet1-locali-START-NOTGREATER.
           IF DataSet1-locali-KEY-Asc
              START locali KEY <= loc-chiave
           ELSE
              START locali KEY >= loc-chiave
           END-IF
           .

       DataSet1-locali-START-GREATER.
           IF DataSet1-locali-KEY-Asc
              START locali KEY > loc-chiave
           ELSE
              START locali KEY < loc-chiave
           END-IF
           .

       DataSet1-locali-START-LESS.
           IF DataSet1-locali-KEY-Asc
              START locali KEY < loc-chiave
           ELSE
              START locali KEY > loc-chiave
           END-IF
           .

       DataSet1-locali-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-locali-LOCK
              READ locali WITH LOCK 
              KEY loc-chiave
           ELSE
              READ locali WITH NO LOCK 
              KEY loc-chiave
           END-IF
           PERFORM locali-loc-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM locali-loc-chiave-fine-MERGE-SPLITBUF
           PERFORM locali-loc-chiave-ini-MERGE-SPLITBUF
           MOVE STATUS-locali TO TOTEM-ERR-STAT 
           MOVE "locali" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-locali-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-locali-KEY-Asc
              IF DataSet1-locali-LOCK
                 READ locali NEXT WITH LOCK
              ELSE
                 READ locali NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-locali-LOCK
                 READ locali PREVIOUS WITH LOCK
              ELSE
                 READ locali PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM locali-loc-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM locali-loc-chiave-fine-MERGE-SPLITBUF
           PERFORM locali-loc-chiave-ini-MERGE-SPLITBUF
           MOVE STATUS-locali TO TOTEM-ERR-STAT
           MOVE "locali" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-locali-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-locali-KEY-Asc
              IF DataSet1-locali-LOCK
                 READ locali PREVIOUS WITH LOCK
              ELSE
                 READ locali PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-locali-LOCK
                 READ locali NEXT WITH LOCK
              ELSE
                 READ locali NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM locali-loc-chiave-gdo-fine-MERGE-SPLITBUF
           PERFORM locali-loc-chiave-fine-MERGE-SPLITBUF
           PERFORM locali-loc-chiave-ini-MERGE-SPLITBUF
           MOVE STATUS-locali TO TOTEM-ERR-STAT
           MOVE "locali" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-locali-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-locali TO TOTEM-ERR-STAT
           MOVE "locali" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-locali-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-locali TO TOTEM-ERR-STAT
           MOVE "locali" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-locali-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:locali, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-locali TO TOTEM-ERR-STAT
           MOVE "locali" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:locali, AfterDelete>
      * <TOTEM:END>
           .

       tmp-promo-art-key01-MERGE-SPLITBUF.
           INITIALIZE tmp-promo-art-key01-SPLITBUF
           MOVE tpa-codice(1:15) TO tmp-promo-art-key01-SPLITBUF(1:15)
           MOVE tpa-col-art(1:6) TO tmp-promo-art-key01-SPLITBUF(16:6)
           .

       tmp-promo-art-key01-SPLITBUF-TOFLD.
           MOVE tmp-promo-art-key01-SPLITBUF(1:15) TO tpa-codice(1:15)
           MOVE tmp-promo-art-key01-SPLITBUF(16:6) TO tpa-col-art(1:6)
           .

       tmp-promo-art-k-ord-MERGE-SPLITBUF.
           INITIALIZE tmp-promo-art-k-ord-SPLITBUF
           MOVE tpa-col-des(1:50) TO tmp-promo-art-k-ord-SPLITBUF(1:50)
           MOVE tpa-col-ini-dpo(1:10) TO 
           tmp-promo-art-k-ord-SPLITBUF(51:10)
           MOVE tpa-col-fine-dpo(1:10) TO 
           tmp-promo-art-k-ord-SPLITBUF(61:10)
           .

       DataSet1-tmp-promo-art-INITSTART.
           IF DataSet1-tmp-promo-art-KEY-Asc
              MOVE Low-Value TO tpa-codice
           ELSE
              MOVE High-Value TO tpa-codice
           END-IF
           IF DataSet1-tmp-promo-art-KEY-Asc
              MOVE Low-Value TO tpa-col-art
           ELSE
              MOVE High-Value TO tpa-col-art
           END-IF
           .

       DataSet1-tmp-promo-art-INITEND.
           IF DataSet1-tmp-promo-art-KEY-Asc
              MOVE High-Value to tpa-codice
           ELSE
              MOVE Low-Value to tpa-codice
           END-IF
           IF DataSet1-tmp-promo-art-KEY-Asc
              MOVE High-Value to tpa-col-art
           ELSE
              MOVE Low-Value to tpa-col-art
           END-IF
           .

       DataSet1-tmp-promo-art-TMPBUF-TO-FLD.
           MOVE DataSet1-tmp-promo-art-SPLIT-BUF1(1:15) TO
                tpa-codice(1:15)
           MOVE DataSet1-tmp-promo-art-SPLIT-BUF1(16:6) TO
                tpa-col-art(1:6)
           .

       DataSet1-tmp-promo-art-FLD-TO-TMPBUF.
           MOVE tpa-codice(1:15) TO
                DataSet1-tmp-promo-art-SPLIT-BUF1(1:15)
           MOVE tpa-col-art(1:6) TO
                DataSet1-tmp-promo-art-SPLIT-BUF1(16:6)
           .

      * tmp-promo-art
       DataSet1-tmp-promo-art-START.
           IF DataSet1-tmp-promo-art-KEY-Asc
              START tmp-promo-art KEY >= key01
           ELSE
              START tmp-promo-art KEY <= key01
           END-IF
           .

       DataSet1-tmp-promo-art-START-NOTGREATER.
           IF DataSet1-tmp-promo-art-KEY-Asc
              START tmp-promo-art KEY <= key01
           ELSE
              START tmp-promo-art KEY >= key01
           END-IF
           .

       DataSet1-tmp-promo-art-START-GREATER.
           IF DataSet1-tmp-promo-art-KEY-Asc
              START tmp-promo-art KEY > key01
           ELSE
              START tmp-promo-art KEY < key01
           END-IF
           .

       DataSet1-tmp-promo-art-START-LESS.
           IF DataSet1-tmp-promo-art-KEY-Asc
              START tmp-promo-art KEY < key01
           ELSE
              START tmp-promo-art KEY > key01
           END-IF
           .

       DataSet1-tmp-promo-art-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeReadRecord>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-tmp-promo-art-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeReadNext>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-tmp-promo-art-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeReadPrev>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-tmp-promo-art-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeWrite>
      * <TOTEM:END>
           WRITE tpa-rec OF tmp-promo-art.
           MOVE STATUS-tmp-promo-art TO TOTEM-ERR-STAT
           MOVE "tmp-promo-art" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-promo-art-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-tmp-promo-art TO TOTEM-ERR-STAT
           MOVE "tmp-promo-art" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-tmp-promo-art-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-tmp-promo-art TO TOTEM-ERR-STAT
           MOVE "tmp-promo-art" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:tmp-promo-art, AfterDelete>
      * <TOTEM:END>
           .

       blister-k-magaz-MERGE-SPLITBUF.
           INITIALIZE blister-k-magaz-SPLITBUF
           MOVE bli-magazzino(1:3) TO blister-k-magaz-SPLITBUF(1:3)
           MOVE bli-codice(1:6) TO blister-k-magaz-SPLITBUF(4:6)
           .

       blister-k-des-MERGE-SPLITBUF.
           INITIALIZE blister-k-des-SPLITBUF
           MOVE bli-descrizione(1:50) TO blister-k-des-SPLITBUF(1:50)
           .

       DataSet1-blister-INITSTART.
           IF DataSet1-blister-KEY-Asc
              MOVE Low-Value TO bli-chiave
           ELSE
              MOVE High-Value TO bli-chiave
           END-IF
           .

       DataSet1-blister-INITEND.
           IF DataSet1-blister-KEY-Asc
              MOVE High-Value TO bli-chiave
           ELSE
              MOVE Low-Value TO bli-chiave
           END-IF
           .

      * blister
       DataSet1-blister-START.
           IF DataSet1-blister-KEY-Asc
              START blister KEY >= bli-chiave
           ELSE
              START blister KEY <= bli-chiave
           END-IF
           .

       DataSet1-blister-START-NOTGREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY <= bli-chiave
           ELSE
              START blister KEY >= bli-chiave
           END-IF
           .

       DataSet1-blister-START-GREATER.
           IF DataSet1-blister-KEY-Asc
              START blister KEY > bli-chiave
           ELSE
              START blister KEY < bli-chiave
           END-IF
           .

       DataSet1-blister-START-LESS.
           IF DataSet1-blister-KEY-Asc
              START blister KEY < bli-chiave
           ELSE
              START blister KEY > bli-chiave
           END-IF
           .

       DataSet1-blister-Read.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadRecord>
      * <TOTEM:END>
           IF DataSet1-blister-LOCK
              READ blister WITH LOCK 
              KEY bli-chiave
           ELSE
              READ blister WITH NO LOCK 
              KEY bli-chiave
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT 
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadRecord>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Next.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadNext>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ NEXT" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadNext>
      * <TOTEM:END>
           .

       DataSet1-blister-Read-Prev.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeReadPrev>
      * <TOTEM:END>
           IF DataSet1-blister-KEY-Asc
              IF DataSet1-blister-LOCK
                 READ blister PREVIOUS WITH LOCK
              ELSE
                 READ blister PREVIOUS WITH NO LOCK
              END-IF
           ELSE
              IF DataSet1-blister-LOCK
                 READ blister NEXT WITH LOCK
              ELSE
                 READ blister NEXT WITH NO LOCK
              END-IF
           END-IF
           PERFORM blister-k-magaz-MERGE-SPLITBUF
           PERFORM blister-k-des-MERGE-SPLITBUF
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "READ PREVIOUS" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRead>
      * <TOTEM:END>
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterReadPrev>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Write.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeWrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "WRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterWrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Rewrite.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeRewrite>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "REWRITE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterRewrite>
      * <TOTEM:END>
           .

       DataSet1-blister-Rec-Delete.
      * <TOTEM:EPT. FD:DataSet1, FD:blister, BeforeDelete>
      * <TOTEM:END>
           MOVE STATUS-blister TO TOTEM-ERR-STAT
           MOVE "blister" TO TOTEM-ERR-FILE
           MOVE "DELETE" TO TOTEM-ERR-MODE
      * <TOTEM:EPT. FD:DataSet1, FD:blister, AfterDelete>
      * <TOTEM:END>
           .

       DataSet1-INIT-RECORD.
           INITIALIZE gdo-rec OF tgrupgdo
           INITIALIZE tpr-rec OF tpromo
           INITIALIZE rpr-rec OF rpromo
           INITIALIZE des-rec OF destini
           INITIALIZE cli-rec OF clienti
           INITIALIZE art-rec OF articoli
           INITIALIZE tmd-rec OF tmp-destini
           INITIALIZE line-riga OF lineseq
           INITIALIZE loc-rec OF locali
           INITIALIZE tpa-rec OF tmp-promo-art
           INITIALIZE bli-rec OF blister
           .


      * GRID
       gd1-Content.
      * CELLS' SETTING
              MODIFY gd1, X = 1, Y = 1,
                CELL-DATA = "Articolo",
      * CELLS' SETTING
              MODIFY gd1, X = 3, Y = 1,
                CELL-DATA = "Descrizione",
      * CELLS' SETTING
              MODIFY gd1, X = 4, Y = 1,
                CELL-DATA = "Prezzo",
      * CELLS' SETTING
              MODIFY gd1, X = 5, Y = 1,
                CELL-DATA = "GDO",
      * CELLS' SETTING
              MODIFY gd1, X = 6, Y = 1,
                CELL-DATA = "Inizio DPO",
      * CELLS' SETTING
              MODIFY gd1, X = 7, Y = 1,
                CELL-DATA = "Fine DPO",
      * CELLS' SETTING
              MODIFY gd1, X = 8, Y = 1,
                CELL-DATA = "Inizio Vol",
      * CELLS' SETTING
              MODIFY gd1, X = 9, Y = 1,
                CELL-DATA = "Fine Vol",
      * CELLS' SETTING
              MODIFY gd1, X = 10, Y = 1,
                CELL-DATA = "Nome volantino",
      * COLUMNS' SETTING
              MODIFY gd1, X = 4  
                COLUMN-COLOR = 5,
                COLUMN-FONT = Verdana10B-Occidentale,
           .

      * FD's Initialize Paragraph
       DataSet1-tgrupgdo-INITREC.
           INITIALIZE gdo-rec OF tgrupgdo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tpromo-INITREC.
           INITIALIZE tpr-rec OF tpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-rpromo-INITREC.
           INITIALIZE rpr-rec OF rpromo
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-destini-INITREC.
           INITIALIZE des-rec OF destini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-clienti-INITREC.
           INITIALIZE cli-rec OF clienti
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-articoli-INITREC.
           INITIALIZE art-rec OF articoli
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-destini-INITREC.
           INITIALIZE tmd-rec OF tmp-destini
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-lineseq-INITREC.
           INITIALIZE line-riga OF lineseq
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-locali-INITREC.
           INITIALIZE loc-rec OF locali
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-tmp-promo-art-INITREC.
           INITIALIZE tpa-rec OF tmp-promo-art
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      * FD's Initialize Paragraph
       DataSet1-blister-INITREC.
           INITIALIZE bli-rec OF blister
               REPLACING NUMERIC       DATA BY ZEROS
                         ALPHANUMERIC  DATA BY SPACES
                         ALPHABETIC    DATA BY SPACES
           .

      *
       DataSet1-DISPATCH-BUFTOFLD.
           .

       Form1-Open-Routine.
           PERFORM Form1-Scrn
           PERFORM Form1-Proc
           .

       Form1-Scrn.
           PERFORM Form1-Create-Win
           PERFORM Form1-Init-Value
           PERFORM Form1-Init-Data
      * Tab keystrok settings
      * Tool Bar
           DISPLAY Form1-Tb-1a
           PERFORM Form1-DISPLAY
           .

       Form1-Create-Win.
           Display Floating GRAPHICAL WINDOW
              LINES 33,50,
              SIZE 111,20,
              HEIGHT-IN-CELLS,
              WIDTH-IN-CELLS,
              COLOR 65793,
              CONTROL FONT Verdana12-Occidentale,
              LABEL-OFFSET 23,
              LINK TO THREAD,
              MODELESS,
              NO SCROLL,
              TITLE-BAR,
              TITLE TITOLO,
              WITH SYSTEM MENU,
              USER-GRAY,
              USER-WHITE,
              No WRAP,
              EVENT PROCEDURE Screen4-Event-Proc,
              HANDLE IS form1-Handle,
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterCreateWin>
      * <TOTEM:END>


      * Tool Bar    
           DISPLAY TOOL-BAR 
              LINES 2,67,   
              HANDLE IN Form1-Tb-1-Handlea
           DISPLAY Form1-Tb-1a UPON Form1-Tb-1-Handlea

      * Status-bar
           DISPLAY Form1 UPON form1-Handle
      * DISPLAY-COLUMNS settings
              MODIFY gd1, DISPLAY-COLUMNS (1, 9, 12, 42, 51, 58, 69, 
           80, 91, 102)
           .

       Form1-PROC.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeAccept>
           set prima-volta to true.
           accept como-data from century-date.
           move como-data(1:4) to ef-ini-buf(7:4).
           move "01/01/"       to ef-ini-buf(1:6).
           display ef-ini.

           move 99999999   to como-data.
           move como-data  to ef-fine-buf.
           display ef-fine.

           perform GD1-CONTENT.

           move "<<HELP>> Blank = TUTTI I GDO"    to lab-gdo-buf.
           move "<<HELP>> 0 = TUTTI GLI ARTICOLI" to lab-art-buf.

           display lab-gdo lab-art.

           set CallManutenzione to false.

           .
      * <TOTEM:END>
           PERFORM UNTIL Exit-Pushed
              ACCEPT Form1
                 ON EXCEPTION
                    PERFORM Form1-Evaluate-Func
                 MOVE 1 TO TOTEM-Form-Index
              END-ACCEPT
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterEndAccept>
           if CallManutenzione
              modify form1-handle, visible false
              call   "lab-gpromo" using lk-blockpgm,
                                        user-codi,
                                        livello-abil,
                                        hid-codice
              cancel "lab-gpromo"
              modify form1-handle, visible true
              set CallManutenzione to false
           end-if

      * <TOTEM:END>
           END-PERFORM
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDestroyWindow>
      * <TOTEM:END>
           DESTROY form1-Handle
           INITIALIZE Key-Status
           .

       Form1-Evaluate-Func.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterAccept>
      * <TOTEM:END>
           EVALUATE TRUE
              WHEN Exit-Pushed
                 PERFORM Form1-Exit
              WHEN Event-Occurred
                 IF Event-Type = Cmd-Close
                    PERFORM Form1-Exit
                 END-IF
              WHEN Key-Status = 1000
                 PERFORM pb-dest-LinkTo
              WHEN Key-Status = 1001
                 PERFORM pb-pn-LinkTo
              WHEN Key-Status = 1002
                 PERFORM pb-ok-LinkTo
              WHEN Key-Status = 8
                 PERFORM TOOL-CERCA-LinkTo
           END-EVALUATE
      * avoid changing focus
           MOVE 4 TO Accept-Control
           .

       Form1-CLEAR.
           PERFORM Form1-INIT-VALUE
           PERFORM Form1-DISPLAY
           .

       Form1-DISPLAY.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeDisplay>
      * <TOTEM:END>
           DISPLAY Form1-Tb-1a
           DISPLAY Form1 UPON form1-Handle
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterDisplay>

           SET LK-BL-SCRITTURA     TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           MOVE FORM1-HANDLE       TO LK-HND-WIN.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM.
           CANCEL "BLOCKPGM".

           .
      * <TOTEM:END>
           .

       Form1-Exit.
      * for main screen
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeExit>
      * <TOTEM:END>
           MOVE 27 TO Key-Status
           .

       Form1-Init-Data.
           MOVE 1 TO TOTEM-Form-Index
           MOVE 0 TO TOTEM-Frame-Index
      * GRID
           PERFORM gd1-Content
           .

       Form1-Init-Value.
           MOVE TITOLO TO TOTEM-MSG-TITLE
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, SetDefault>
      * <TOTEM:END>
           PERFORM Form1-FLD-TO-BUF
           .


       Form1-ALLGRID-RESET.
           .

      * for Form's Validation
       Form1-VALIDATION-ROUTINE.
           SET TOTEM-CHECK-OK TO TRUE
           .


       Form1-Buf-To-Fld.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeBufToFld>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterBufToFld>
      * <TOTEM:END>
           .

       Form1-Fld-To-Buf.
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, BeforeFldToBuf>
      * <TOTEM:END>
      * <TOTEM:EPT. FORM:Form1, FORM:Form1, AfterFldToBuf>
      * <TOTEM:END>
           .

       Form1-CONTROLLO-OLD.
           set SiSalvato to true.
           if mod = 0 exit paragraph end-if.
           perform Form1-BUF-TO-FLD.
           move 0 to scelta.
           .
       Form1-EXTENDED-FILE-STATUS.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
           MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           PERFORM Form1-SHOW-MSG-ROUTINE
           .

       Form1-SHOW-MSG-ROUTINE.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM Form1-DISPLAY-MESSAGE
           .

       Form1-DISPLAY-MESSAGE.
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

       Form1-Save-Status.
           .             

       Form1-Restore-Status.
           .



       Form1-BeforeProcedure.
           EVALUATE Control-Id
           WHEN 5001 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5002 MOVE "." to TOTEM-HINT-TEXT
           WHEN 5003 MOVE "." to TOTEM-HINT-TEXT
           WHEN 4 MOVE "Selezionare il destino per la creazione di un vo
      -    "lantino locale" to TOTEM-HINT-TEXT
           WHEN 5 MOVE "Creazione Promo Nazionale" to TOTEM-HINT-TEXT
           WHEN 5004 MOVE "." to TOTEM-HINT-TEXT
           WHEN OTHER MOVE SPACES TO TOTEM-HINT-TEXT
           END-EVALUATE
           EVALUATE Control-Id
           When 5001 PERFORM ef-gdo-BeforeProcedure
           When 5002 PERFORM ef-ini-dpo-BeforeProcedure
           When 5003 PERFORM ef-fine-BeforeProcedure
           When 5004 PERFORM ef-art-BeforeProcedure
           END-EVALUATE
           .

       Screen4-Event-Proc.
           .

       Screen4-Gd-1-Event-Proc.
           EVALUATE Event-Type ALSO Event-Control-Id ALSO
                                    Event-Window-Handle
           WHEN Msg-Begin-Drag ALSO 3 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Drag
           WHEN Msg-Begin-Entry ALSO 3 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Begin-Entry
           WHEN Msg-End-Drag ALSO 3 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-End-Drag
           WHEN Msg-Goto-Cell ALSO 3 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell
           WHEN Msg-Goto-Cell-Drag ALSO 3 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Drag
           WHEN Msg-Goto-Cell-Mouse ALSO 3 ALSO
                    form1-Handle 
              PERFORM gd1-Ev-Msg-Goto-Cell-Mouse
           END-EVALUATE
           .

      * USER DEFINE PARAGRAPH
       CREA-TMP-DESTINI.
      * <TOTEM:PARA. CREA-TMP-DESTINI>
           if gdo-codice = spaces exit paragraph end-if.
           set trovato to false.
           initialize path-tmp-destini.
           accept  como-data from century-date.
           accept  como-ora  from time.
           accept  path-tmp-destini from environment "PATH_ST".
           inspect path-tmp-destini replacing trailing spaces by 
           low-value.
           string  path-tmp-destini delimited low-value
                   "TMP_DESTINI"    delimited size
                   "_"              delimited size
                   como-data        delimited size
                   "_"              delimited size
                   como-ora         delimited size
                   ".tmp"           delimited size
                   into path-tmp-destini
           end-string.
           open output tmp-destini.

           move low-value to cli-rec.
           set cli-tipo-C to true.
           start clienti key >= cli-chiave
                 invalid continue
             not invalid
                 perform until 1 = 2
                    read clienti next at end exit perform end-read
                    if cli-tipo-F exit perform end-if
                    if cli-gdo = gdo-codice
                       move cli-codice to des-codice
                       move low-value  to des-prog
                       start destini key >= des-chiave
                             invalid continue
                         not invalid
                             perform until 1 = 2
                                read destini next 
                                     at end exit perform 
                                end-read
                                if des-codice not = cli-codice
                                   exit perform
                                end-if
                                set  trovato       to true
                                move cli-codice    to tmd-cliente
                                move des-prog      to tmd-destino
                                move cli-ragsoc-1  to tmd-cli-ragsoc
                                move des-ragsoc-1  to tmd-des-ragsoc
                                move des-localita  to tmd-localita
                                move des-indirizzo to tmd-indirizzo
                                write tmd-rec invalid continue end-write
                             end-perform
                       end-start
                    end-if
                 end-perform
           end-start.
           close tmp-destini.
           if not trovato
              delete file tmp-destini
           end-if 
           .
      * <TOTEM:END>

       CARICA-GRID.
      * <TOTEM:PARA. CARICA-GRID>
           set tutto-ok to true.
           set trovato  to false.
           initialize path-tmp-promo-art.
           accept  path-tmp-promo-art from environment "PATH_ST".
           accept  como-data from century-date.
           accept  como-ora  from time.
           inspect path-tmp-promo-art replacing trailing spaces by 
           low-value.
           string  path-tmp-promo-art delimited low-value
                   "TMP-PROMO-ART"    delimited size
                   "_"                delimited size
                   como-data          delimited size
                   "_"                delimited size
                   como-ora           delimited size
                   ".tmp"             delimited size
                   into path-tmp-promo-art
           end-string.

           open output tmp-promo-art.
           close       tmp-promo-art.
           open i-o    tmp-promo-art.

           modify gd1, mass-update = 1.
           modify gd1, reset-grid  = 1.
           perform GD1-CONTENT.
           move 2 to riga.
           inquire ef-gdo,  value in save-gdo.
           inquire ef-ini,  value in save-ini.
           inquire ef-fine, value in save-fine.
           inquire ef-art,  value in save-articolo.

           move save-ini  to como-data.
           perform DATE-TO-FILE.
           move como-data to start-data.

           move save-fine  to como-data.
           perform DATE-TO-FILE.
           move como-data to como-data-to.

           if save-cliente not = 0 or
              save-destino not = 0
              move low-value    to loc-rec
              move save-gdo     to loc-gdo
              move save-cliente to loc-cliente
              move save-destino to loc-destino
              move start-data   to loc-ini-dpo
              start locali key >= loc-chiave-ricerca
                    invalid set errori to true
              end-start
              if tutto-ok
                 perform until 1 = 2
                    read locali next at end exit perform end-read

                    if save-gdo not = spaces
                       if loc-gdo not = save-gdo
                          exit perform 
                       end-if
                    end-if

                    if loc-ini-dpo > como-data-to 
                       exit perform 
                    end-if

                    if loc-cliente not = save-cliente
                       exit perform
                    end-if

                    if loc-destino not = save-destino
                       exit perform
                    end-if

                    if loc-ini-dpo  >= start-data and
                       loc-fine-dpo <= como-data-to
                       move spaces to des-localita des-indirizzo
                       move loc-cliente to des-codice
                       move loc-destino to des-prog
                       read destini no lock invalid continue end-read
                       move loc-codice to tpr-codice
                       read tpromo no lock invalid continue end-read
                       perform RIGHE-VOLANTINO
                    end-if
                 end-perform
              end-if

           else
              move low-value  to tpr-rec
              move save-gdo   to tpr-gdo
              move start-data to tpr-ini-dpo
              if save-gdo = spaces
                 start tpromo key >= tpr-chiave-ini
                       invalid set errori to true
                 end-start
              else
                 start tpromo key >= tpr-chiave-ricerca
                       invalid set errori to true
                 end-start
              end-if
              if tutto-ok
                 perform until 1 = 2
                    read tpromo next at end exit perform end-read
                    if save-gdo not = spaces
                       if tpr-gdo not = save-gdo
                          exit perform
                       end-if
                    end-if
                    if tpr-ini-dpo > como-data-to exit perform end-if
             
                    if tpr-ini-dpo  >= start-data   and
                       tpr-fine-dpo <= como-data-to |and 
                       |tpr-nazionale
                       move spaces to des-localita des-indirizzo
                       perform RIGHE-VOLANTINO
                    end-if
                 end-perform 
              end-if
           end-if.

           if trovato
              move low-value to tpa-rec
              start tmp-promo-art key >= k-ord
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read tmp-promo-art next at end exit perform 
           end-read
                       move tpa-rec-grid to rec-grid
                       modify gd1(riga, 1), hidden-data tpa-codice
                       modify gd1(riga),    record-to-add rec-grid
                       add 1 to riga
                    end-perform
              end-start
           end-if.

           close       tmp-promo-art.
           delete file tmp-promo-art.

           modify gd1, mass-update = 0.

      ***---
       RIGHE-VOLANTINO.
           move tpr-codice    to rpr-codice.
           move save-articolo to rpr-articolo.
           if save-articolo not = 0
              read rpromo no lock
                   invalid continue
               not invalid perform RECORD-OK 
              end-read
           else
              start rpromo key >= rpr-chiave
                    invalid continue
                not invalid
                    perform until 1 = 2
                       read rpromo next at end exit perform end-read
                       if rpr-codice not = tpr-codice
                          exit perform
                       end-if
                       perform RECORD-OK
                    end-perform
              end-start
           end-if.


      ***---
       RECORD-OK.  
           set  prima-volta  to false.
           move rpr-articolo to col-art art-codice.

           read articoli no lock 
                invalid
                move art-codice to bli-codice
                read blister no lock
                     invalid
                     move "** NON TROVATA **" to art-descrizione
                 not invalid
                     move bli-descrizione to art-descrizione
                end-read
           end-read.

           move art-descrizione to col-des.

           move rpr-prz-acq to col-prz.

           move tpr-gdo     to col-gdo.

           move tpr-ini-dpo to como-data.
           perform DATE-TO-SCREEN.
           string como-data(1:2) delimited size
                  "/"            delimited size
                  como-data(3:2) delimited size
                  "/"            delimited size
                  como-data(5:4) delimited size
                  into col-ini-dpo
           end-string.

           move tpr-fine-dpo to como-data.
           perform DATE-TO-SCREEN.
           string como-data(1:2) delimited size
                  "/"            delimited size
                  como-data(3:2) delimited size
                  "/"            delimited size
                  como-data(5:4) delimited size
                  into col-fine-dpo
           end-string.

           move tpr-ini-volantino to como-data.
           perform DATE-TO-SCREEN.
           string como-data(1:2) delimited size
                  "/"            delimited size
                  como-data(3:2) delimited size
                  "/"            delimited size
                  como-data(5:4) delimited size
                  into col-ini-vol
           end-string.

           move tpr-fine-volantino to como-data.
           perform DATE-TO-SCREEN.
           string como-data(1:2) delimited size
                  "/"            delimited size
                  como-data(3:2) delimited size
                  "/"            delimited size
                  como-data(5:4) delimited size
                  into col-fine-vol
           end-string.

           move tpr-descrizione to col-nome.

           move rec-grid   to tpa-rec-grid.
           move tpr-codice to tpa-codice.
           move tpr-tipo   to tpa-tipo.
           write tpa-rec invalid continue end-write.
           set trovato  to true 
           .
      * <TOTEM:END>

       CERCA.
      * <TOTEM:PARA. CERCA>
           evaluate control-id
           when 78-ID-ef-gdo
                inquire ef-gdo, value in gdo-codice
                move   "tgrupgdo"     to como-file
                call   "zoom-gt"   using como-file, gdo-rec
                                  giving stato-zoom
                cancel "zoom-gt"
      
                if stato-zoom = 0
                   move gdo-codice       to ef-gdo-buf
                   move gdo-intestazione to lab-gdo-buf
                   display ef-gdo lab-gdo
                   if gdo-codice not = save-gdo
                      move 0 to save-cliente
                      move 0 to save-destino
                      move spaces to lab-citta-buf
                      move spaces to lab-via-buf
                      display lab-citta lab-via
                      perform CREA-TMP-DESTINI
                      perform CARICA-GRID
                   end-if
                end-if

           when 78-ID-ef-art
                inquire ef-art, value in art-codice
                move "articoli"     to Como-File
                call   "zoom-gt" using como-file, art-rec
                                giving stato-zoom
                cancel "zoom-gt"
                if stato-zoom = 0

                   move art-codice      to ef-art-buf
                   move art-descrizione to lab-art-buf
                   display ef-art lab-art

                   if art-codice not = save-articolo
                      perform CARICA-GRID
                   end-if
                                        
                end-if

           end-evaluate 
           .
      * <TOTEM:END>

       CONTROLLO.
      * <TOTEM:PARA. CONTROLLO>
           set tutto-ok to true. 

           evaluate control-id
           when 78-ID-ef-gdo
                inquire ef-gdo, value in gdo-codice
                if gdo-codice = spaces
                   move "TUTTI I GDO" to lab-gdo-buf
                else
                   read tgrupgdo no lock
                        invalid
                        move spaces to gdo-intestazione
                        set errori to true
                        display message "Gruppo GDO non valido"
                                  title tit-err
                                   icon 2
                   end-read
                   move gdo-intestazione to lab-gdo-buf
                end-if
                display lab-gdo

           when 78-ID-ef-ini
                inquire ef-ini, value in como-data
                if como-data not = 0
                   perform DATE-FORMAT
                   move como-data to ef-ini-buf
                   display ef-ini
                end-if

           when 78-ID-ef-fine
                inquire ef-fine, value in como-data
                if como-data = 0
                   move 99999999 to como-data
                   perform DATE-TO-SCREEN
                   move como-data to ef-fine-buf
                   display ef-fine
                else
                   if como-data not = 99999999
                      perform DATE-FORMAT
                      move como-data to ef-fine-buf                
                      display ef-fine
                   end-if
                end-if
                perform DATE-TO-FILE
                move como-data to como-data-to
                inquire ef-ini, value in como-data
                perform DATE-TO-FILE
                if como-data-to < como-data
                   set errori to true
                   display message "Range Date DPO errato"
                             title tit-err
                              icon 2
                   move 78-ID-ef-ini to control-id
                end-if

           when 78-ID-ef-art
                inquire ef-art, value in art-codice
                if art-codice = 0
                   move "TUTTI GLI ARTICOLI" to lab-art-buf
                else
                   read articoli no lock
                        invalid
                        move art-codice to bli-codice
                        read blister no lock
                             invalid
                             move spaces to art-descrizione
                             set errori to true
                             display message "Articolo non valido"
                                       title tit-err
                                        icon 2
                         not invalid
                             move bli-descrizione to art-descrizione
                        end-read
                   end-read
                   move art-descrizione to lab-art-buf
                end-if
                display lab-art
           end-evaluate.
      
           if errori
              perform CANCELLA-COLORE
              move control-id to store-id
              move 4          to accept-control
           end-if 
           .
      * <TOTEM:END>

       PARAGRAFO-COPY.
      * <TOTEM:PARA. PARAGRAFO-COPY>
           copy "color-custom.cpy".
           copy "utydata.cpy".
           copy "common-excel.cpy".

      ***--- DUMMY ---> NON TOCCARE!!!!
       STATUS-HELP.
           continue 
           .
      * <TOTEM:END>

       SPOSTAMENTO.
      * <TOTEM:PARA. SPOSTAMENTO>
           inquire gd1, last-row in tot-righe.
           if event-data-2 < 2
              move 2 to event-data-2
           end-if.

           if event-data-2 > tot-righe
              move tot-righe to event-data-2
           end-if.

           modify gd1, start-y = event-data-2, y = event-data-2,
                       start-x = 1,            x = 10,
                       region-color = 481 
           .
      * <TOTEM:END>

       STAMPA.
      * <TOTEM:PARA. STAMPA>
           if wstampa = spaces
              move user-codi to como-user
              inspect como-user replacing trailing spaces by low-value
              accept  wstampa   from environment "PATH_ST"
              inspect wstampa   replacing trailing spaces by low-value
              string  wstampa            delimited by low-value
                      "PROMO_ART"        delimited by size
                      "_"                delimited by size
                      como-user          delimited by low-value
                      ".csv"             delimited by size
                      into wstampa
              end-string
              perform ACCETTA-SEPARATORE
           end-if.
           set RecLocked to false.
           open output lineseq.
           if not RecLocked

              string separatore              delimited size
                     "** PERIODO RICHIESTO " delimited size
                     ef-ini-buf              delimited size
                     " - "                   delimited size
                     ef-fine-buf             delimited size
                     into line-riga
              end-string
              write line-riga
              write line-riga from spaces

              initialize line-riga
              string "ARTICOLO"       delimited size
                     separatore       delimited size
                     "DESCRIZIONE"    delimited size
                     separatore       delimited size
                     "PREZZO"         delimited size
                     separatore       delimited size
                     "GDO"            delimited size
                     separatore       delimited size
                     "INIZIO DPO"     delimited size
                     separatore       delimited size
                     "FINE DPO"       delimited size
                     separatore       delimited size
                     "INIZIO VOL"     delimited size
                     separatore       delimited size
                     "FINE VOL"       delimited size
                     separatore       delimited size
                     "NOME VOLANTINO" delimited size
                     into line-riga
              end-string
              write line-riga

              perform varying riga from 2 by 1 
                        until riga > tot-righe
                 inquire gd1(riga, 1) cell-data in col-art
                 inquire gd1(riga, 2) cell-data in col-tipo
                 inquire gd1(riga, 3) cell-data in col-des
                 inquire gd1(riga, 4) cell-data in col-prz     
                 inquire gd1(riga, 5) cell-data in col-gdo     
                 inquire gd1(riga, 6) cell-data in col-ini-dpo 
                 inquire gd1(riga, 7) cell-data in col-fine-dpo     
                 inquire gd1(riga, 8) cell-data in col-ini-vol
                 inquire gd1(riga, 9) cell-data in col-fine-vol
                 inquire gd1(riga, 10) cell-data in col-nome

                 initialize line-riga
                 string col-art      delimited size
                        separatore   delimited size
                        col-tipo     delimited size
                        separatore   delimited size
                        col-des      delimited size
                        separatore   delimited size
                        col-prz      delimited size
                        separatore   delimited size
                        col-gdo      delimited size
                        separatore   delimited size
                        col-ini-dpo  delimited size
                        separatore   delimited size
                        col-fine-dpo delimited size
                        separatore   delimited size
                        col-ini-vol  delimited size
                        separatore   delimited size
                        col-fine-vol delimited size
                        separatore   delimited size
                        col-nome     delimited size
                        into line-riga
                 end-string
                 write line-riga

              end-perform
              close lineseq
              perform CALL-EXCEL
           end-if 
           .
      * <TOTEM:END>

      * EVENT PARAGRAPH
       ginqui-Ev-After-Program.
      * <TOTEM:PARA. ginqui-Ev-After-Program>
           delete file tmp-destini.
           SET LK-BL-CANCELLAZIONE TO TRUE.
           MOVE COMO-PROG-ID       TO LK-BL-PROG-ID.
           CALL "BLOCKPGM"  USING LK-BLOCKPGM 
           .
      * <TOTEM:END>
       pb-ok-BeforeProcedure.
      * <TOTEM:PARA. pb-ok-BeforeProcedure>
           modify pb-ok, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-ok-AfterProcedure.
      * <TOTEM:PARA. pb-ok-AfterProcedure>
           modify pb-ok, bitmap-number 1 
           .
      * <TOTEM:END>
       pb-annulla-BeforeProcedure.
      * <TOTEM:PARA. pb-annulla-BeforeProcedure>
           modify pb-annulla, bitmap-number 2 
           .
      * <TOTEM:END>
       pb-annulla-AfterProcedure.
      * <TOTEM:PARA. pb-annulla-AfterProcedure>
           modify pb-annulla, bitmap-number 1 
           .
      * <TOTEM:END>
       TOOL-CERCA-LinkTo.
      * <TOTEM:PARA. TOOL-CERCA-LinkTo>
           inquire tool-cerca, enabled in e-cerca.
           if e-cerca = 1 perform CERCA end-if 
           .
      * <TOTEM:END>
       ef-gdo-BeforeProcedure.
      * <TOTEM:PARA. ef-gdo-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           inquire ef-gdo, value in save-gdo.
           if prima-volta
              if save-gdo = spaces
                 |Un valore fittizio altrimenti se la prima
                 |volta si scelgono tutti i gdo non carica
                 move "XXXXX" to save-gdo
              end-if
           end-if 
           .
      * <TOTEM:END>
       ef-gdo-AfterProcedure.
      * <TOTEM:PARA. ef-gdo-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           perform CONTROLLO.
           if tutto-ok
              if gdo-codice not = save-gdo
                 move 0 to save-cliente
                 move 0 to save-destino
                 move spaces to lab-citta-buf
                 move spaces to lab-via-buf
                 display lab-citta lab-via
                 perform CARICA-GRID
              end-if
           end-if 
           .
      * <TOTEM:END>
       ef-ini-dpo-BeforeProcedure.
      * <TOTEM:PARA. ef-ini-dpo-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           inquire ef-ini, value in ef-ini-buf.
           move ef-ini-buf to save-ini 
           .
      * <TOTEM:END>
       ef-ini-dpo-AfterProcedure.
      * <TOTEM:PARA. ef-ini-dpo-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO.
           if save-ini not = como-data
              perform CARICA-GRID
           end-if 
           .
      * <TOTEM:END>
       ef-art-BeforeProcedure.
      * <TOTEM:PARA. ef-art-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           move 1 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           inquire ef-art, value in save-articolo 
           .
      * <TOTEM:END>
       ef-art-AfterProcedure.
      * <TOTEM:PARA. ef-art-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           move 0 to e-cerca.
           modify tool-cerca, enabled e-cerca.
           perform CONTROLLO.
           if tutto-ok
              if art-codice not = save-articolo
                 perform CARICA-GRID
              end-if
           end-if 
           .
      * <TOTEM:END>
       pb-dest-LinkTo.
      * <TOTEM:PARA. pb-dest-LinkTo>
           inquire ef-gdo, value in ef-gdo-buf.
           if ef-gdo-buf = spaces
              exit paragraph
           end-if.
           perform CREA-TMP-DESTINI.
           if trovato
              move save-cliente     to des-codice tmd-cliente
              move save-destino     to des-prog   tmd-destino
              read destini no lock 
                   invalid 
                   move spaces to des-ragsoc-1
                   move spaces to des-localita
                   move spaces to des-indirizzo
              end-read
              move des-ragsoc-1     to tmd-des-ragsoc
              move des-localita     to tmd-localita
              move des-indirizzo    to tmd-indirizzo
              move path-tmp-destini to ext-file
              move "tmp-destini"    to como-file
              call    "zoom-gt"  using como-file, tmd-rec
                                giving stato-zoom
              cancel  "zoom-gt"
              if stato-zoom = 0
                 if tmd-cliente not = save-cliente or
                    tmd-destino not = save-destino
                    move tmd-cliente to save-cliente
                    move tmd-destino to save-destino
                    perform CARICA-GRID
                 end-if
                 move tmd-localita  to lab-citta-buf
                 move tmd-indirizzo to lab-via-buf
                 display lab-citta lab-via
              end-if
           else
              display message "Nessun destino trovato"
                        title titolo
                         icon 2
              move 0      to save-cliente
              move 0      to save-destino
              move spaces to lab-citta-buf
              move spaces to lab-via-buf
              display lab-citta lab-via
           end-if 
           .
      * <TOTEM:END>
       pb-pn-LinkTo.
      * <TOTEM:PARA. pb-pn-LinkTo>
           if save-cliente not = 0 or
              save-destino not = 0
              move spaces to lab-citta-buf
              move spaces to lab-via-buf
              display lab-citta lab-via
              move 0 to save-cliente
              move 0 to save-destino
              perform CARICA-GRID
           end-if 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Entry.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Entry>
           set event-action to event-action-fail-terminate.

           inquire gd1, entry-reason in como-x.
           evaluate como-x
           when x"0D"
           when x"00" 
                inquire gd1(event-data-2, 1), hidden-data in hid-codice
                set CallManutenzione to true
           end-evaluate 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Begin-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Begin-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-End-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-End-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Drag.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Drag>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       gd1-Ev-Msg-Goto-Cell-Mouse.
      * <TOTEM:PARA. gd1-Ev-Msg-Goto-Cell-Mouse>
           perform SPOSTAMENTO 
           .
      * <TOTEM:END>
       pb-ok-LinkTo.
      * <TOTEM:PARA. pb-ok-LinkTo>
           inquire gd1, cursor-y in riga, last-row in tot-righe.
           if tot-righe not = 1
              display message "Stampa Excel?"
                        title titolo
                         type mb-yes-no
                         icon 2
                       giving scelta
              if scelta = mb-yes
                 perform STAMPA
              end-if
           end-if 
           .
      * <TOTEM:END>
       ef-fine-BeforeProcedure.
      * <TOTEM:PARA. ef-fine-BeforeProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-NU
           inquire ef-fine, value in ef-fine-buf.
           move ef-fine-buf to save-fine 
           .
      * <TOTEM:END>
       ef-fine-AfterProcedure.
      * <TOTEM:PARA. ef-fine-AfterProcedure>
           MODIFY CONTROL-HANDLE COLOR = COLORE-OR
           perform CONTROLLO.
           if tutto-ok
              if save-fine not = como-data
                 perform CARICA-GRID
              end-if
           end-if 
           .
      * <TOTEM:END>
       lab-promo-art-Ev-Before-Program.
      * <TOTEM:PARA. lab-promo-art-Ev-Before-Program>
           move LK-BL-PROG-ID    TO COMO-PROG-ID 
           .
      * <TOTEM:END>

      *{TOTEM}END

      *{TOTEM}SHOW-MSG
       MESSAGE-FOR-FILEERROR.
           CALL "C$RERRNAME" USING TOTEM-MSG-ERR-FILE
           CALL "C$RERR" USING EXTEND-STAT, TEXT-MESSAGE
              MOVE PRIMARY-ERROR TO TOTEM-MSG-ID
           .

       SHOW-TRANSACTION-ROUTINE.
           IF TOTEM-TRANSACTION-FLAG = SPACES
              IF TRANSACTION-STATUS NOT = 0
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-1
              END-IF
           ELSE
              PERFORM SHOW-MSG-ROUTINE
              IF TRANSACTION-STATUS = 0
                 MOVE "Transazione terminata con Rollback." TO 
           TOTEM-MSG-3
              ELSE
                 STRING "TRANSACTION ERROR ", TRANSACTION-STATUS
                    DELIMITED BY SIZE INTO TOTEM-MSG-3
              END-IF
           END-IF
           .

       SHOW-MSG-ROUTINE.
           MOVE SPACE TO TOTEM-MSG-1 TOTEM-MSG-2 TOTEM-MSG-3
           EVALUATE TOTEM-MSG-ID
               WHEN "10"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Nessun altro dato." TO TOTEM-MSG-2
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "22"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Chiave Duplicata." TO TOTEM-MSG-2
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "23"
                    STRING "File:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-1
                    MOVE "Raggiunta fine file." TO TOTEM-MSG-2
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "101"
                    MOVE "Terminare l'applicazione?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "201"
                    MOVE "Aggiungere un nuovo record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "202"
                    MOVE "Aggiornare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "203"
                    MOVE "Cancellare il Record?" TO TOTEM-MSG-1
                    MOVE 4 TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-YES-NO TO TOTEM-MSG-BUTTON-TYPE
               WHEN "204"
                    MOVE "Chiave duplicata." TO TOTEM-MSG-1
                    MOVE MB-WARNING-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "301"
                    MOVE "Inserimento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "302"
                    MOVE "Aggiornamento avvenuto con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "303"
                    MOVE "Cancellazione avvenuta con Successo." TO 
           TOTEM-MSG-1
                    MOVE MB-DEFAULT-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN "401"
                    MOVE "Shell non trovata." TO TOTEM-MSG-1
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
               WHEN OTHER
                    MOVE TEXT-MESSAGE TO TOTEM-MSG-1
                    STRING "FILE:" TOTEM-MSG-ERR-FILE DELIMITED BY SPACE
                       INTO TOTEM-MSG-3
                    MOVE 0 TO TOTEM-IDX1
                    INSPECT TOTEM-MSG-3 TALLYING TOTEM-IDX1
                       FOR TRAILING SPACE
                    STRING TOTEM-MSG-3(1:TOTEM-MSG-LENGTH - 
           TOTEM-IDX1), 
                       ", FILE STATUS ", PRIMARY-ERROR "," 
                       SECONDARY-ERROR
                    DELIMITED BY SIZE INTO TOTEM-MSG-2
                    MOVE SPACES TO TOTEM-MSG-3
                    MOVE MB-ERROR-ICON TO TOTEM-MSG-ICON-TYPE
                    MOVE MB-OK TO TOTEM-MSG-BUTTON-TYPE
           END-EVALUATE
           PERFORM MESSAGE-BOX-ROUTINE
           .

       MESSAGE-BOX-ROUTINE.
           MOVE 1 TO TOTEM-MSG-TEXT-POINTER
           IF TOTEM-MSG-1 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-1 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              STRING TOTEM-MSG-1( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                 DELIMITED BY SIZE
                 INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-2 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-2 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-2( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-3 NOT = SPACE
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-3 TALLYING TOTEM-MSG-SIZE FOR TRAILING 
           SPACE
              IF TOTEM-MSG-TEXT-POINTER > 1
                 STRING X"0A" DELIMITED BY SIZE
                     INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
              END-IF
              STRING TOTEM-MSG-3( 1 : TOTEM-MSG-LENGTH - TOTEM-MSG-SIZE 
           )
                  DELIMITED BY SIZE
                  INTO TOTEM-MSG-TEXT, POINTER TOTEM-MSG-TEXT-POINTER
           END-IF

           IF TOTEM-MSG-TEXT-POINTER = 1
              MOVE 0 TO TOTEM-MSG-SIZE
              INSPECT TOTEM-MSG-TEXT TALLYING TOTEM-MSG-SIZE FOR 
           TRAILING SPACE
                  COMPUTE TOTEM-MSG-TEXT-POINTER = 
           TOTEM-MSG-FULL-LENGTH - TOTEM-MSG-SIZE + 1
           END-IF
           MOVE LOW-VALUES TO TOTEM-MSG-TEXT(TOTEM-MSG-TEXT-POINTER : 1 
           )
           .

       MESSAGE-BOX-DISPLAY.
           PERFORM SHOW-MSG-ROUTINE
           PERFORM MESSAGE-BOX-ROUTINE
           DISPLAY MESSAGE BOX TOTEM-MSG-TEXT
               TITLE IS TOTEM-MSG-TITLE
               TYPE  IS TOTEM-MSG-BUTTON-TYPE
               ICON  IS TOTEM-MSG-DEFAULT-BUTTON
               RETURNING TOTEM-MSG-RETURN-VALUE
           .

      *{TOTEM}END

